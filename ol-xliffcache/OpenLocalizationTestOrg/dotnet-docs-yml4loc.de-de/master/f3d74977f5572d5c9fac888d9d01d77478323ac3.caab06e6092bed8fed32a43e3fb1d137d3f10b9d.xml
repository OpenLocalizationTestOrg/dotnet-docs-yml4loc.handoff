{"nodes":[{"content":"Represents a view of a memory-mapped file as a sequentially accessed stream.","nodes":[{"pos":[0,76],"content":"Represents a view of a memory-mapped file as a sequentially accessed stream.","nodes":[{"content":"Represents a view of a memory-mapped file as a sequentially accessed stream.","pos":[0,76]}]}],"pos":[868,945],"yaml":true},{"content":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.","nodes":[{"pos":[0,170],"content":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A&gt;</ph> method of a <ph id=\"ph2\">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> object to get this stream.","pos":[0,170],"source":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream."}]}],"pos":[956,1127],"yaml":true,"extradata":"MT"},{"content":"Clears all buffers for this stream and causes any buffered data to be written to the underlying file.","nodes":[{"pos":[0,101],"content":"Clears all buffers for this stream and causes any buffered data to be written to the underlying file.","nodes":[{"content":"Clears all buffers for this stream and causes any buffered data to be written to the underlying file.","pos":[0,101]}]}],"pos":[7483,7585],"yaml":true},{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:  \n  \n-   Any data that precedes the view up until the latest file offset.  \n  \n-   Any data that follows the view up until the earliest file offset.","nodes":[{"pos":[0,169],"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:","nodes":[{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:","pos":[0,169]}]},{"pos":[179,243],"content":"Any data that precedes the view up until the latest file offset.","nodes":[{"content":"Any data that precedes the view up until the latest file offset.","pos":[0,64]}]},{"pos":[253,318],"content":"Any data that follows the view up until the earliest file offset.","nodes":[{"content":"Any data that follows the view up until the earliest file offset.","pos":[0,65]}]}],"pos":[7596,7921],"yaml":true,"extradata":"MT"},{"content":"[Supported in the .NET Framework 4.5.1 and later versions]  \n  \n Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","nodes":[{"pos":[0,58],"content":"[Supported in the .NET Framework 4.5.1 and later versions]","nodes":[{"content":"[Supported in the .NET Framework 4.5.1 and later versions]","pos":[0,58]}]},{"pos":[65,189],"content":"Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","nodes":[{"content":"Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","pos":[0,124]}]}],"pos":[9530,9724],"yaml":true},{"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","nodes":[{"pos":[0,107],"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","nodes":[{"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","pos":[0,107]}]}],"pos":[9838,9946],"yaml":true},{"content":"The object from which this instance was created is `null`.","nodes":[{"pos":[0,58],"content":"The object from which this instance was created is <ph id=\"ph1\">`null`</ph>.","source":"The object from which this instance was created is `null`."}],"pos":[10148,10207],"yaml":true},{"content":"Gets a handle to the view of a memory-mapped file.","nodes":[{"pos":[0,50],"content":"Gets a handle to the view of a memory-mapped file.","nodes":[{"content":"Gets a handle to the view of a memory-mapped file.","pos":[0,50]}]}],"pos":[11575,11626],"yaml":true},{"content":"A wrapper for the operating system's handle to the view of the file.","nodes":[{"pos":[0,68],"content":"A wrapper for the operating system's handle to the view of the file.","nodes":[{"content":"A wrapper for the operating system's handle to the view of the file.","pos":[0,68]}]}],"pos":[11901,11970],"yaml":true},{"content":"Sets the length of the current stream.","nodes":[{"pos":[0,38],"content":"Sets the length of the current stream.","nodes":[{"content":"Sets the length of the current stream.","pos":[0,38]}]}],"pos":[13511,13550],"yaml":true},{"content":"This method is internal only, because a stream that represents a view is not considered to have a length.","nodes":[{"pos":[0,105],"content":"This method is internal only, because a stream that represents a view is not considered to have a length.","nodes":[{"content":"This method is internal only, because a stream that represents a view is not considered to have a length.","pos":[0,105]}]}],"pos":[13561,13667],"yaml":true,"extradata":"MT"},{"content":"The desired length of the current stream in bytes.","nodes":[{"pos":[0,50],"content":"The desired length of the current stream in bytes.","nodes":[{"content":"The desired length of the current stream in bytes.","pos":[0,50]}]}],"pos":[13811,13862],"yaml":true},{"content":"This method is not supported.","nodes":[{"pos":[0,29],"content":"This method is not supported.","nodes":[{"content":"This method is not supported.","pos":[0,29]}]}],"pos":[14052,14082],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  id: MemoryMappedViewStream\n  children:\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  langs:\n  - csharp\n  name: MemoryMappedViewStream\n  nameWithType: MemoryMappedViewStream\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  type: Class\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  summary: Represents a view of a memory-mapped file as a sequentially accessed stream.\n  remarks: Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.\n  example:\n  - \"The following example obtains a <xref:System.IO.MemoryMappedFiles.MemoryMappedViewStream> of a memory-mapped file and writes a value to the stream for inter-process communication.  \\n  \\n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=fullName> method.  \\n  \\n [!code-csharp[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]\\n [!code-vb[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]\"\n  syntax:\n    content: 'public sealed class MemoryMappedViewStream : System.IO.UnmanagedMemoryStream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  - System.IO.UnmanagedMemoryStream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteTimeout\n  - System.IO.UnmanagedMemoryStream.CanRead\n  - System.IO.UnmanagedMemoryStream.CanSeek\n  - System.IO.UnmanagedMemoryStream.CanWrite\n  - System.IO.UnmanagedMemoryStream.Capacity\n  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Length\n  - System.IO.UnmanagedMemoryStream.Position\n  - System.IO.UnmanagedMemoryStream.PositionPointer\n  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.ReadByte\n  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewStream.Dispose(Boolean)\n  fullName: MemoryMappedViewStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  id: Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: MemoryMappedViewStream.Flush()\n  fullName: MemoryMappedViewStream.Flush()\n  type: Method\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  summary: Clears all buffers for this stream and causes any buffered data to be written to the underlying file.\n  remarks: \"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:  \\n  \\n-   Any data that precedes the view up until the latest file offset.  \\n  \\n-   Any data that follows the view up until the earliest file offset.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Flush ();\n    parameters: []\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  id: PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n  fullName: MemoryMappedViewStream.PointerOffset\n  type: Property\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  summary: \"[Supported in the .NET Framework 4.5.1 and later versions]  \\n  \\n Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.\"\n  syntax:\n    content: public long PointerOffset { get; }\n    return:\n      type: System.Int64\n      description: The number of bytes between the starting position of this view and the beginning of the memory-mapped file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The object from which this instance was created is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  id: SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  type: Property\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  summary: Gets a handle to the view of a memory-mapped file.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n      description: A wrapper for the operating system's handle to the view of the file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: MemoryMappedViewStream.SetLength(Int64)\n  fullName: MemoryMappedViewStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.IO.MemoryMappedFiles\n  - System.Core\n  - netstandard\n  namespace: System.IO.MemoryMappedFiles\n  summary: Sets the length of the current stream.\n  remarks: This method is internal only, because a stream that represents a view is not considered to have a length.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The desired length of the current stream in bytes.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.UnmanagedMemoryStream\n  parent: System.IO\n  isExternal: false\n  name: UnmanagedMemoryStream\n  nameWithType: UnmanagedMemoryStream\n  fullName: System.IO.UnmanagedMemoryStream\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewStream.Dispose(Boolean)\n  fullName: MemoryMappedViewStream.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Flush()\n  nameWithType: MemoryMappedViewStream.Flush()\n  fullName: MemoryMappedViewStream.Flush()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n  fullName: MemoryMappedViewStream.PointerOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: SafeMemoryMappedViewHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: MemoryMappedViewStream.SetLength(Int64)\n  fullName: MemoryMappedViewStream.SetLength(Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Dispose\n  nameWithType: MemoryMappedViewStream.Dispose\n  fullName: MemoryMappedViewStream.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Flush\n  nameWithType: MemoryMappedViewStream.Flush\n  fullName: MemoryMappedViewStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n  fullName: MemoryMappedViewStream.PointerOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SetLength\n  nameWithType: MemoryMappedViewStream.SetLength\n  fullName: MemoryMappedViewStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.UnmanagedMemoryStream.CanRead\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: CanRead\n  nameWithType: UnmanagedMemoryStream.CanRead\n  fullName: UnmanagedMemoryStream.CanRead\n- uid: System.IO.UnmanagedMemoryStream.CanSeek\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: UnmanagedMemoryStream.CanSeek\n  fullName: UnmanagedMemoryStream.CanSeek\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.UnmanagedMemoryStream.CanWrite\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: UnmanagedMemoryStream.CanWrite\n  fullName: UnmanagedMemoryStream.CanWrite\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n  fullName: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  fullName: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: UnmanagedMemoryStream.FlushAsync(CancellationToken)\n  fullName: UnmanagedMemoryStream.FlushAsync(CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.Length\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Length\n  nameWithType: UnmanagedMemoryStream.Length\n  fullName: UnmanagedMemoryStream.Length\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.UnmanagedMemoryStream.Position\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Position\n  nameWithType: UnmanagedMemoryStream.Position\n  fullName: UnmanagedMemoryStream.Position\n- uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)\n  fullName: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.ReadByte\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: UnmanagedMemoryStream.ReadByte()\n  fullName: UnmanagedMemoryStream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)\n  fullName: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)\n  fullName: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: UnmanagedMemoryStream.WriteByte(Byte)\n  fullName: UnmanagedMemoryStream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n- uid: System.IO.UnmanagedMemoryStream.Capacity\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Capacity\n  nameWithType: UnmanagedMemoryStream.Capacity\n  fullName: UnmanagedMemoryStream.Capacity\n- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: Initialize(Byte*, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryStream.PositionPointer\n  parent: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: PositionPointer\n  nameWithType: UnmanagedMemoryStream.PositionPointer\n  fullName: UnmanagedMemoryStream.PositionPointer\n"}