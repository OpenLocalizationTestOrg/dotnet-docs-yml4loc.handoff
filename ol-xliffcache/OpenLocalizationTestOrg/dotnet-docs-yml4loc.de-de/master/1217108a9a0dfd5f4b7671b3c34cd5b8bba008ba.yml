### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherSynchronizationContext
  commentId: T:System.Windows.Threading.DispatcherSynchronizationContext
  id: DispatcherSynchronizationContext
  children:
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  - System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  - System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  - System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  - System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  langs:
  - csharp
  name: DispatcherSynchronizationContext
  nameWithType: DispatcherSynchronizationContext
  fullName: System.Windows.Threading.DispatcherSynchronizationContext
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Provides a synchronization context for Windows Presentation Foundation (WPF).
  remarks: "If a <xref:System.Windows.Threading.Dispatcher> is not specified at the creation of the <xref:System.Windows.Threading.DispatcherSynchronizationContext> instance, the current <xref:System.Windows.Threading.Dispatcher> is associated with the <xref:System.Windows.Threading.DispatcherSynchronizationContext>.  \n  \n<a name=\"xamlTextUsage_DispatcherSynchronizationContext\"></a>   \n## XAML Text Usage"
  syntax:
    content: 'public sealed class DispatcherSynchronizationContext : System.Threading.SynchronizationContext'
  inheritance:
  - System.Object
  - System.Threading.SynchronizationContext
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Threading.SynchronizationContext.Current
  - System.Threading.SynchronizationContext.IsWaitNotificationRequired
  - System.Threading.SynchronizationContext.OperationCompleted
  - System.Threading.SynchronizationContext.OperationStarted
  - System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)
  - System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)
  - System.Threading.SynchronizationContext.SetWaitNotificationRequired
  - System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext()
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Initializes a new instance of the <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref> class by using the current <xref href="System.Windows.Threading.Dispatcher"></xref>.
  syntax:
    content: public DispatcherSynchronizationContext ();
    parameters: []
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  id: '#ctor(System.Windows.Threading.Dispatcher)'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext(Dispatcher)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Initializes a new instance of the <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref> class by using the specified <xref href="System.Windows.Threading.Dispatcher"></xref>.
  syntax:
    content: public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher);
    parameters:
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: The <xref href="System.Windows.Threading.Dispatcher"></xref> to associate this <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref> with.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>dispatcher</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  id: '#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Initializes a new instance of the <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref> class by using the specified <xref href="System.Windows.Threading.Dispatcher"></xref>.
  syntax:
    content: public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher, System.Windows.Threading.DispatcherPriority priority);
    parameters:
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: The <xref href="System.Windows.Threading.Dispatcher"></xref> to associate this <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref> with.
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: The priority used to send and post callback methods.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  id: CreateCopy
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: DispatcherSynchronizationContext.CreateCopy()
  fullName: DispatcherSynchronizationContext.CreateCopy()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Creates a copy of this <xref href="System.Windows.Threading.DispatcherSynchronizationContext"></xref>.
  syntax:
    content: public override System.Threading.SynchronizationContext CreateCopy ();
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: The copy of this synchronization context.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  id: Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Post(SendOrPostCallback, Object)
  nameWithType: DispatcherSynchronizationContext.Post(SendOrPostCallback, Object)
  fullName: DispatcherSynchronizationContext.Post(SendOrPostCallback, Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Invokes the callback in the synchronization context asynchronously.
  remarks: "The delegate is put in the dispatcher queue at a priority of <xref:System.Windows.Threading.DispatcherPriority.Normal>.  \n  \n <xref:System.Windows.Threading.DispatcherSynchronizationContext.Post%2A> starts an asynchronous request to post a message."
  syntax:
    content: public override void Post (System.Threading.SendOrPostCallback d, object state);
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: The delegate to call.
    - id: state
      type: System.Object
      description: The object passed to the delegate.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Post*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>d</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  id: Send(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Send(SendOrPostCallback, Object)
  nameWithType: DispatcherSynchronizationContext.Send(SendOrPostCallback, Object)
  fullName: DispatcherSynchronizationContext.Send(SendOrPostCallback, Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Invokes the callback in the synchronization context synchronously.
  remarks: The delegate is put in the dispatcher queue at a priority of <xref:System.Windows.Threading.DispatcherPriority.Normal>.
  syntax:
    content: public override void Send (System.Threading.SendOrPostCallback d, object state);
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: The delegate to call.
    - id: state
      type: System.Object
      description: The object passed to the delegate.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>d</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  commentId: M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  id: Wait(System.IntPtr[],System.Boolean,System.Int32)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Wait(IntPtr[], Boolean, Int32)
  nameWithType: DispatcherSynchronizationContext.Wait(IntPtr[], Boolean, Int32)
  fullName: DispatcherSynchronizationContext.Wait(IntPtr[], Boolean, Int32)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: Waits for any or all the elements in the specified array to receive a signal.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);
    parameters:
    - id: waitHandles
      type: System.IntPtr[]
      description: An array that contains the native operating system handles.
    - id: waitAll
      type: System.Boolean
      description: '`true` to wait for all handles; `false` to wait for any handle.'
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite"></xref> (-1) to wait indefinitely.
    return:
      type: System.Int32
      description: The array index of the object that satisfied the wait.
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Wait*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext()
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext(Dispatcher)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
- uid: System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  isExternal: false
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher, DispatcherPriority)
- uid: System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: CreateCopy()
  nameWithType: DispatcherSynchronizationContext.CreateCopy()
  fullName: DispatcherSynchronizationContext.CreateCopy()
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Post(SendOrPostCallback, Object)
  nameWithType: DispatcherSynchronizationContext.Post(SendOrPostCallback, Object)
  fullName: DispatcherSynchronizationContext.Post(SendOrPostCallback, Object)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Send(SendOrPostCallback, Object)
  nameWithType: DispatcherSynchronizationContext.Send(SendOrPostCallback, Object)
  fullName: DispatcherSynchronizationContext.Send(SendOrPostCallback, Object)
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Wait(IntPtr[], Boolean, Int32)
  nameWithType: DispatcherSynchronizationContext.Wait(IntPtr[], Boolean, Int32)
  fullName: DispatcherSynchronizationContext.Wait(IntPtr[], Boolean, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr[]
  parent: System
  isExternal: false
  name: IntPtr[]
  nameWithType: IntPtr[]
  fullName: System.IntPtr[]
  spec.csharp:
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext
  fullName: DispatcherSynchronizationContext.DispatcherSynchronizationContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: CreateCopy
  nameWithType: DispatcherSynchronizationContext.CreateCopy
  fullName: DispatcherSynchronizationContext.CreateCopy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Post
  nameWithType: DispatcherSynchronizationContext.Post
  fullName: DispatcherSynchronizationContext.Post
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Send
  nameWithType: DispatcherSynchronizationContext.Send
  fullName: DispatcherSynchronizationContext.Send
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Wait
  nameWithType: DispatcherSynchronizationContext.Wait
  fullName: DispatcherSynchronizationContext.Wait
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherSynchronizationContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Threading.SynchronizationContext.Current
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: Current
  nameWithType: SynchronizationContext.Current
  fullName: SynchronizationContext.Current
- uid: System.Threading.SynchronizationContext.IsWaitNotificationRequired
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: IsWaitNotificationRequired()
  nameWithType: SynchronizationContext.IsWaitNotificationRequired()
  fullName: SynchronizationContext.IsWaitNotificationRequired()
- uid: System.Threading.SynchronizationContext.OperationCompleted
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: OperationCompleted()
  nameWithType: SynchronizationContext.OperationCompleted()
  fullName: SynchronizationContext.OperationCompleted()
- uid: System.Threading.SynchronizationContext.OperationStarted
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: OperationStarted()
  nameWithType: SynchronizationContext.OperationStarted()
  fullName: SynchronizationContext.OperationStarted()
- uid: System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: SetSynchronizationContext(SynchronizationContext)
  nameWithType: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)
  fullName: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)
- uid: System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: SetThreadStaticContext(SynchronizationContext)
  nameWithType: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)
  fullName: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)
- uid: System.Threading.SynchronizationContext.SetWaitNotificationRequired
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: SetWaitNotificationRequired()
  nameWithType: SynchronizationContext.SetWaitNotificationRequired()
  fullName: SynchronizationContext.SetWaitNotificationRequired()
- uid: System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)
  parent: System.Threading.SynchronizationContext
  isExternal: false
  name: WaitHelper(IntPtr[], Boolean, Int32)
  nameWithType: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)
  fullName: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)
