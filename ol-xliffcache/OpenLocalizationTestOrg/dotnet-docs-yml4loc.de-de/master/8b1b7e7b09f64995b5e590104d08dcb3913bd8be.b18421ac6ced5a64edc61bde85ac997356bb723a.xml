{"nodes":[{"content":"Represents a conditional branch statement, typically represented as an `if` statement.","nodes":[{"pos":[0,86],"content":"Represents a conditional branch statement, typically represented as an <ph id=\"ph1\">`if`</ph> statement.","source":"Represents a conditional branch statement, typically represented as an `if` statement."}],"pos":[878,965],"yaml":true},{"content":"<xref:System.CodeDom.CodeConditionStatement> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to `true`, and an optional collection of statements to execute if the conditional expression evaluates to `false`. A <xref:System.CodeDom.CodeConditionStatement> is generated in many languages as an `if` statement.  \n  \n The <xref:System.CodeDom.CodeConditionStatement.Condition%2A> property indicates the expression to test. The <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> property contains the statements to execute if the expression to test evaluates to `true`. The <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> property contains the statements to execute if the expression to test evaluates to `false`.","nodes":[{"pos":[0,410],"content":"<xref:System.CodeDom.CodeConditionStatement> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to `true`, and an optional collection of statements to execute if the conditional expression evaluates to `false`. A <xref:System.CodeDom.CodeConditionStatement> is generated in many languages as an `if` statement.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to <ph id=\"ph2\">`true`</ph>, and an optional collection of statements to execute if the conditional expression evaluates to <ph id=\"ph3\">`false`</ph>.","pos":[0,310],"source":"<xref:System.CodeDom.CodeConditionStatement> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to `true`, and an optional collection of statements to execute if the conditional expression evaluates to `false`."},{"content":"A <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> is generated in many languages as an <ph id=\"ph2\">`if`</ph> statement.","pos":[311,410],"source":" A <xref:System.CodeDom.CodeConditionStatement> is generated in many languages as an `if` statement."}]},{"pos":[417,839],"content":"The <xref:System.CodeDom.CodeConditionStatement.Condition%2A> property indicates the expression to test. The <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> property contains the statements to execute if the expression to test evaluates to `true`. The <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> property contains the statements to execute if the expression to test evaluates to `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeConditionStatement.Condition%2A&gt;</ph> property indicates the expression to test.","pos":[0,104],"source":"The <xref:System.CodeDom.CodeConditionStatement.Condition%2A> property indicates the expression to test."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> property contains the statements to execute if the expression to test evaluates to <ph id=\"ph2\">`true`</ph>.","pos":[105,262],"source":" The <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> property contains the statements to execute if the expression to test evaluates to `true`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> property contains the statements to execute if the expression to test evaluates to <ph id=\"ph2\">`false`</ph>.","pos":[263,422],"source":" The <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> property contains the statements to execute if the expression to test evaluates to `false`."}]}],"pos":[976,1820],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeConditionStatement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class."}],"pos":[4516,4616],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeConditionStatement\"&gt;&lt;/xref&gt;</ph> class using the specified condition and statements.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements."}],"pos":[6105,6250],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to evaluate.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the expression to evaluate.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to evaluate."}],"pos":[6490,6586],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`.","nodes":[{"pos":[0,131],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the statements to execute if the condition is <ph id=\"ph2\">`true`</ph>.","source":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`."}],"pos":[6673,6805],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeConditionStatement\"&gt;&lt;/xref&gt;</ph> class using the specified condition and statements.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements."}],"pos":[8362,8507],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the condition to evaluate.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the condition to evaluate.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the condition to evaluate."}],"pos":[8795,8890],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`.","nodes":[{"pos":[0,131],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the statements to execute if the condition is <ph id=\"ph2\">`true`</ph>.","source":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`."}],"pos":[8977,9109],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `false`.","nodes":[{"pos":[0,132],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the statements to execute if the condition is <ph id=\"ph2\">`false`</ph>.","source":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `false`."}],"pos":[9197,9330],"yaml":true},{"content":"Gets or sets the expression to evaluate `true` or `false`.","nodes":[{"pos":[0,58],"content":"Gets or sets the expression to evaluate <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","source":"Gets or sets the expression to evaluate `true` or `false`."}],"pos":[10426,10485],"yaml":true},{"content":"If this conditional expression evaluates to `true`, the code contained in the <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> collection will be executed. If this conditional expression evaluates to `false` and the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection is not empty, the code contained in the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection will be executed.","nodes":[{"pos":[0,437],"content":"If this conditional expression evaluates to `true`, the code contained in the <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> collection will be executed. If this conditional expression evaluates to `false` and the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection is not empty, the code contained in the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection will be executed.","nodes":[{"content":"If this conditional expression evaluates to <ph id=\"ph1\">`true`</ph>, the code contained in the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> collection will be executed.","pos":[0,169],"source":"If this conditional expression evaluates to `true`, the code contained in the <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> collection will be executed."},{"content":"If this conditional expression evaluates to <ph id=\"ph1\">`false`</ph> and the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection is not empty, the code contained in the <ph id=\"ph3\">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection will be executed.","pos":[170,437],"source":" If this conditional expression evaluates to `false` and the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection is not empty, the code contained in the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection will be executed."}]}],"pos":[10496,10934],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate `true` or `false`.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> to evaluate <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph>.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate `true` or `false`."}],"pos":[11091,11175],"yaml":true},{"content":"Gets the collection of statements to execute if the conditional expression evaluates to `false`.","nodes":[{"pos":[0,96],"content":"Gets the collection of statements to execute if the conditional expression evaluates to <ph id=\"ph1\">`false`</ph>.","source":"Gets the collection of statements to execute if the conditional expression evaluates to `false`."}],"pos":[12311,12408],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `false`.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatementCollection\"&gt;&lt;/xref&gt;</ph> containing the statements to execute if the conditional expression evaluates to <ph id=\"ph2\">`false`</ph>.","source":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `false`."}],"pos":[12584,12735],"yaml":true},{"content":"Gets the collection of statements to execute if the conditional expression evaluates to `true`.","nodes":[{"pos":[0,95],"content":"Gets the collection of statements to execute if the conditional expression evaluates to <ph id=\"ph1\">`true`</ph>.","source":"Gets the collection of statements to execute if the conditional expression evaluates to `true`."}],"pos":[13871,13967],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `true`.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatementCollection\"&gt;&lt;/xref&gt;</ph> containing the statements to execute if the conditional expression evaluates to <ph id=\"ph2\">`true`</ph>.","source":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `true`."}],"pos":[14142,14292],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeConditionStatement\n  commentId: T:System.CodeDom.CodeConditionStatement\n  id: CodeConditionStatement\n  children:\n  - System.CodeDom.CodeConditionStatement.#ctor\n  - System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])\n  - System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])\n  - System.CodeDom.CodeConditionStatement.Condition\n  - System.CodeDom.CodeConditionStatement.FalseStatements\n  - System.CodeDom.CodeConditionStatement.TrueStatements\n  langs:\n  - csharp\n  name: CodeConditionStatement\n  nameWithType: CodeConditionStatement\n  fullName: System.CodeDom.CodeConditionStatement\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents a conditional branch statement, typically represented as an `if` statement.\n  remarks: \"<xref:System.CodeDom.CodeConditionStatement> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to `true`, and an optional collection of statements to execute if the conditional expression evaluates to `false`. A <xref:System.CodeDom.CodeConditionStatement> is generated in many languages as an `if` statement.  \\n  \\n The <xref:System.CodeDom.CodeConditionStatement.Condition%2A> property indicates the expression to test. The <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> property contains the statements to execute if the expression to test evaluates to `true`. The <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> property contains the statements to execute if the expression to test evaluates to `false`.\"\n  example:\n  - \"This example demonstrates using a <xref:System.CodeDom.CodeConditionStatement> to represent an `if` statement with an `else` block.  \\n  \\n [!code-cpp[CodeConditionStatementExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeConditionStatementExample/CPP/codeconditionstatementexample.cpp#2)]\\n [!code-csharp[CodeConditionStatementExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeConditionStatementExample/CS/codeconditionstatementexample.cs#2)]\\n [!code-vb[CodeConditionStatementExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeConditionStatementExample/VB/codeconditionstatementexample.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeConditionStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.#ctor\n  commentId: M:System.CodeDom.CodeConditionStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: CodeConditionStatement()\n  nameWithType: CodeConditionStatement.CodeConditionStatement()\n  fullName: CodeConditionStatement.CodeConditionStatement()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class.\n  syntax:\n    content: public CodeConditionStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeConditionStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])\n  commentId: M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])\n  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])'\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: CodeConditionStatement(CodeExpression, CodeStatement[])\n  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[])\n  fullName: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements.\n  syntax:\n    content: public CodeConditionStatement (System.CodeDom.CodeExpression condition, System.CodeDom.CodeStatement[] trueStatements);\n    parameters:\n    - id: condition\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to evaluate.\n    - id: trueStatements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`.\n  overload: System.CodeDom.CodeConditionStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])\n  commentId: M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])\n  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])'\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n  fullName: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeConditionStatement\"></xref> class using the specified condition and statements.\n  syntax:\n    content: public CodeConditionStatement (System.CodeDom.CodeExpression condition, System.CodeDom.CodeStatement[] trueStatements, System.CodeDom.CodeStatement[] falseStatements);\n    parameters:\n    - id: condition\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the condition to evaluate.\n    - id: trueStatements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `true`.\n    - id: falseStatements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements to execute if the condition is `false`.\n  overload: System.CodeDom.CodeConditionStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.Condition\n  commentId: P:System.CodeDom.CodeConditionStatement.Condition\n  id: Condition\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: CodeConditionStatement.Condition\n  fullName: CodeConditionStatement.Condition\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the expression to evaluate `true` or `false`.\n  remarks: If this conditional expression evaluates to `true`, the code contained in the <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> collection will be executed. If this conditional expression evaluates to `false` and the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection is not empty, the code contained in the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection will be executed.\n  syntax:\n    content: public System.CodeDom.CodeExpression Condition { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate `true` or `false`.\n  overload: System.CodeDom.CodeConditionStatement.Condition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.FalseStatements\n  commentId: P:System.CodeDom.CodeConditionStatement.FalseStatements\n  id: FalseStatements\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: FalseStatements\n  nameWithType: CodeConditionStatement.FalseStatements\n  fullName: CodeConditionStatement.FalseStatements\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets the collection of statements to execute if the conditional expression evaluates to `false`.\n  syntax:\n    content: public System.CodeDom.CodeStatementCollection FalseStatements { get; }\n    return:\n      type: System.CodeDom.CodeStatementCollection\n      description: A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `false`.\n  overload: System.CodeDom.CodeConditionStatement.FalseStatements*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeConditionStatement.TrueStatements\n  commentId: P:System.CodeDom.CodeConditionStatement.TrueStatements\n  id: TrueStatements\n  parent: System.CodeDom.CodeConditionStatement\n  langs:\n  - csharp\n  name: TrueStatements\n  nameWithType: CodeConditionStatement.TrueStatements\n  fullName: CodeConditionStatement.TrueStatements\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets the collection of statements to execute if the conditional expression evaluates to `true`.\n  syntax:\n    content: public System.CodeDom.CodeStatementCollection TrueStatements { get; }\n    return:\n      type: System.CodeDom.CodeStatementCollection\n      description: A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements to execute if the conditional expression evaluates to `true`.\n  overload: System.CodeDom.CodeConditionStatement.TrueStatements*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.CodeStatement\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeConditionStatement.#ctor\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: CodeConditionStatement()\n  nameWithType: CodeConditionStatement.CodeConditionStatement()\n  fullName: CodeConditionStatement.CodeConditionStatement()\n- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: CodeConditionStatement(CodeExpression, CodeStatement[])\n  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[])\n  fullName: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[])\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeStatement[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement[]\n  nameWithType: CodeStatement[]\n  fullName: System.CodeDom.CodeStatement[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeStatement\n    name: CodeStatement\n    nameWithType: CodeStatement\n    fullName: System.CodeDom.CodeStatement\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n  fullName: CodeConditionStatement.CodeConditionStatement(CodeExpression, CodeStatement[], CodeStatement[])\n- uid: System.CodeDom.CodeConditionStatement.Condition\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: Condition\n  nameWithType: CodeConditionStatement.Condition\n  fullName: CodeConditionStatement.Condition\n- uid: System.CodeDom.CodeConditionStatement.FalseStatements\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: FalseStatements\n  nameWithType: CodeConditionStatement.FalseStatements\n  fullName: CodeConditionStatement.FalseStatements\n- uid: System.CodeDom.CodeStatementCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatementCollection\n  nameWithType: CodeStatementCollection\n  fullName: System.CodeDom.CodeStatementCollection\n- uid: System.CodeDom.CodeConditionStatement.TrueStatements\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: TrueStatements\n  nameWithType: CodeConditionStatement.TrueStatements\n  fullName: CodeConditionStatement.TrueStatements\n- uid: System.CodeDom.CodeConditionStatement.#ctor*\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: CodeConditionStatement\n  nameWithType: CodeConditionStatement.CodeConditionStatement\n  fullName: CodeConditionStatement.CodeConditionStatement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n- uid: System.CodeDom.CodeConditionStatement.Condition*\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: Condition\n  nameWithType: CodeConditionStatement.Condition\n  fullName: CodeConditionStatement.Condition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n- uid: System.CodeDom.CodeConditionStatement.FalseStatements*\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: FalseStatements\n  nameWithType: CodeConditionStatement.FalseStatements\n  fullName: CodeConditionStatement.FalseStatements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n- uid: System.CodeDom.CodeConditionStatement.TrueStatements*\n  parent: System.CodeDom.CodeConditionStatement\n  isExternal: false\n  name: TrueStatements\n  nameWithType: CodeConditionStatement.TrueStatements\n  fullName: CodeConditionStatement.TrueStatements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeConditionStatement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.CodeDom.CodeObject.UserData\n  parent: System.CodeDom.CodeObject\n  isExternal: false\n  name: UserData\n  nameWithType: CodeObject.UserData\n  fullName: CodeObject.UserData\n- uid: System.CodeDom.CodeStatement.EndDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: EndDirectives\n  nameWithType: CodeStatement.EndDirectives\n  fullName: CodeStatement.EndDirectives\n- uid: System.CodeDom.CodeStatement.LinePragma\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: LinePragma\n  nameWithType: CodeStatement.LinePragma\n  fullName: CodeStatement.LinePragma\n- uid: System.CodeDom.CodeStatement.StartDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: StartDirectives\n  nameWithType: CodeStatement.StartDirectives\n  fullName: CodeStatement.StartDirectives\n"}