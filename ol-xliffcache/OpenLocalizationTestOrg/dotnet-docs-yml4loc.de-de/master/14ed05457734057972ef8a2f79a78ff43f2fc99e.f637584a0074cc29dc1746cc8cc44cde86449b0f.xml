{"nodes":[{"content":"Indicates whether a listener should trace based on the event type.","nodes":[{"pos":[0,66],"content":"Indicates whether a listener should trace based on the event type.","nodes":[{"content":"Indicates whether a listener should trace based on the event type.","pos":[0,66]}]}],"pos":[753,820],"yaml":true},{"content":"One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>. The filter can be used to control the event types that are produced by the listener.  \n  \n This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener. The value of the property indicates the threshold at which to begin tracing. Event types at and above the specified level are traced. The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  \n  \n To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its filter type, and specify the event type to trace. The configuration file should be formatted as follows.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <sharedListeners>  \n      <add name=\"Console\" type=\"System.Diagnostics.ConsoleTraceListener\">  \n        <filter type=\"System.Diagnostics.EventTypeFilter\"   \n          initializeData=\"Warning\" />  \n      </add>  \n    </sharedListeners>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n For more information about how to initialize data for an <xref:System.Diagnostics.EventTypeFilter>, see [\\&lt;filter\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md).","nodes":[{"pos":[0,332],"content":"One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>. The filter can be used to control the event types that are produced by the listener.","nodes":[{"content":"One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>. The filter can be used to control the event types that are produced by the listener.","pos":[0,332],"nodes":[{"content":"One of several different types of filters can be assigned to a trace listener through the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property to provide a layer of screening beyond that provided by the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>.","pos":[0,247],"source":"One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>."},{"content":"The filter can be used to control the event types that are produced by the listener.","pos":[248,332]}]}]},{"pos":[339,943],"content":"This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener. The value of the property indicates the threshold at which to begin tracing. Event types at and above the specified level are traced. The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.","nodes":[{"content":"This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener. The value of the property indicates the threshold at which to begin tracing. Event types at and above the specified level are traced. The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.","pos":[0,604],"nodes":[{"content":"This class filters events based on the value of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventTypeFilter.EventType%2A&gt;</ph> property.","pos":[0,116],"source":"This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property."},{"content":"This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener.","pos":[118,254]},{"content":"The value of the property indicates the threshold at which to begin tracing.","pos":[255,331]},{"content":"Event types at and above the specified level are traced.","pos":[332,388]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> method, called by listeners  to determine if an event should be traced, uses the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventTypeFilter.EventType%2A&gt;</ph> property.","pos":[389,604],"source":" The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property."}]}]},{"pos":[950,1231],"content":"To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its filter type, and specify the event type to trace. The configuration file should be formatted as follows.","nodes":[{"content":"To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its filter type, and specify the event type to trace. The configuration file should be formatted as follows.","pos":[0,281],"nodes":[{"content":"To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application.","pos":[0,126]},{"content":"Within this file, you can add a listener, set its filter type, and specify the event type to trace.","pos":[127,226]},{"content":"The configuration file should be formatted as follows.","pos":[227,281]}]}]},{"pos":[1582,1808],"content":"For more information about how to initialize data for an <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph>, see <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;filter<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md)</ept>.","source":"For more information about how to initialize data for an <xref:System.Diagnostics.EventTypeFilter>, see [\\&lt;filter\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md)."}],"pos":[831,2671],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.EventTypeFilter\"></xref> class.","nodes":[{"pos":[0,96],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.EventTypeFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.EventTypeFilter\"></xref> class."}],"pos":[4508,4605],"yaml":true},{"content":"The value of the `level` parameter is used to initialize the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.","nodes":[{"pos":[0,125],"content":"The value of the <ph id=\"ph1\">`level`</ph> parameter is used to initialize the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventTypeFilter.EventType%2A&gt;</ph> property.","source":"The value of the `level` parameter is used to initialize the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property."}],"pos":[4616,4742],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values that specifies the event type of the messages to trace.","nodes":[{"pos":[0,144],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SourceLevels\"&gt;&lt;/xref&gt;</ph> values that specifies the event type of the messages to trace.","source":"A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values that specifies the event type of the messages to trace."}],"pos":[4924,5069],"yaml":true},{"content":"Gets or sets the event type of the messages to trace.","nodes":[{"pos":[0,53],"content":"Gets or sets the event type of the messages to trace.","nodes":[{"content":"Gets or sets the event type of the messages to trace.","pos":[0,53]}]}],"pos":[6359,6413],"yaml":true},{"content":"The <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property indicates the level at which to trace.","nodes":[{"pos":[0,106],"content":"The <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property indicates the level at which to trace.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventTypeFilter.EventType%2A&gt;</ph> property indicates the level at which to trace.","pos":[0,106],"source":"The <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property indicates the level at which to trace."}]}],"pos":[6424,6531],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values.","nodes":[{"pos":[0,89],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SourceLevels\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values."}],"pos":[6692,6782],"yaml":true},{"content":"Determines whether the trace listener should trace the event.","nodes":[{"pos":[0,61],"content":"Determines whether the trace listener should trace the event.","nodes":[{"content":"Determines whether the trace listener should trace the event.","pos":[0,61]}]}],"pos":[8809,8871],"yaml":true},{"content":"If the value of the `eventType` parameter is greater than or equal to the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property, the method returns `true`.","nodes":[{"pos":[0,178],"content":"If the value of the <ph id=\"ph1\">`eventType`</ph> parameter is greater than or equal to the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventTypeFilter.EventType%2A&gt;</ph> property, the method returns <ph id=\"ph3\">`true`</ph>.","source":"If the value of the `eventType` parameter is greater than or equal to the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property, the method returns `true`."}],"pos":[8882,9061],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that represents the information cache for the trace event.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that represents the information cache for the trace event.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that represents the information cache for the trace event."}],"pos":[9395,9512],"yaml":true},{"content":"The name of the source.","nodes":[{"pos":[0,23],"content":"The name of the source.","nodes":[{"content":"The name of the source.","pos":[0,23]}]}],"pos":[9574,9598],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values."}],"pos":[9683,9757],"yaml":true},{"content":"A trace identifier number.","nodes":[{"pos":[0,26],"content":"A trace identifier number.","nodes":[{"content":"A trace identifier number.","pos":[0,26]}]}],"pos":[9814,9841],"yaml":true},{"content":"The format to use for writing an array of arguments, or a message to write.","nodes":[{"pos":[0,75],"content":"The format to use for writing an array of arguments, or a message to write.","nodes":[{"content":"The format to use for writing an array of arguments, or a message to write.","pos":[0,75]}]}],"pos":[9912,9988],"yaml":true},{"content":"An array of argument objects.","nodes":[{"pos":[0,29],"content":"An array of argument objects.","nodes":[{"content":"An array of argument objects.","pos":[0,29]}]}],"pos":[10050,10080],"yaml":true},{"content":"A trace data object.","nodes":[{"pos":[0,20],"content":"A trace data object.","nodes":[{"content":"A trace data object.","pos":[0,20]}]}],"pos":[10141,10162],"yaml":true},{"content":"An array of trace data objects.","nodes":[{"pos":[0,31],"content":"An array of trace data objects.","nodes":[{"content":"An array of trace data objects.","pos":[0,31]}]}],"pos":[10224,10256],"yaml":true},{"content":"`true` if the trace should be produced; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the trace should be produced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the trace should be produced; otherwise, `false`."}],"pos":[10314,10376],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.EventTypeFilter\n  commentId: T:System.Diagnostics.EventTypeFilter\n  id: EventTypeFilter\n  children:\n  - System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)\n  - System.Diagnostics.EventTypeFilter.EventType\n  - System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  langs:\n  - csharp\n  name: EventTypeFilter\n  nameWithType: EventTypeFilter\n  fullName: System.Diagnostics.EventTypeFilter\n  type: Class\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Indicates whether a listener should trace based on the event type.\n  remarks: \"One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>. The filter can be used to control the event types that are produced by the listener.  \\n  \\n This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener. The value of the property indicates the threshold at which to begin tracing. Event types at and above the specified level are traced. The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  \\n  \\n To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its filter type, and specify the event type to trace. The configuration file should be formatted as follows.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <sharedListeners>  \\n      <add name=\\\"Console\\\" type=\\\"System.Diagnostics.ConsoleTraceListener\\\">  \\n        <filter type=\\\"System.Diagnostics.EventTypeFilter\\\"   \\n          initializeData=\\\"Warning\\\" />  \\n      </add>  \\n    </sharedListeners>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n For more information about how to initialize data for an <xref:System.Diagnostics.EventTypeFilter>, see [\\\\&lt;filter\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md).\"\n  syntax:\n    content: 'public class EventTypeFilter : System.Diagnostics.TraceFilter'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceFilter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)\n  commentId: M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)\n  id: '#ctor(System.Diagnostics.SourceLevels)'\n  parent: System.Diagnostics.EventTypeFilter\n  langs:\n  - csharp\n  name: EventTypeFilter(SourceLevels)\n  nameWithType: EventTypeFilter.EventTypeFilter(SourceLevels)\n  fullName: EventTypeFilter.EventTypeFilter(SourceLevels)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.EventTypeFilter\"></xref> class.\n  remarks: The value of the `level` parameter is used to initialize the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.\n  syntax:\n    content: public EventTypeFilter (System.Diagnostics.SourceLevels level);\n    parameters:\n    - id: level\n      type: System.Diagnostics.SourceLevels\n      description: A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values that specifies the event type of the messages to trace.\n  overload: System.Diagnostics.EventTypeFilter.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventTypeFilter.EventType\n  commentId: P:System.Diagnostics.EventTypeFilter.EventType\n  id: EventType\n  parent: System.Diagnostics.EventTypeFilter\n  langs:\n  - csharp\n  name: EventType\n  nameWithType: EventTypeFilter.EventType\n  fullName: EventTypeFilter.EventType\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets or sets the event type of the messages to trace.\n  remarks: The <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property indicates the level at which to trace.\n  syntax:\n    content: public System.Diagnostics.SourceLevels EventType { get; set; }\n    return:\n      type: System.Diagnostics.SourceLevels\n      description: A bitwise combination of the <xref href=\"System.Diagnostics.SourceLevels\"></xref> values.\n  overload: System.Diagnostics.EventTypeFilter.EventType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  commentId: M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.EventTypeFilter\n  langs:\n  - csharp\n  name: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n  nameWithType: EventTypeFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n  fullName: EventTypeFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Determines whether the trace listener should trace the event.\n  remarks: If the value of the `eventType` parameter is greater than or equal to the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property, the method returns `true`.\n  syntax:\n    content: public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);\n    parameters:\n    - id: cache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that represents the information cache for the trace event.\n    - id: source\n      type: System.String\n      description: The name of the source.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.\n    - id: id\n      type: System.Int32\n      description: A trace identifier number.\n    - id: formatOrMessage\n      type: System.String\n      description: The format to use for writing an array of arguments, or a message to write.\n    - id: args\n      type: System.Object[]\n      description: An array of argument objects.\n    - id: data1\n      type: System.Object\n      description: A trace data object.\n    - id: data\n      type: System.Object[]\n      description: An array of trace data objects.\n    return:\n      type: System.Boolean\n      description: '`true` if the trace should be produced; otherwise, `false`.'\n  overload: System.Diagnostics.EventTypeFilter.ShouldTrace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.TraceFilter\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceFilter\n  nameWithType: TraceFilter\n  fullName: System.Diagnostics.TraceFilter\n- uid: System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: EventTypeFilter(SourceLevels)\n  nameWithType: EventTypeFilter.EventTypeFilter(SourceLevels)\n  fullName: EventTypeFilter.EventTypeFilter(SourceLevels)\n- uid: System.Diagnostics.SourceLevels\n  parent: System.Diagnostics\n  isExternal: false\n  name: SourceLevels\n  nameWithType: SourceLevels\n  fullName: System.Diagnostics.SourceLevels\n- uid: System.Diagnostics.EventTypeFilter.EventType\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: EventType\n  nameWithType: EventTypeFilter.EventType\n  fullName: EventTypeFilter.EventType\n- uid: System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n  nameWithType: EventTypeFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n  fullName: EventTypeFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.EventTypeFilter.#ctor*\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: EventTypeFilter\n  nameWithType: EventTypeFilter.EventTypeFilter\n  fullName: EventTypeFilter.EventTypeFilter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n- uid: System.Diagnostics.EventTypeFilter.EventType*\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: EventType\n  nameWithType: EventTypeFilter.EventType\n  fullName: EventTypeFilter.EventType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n- uid: System.Diagnostics.EventTypeFilter.ShouldTrace*\n  parent: System.Diagnostics.EventTypeFilter\n  isExternal: false\n  name: ShouldTrace\n  nameWithType: EventTypeFilter.ShouldTrace\n  fullName: EventTypeFilter.ShouldTrace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventTypeFilter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}