{"nodes":[{"content":"Represents the abstract class from which all implementations of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm inherit.","nodes":[{"pos":[0,145],"content":"Represents the abstract class from which all implementations of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> hash algorithm inherit.","source":"Represents the abstract class from which all implementations of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm inherit."}],"pos":[543,689],"yaml":true},{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.  \n  \n The hash size for the <xref:System.Security.Cryptography.MD5> algorithm is 128 bits.  \n  \n The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.  \n  \n> [!NOTE]\n>  Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5> class. Use <xref:System.Security.Cryptography.MD5> only for compatibility with legacy applications and data.","nodes":[{"pos":[0,408],"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.","nodes":[{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.","pos":[0,408],"nodes":[{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length.","pos":[0,99]},{"content":"A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches.","pos":[100,330]},{"content":"Small changes to the data result in large, unpredictable changes in the hash.","pos":[331,408]}]}]},{"pos":[415,499],"content":"The hash size for the <xref:System.Security.Cryptography.MD5> algorithm is 128 bits.","nodes":[{"content":"The hash size for the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> algorithm is 128 bits.","pos":[0,84],"source":"The hash size for the <xref:System.Security.Cryptography.MD5> algorithm is 128 bits."}]},{"pos":[506,936],"content":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.","nodes":[{"content":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.","pos":[0,430],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class return the hash as an array of 16 bytes.","pos":[0,170],"source":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5> class return the hash as an array of 16 bytes."},{"content":"Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.","pos":[172,258]},{"content":"To interoperate with such implementations, format the return value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods as a hexadecimal value.","pos":[260,430],"source":"  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value."}]}]},{"pos":[944,1335],"content":"[!NOTE]\n Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5> class. Use <xref:System.Security.Cryptography.MD5> only for compatibility with legacy applications and data.","leadings":["","> "],"nodes":[{"content":" Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5> class. Use <xref:System.Security.Cryptography.MD5> only for compatibility with legacy applications and data.","pos":[8,389],"nodes":[{"content":"Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available.","pos":[1,93]},{"content":"Consider using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SHA256&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SHA512&gt;</ph> class instead of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class.","pos":[94,279],"source":" Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5> class."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> only for compatibility with legacy applications and data.","pos":[280,381],"source":" Use <xref:System.Security.Cryptography.MD5> only for compatibility with legacy applications and data."}]}]}],"pos":[700,2045],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Security.Cryptography.MD5\"></xref>.","nodes":[{"pos":[0,84],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Security.Cryptography.MD5\"></xref>."}],"pos":[6147,6232],"yaml":true},{"content":"To create an instance of the <xref:System.Security.Cryptography.MD5> class, use the <xref:System.Security.Cryptography.MD5.Create%2A> method.","nodes":[{"pos":[0,141],"content":"To create an instance of the <xref:System.Security.Cryptography.MD5> class, use the <xref:System.Security.Cryptography.MD5.Create%2A> method.","nodes":[{"content":"To create an instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class, use the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.MD5.Create%2A&gt;</ph> method.","pos":[0,141],"source":"To create an instance of the <xref:System.Security.Cryptography.MD5> class, use the <xref:System.Security.Cryptography.MD5.Create%2A> method."}]}],"pos":[6243,6385],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.","nodes":[{"pos":[0,126],"content":"Creates an instance of the default implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> hash algorithm.","source":"Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm."}],"pos":[7828,7955],"yaml":true},{"content":"A new instance of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.","nodes":[{"pos":[0,91],"content":"A new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> hash algorithm.","source":"A new instance of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm."}],"pos":[8131,8223],"yaml":true},{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"pos":[0,117],"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","pos":[0,117]}]}],"pos":[8422,8540],"yaml":true},{"content":"Creates an instance of the specified implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.","nodes":[{"pos":[0,128],"content":"Creates an instance of the specified implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> hash algorithm.","source":"Creates an instance of the specified implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm."}],"pos":[9917,10046],"yaml":true},{"content":"Possible values for `algName` are: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, and `System.Security.Cryptography.MD5Managed`.","nodes":[{"pos":[0,181],"content":"Possible values for <ph id=\"ph1\">`algName`</ph> are: <ph id=\"ph2\">`System.Security.Cryptography.MD5`</ph>, <ph id=\"ph3\">`MD5`</ph>, <ph id=\"ph4\">`System.Security.Cryptography.MD5CryptoServiceProvider`</ph>, and <ph id=\"ph5\">`System.Security.Cryptography.MD5Managed`</ph>.","source":"Possible values for `algName` are: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, and `System.Security.Cryptography.MD5Managed`."}],"pos":[10057,10241],"yaml":true,"extradata":"MT"},{"content":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref> to use.","nodes":[{"pos":[0,104],"content":"The name of the specific implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> to use.","source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref> to use."}],"pos":[10415,10520],"yaml":true},{"content":"A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref>.","nodes":[{"pos":[0,104],"content":"A new instance of the specified implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph>.","source":"A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref>."}],"pos":[10596,10701],"yaml":true},{"content":"The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"pos":[0,165],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","source":"The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."}],"pos":[10900,11066],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.MD5\n  commentId: T:System.Security.Cryptography.MD5\n  id: MD5\n  children:\n  - System.Security.Cryptography.MD5.#ctor\n  - System.Security.Cryptography.MD5.Create\n  - System.Security.Cryptography.MD5.Create(System.String)\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: MD5\n  fullName: System.Security.Cryptography.MD5\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Represents the abstract class from which all implementations of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm inherit.\n  remarks: \"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.  \\n  \\n The hash size for the <xref:System.Security.Cryptography.MD5> algorithm is 128 bits.  \\n  \\n The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.  \\n  \\n> [!NOTE]\\n>  Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5> class. Use <xref:System.Security.Cryptography.MD5> only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \\n  \\n [!code-csharp[Security.Cryptography.MD5#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.MD5/cs/example.cs#1)]\\n [!code-vb[Security.Cryptography.MD5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.MD5/vb/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class MD5 : System.Security.Cryptography.HashAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  derivedClasses:\n  - System.Security.Cryptography.MD5Cng\n  - System.Security.Cryptography.MD5CryptoServiceProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.HashFinal\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.Initialize\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MD5.#ctor\n  commentId: M:System.Security.Cryptography.MD5.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.MD5\n  langs:\n  - csharp\n  name: MD5()\n  nameWithType: MD5.MD5()\n  fullName: MD5.MD5()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of <xref href=\"System.Security.Cryptography.MD5\"></xref>.\n  remarks: To create an instance of the <xref:System.Security.Cryptography.MD5> class, use the <xref:System.Security.Cryptography.MD5.Create%2A> method.\n  syntax:\n    content: protected MD5 ();\n    parameters: []\n  overload: System.Security.Cryptography.MD5.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MD5.Create\n  commentId: M:System.Security.Cryptography.MD5.Create\n  id: Create\n  parent: System.Security.Cryptography.MD5\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: MD5.Create()\n  fullName: MD5.Create()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.MD5 Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.MD5\n      description: A new instance of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.\n  overload: System.Security.Cryptography.MD5.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MD5.Create(System.String)\n  commentId: M:System.Security.Cryptography.MD5.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.MD5\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: MD5.Create(String)\n  fullName: MD5.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of the specified implementation of the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash algorithm.\n  remarks: 'Possible values for `algName` are: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, and `System.Security.Cryptography.MD5Managed`.'\n  syntax:\n    content: public static System.Security.Cryptography.MD5 Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref> to use.\n    return:\n      type: System.Security.Cryptography.MD5\n      description: A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.MD5\"></xref>.\n  overload: System.Security.Cryptography.MD5.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.Reflection.TargetInvocationException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetInvocationException\n  nameWithType: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n- uid: System.Security.Cryptography.MD5.#ctor\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: MD5()\n  nameWithType: MD5.MD5()\n  fullName: MD5.MD5()\n- uid: System.Security.Cryptography.MD5.Create\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: Create()\n  nameWithType: MD5.Create()\n  fullName: MD5.Create()\n- uid: System.Security.Cryptography.MD5\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: MD5\n  nameWithType: MD5\n  fullName: System.Security.Cryptography.MD5\n- uid: System.Security.Cryptography.MD5.Create(System.String)\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: Create(String)\n  nameWithType: MD5.Create(String)\n  fullName: MD5.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.MD5.#ctor*\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: MD5\n  nameWithType: MD5.MD5\n  fullName: MD5.MD5\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n- uid: System.Security.Cryptography.MD5.Create*\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: Create\n  nameWithType: MD5.Create\n  fullName: MD5.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: HashAlgorithm.CanReuseTransform\n  fullName: HashAlgorithm.CanReuseTransform\n- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: HashAlgorithm.CanTransformMultipleBlocks\n  fullName: HashAlgorithm.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.HashAlgorithm.Clear\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: HashAlgorithm.Clear()\n  fullName: HashAlgorithm.Clear()\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[])\n  nameWithType: HashAlgorithm.ComputeHash(Byte[])\n  fullName: HashAlgorithm.ComputeHash(Byte[])\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Stream)\n  nameWithType: HashAlgorithm.ComputeHash(Stream)\n  fullName: HashAlgorithm.ComputeHash(Stream)\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashAlgorithm.Dispose()\n  fullName: HashAlgorithm.Dispose()\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HashAlgorithm.Dispose(Boolean)\n  fullName: HashAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.HashAlgorithm.Hash\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Hash\n  nameWithType: HashAlgorithm.Hash\n  fullName: HashAlgorithm.Hash\n- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.HashCore(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.HashCore(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.HashFinal\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashFinal()\n  nameWithType: HashAlgorithm.HashFinal()\n  fullName: HashAlgorithm.HashFinal()\n- uid: System.Security.Cryptography.HashAlgorithm.HashSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSize\n  nameWithType: HashAlgorithm.HashSize\n  fullName: HashAlgorithm.HashSize\n- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSizeValue\n  nameWithType: HashAlgorithm.HashSizeValue\n  fullName: HashAlgorithm.HashSizeValue\n- uid: System.Security.Cryptography.HashAlgorithm.HashValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashValue\n  nameWithType: HashAlgorithm.HashValue\n  fullName: HashAlgorithm.HashValue\n- uid: System.Security.Cryptography.HashAlgorithm.Initialize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Initialize()\n  nameWithType: HashAlgorithm.Initialize()\n  fullName: HashAlgorithm.Initialize()\n- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: HashAlgorithm.InputBlockSize\n  fullName: HashAlgorithm.InputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: HashAlgorithm.OutputBlockSize\n  fullName: HashAlgorithm.OutputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.State\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: State\n  nameWithType: HashAlgorithm.State\n  fullName: HashAlgorithm.State\n- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n"}