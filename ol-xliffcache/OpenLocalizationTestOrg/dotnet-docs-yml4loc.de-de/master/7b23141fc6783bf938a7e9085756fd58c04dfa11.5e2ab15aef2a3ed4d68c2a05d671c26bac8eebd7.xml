{"nodes":[{"content":"Configures the session state for a Web application.","nodes":[{"pos":[0,51],"content":"Configures the session state for a Web application.","nodes":[{"content":"Configures the session state for a Web application.","pos":[0,51]}]}],"pos":[1795,1847],"yaml":true},{"content":"The <xref:System.Web.Configuration.SessionStateSection> class refers to the element in the Machine.config or Web.config configuration file identified by the `sessionState` tag.  \n  \n When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid. This ID is used to maintain server-side state associated with the client session across requests. The <xref:System.Web.Configuration.SessionStateSection> controls how the ASP.NET application establishes and maintains this association on behalf of each client.  \n  \n This mechanism is very flexible and gives you the ability to host session-state information out of process and to track state without using cookies, among other things.","nodes":[{"pos":[0,176],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection&gt;</ph> class refers to the element in the Machine.config or Web.config configuration file identified by the <ph id=\"ph2\">`sessionState`</ph> tag.","source":"The <xref:System.Web.Configuration.SessionStateSection> class refers to the element in the Machine.config or Web.config configuration file identified by the `sessionState` tag."},{"pos":[183,638],"content":"When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid. This ID is used to maintain server-side state associated with the client session across requests. The <xref:System.Web.Configuration.SessionStateSection> controls how the ASP.NET application establishes and maintains this association on behalf of each client.","nodes":[{"content":"When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid. This ID is used to maintain server-side state associated with the client session across requests. The <xref:System.Web.Configuration.SessionStateSection> controls how the ASP.NET application establishes and maintains this association on behalf of each client.","pos":[0,455],"nodes":[{"content":"When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid.","pos":[0,195]},{"content":"This ID is used to maintain server-side state associated with the client session across requests.","pos":[196,293]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection&gt;</ph> controls how the ASP.NET application establishes and maintains this association on behalf of each client.","pos":[294,455],"source":" The <xref:System.Web.Configuration.SessionStateSection> controls how the ASP.NET application establishes and maintains this association on behalf of each client."}]}]},{"pos":[645,813],"content":"This mechanism is very flexible and gives you the ability to host session-state information out of process and to track state without using cookies, among other things.","nodes":[{"content":"This mechanism is very flexible and gives you the ability to host session-state information out of process and to track state without using cookies, among other things.","pos":[0,168]}]}],"pos":[1858,2678],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.SessionStateSection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> class."}],"pos":[9350,9457],"yaml":true},{"content":"The <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","nodes":[{"pos":[0,345],"content":"The <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","nodes":[{"content":"The <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","pos":[0,345],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.%23ctor%2A&gt;</ph> constructor is not intended to be used directly from your code.","pos":[0,130],"source":"The <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> constructor is not intended to be used directly from your code."},{"content":"It is called by the ASP.NET configuration system.","pos":[131,180]},{"content":"You obtain an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection&gt;</ph> class by using the <ph id=\"ph2\">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method.","pos":[181,345],"source":" You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."}]}]}],"pos":[9468,9814],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the user can specify the initial catalog value in the <xref href=\"System.Web.Configuration.SessionStateSection.SqlConnectionString\"></xref> property.","nodes":[{"pos":[0,189],"content":"Gets or sets a value indicating whether the user can specify the initial catalog value in the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.SessionStateSection.SqlConnectionString\"&gt;&lt;/xref&gt;</ph> property.","source":"Gets or sets a value indicating whether the user can specify the initial catalog value in the <xref href=\"System.Web.Configuration.SessionStateSection.SqlConnectionString\"></xref> property."}],"pos":[10995,11185],"yaml":true},{"content":"`true` if the user is allowed to specify the catalog; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,103],"content":"`true` if the user is allowed to specify the catalog; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user is allowed to specify the catalog; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if the user is allowed to specify the catalog; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[74,103],"source":" The default value is `false`."}]}],"pos":[12184,12290],"yaml":true},{"content":"Gets or sets a value that indicates whether compression is enabled for session-state data.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that indicates whether compression is enabled for session-state data.","nodes":[{"content":"Gets or sets a value that indicates whether compression is enabled for session-state data.","pos":[0,90]}]}],"pos":[13467,13558],"yaml":true},{"content":"When the <xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A> value is set to `true`, ASP.NET uses the <xref:System.IO.Compression.GZipStream> class to compress and expand session-state data.","nodes":[{"pos":[0,212],"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A&gt;</ph> value is set to <ph id=\"ph2\">`true`</ph>, ASP.NET uses the <ph id=\"ph3\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and expand session-state data.","source":"When the <xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A> value is set to `true`, ASP.NET uses the <xref:System.IO.Compression.GZipStream> class to compress and expand session-state data."}],"pos":[13569,13782],"yaml":true,"extradata":"MT"},{"content":"`true` if compression is enabled; otherwise `false`. The default is `false`.","nodes":[{"pos":[0,76],"content":"`true` if compression is enabled; otherwise `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if compression is enabled; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,52],"source":"`true` if compression is enabled; otherwise `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[53,76],"source":" The default is `false`."}]}],"pos":[14040,14119],"yaml":true},{"content":"Gets or sets a value indicating whether cookies are used to identify client sessions.","nodes":[{"pos":[0,85],"content":"Gets or sets a value indicating whether cookies are used to identify client sessions.","nodes":[{"content":"Gets or sets a value indicating whether cookies are used to identify client sessions.","pos":[0,85]}]}],"pos":[15244,15330],"yaml":true},{"content":"There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL. Storing the session ID in the cookie is more secure but requires the client browser to support cookies.  \n  \n For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL. The URL option has several drawbacks. It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.  \n  \n You are encouraged to use the cookieless mode only if you need to support clients that lack cookie support.  \n  \n Session state also supports two additional options: <xref:System.Web.HttpCookieMode.UseDeviceProfile> and <xref:System.Web.HttpCookieMode.AutoDetect>. The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.  The <xref:System.Web.HttpCookieMode.AutoDetect> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination. If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode.UseDeviceProfile> to generate cookieless URLs only for clients that require them.  \n  \n> [!NOTE]\n>  With UP.Browser 4.1 or UP.Browser 3.2, <xref:System.Web.HttpResponse.Redirect%2A> always behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.  \n>   \n>  In ASP.NET version 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting. If your Web application has the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property set to a Boolean value, then <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.","nodes":[{"pos":[0,297],"content":"There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL. Storing the session ID in the cookie is more secure but requires the client browser to support cookies.","nodes":[{"content":"There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL. Storing the session ID in the cookie is more secure but requires the client browser to support cookies.","pos":[0,297],"nodes":[{"content":"There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL.","pos":[0,193]},{"content":"Storing the session ID in the cookie is more secure but requires the client browser to support cookies.","pos":[194,297]}]}]},{"pos":[304,742],"content":"For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL. The URL option has several drawbacks. It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.","nodes":[{"content":"For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL. The URL option has several drawbacks. It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.","pos":[0,438],"nodes":[{"content":"For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL.","pos":[0,142]},{"content":"The URL option has several drawbacks.","pos":[143,180]},{"content":"It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.","pos":[181,438]}]}]},{"pos":[749,856],"content":"You are encouraged to use the cookieless mode only if you need to support clients that lack cookie support.","nodes":[{"content":"You are encouraged to use the cookieless mode only if you need to support clients that lack cookie support.","pos":[0,107]}]},{"pos":[863,1557],"content":"Session state also supports two additional options: <xref:System.Web.HttpCookieMode.UseDeviceProfile> and <xref:System.Web.HttpCookieMode.AutoDetect>. The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.  The <xref:System.Web.HttpCookieMode.AutoDetect> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination. If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode.UseDeviceProfile> to generate cookieless URLs only for clients that require them.","nodes":[{"content":"Session state also supports two additional options: <xref:System.Web.HttpCookieMode.UseDeviceProfile> and <xref:System.Web.HttpCookieMode.AutoDetect>. The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.  The <xref:System.Web.HttpCookieMode.AutoDetect> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination. If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode.UseDeviceProfile> to generate cookieless URLs only for clients that require them.","pos":[0,694],"nodes":[{"content":"Session state also supports two additional options: <ph id=\"ph1\">&lt;xref:System.Web.HttpCookieMode.UseDeviceProfile&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph>.","pos":[0,150],"source":"Session state also supports two additional options: <xref:System.Web.HttpCookieMode.UseDeviceProfile> and <xref:System.Web.HttpCookieMode.AutoDetect>."},{"content":"The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.","pos":[151,305]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination.","pos":[307,513],"source":"  The <xref:System.Web.HttpCookieMode.AutoDetect> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination."},{"content":"If you need to support cookieless clients, strongly consider using <ph id=\"ph1\">&lt;xref:System.Web.HttpCookieMode.UseDeviceProfile&gt;</ph> to generate cookieless URLs only for clients that require them.","pos":[514,694],"source":" If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode.UseDeviceProfile> to generate cookieless URLs only for clients that require them."}]}]},{"pos":[1565,2075],"content":"[!NOTE]\n With UP.Browser 4.1 or UP.Browser 3.2, <xref:System.Web.HttpResponse.Redirect%2A> always behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.","leadings":["","> "],"nodes":[{"content":"With UP.Browser 4.1 or UP.Browser 3.2, <ph id=\"ph1\">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> always behaves as if the value of the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object is <ph id=\"ph4\">`false`</ph>, unless the <ph id=\"ph5\">&lt;xref:System.Web.Configuration.SessionStateSection.Cookieless%2A&gt;</ph> property in the <ph id=\"ph6\">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A&gt;</ph> section of Web.config has been explicitly set to <ph id=\"ph7\">`true`</ph>.","pos":[9,508],"source":" With UP.Browser 4.1 or UP.Browser 3.2, <xref:System.Web.HttpResponse.Redirect%2A> always behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`."}]},{"pos":[2086,2509],"content":"In ASP.NET version 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting. If your Web application has the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property set to a Boolean value, then <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.","nodes":[{"content":"In ASP.NET version 1.1, the options for this setting were <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>, but with ASP.NET 2.0, the choices are expanded, and <ph id=\"ph3\">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph> is now the default setting.","pos":[0,200],"source":"In ASP.NET version 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting."},{"content":"If your Web application has the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.Cookieless%2A&gt;</ph> property set to a Boolean value, then <ph id=\"ph2\">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> should work as expected for these browsers.","pos":[201,423],"source":" If your Web application has the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property set to a Boolean value, then <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers."}]}],"pos":[15341,17864],"yaml":true,"extradata":"MT"},{"content":"`true` if all requests are treated as cookieless, or `false` if no requests are treated as cookieless, or one of the <xref href=\"System.Web.HttpCookieMode\"></xref> values. The default value in ASP.NET version 2.0 is <xref href=\"System.Web.HttpCookieMode.AutoDetect\"></xref>. In earlier versions, the default value was `false`.","nodes":[{"pos":[0,326],"content":"`true` if all requests are treated as cookieless, or `false` if no requests are treated as cookieless, or one of the <xref href=\"System.Web.HttpCookieMode\"></xref> values. The default value in ASP.NET version 2.0 is <xref href=\"System.Web.HttpCookieMode.AutoDetect\"></xref>. In earlier versions, the default value was `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if all requests are treated as cookieless, or <ph id=\"ph2\">`false`</ph> if no requests are treated as cookieless, or one of the <ph id=\"ph3\">&lt;xref href=\"System.Web.HttpCookieMode\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,171],"source":"`true` if all requests are treated as cookieless, or `false` if no requests are treated as cookieless, or one of the <xref href=\"System.Web.HttpCookieMode\"></xref> values."},{"content":"The default value in ASP.NET version 2.0 is <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCookieMode.AutoDetect\"&gt;&lt;/xref&gt;</ph>.","pos":[172,274],"source":" The default value in ASP.NET version 2.0 is <xref href=\"System.Web.HttpCookieMode.AutoDetect\"></xref>."},{"content":"In earlier versions, the default value was <ph id=\"ph1\">`false`</ph>.","pos":[275,326],"source":" In earlier versions, the default value was `false`."}]}],"pos":[18796,19125],"yaml":true},{"content":"Gets or sets the cookie name.","nodes":[{"pos":[0,29],"content":"Gets or sets the cookie name.","nodes":[{"content":"Gets or sets the cookie name.","pos":[0,29]}]}],"pos":[20242,20272],"yaml":true},{"content":"The default value is `\"ASP.NET_SessionId\"`.","nodes":[{"pos":[0,43],"content":"The default value is <ph id=\"ph1\">`\"ASP.NET_SessionId\"`</ph>.","source":"The default value is `\"ASP.NET_SessionId\"`."}],"pos":[20283,20327],"yaml":true,"extradata":"MT"},{"content":"The name of the HTTP cookie to use for session identification.","nodes":[{"pos":[0,62],"content":"The name of the HTTP cookie to use for session identification.","nodes":[{"content":"The name of the HTTP cookie to use for session identification.","pos":[0,62]}]}],"pos":[21223,21286],"yaml":true},{"content":"Gets or sets the name of the custom provider from the <xref href=\"System.Web.Configuration.SessionStateSection.Providers\"></xref> collection.","nodes":[{"pos":[0,141],"content":"Gets or sets the name of the custom provider from the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.SessionStateSection.Providers\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets or sets the name of the custom provider from the <xref href=\"System.Web.Configuration.SessionStateSection.Providers\"></xref> collection."}],"pos":[22427,22569],"yaml":true},{"content":"The provider is only used when the session-state mode is set to <xref:System.Web.SessionState.SessionStateMode.Custom>.","nodes":[{"pos":[0,119],"content":"The provider is only used when the session-state mode is set to <xref:System.Web.SessionState.SessionStateMode.Custom>.","nodes":[{"content":"The provider is only used when the session-state mode is set to <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateMode.Custom&gt;</ph>.","pos":[0,119],"source":"The provider is only used when the session-state mode is set to <xref:System.Web.SessionState.SessionStateMode.Custom>."}]}],"pos":[22580,22700],"yaml":true,"extradata":"MT"},{"content":"The custom provider name.","nodes":[{"pos":[0,25],"content":"The custom provider name.","nodes":[{"content":"The custom provider name.","pos":[0,25]}]}],"pos":[23478,23504],"yaml":true},{"content":"Gets or sets a value specifying where to store the session state.","nodes":[{"pos":[0,65],"content":"Gets or sets a value specifying where to store the session state.","nodes":[{"content":"Gets or sets a value specifying where to store the session state.","pos":[0,65]}]}],"pos":[25790,25856],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value. However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section.","nodes":[{"pos":[0,325],"content":"The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value. However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value. However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section.","pos":[0,325],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateMode&gt;</ph> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value.","pos":[0,178],"source":"The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value."},{"content":"However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section.","pos":[179,325]}]}]}],"pos":[25867,26193],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values. The default value is <xref href=\"System.Web.SessionState.SessionStateMode.InProc\"></xref>.","nodes":[{"pos":[0,171],"content":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values. The default value is <xref href=\"System.Web.SessionState.SessionStateMode.InProc\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateMode\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,80],"source":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateMode.InProc\"&gt;&lt;/xref&gt;</ph>.","pos":[81,171],"source":" The default value is <xref href=\"System.Web.SessionState.SessionStateMode.InProc\"></xref>."}]}],"pos":[27190,27362],"yaml":true},{"content":"Gets or sets a value specifying where to store the session state.","nodes":[{"pos":[0,65],"content":"Gets or sets a value specifying where to store the session state.","nodes":[{"content":"Gets or sets a value specifying where to store the session state.","pos":[0,65]}]}],"pos":[28539,28605],"yaml":true},{"content":"If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property are ignored.  The <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> can be locked via the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property like other properties within the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element. The connection string returned by the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> will be used on every request to connect to the appropriate server location for the remainder of the request.  If the connection string is invalid, ASP.NET will throw the same exception that is thrown when the configured connection string to the server is invalid.  \n  \n This property is used to partition session-state data across multiple backend nodes when in SQL or state-server mode.","nodes":[{"pos":[0,1018],"content":"If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property are ignored.  The <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> can be locked via the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property like other properties within the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element. The connection string returned by the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> will be used on every request to connect to the appropriate server location for the remainder of the request.  If the connection string is invalid, ASP.NET will throw the same exception that is thrown when the configured connection string to the server is invalid.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A&gt;</ph> property is specified, the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A&gt;</ph> property and <ph id=\"ph3\">&lt;xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A&gt;</ph> property are ignored.","pos":[0,297],"source":"If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property are ignored."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A&gt;</ph> can be locked via the <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationElement.LockAttributes%2A&gt;</ph> property like other properties within the <bpt id=\"p1\">[</bpt>sessionState Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)</ept> element.","pos":[299,638],"source":"  The <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> can be locked via the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property like other properties within the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element."},{"content":"The connection string returned by the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A&gt;</ph> will be used on every request to connect to the appropriate server location for the remainder of the request.","pos":[639,863],"source":" The connection string returned by the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> will be used on every request to connect to the appropriate server location for the remainder of the request."},{"content":"If the connection string is invalid, ASP.NET will throw the same exception that is thrown when the configured connection string to the server is invalid.","pos":[865,1018]}]},{"pos":[1025,1142],"content":"This property is used to partition session-state data across multiple backend nodes when in SQL or state-server mode.","nodes":[{"content":"This property is used to partition session-state data across multiple backend nodes when in SQL or state-server mode.","pos":[0,117]}]}],"pos":[28616,29763],"yaml":true,"extradata":"MT"},{"content":"A value specifying where to store the session state, or an empty string (\"\").","nodes":[{"pos":[0,77],"content":"A value specifying where to store the session state, or an empty string (\"\").","nodes":[{"content":"A value specifying where to store the session state, or an empty string (\"\").","pos":[0,77]}]}],"pos":[30028,30106],"yaml":true},{"content":"Gets the current <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> providers.","nodes":[{"pos":[0,96],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ProviderSettingsCollection\"&gt;&lt;/xref&gt;</ph> providers.","source":"Gets the current <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> providers."}],"pos":[33473,33570],"yaml":true},{"content":"This property refers to the information contained by the configuration tag identified by the `providers` element.","nodes":[{"pos":[0,113],"content":"This property refers to the information contained by the configuration tag identified by the <ph id=\"ph1\">`providers`</ph> element.","source":"This property refers to the information contained by the configuration tag identified by the `providers` element."}],"pos":[33581,33695],"yaml":true,"extradata":"MT"},{"content":"The collection containing the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> providers.","nodes":[{"pos":[0,106],"content":"The collection containing the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.SessionStateSection\"&gt;&lt;/xref&gt;</ph> providers.","source":"The collection containing the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> providers."}],"pos":[34667,34774],"yaml":true},{"content":"Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.","nodes":[{"pos":[0,127],"content":"Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.","nodes":[{"content":"Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.","pos":[0,127]}]}],"pos":[35986,36114],"yaml":true},{"content":"By default, only cookieless URLs are reissued when <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> is enabled.","nodes":[{"pos":[0,144],"content":"By default, only cookieless URLs are reissued when <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> is enabled.","nodes":[{"content":"By default, only cookieless URLs are reissued when <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A&gt;</ph> is enabled.","pos":[0,144],"source":"By default, only cookieless URLs are reissued when <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> is enabled."}]}],"pos":[36125,36270],"yaml":true,"extradata":"MT"},{"content":"`true` if the session ID must be regenerated; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,94],"content":"`true` if the session ID must be regenerated; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the session ID must be regenerated; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,65],"source":"`true` if the session ID must be regenerated; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[66,94],"source":" The default value is `true`."}]}],"pos":[37267,37364],"yaml":true},{"content":"Gets or sets a value specifying the fully qualified type of session ID Manager.","nodes":[{"pos":[0,79],"content":"Gets or sets a value specifying the fully qualified type of session ID Manager.","nodes":[{"content":"Gets or sets a value specifying the fully qualified type of session ID Manager.","pos":[0,79]}]}],"pos":[38557,38637],"yaml":true},{"content":"The <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> overrides session ID generation and management for custom session ID management schemes. The default value is an empty string (\"\").","nodes":[{"pos":[0,211],"content":"The <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> overrides session ID generation and management for custom session ID management schemes. The default value is an empty string (\"\").","nodes":[{"content":"The <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> overrides session ID generation and management for custom session ID management schemes. The default value is an empty string (\"\").","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A&gt;</ph> overrides session ID generation and management for custom session ID management schemes.","pos":[0,168],"source":"The <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> overrides session ID generation and management for custom session ID management schemes."},{"content":"The default value is an empty string (\"\").","pos":[169,211]}]}]}],"pos":[38648,38860],"yaml":true,"extradata":"MT"},{"content":"A fully qualified type of session ID Manager.","nodes":[{"pos":[0,45],"content":"A fully qualified type of session ID Manager.","nodes":[{"content":"A fully qualified type of session ID Manager.","pos":[0,45]}]}],"pos":[39123,39169],"yaml":true},{"content":"Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.","nodes":[{"pos":[0,96],"content":"Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.","nodes":[{"content":"Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.","pos":[0,96]}]}],"pos":[40338,40435],"yaml":true},{"content":"The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds.","nodes":[{"pos":[0,99],"content":"The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds.","nodes":[{"content":"The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds.","pos":[0,99],"nodes":[{"content":"The amount of time, in seconds, after which a SQL command will time out.","pos":[0,72]},{"content":"The default is 30 seconds.","pos":[73,99]}]}]}],"pos":[41538,41638],"yaml":true},{"content":"Gets or sets the time interval that should elapse before ASP.NET reconnects to the database.","nodes":[{"pos":[0,92],"content":"Gets or sets the time interval that should elapse before ASP.NET reconnects to the database.","nodes":[{"content":"Gets or sets the time interval that should elapse before ASP.NET reconnects to the database.","pos":[0,92]}]}],"pos":[42913,43006],"yaml":true},{"content":"The <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A> specifies the time interval in seconds before reconnecting to the database when a connection error has occurred.","nodes":[{"pos":[0,198],"content":"The <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A> specifies the time interval in seconds before reconnecting to the database when a connection error has occurred.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A&gt;</ph> specifies the time interval in seconds before reconnecting to the database when a connection error has occurred.","pos":[0,198],"source":"The <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A> specifies the time interval in seconds before reconnecting to the database when a connection error has occurred."}]}],"pos":[43017,43216],"yaml":true,"extradata":"MT"},{"content":"The time interval that should elapse before ASP.NET reconnects to the database.","nodes":[{"pos":[0,79],"content":"The time interval that should elapse before ASP.NET reconnects to the database.","nodes":[{"content":"The time interval that should elapse before ASP.NET reconnects to the database.","pos":[0,79]}]}],"pos":[43605,43685],"yaml":true},{"content":"Gets or sets the SQL connection string.","nodes":[{"pos":[0,39],"content":"Gets or sets the SQL connection string.","nodes":[{"content":"Gets or sets the SQL connection string.","pos":[0,39]}]}],"pos":[44927,44967],"yaml":true},{"content":"This `sqlConnectionString` attribute is required when <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.SQLServer>.  \n  \n> [!NOTE]\n>  To use the <xref:System.Web.SessionState.SessionStateMode.SQLServer> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state. This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database.","nodes":[{"pos":[0,182],"content":"This <ph id=\"ph1\">`sqlConnectionString`</ph> attribute is required when <ph id=\"ph2\">&lt;xref:System.Web.Configuration.SessionStateSection.Mode%2A&gt;</ph> is set to <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateMode.SQLServer&gt;</ph>.","source":"This `sqlConnectionString` attribute is required when <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.SQLServer>."},{"pos":[190,706],"content":"[!NOTE]\n To use the <xref:System.Web.SessionState.SessionStateMode.SQLServer> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state. This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database.","leadings":["","> "],"nodes":[{"content":" To use the <xref:System.Web.SessionState.SessionStateMode.SQLServer> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state. This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database.","pos":[8,514],"nodes":[{"content":"To use the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateMode.SQLServer&gt;</ph> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [<bpt id=\"p1\">*</bpt>drive<ept id=\"p1\">*</ept>:]\\WINDOWS\\Microsoft.NET\\Framework<ph id=\"ph2\">\\\\</ph><bpt id=\"p2\">*</bpt>VersionNumber<ept id=\"p2\">*</ept> as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state.","pos":[1,342],"source":" To use the <xref:System.Web.SessionState.SessionStateMode.SQLServer> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state."},{"content":"This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database.","pos":[343,506]}]}]}],"pos":[44978,45695],"yaml":true,"extradata":"MT"},{"content":"The SQL connection string. Its default value is the generic string: \"data source=127.0.0.1;Integrated Security=SSPI\"","nodes":[{"pos":[0,116],"content":"The SQL connection string. Its default value is the generic string: \"data source=127.0.0.1;Integrated Security=SSPI\"","nodes":[{"content":"The SQL connection string. Its default value is the generic string: \"data source=127.0.0.1;Integrated Security=SSPI\"","pos":[0,116],"nodes":[{"content":"The SQL connection string.","pos":[0,26]},{"content":"Its default value is the generic string: \"data source=127.0.0.1;Integrated Security=SSPI\"","pos":[27,116]}]}]}],"pos":[46672,46791],"yaml":true},{"content":"Gets or sets the state server connection string.","nodes":[{"pos":[0,48],"content":"Gets or sets the state server connection string.","nodes":[{"content":"Gets or sets the state server connection string.","pos":[0,48]}]}],"pos":[47983,48032],"yaml":true},{"content":"This property specifies the server name and the port when the session state is stored remotely. The `stateConnectionString` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>.  \n  \n> [!NOTE]\n>  Make sure the ASP.NET state service is running on the remote server that stores the session-state information. This service is installed with ASP.NET and is located by default at [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber*\\aspnet_state.exe.","nodes":[{"pos":[0,285],"content":"This property specifies the server name and the port when the session state is stored remotely. The `stateConnectionString` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>.","nodes":[{"content":"This property specifies the server name and the port when the session state is stored remotely.","pos":[0,95]},{"content":"The <ph id=\"ph1\">`stateConnectionString`</ph> attribute is required when the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.SessionStateSection.Mode%2A&gt;</ph> is set to <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateMode.StateServer&gt;</ph>.","pos":[96,285],"source":" The `stateConnectionString` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>."}]},{"pos":[293,560],"content":"[!NOTE]\n Make sure the ASP.NET state service is running on the remote server that stores the session-state information. This service is installed with ASP.NET and is located by default at [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber*\\aspnet_state.exe.","leadings":["","> "],"nodes":[{"content":" Make sure the ASP.NET state service is running on the remote server that stores the session-state information. This service is installed with ASP.NET and is located by default at [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber*\\aspnet_state.exe.","pos":[8,265],"nodes":[{"content":"Make sure the ASP.NET state service is running on the remote server that stores the session-state information.","pos":[1,111]},{"content":"This service is installed with ASP.NET and is located by default at [<bpt id=\"p1\">*</bpt>drive<ept id=\"p1\">*</ept>:]\\WINDOWS\\Microsoft.NET\\Framework<ph id=\"ph1\">\\\\</ph><bpt id=\"p2\">*</bpt>VersionNumber<ept id=\"p2\">*</ept>\\aspnet_state.exe.","pos":[112,257],"source":" This service is installed with ASP.NET and is located by default at [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber*\\aspnet_state.exe."}]}]}],"pos":[48043,48615],"yaml":true,"extradata":"MT"},{"content":"The state server connection string.","nodes":[{"pos":[0,35],"content":"The state server connection string.","nodes":[{"content":"The state server connection string.","pos":[0,35]}]}],"pos":[49598,49634],"yaml":true},{"content":"Gets or sets the amount of time the network connection between the Web server and the state server can remain idle.","nodes":[{"pos":[0,115],"content":"Gets or sets the amount of time the network connection between the Web server and the state server can remain idle.","nodes":[{"content":"Gets or sets the amount of time the network connection between the Web server and the state server can remain idle.","pos":[0,115]}]}],"pos":[50816,50932],"yaml":true},{"content":"This `sessionStateSection` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> property is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>.","nodes":[{"pos":[0,197],"content":"This <ph id=\"ph1\">`sessionStateSection`</ph> attribute is required when the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.SessionStateSection.Mode%2A&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateMode.StateServer&gt;</ph>.","source":"This `sessionStateSection` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> property is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>."}],"pos":[50943,51141],"yaml":true,"extradata":"MT"},{"content":"The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds.","nodes":[{"pos":[0,175],"content":"The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds.","nodes":[{"content":"The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds.","pos":[0,175],"nodes":[{"content":"The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned.","pos":[0,142]},{"content":"The default value is 10 seconds.","pos":[143,175]}]}]}],"pos":[52232,52408],"yaml":true},{"content":"Gets or sets the session time-out","nodes":[{"pos":[0,33],"content":"Gets or sets the session time-out","nodes":[{"content":"Gets or sets the session time-out","pos":[0,33]}]}],"pos":[53571,53605],"yaml":true},{"content":"The <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> property cannot be set to a value greater than 525,601 minutes (1 year).","nodes":[{"pos":[0,139],"content":"The <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> property cannot be set to a value greater than 525,601 minutes (1 year).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.SessionStateSection.Timeout%2A&gt;</ph> property cannot be set to a value greater than 525,601 minutes (1 year).","pos":[0,139],"source":"The <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> property cannot be set to a value greater than 525,601 minutes (1 year)."}]}],"pos":[53616,53756],"yaml":true,"extradata":"MT"},{"content":"The session time-out, in minutes. The default value is 20 minutes.","nodes":[{"pos":[0,66],"content":"The session time-out, in minutes. The default value is 20 minutes.","nodes":[{"content":"The session time-out, in minutes. The default value is 20 minutes.","pos":[0,66],"nodes":[{"content":"The session time-out, in minutes.","pos":[0,33]},{"content":"The default value is 20 minutes.","pos":[34,66]}]}]}],"pos":[54934,55001],"yaml":true},{"content":"Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.","nodes":[{"pos":[0,154],"content":"Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.","nodes":[{"content":"Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.","pos":[0,154]}]}],"pos":[56276,56431],"yaml":true},{"content":"`true` if Web application should revert to hosting identity; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,109],"content":"`true` if Web application should revert to hosting identity; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if Web application should revert to hosting identity; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,80],"source":"`true` if Web application should revert to hosting identity; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[81,109],"source":" The default value is `true`."}]}],"pos":[56689,56801],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.SessionStateSection\n  commentId: T:System.Web.Configuration.SessionStateSection\n  id: SessionStateSection\n  children:\n  - System.Web.Configuration.SessionStateSection.#ctor\n  - System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase\n  - System.Web.Configuration.SessionStateSection.CompressionEnabled\n  - System.Web.Configuration.SessionStateSection.Cookieless\n  - System.Web.Configuration.SessionStateSection.CookieName\n  - System.Web.Configuration.SessionStateSection.CustomProvider\n  - System.Web.Configuration.SessionStateSection.ElementProperty\n  - System.Web.Configuration.SessionStateSection.Mode\n  - System.Web.Configuration.SessionStateSection.PartitionResolverType\n  - System.Web.Configuration.SessionStateSection.PostDeserialize\n  - System.Web.Configuration.SessionStateSection.Properties\n  - System.Web.Configuration.SessionStateSection.Providers\n  - System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId\n  - System.Web.Configuration.SessionStateSection.SessionIDManagerType\n  - System.Web.Configuration.SessionStateSection.SqlCommandTimeout\n  - System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval\n  - System.Web.Configuration.SessionStateSection.SqlConnectionString\n  - System.Web.Configuration.SessionStateSection.StateConnectionString\n  - System.Web.Configuration.SessionStateSection.StateNetworkTimeout\n  - System.Web.Configuration.SessionStateSection.Timeout\n  - System.Web.Configuration.SessionStateSection.UseHostingIdentity\n  langs:\n  - csharp\n  name: SessionStateSection\n  nameWithType: SessionStateSection\n  fullName: System.Web.Configuration.SessionStateSection\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Configures the session state for a Web application.\n  remarks: \"The <xref:System.Web.Configuration.SessionStateSection> class refers to the element in the Machine.config or Web.config configuration file identified by the `sessionState` tag.  \\n  \\n When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid. This ID is used to maintain server-side state associated with the client session across requests. The <xref:System.Web.Configuration.SessionStateSection> controls how the ASP.NET application establishes and maintains this association on behalf of each client.  \\n  \\n This mechanism is very flexible and gives you the ability to host session-state information out of process and to track state without using cookies, among other things.\"\n  example:\n  - \"This section provides two code examples. The first demonstrates how to specify values declaratively for several attributes of the `sessionState` section, which can also be accessed as members of the <xref:System.Web.Configuration.SessionStateSection> class. The second demonstrates how to use the <xref:System.Web.Configuration.SessionStateSection> class.  \\n  \\n The following configuration file example shows how to specify values declaratively for the `sessionState` section.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <sessionState mode=\\\"InProc\\\"   \\n      stateConnectionString=\\\"tcpip=127.0.0.1:42424\\\"   \\n      stateNetworkTimeout=\\\"10\\\"  \\n      sqlConnectionString=\\\"data source=127.0.0.1;  \\n        Integrated Security=SSPI\\\"  \\n      sqlCommandTimeout=\\\"30\\\"   \\n      customProvider=\\\"\\\"   \\n      cookieless=\\\"UseDeviceProfile\\\"   \\n      cookieName=\\\"ASP.NET_SessionId\\\"   \\n      timeout=\\\"20\\\"   \\n      allowCustomSqlDatabase=\\\"False\\\"   \\n      regenerateExpiredSessionId=\\\"False\\\"   \\n      partitionResolverType=\\\"\\\"   \\n      useHostingIdentity=\\\"True\\\">  \\n      <providers>  \\n        <clear />  \\n      </providers>  \\n    </sessionState>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n The following code example demonstrates how to use the <xref:System.Web.Configuration.SessionStateSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#1)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#1)]\"\n  syntax:\n    content: 'public sealed class SessionStateSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.#ctor\n  commentId: M:System.Web.Configuration.SessionStateSection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: SessionStateSection()\n  nameWithType: SessionStateSection.SessionStateSection()\n  fullName: SessionStateSection.SessionStateSection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> class.\n  remarks: The <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.\n  syntax:\n    content: public SessionStateSection ();\n    parameters: []\n  overload: System.Web.Configuration.SessionStateSection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase\n  commentId: P:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase\n  id: AllowCustomSqlDatabase\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: AllowCustomSqlDatabase\n  nameWithType: SessionStateSection.AllowCustomSqlDatabase\n  fullName: SessionStateSection.AllowCustomSqlDatabase\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the user can specify the initial catalog value in the <xref href=\"System.Web.Configuration.SessionStateSection.SqlConnectionString\"></xref> property.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#2)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"allowCustomSqlDatabase\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool AllowCustomSqlDatabase { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user is allowed to specify the catalog; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled\n  commentId: P:System.Web.Configuration.SessionStateSection.CompressionEnabled\n  id: CompressionEnabled\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: CompressionEnabled\n  nameWithType: SessionStateSection.CompressionEnabled\n  fullName: SessionStateSection.CompressionEnabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value that indicates whether compression is enabled for session-state data.\n  remarks: When the <xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A> value is set to `true`, ASP.NET uses the <xref:System.IO.Compression.GZipStream> class to compress and expand session-state data.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"compressionEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CompressionEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if compression is enabled; otherwise `false`. The default is `false`.'\n  overload: System.Web.Configuration.SessionStateSection.CompressionEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.Cookieless\n  commentId: P:System.Web.Configuration.SessionStateSection.Cookieless\n  id: Cookieless\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: Cookieless\n  nameWithType: SessionStateSection.Cookieless\n  fullName: SessionStateSection.Cookieless\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether cookies are used to identify client sessions.\n  remarks: \"There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL. Storing the session ID in the cookie is more secure but requires the client browser to support cookies.  \\n  \\n For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL. The URL option has several drawbacks. It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.  \\n  \\n You are encouraged to use the cookieless mode only if you need to support clients that lack cookie support.  \\n  \\n Session state also supports two additional options: <xref:System.Web.HttpCookieMode.UseDeviceProfile> and <xref:System.Web.HttpCookieMode.AutoDetect>. The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.  The <xref:System.Web.HttpCookieMode.AutoDetect> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination. If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode.UseDeviceProfile> to generate cookieless URLs only for clients that require them.  \\n  \\n> [!NOTE]\\n>  With UP.Browser 4.1 or UP.Browser 3.2, <xref:System.Web.HttpResponse.Redirect%2A> always behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.  \\n>   \\n>  In ASP.NET version 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting. If your Web application has the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property set to a Boolean value, then <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.\"\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#7)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#7)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieless\")]\n\n      public System.Web.HttpCookieMode Cookieless { get; set; }\n    return:\n      type: System.Web.HttpCookieMode\n      description: '`true` if all requests are treated as cookieless, or `false` if no requests are treated as cookieless, or one of the <xref href=\"System.Web.HttpCookieMode\"></xref> values. The default value in ASP.NET version 2.0 is <xref href=\"System.Web.HttpCookieMode.AutoDetect\"></xref>. In earlier versions, the default value was `false`.'\n  overload: System.Web.Configuration.SessionStateSection.Cookieless*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.CookieName\n  commentId: P:System.Web.Configuration.SessionStateSection.CookieName\n  id: CookieName\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: CookieName\n  nameWithType: SessionStateSection.CookieName\n  fullName: SessionStateSection.CookieName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the cookie name.\n  remarks: The default value is `\"ASP.NET_SessionId\"`.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.CookieName%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to get the section.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#5)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#5)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string CookieName { get; set; }\n    return:\n      type: System.String\n      description: The name of the HTTP cookie to use for session identification.\n  overload: System.Web.Configuration.SessionStateSection.CookieName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.CustomProvider\n  commentId: P:System.Web.Configuration.SessionStateSection.CustomProvider\n  id: CustomProvider\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: CustomProvider\n  nameWithType: SessionStateSection.CustomProvider\n  fullName: SessionStateSection.CustomProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the custom provider from the <xref href=\"System.Web.Configuration.SessionStateSection.Providers\"></xref> collection.\n  remarks: The provider is only used when the session-state mode is set to <xref:System.Web.SessionState.SessionStateMode.Custom>.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.CustomProvider%2A> property.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#4)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#4)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"customProvider\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string CustomProvider { get; set; }\n    return:\n      type: System.String\n      description: The custom provider name.\n  overload: System.Web.Configuration.SessionStateSection.CustomProvider*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.ElementProperty\n  commentId: P:System.Web.Configuration.SessionStateSection.ElementProperty\n  id: ElementProperty\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: ElementProperty\n  nameWithType: SessionStateSection.ElementProperty\n  fullName: SessionStateSection.ElementProperty\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }\n    return:\n      type: System.Configuration.ConfigurationElementProperty\n      description: ''\n  overload: System.Web.Configuration.SessionStateSection.ElementProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Mode\n  commentId: P:System.Web.Configuration.SessionStateSection.Mode\n  id: Mode\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: SessionStateSection.Mode\n  fullName: SessionStateSection.Mode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value specifying where to store the session state.\n  remarks: The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value. However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#14)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#14)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"mode\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Web.SessionState.SessionStateMode Mode { get; set; }\n    return:\n      type: System.Web.SessionState.SessionStateMode\n      description: One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values. The default value is <xref href=\"System.Web.SessionState.SessionStateMode.InProc\"></xref>.\n  overload: System.Web.Configuration.SessionStateSection.Mode*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType\n  commentId: P:System.Web.Configuration.SessionStateSection.PartitionResolverType\n  id: PartitionResolverType\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: PartitionResolverType\n  nameWithType: SessionStateSection.PartitionResolverType\n  fullName: SessionStateSection.PartitionResolverType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value specifying where to store the session state.\n  remarks: \"If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property are ignored.  The <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> can be locked via the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property like other properties within the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element. The connection string returned by the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> will be used on every request to connect to the appropriate server location for the remainder of the request.  If the connection string is invalid, ASP.NET will throw the same exception that is thrown when the configured connection string to the server is invalid.  \\n  \\n This property is used to partition session-state data across multiple backend nodes when in SQL or state-server mode.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"partitionResolverType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string PartitionResolverType { get; set; }\n    return:\n      type: System.String\n      description: A value specifying where to store the session state, or an empty string (\"\").\n  overload: System.Web.Configuration.SessionStateSection.PartitionResolverType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.PostDeserialize\n  commentId: M:System.Web.Configuration.SessionStateSection.PostDeserialize\n  id: PostDeserialize\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: PostDeserialize()\n  nameWithType: SessionStateSection.PostDeserialize()\n  fullName: SessionStateSection.PostDeserialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override void PostDeserialize ();\n    parameters: []\n  overload: System.Web.Configuration.SessionStateSection.PostDeserialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Properties\n  commentId: P:System.Web.Configuration.SessionStateSection.Properties\n  id: Properties\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SessionStateSection.Properties\n  fullName: SessionStateSection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Web.Configuration.SessionStateSection.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Providers\n  commentId: P:System.Web.Configuration.SessionStateSection.Providers\n  id: Providers\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: Providers\n  nameWithType: SessionStateSection.Providers\n  fullName: SessionStateSection.Providers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets the current <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> providers.\n  remarks: This property refers to the information contained by the configuration tag identified by the `providers` element.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.Providers%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#10)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#10)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"providers\")]\n\n      public System.Configuration.ProviderSettingsCollection Providers { get; }\n    return:\n      type: System.Configuration.ProviderSettingsCollection\n      description: The collection containing the <xref href=\"System.Web.Configuration.SessionStateSection\"></xref> providers.\n  overload: System.Web.Configuration.SessionStateSection.Providers*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId\n  commentId: P:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId\n  id: RegenerateExpiredSessionId\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: RegenerateExpiredSessionId\n  nameWithType: SessionStateSection.RegenerateExpiredSessionId\n  fullName: SessionStateSection.RegenerateExpiredSessionId\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.\n  remarks: By default, only cookieless URLs are reissued when <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> is enabled.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#3)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#3)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"regenerateExpiredSessionId\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool RegenerateExpiredSessionId { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the session ID must be regenerated; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType\n  commentId: P:System.Web.Configuration.SessionStateSection.SessionIDManagerType\n  id: SessionIDManagerType\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: SessionIDManagerType\n  nameWithType: SessionStateSection.SessionIDManagerType\n  fullName: SessionStateSection.SessionIDManagerType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value specifying the fully qualified type of session ID Manager.\n  remarks: The <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> overrides session ID generation and management for custom session ID management schemes. The default value is an empty string (\"\").\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"sessionIDManagerType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string SessionIDManagerType { get; set; }\n    return:\n      type: System.String\n      description: A fully qualified type of session ID Manager.\n  overload: System.Web.Configuration.SessionStateSection.SessionIDManagerType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout\n  commentId: P:System.Web.Configuration.SessionStateSection.SqlCommandTimeout\n  id: SqlCommandTimeout\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: SqlCommandTimeout\n  nameWithType: SessionStateSection.SqlCommandTimeout\n  fullName: SessionStateSection.SqlCommandTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.SqlCommandTimeout%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#13)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#13)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sqlCommandTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SqlCommandTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds.\n  overload: System.Web.Configuration.SessionStateSection.SqlCommandTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval\n  commentId: P:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval\n  id: SqlConnectionRetryInterval\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: SqlConnectionRetryInterval\n  nameWithType: SessionStateSection.SqlConnectionRetryInterval\n  fullName: SessionStateSection.SqlConnectionRetryInterval\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the time interval that should elapse before ASP.NET reconnects to the database.\n  remarks: The <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A> specifies the time interval in seconds before reconnecting to the database when a connection error has occurred.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sqlConnectionRetryInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SqlConnectionRetryInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time interval that should elapse before ASP.NET reconnects to the database.\n  overload: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString\n  commentId: P:System.Web.Configuration.SessionStateSection.SqlConnectionString\n  id: SqlConnectionString\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: SqlConnectionString\n  nameWithType: SessionStateSection.SqlConnectionString\n  fullName: SessionStateSection.SqlConnectionString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the SQL connection string.\n  remarks: \"This `sqlConnectionString` attribute is required when <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.SQLServer>.  \\n  \\n> [!NOTE]\\n>  To use the <xref:System.Web.SessionState.SessionStateMode.SQLServer> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\\\WINDOWS\\\\Microsoft.NET\\\\Framework\\\\\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state. This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database.\"\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#8)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#8)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"sqlConnectionString\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string SqlConnectionString { get; set; }\n    return:\n      type: System.String\n      description: 'The SQL connection string. Its default value is the generic string: \"data source=127.0.0.1;Integrated Security=SSPI\"'\n  overload: System.Web.Configuration.SessionStateSection.SqlConnectionString*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.StateConnectionString\n  commentId: P:System.Web.Configuration.SessionStateSection.StateConnectionString\n  id: StateConnectionString\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: StateConnectionString\n  nameWithType: SessionStateSection.StateConnectionString\n  fullName: SessionStateSection.StateConnectionString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the state server connection string.\n  remarks: \"This property specifies the server name and the port when the session state is stored remotely. The `stateConnectionString` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>.  \\n  \\n> [!NOTE]\\n>  Make sure the ASP.NET state service is running on the remote server that stores the session-state information. This service is installed with ASP.NET and is located by default at [*drive*:]\\\\WINDOWS\\\\Microsoft.NET\\\\Framework\\\\\\\\*VersionNumber*\\\\aspnet_state.exe.\"\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#9)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#9)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"stateConnectionString\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string StateConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The state server connection string.\n  overload: System.Web.Configuration.SessionStateSection.StateConnectionString*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout\n  commentId: P:System.Web.Configuration.SessionStateSection.StateNetworkTimeout\n  id: StateNetworkTimeout\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: StateNetworkTimeout\n  nameWithType: SessionStateSection.StateNetworkTimeout\n  fullName: SessionStateSection.StateNetworkTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the amount of time the network connection between the Web server and the state server can remain idle.\n  remarks: This `sessionStateSection` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> property is set to <xref:System.Web.SessionState.SessionStateMode.StateServer>.\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.StateNetworkTimeout%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#6)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#6)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"stateNetworkTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan StateNetworkTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds.\n  overload: System.Web.Configuration.SessionStateSection.StateNetworkTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.Timeout\n  commentId: P:System.Web.Configuration.SessionStateSection.Timeout\n  id: Timeout\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: SessionStateSection.Timeout\n  fullName: SessionStateSection.Timeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the session time-out\n  remarks: The <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> property cannot be set to a value greater than 525,601 minutes (1 year).\n  example:\n  - \"The following code example demonstrates how to get the <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \\n  \\n [!code-csharp[System.Web.Configuration.SessionStateSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#11)]\\n [!code-vb[System.Web.Configuration.SessionStateSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#11)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"timeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.TimeSpanValidator(MaxValueString=\"10675199.02:48:05.4775807\", MinValueString=\"00:01:00\")]\n\n      public TimeSpan Timeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The session time-out, in minutes. The default value is 20 minutes.\n  overload: System.Web.Configuration.SessionStateSection.Timeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.TimeSpanValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity\n  commentId: P:System.Web.Configuration.SessionStateSection.UseHostingIdentity\n  id: UseHostingIdentity\n  parent: System.Web.Configuration.SessionStateSection\n  langs:\n  - csharp\n  name: UseHostingIdentity\n  nameWithType: SessionStateSection.UseHostingIdentity\n  fullName: SessionStateSection.UseHostingIdentity\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"useHostingIdentity\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool UseHostingIdentity { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if Web application should revert to hosting identity; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.Configuration.SessionStateSection.UseHostingIdentity*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSection\n  nameWithType: ConfigurationSection\n  fullName: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.SessionStateSection.#ctor\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SessionStateSection()\n  nameWithType: SessionStateSection.SessionStateSection()\n  fullName: SessionStateSection.SessionStateSection()\n- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: AllowCustomSqlDatabase\n  nameWithType: SessionStateSection.AllowCustomSqlDatabase\n  fullName: SessionStateSection.AllowCustomSqlDatabase\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CompressionEnabled\n  nameWithType: SessionStateSection.CompressionEnabled\n  fullName: SessionStateSection.CompressionEnabled\n- uid: System.Web.Configuration.SessionStateSection.Cookieless\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Cookieless\n  nameWithType: SessionStateSection.Cookieless\n  fullName: SessionStateSection.Cookieless\n- uid: System.Web.HttpCookieMode\n  parent: System.Web\n  isExternal: false\n  name: HttpCookieMode\n  nameWithType: HttpCookieMode\n  fullName: System.Web.HttpCookieMode\n- uid: System.Web.Configuration.SessionStateSection.CookieName\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CookieName\n  nameWithType: SessionStateSection.CookieName\n  fullName: SessionStateSection.CookieName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.SessionStateSection.CustomProvider\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CustomProvider\n  nameWithType: SessionStateSection.CustomProvider\n  fullName: SessionStateSection.CustomProvider\n- uid: System.Web.Configuration.SessionStateSection.ElementProperty\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: ElementProperty\n  nameWithType: SessionStateSection.ElementProperty\n  fullName: SessionStateSection.ElementProperty\n- uid: System.Configuration.ConfigurationElementProperty\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElementProperty\n  nameWithType: ConfigurationElementProperty\n  fullName: System.Configuration.ConfigurationElementProperty\n- uid: System.Web.Configuration.SessionStateSection.Mode\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Mode\n  nameWithType: SessionStateSection.Mode\n  fullName: SessionStateSection.Mode\n- uid: System.Web.SessionState.SessionStateMode\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateMode\n  nameWithType: SessionStateMode\n  fullName: System.Web.SessionState.SessionStateMode\n- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: PartitionResolverType\n  nameWithType: SessionStateSection.PartitionResolverType\n  fullName: SessionStateSection.PartitionResolverType\n- uid: System.Web.Configuration.SessionStateSection.PostDeserialize\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: SessionStateSection.PostDeserialize()\n  fullName: SessionStateSection.PostDeserialize()\n- uid: System.Web.Configuration.SessionStateSection.Properties\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Properties\n  nameWithType: SessionStateSection.Properties\n  fullName: SessionStateSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.SessionStateSection.Providers\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Providers\n  nameWithType: SessionStateSection.Providers\n  fullName: SessionStateSection.Providers\n- uid: System.Configuration.ProviderSettingsCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ProviderSettingsCollection\n  nameWithType: ProviderSettingsCollection\n  fullName: System.Configuration.ProviderSettingsCollection\n- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: RegenerateExpiredSessionId\n  nameWithType: SessionStateSection.RegenerateExpiredSessionId\n  fullName: SessionStateSection.RegenerateExpiredSessionId\n- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SessionIDManagerType\n  nameWithType: SessionStateSection.SessionIDManagerType\n  fullName: SessionStateSection.SessionIDManagerType\n- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlCommandTimeout\n  nameWithType: SessionStateSection.SqlCommandTimeout\n  fullName: SessionStateSection.SqlCommandTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlConnectionRetryInterval\n  nameWithType: SessionStateSection.SqlConnectionRetryInterval\n  fullName: SessionStateSection.SqlConnectionRetryInterval\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlConnectionString\n  nameWithType: SessionStateSection.SqlConnectionString\n  fullName: SessionStateSection.SqlConnectionString\n- uid: System.Web.Configuration.SessionStateSection.StateConnectionString\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: StateConnectionString\n  nameWithType: SessionStateSection.StateConnectionString\n  fullName: SessionStateSection.StateConnectionString\n- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: StateNetworkTimeout\n  nameWithType: SessionStateSection.StateNetworkTimeout\n  fullName: SessionStateSection.StateNetworkTimeout\n- uid: System.Web.Configuration.SessionStateSection.Timeout\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Timeout\n  nameWithType: SessionStateSection.Timeout\n  fullName: SessionStateSection.Timeout\n- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: UseHostingIdentity\n  nameWithType: SessionStateSection.UseHostingIdentity\n  fullName: SessionStateSection.UseHostingIdentity\n- uid: System.Web.Configuration.SessionStateSection.#ctor*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SessionStateSection\n  nameWithType: SessionStateSection.SessionStateSection\n  fullName: SessionStateSection.SessionStateSection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: AllowCustomSqlDatabase\n  nameWithType: SessionStateSection.AllowCustomSqlDatabase\n  fullName: SessionStateSection.AllowCustomSqlDatabase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CompressionEnabled\n  nameWithType: SessionStateSection.CompressionEnabled\n  fullName: SessionStateSection.CompressionEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Cookieless*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Cookieless\n  nameWithType: SessionStateSection.Cookieless\n  fullName: SessionStateSection.Cookieless\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.CookieName*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CookieName\n  nameWithType: SessionStateSection.CookieName\n  fullName: SessionStateSection.CookieName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.CustomProvider*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: CustomProvider\n  nameWithType: SessionStateSection.CustomProvider\n  fullName: SessionStateSection.CustomProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.ElementProperty*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: ElementProperty\n  nameWithType: SessionStateSection.ElementProperty\n  fullName: SessionStateSection.ElementProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Mode*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Mode\n  nameWithType: SessionStateSection.Mode\n  fullName: SessionStateSection.Mode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: PartitionResolverType\n  nameWithType: SessionStateSection.PartitionResolverType\n  fullName: SessionStateSection.PartitionResolverType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.PostDeserialize*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: PostDeserialize\n  nameWithType: SessionStateSection.PostDeserialize\n  fullName: SessionStateSection.PostDeserialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Properties*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Properties\n  nameWithType: SessionStateSection.Properties\n  fullName: SessionStateSection.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Providers*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Providers\n  nameWithType: SessionStateSection.Providers\n  fullName: SessionStateSection.Providers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: RegenerateExpiredSessionId\n  nameWithType: SessionStateSection.RegenerateExpiredSessionId\n  fullName: SessionStateSection.RegenerateExpiredSessionId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SessionIDManagerType\n  nameWithType: SessionStateSection.SessionIDManagerType\n  fullName: SessionStateSection.SessionIDManagerType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlCommandTimeout\n  nameWithType: SessionStateSection.SqlCommandTimeout\n  fullName: SessionStateSection.SqlCommandTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlConnectionRetryInterval\n  nameWithType: SessionStateSection.SqlConnectionRetryInterval\n  fullName: SessionStateSection.SqlConnectionRetryInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: SqlConnectionString\n  nameWithType: SessionStateSection.SqlConnectionString\n  fullName: SessionStateSection.SqlConnectionString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.StateConnectionString*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: StateConnectionString\n  nameWithType: SessionStateSection.StateConnectionString\n  fullName: SessionStateSection.StateConnectionString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: StateNetworkTimeout\n  nameWithType: SessionStateSection.StateNetworkTimeout\n  fullName: SessionStateSection.StateNetworkTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.Timeout*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: Timeout\n  nameWithType: SessionStateSection.Timeout\n  fullName: SessionStateSection.Timeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity*\n  parent: System.Web.Configuration.SessionStateSection\n  isExternal: false\n  name: UseHostingIdentity\n  nameWithType: SessionStateSection.UseHostingIdentity\n  fullName: SessionStateSection.UseHostingIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/SessionStateSection.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationSection.IsModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationSection.IsModified()\n  fullName: ConfigurationSection.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ResetModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationSection.ResetModified()\n  fullName: ConfigurationSection.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: DeserializeSection(XmlReader)\n  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)\n  fullName: ConfigurationSection.DeserializeSection(XmlReader)\n- uid: System.Configuration.ConfigurationSection.GetRuntimeObject\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: GetRuntimeObject()\n  nameWithType: ConfigurationSection.GetRuntimeObject()\n  fullName: ConfigurationSection.GetRuntimeObject()\n- uid: System.Configuration.ConfigurationSection.SectionInformation\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SectionInformation\n  nameWithType: ConfigurationSection.SectionInformation\n  fullName: ConfigurationSection.SectionInformation\n- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  fullName: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  fullName: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeSectionInTargetVersion(FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n"}