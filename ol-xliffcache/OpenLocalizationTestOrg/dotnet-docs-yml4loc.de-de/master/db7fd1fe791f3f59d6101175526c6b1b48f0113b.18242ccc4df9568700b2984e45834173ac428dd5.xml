{"nodes":[{"content":"Serves as the root container for state machine workflows. Contains event-driven activities and states.","nodes":[{"pos":[0,102],"content":"Serves as the root container for state machine workflows. Contains event-driven activities and states.","nodes":[{"content":"Serves as the root container for state machine workflows. Contains event-driven activities and states.","pos":[0,102],"nodes":[{"content":"Serves as the root container for state machine workflows.","pos":[0,57]},{"content":"Contains event-driven activities and states.","pos":[58,102]}]}]}],"pos":[1288,1391],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is an activity container used to create workflows that follow a state machine model.  \n  \n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can contain other activities. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state. Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions. <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model.  \n  \n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has properties that are required for the execution of the state machine workflow. Most notably, the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.  \n  \n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.  \n  \n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.  \n  \n <xref:System.Workflow.Activities.StateMachineWorkflowActivity> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier. The fact that the purchase order was fulfilled does not mean that the purchase order process is over. The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment. Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes. The fact that a workflow does not finish just means that the workflow remains in an unloaded state. There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,236],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is an activity container used to create workflows that follow a state machine model.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> is an activity container used to create workflows that follow a state machine model.","pos":[0,151],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is an activity container used to create workflows that follow a state machine model."}]},{"pos":[243,1376],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can contain other activities. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state. Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions. <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can contain other activities. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state. Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions. <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model.","pos":[0,1133],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph>, which means the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> can contain other activities.","pos":[0,237],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can contain other activities."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> activities are the only permitted child activities of the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","pos":[238,488],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> activities are permitted because the root activity itself behaves like a state.","pos":[489,622],"source":" <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state."},{"content":"Therefore, you can have <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> activities at the root level that are used by all the State activities in the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","pos":[623,842],"source":" Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> activities at this level provide a global mechanism for processing workflow events and automate state transitions.","pos":[843,1011],"source":" <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateActivity&gt;</ph> activities provide a mechanism to define the various stages in the model.","pos":[1012,1133],"source":" <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model."}]}]},{"pos":[1383,1834],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has properties that are required for the execution of the state machine workflow. Most notably, the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has properties that are required for the execution of the state machine workflow. Most notably, the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.","pos":[0,451],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> has properties that are required for the execution of the state machine workflow.","pos":[0,148],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has properties that are required for the execution of the state machine workflow."},{"content":"Most notably, the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> has two properties that are important: <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty&gt;</ph>.","pos":[149,451],"source":" Most notably, the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>."}]}]},{"pos":[1841,2754],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.","pos":[0,913],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty&gt;</ph> of the state machine is the state in which the state machine is when an instance of the state machine is created.","pos":[0,205],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty&gt;</ph> property is mandatory and must be provided when a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> is created.","pos":[206,422],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty&gt;</ph> of the state machine is like any other state activity that is contained within the state machine.","pos":[423,612],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine."},{"content":"The state activity can be a direct child of the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> root activity and a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> can have only one <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty&gt;</ph>.","pos":[613,913],"source":" The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>."}]}]},{"pos":[2761,3673],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.","pos":[0,912],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> is a <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateActivity&gt;</ph> activity that is designated as the end state of the <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","pos":[0,332],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."},{"content":"When a transition is made to the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty&gt;</ph>, the workflow execution is completed.","pos":[333,493],"source":" When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty&gt;</ph> is not mandatory.","pos":[494,605],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory."},{"content":"This means that you can have a <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> that is not completed.","pos":[606,722],"source":" This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed."},{"content":"This does not mean that the state machine workflow is always active in memory.","pos":[723,801]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> might be unloaded as it waits for an event.","pos":[802,912],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event."}]}]},{"pos":[3680,4546],"content":"<xref:System.Workflow.Activities.StateMachineWorkflowActivity> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier. The fact that the purchase order was fulfilled does not mean that the purchase order process is over. The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment. Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes. The fact that a workflow does not finish just means that the workflow remains in an unloaded state. There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down.","nodes":[{"content":"<xref:System.Workflow.Activities.StateMachineWorkflowActivity> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier. The fact that the purchase order was fulfilled does not mean that the purchase order process is over. The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment. Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes. The fact that a workflow does not finish just means that the workflow remains in an unloaded state. There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down.","pos":[0,866],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier.","pos":[0,224],"source":"<xref:System.Workflow.Activities.StateMachineWorkflowActivity> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier."},{"content":"The fact that the purchase order was fulfilled does not mean that the purchase order process is over.","pos":[225,326]},{"content":"The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment.","pos":[327,490]},{"content":"Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes.","pos":[491,624]},{"content":"The fact that a workflow does not finish just means that the workflow remains in an unloaded state.","pos":[625,724]},{"content":"There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down.","pos":[725,866]}]}]}],"pos":[1402,5964],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class."}],"pos":[16657,16775],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class using the name of the activity.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;&lt;/xref&gt;</ph> class using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class using the name of the activity."}],"pos":[18075,18224],"yaml":true},{"content":"The user-defined name of the activity.","nodes":[{"pos":[0,38],"content":"The user-defined name of the activity.","nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"pos":[18374,18413],"yaml":true},{"content":"Gets or sets the end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow.","nodes":[{"pos":[0,99],"content":"Gets or sets the end <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph> of the workflow.","source":"Gets or sets the end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow."}],"pos":[19566,19666],"yaml":true},{"content":"When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.","nodes":[{"pos":[0,569],"content":"When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.","nodes":[{"content":"When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.","pos":[0,569],"nodes":[{"content":"When a transition is made to the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A&gt;</ph>, the workflow execution is completed.","pos":[0,155],"source":"When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, the workflow execution is completed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A&gt;</ph> is not mandatory.","pos":[156,262],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> is not mandatory."},{"content":"This means that you can have a <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> that is not completed.","pos":[263,379],"source":" This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed."},{"content":"This does not mean that the state machine workflow is always active in memory.","pos":[380,458]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> might be unloaded as it waits for an event.","pos":[459,569],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event."}]}]},{"pos":[576,862],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A&gt;</ph>, see <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."}],"pos":[19677,20544],"yaml":true,"extradata":"MT"},{"content":"The end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow.","nodes":[{"pos":[0,86],"content":"The end <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph> of the workflow.","source":"The end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow."}],"pos":[21320,21407],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\"></xref> property.","nodes":[{"pos":[0,206],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\"></xref> property."}],"pos":[22635,22842],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[22853,22935],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the currently executing <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.","nodes":[{"pos":[0,103],"content":"Gets the name of the currently executing <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the currently executing <xref href=\"System.Workflow.Activities.StateActivity\"></xref>."}],"pos":[24221,24325],"yaml":true},{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity. The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the current state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class.","nodes":[{"pos":[0,423],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity. The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity. The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.","pos":[0,423],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A&gt;</ph> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> activity.","pos":[0,273],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity."},{"content":"The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.","pos":[274,423]}]}]},{"pos":[430,702],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how to determine the current state from the host, see the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowInstance&gt;</ph> class.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the current state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class."}],"pos":[24336,25043],"yaml":true,"extradata":"MT"},{"content":"The name of the current <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.","nodes":[{"pos":[0,86],"content":"The name of the current <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the current <xref href=\"System.Workflow.Activities.StateActivity\"></xref>."}],"pos":[25220,25307],"yaml":true},{"content":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that determines whether dynamic updates can be made in the workflow, when overridden in a derived class.","nodes":[{"pos":[0,190],"content":"Gets or sets an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;&lt;/xref&gt;</ph> that determines whether dynamic updates can be made in the workflow, when overridden in a derived class.","source":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that determines whether dynamic updates can be made in the workflow, when overridden in a derived class."}],"pos":[26560,26751],"yaml":true},{"content":"An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;&lt;/xref&gt;</ph> that identifies when dynamic updates can be made.","source":"An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made."}],"pos":[27501,27624],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created.","nodes":[{"pos":[0,221],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph> in which the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;&lt;/xref&gt;</ph> is when an instance of the state machine is created.","source":"Gets or sets the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created."}],"pos":[28782,29004],"yaml":true},{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.","nodes":[{"pos":[0,692],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>.","pos":[0,692],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A&gt;</ph> property is mandatory and must be provided when a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> is created.","pos":[0,211],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A&gt;</ph> of the state machine is like any other state activity that is contained within the state machine.","pos":[212,396],"source":" The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> of the state machine is like any other state activity that is contained within the state machine."},{"content":"The state activity can be a direct child of the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> root activity and a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> can have only one <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A&gt;</ph>.","pos":[397,692],"source":" The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>."}]}]},{"pos":[699,985],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A&gt;</ph>, see <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."}],"pos":[29015,30005],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created.","nodes":[{"pos":[0,208],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph> in which the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;&lt;/xref&gt;</ph> is when an instance of the state machine is created.","source":"The <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created."}],"pos":[30919,31128],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\"></xref> property.","nodes":[{"pos":[0,204],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\"></xref> property."}],"pos":[32415,32620],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[32631,32713],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the previously executed <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.","nodes":[{"pos":[0,103],"content":"Gets the name of the previously executed <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the previously executed <xref href=\"System.Workflow.Activities.StateActivity\"></xref>."}],"pos":[34003,34107],"yaml":true},{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>. The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the previous state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class.","nodes":[{"pos":[0,412],"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>. The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.","nodes":[{"content":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>. The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.","pos":[0,412],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A&gt;</ph> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph>.","pos":[0,266],"source":"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>."},{"content":"The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.","pos":[267,412]}]}]},{"pos":[419,688],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how to determine the previous state from the host, see the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowInstance&gt;</ph> class.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the previous state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class."}],"pos":[34118,34811],"yaml":true,"extradata":"MT"},{"content":"The name of the previous <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.","nodes":[{"pos":[0,87],"content":"The name of the previous <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the previous <xref href=\"System.Workflow.Activities.StateActivity\"></xref>."}],"pos":[34989,35077],"yaml":true},{"content":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> that is used to change the state of a <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref>. This field is constant.","nodes":[{"pos":[0,214],"content":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> that is used to change the state of a <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref>. This field is constant.","nodes":[{"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.WorkflowQueue\"&gt;&lt;/xref&gt;</ph> that is used to change the state of a <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;&lt;/xref&gt;</ph>.","pos":[0,190],"source":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> that is used to change the state of a <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref>."},{"content":"This field is constant.","pos":[191,214]}]}],"pos":[36298,36513],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity\n  commentId: T:System.Workflow.Activities.StateMachineWorkflowActivity\n  id: StateMachineWorkflowActivity\n  children:\n  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor\n  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)\n  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\n  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty\n  - System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName\n  - System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition\n  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\n  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty\n  - System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName\n  - System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName\n  langs:\n  - csharp\n  name: StateMachineWorkflowActivity\n  nameWithType: StateMachineWorkflowActivity\n  fullName: System.Workflow.Activities.StateMachineWorkflowActivity\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Serves as the root container for state machine workflows. Contains event-driven activities and states.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is an activity container used to create workflows that follow a state machine model.  \\n  \\n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can contain other activities. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state. Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions. <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model.  \\n  \\n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has properties that are required for the execution of the state machine workflow. Most notably, the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.  \\n  \\n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.  \\n  \\n The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.  \\n  \\n <xref:System.Workflow.Activities.StateMachineWorkflowActivity> activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier. The fact that the purchase order was fulfilled does not mean that the purchase order process is over. The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment. Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes. The fact that a workflow does not finish just means that the workflow remains in an unloaded state. There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down.\"\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> class and use it to implement a basic state machine to transition between three states. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-csharp[wf_samples#181](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#181)]\\n [!code-vb[wf_samples#181](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#181)]\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateMachineWorkflowActivity), \"Resources.StateMachineWorkflowActivity.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateActivityValidator))]\n\n      public class StateMachineWorkflowActivity : System.Workflow.Activities.StateActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.StateActivity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)\n  - System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  - type: System.ObsoleteAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor\n  commentId: M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: StateMachineWorkflowActivity()\n  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()\n  fullName: StateMachineWorkflowActivity.StateMachineWorkflowActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class.\n  syntax:\n    content: public StateMachineWorkflowActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: StateMachineWorkflowActivity(String)\n  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)\n  fullName: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public StateMachineWorkflowActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\n  commentId: P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\n  id: CompletedStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: CompletedStateName\n  nameWithType: StateMachineWorkflowActivity.CompletedStateName\n  fullName: StateMachineWorkflowActivity.CompletedStateName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow.\n  remarks: \"When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.\"\n  example:\n  - \"The following code example shows how to set the value of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A> property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-csharp[wf_samples#184](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#184)]\\n [!code-vb[wf_samples#184](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#184)]\"\n  syntax:\n    content: public string CompletedStateName { get; set; }\n    return:\n      type: System.String\n      description: The end <xref href=\"System.Workflow.Activities.StateActivity\"></xref> of the workflow.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty\n  commentId: F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty\n  id: CompletedStateNameProperty\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: CompletedStateNameProperty\n  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty\n  fullName: StateMachineWorkflowActivity.CompletedStateNameProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedStateNameProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName\n  commentId: P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName\n  id: CurrentStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: CurrentStateName\n  nameWithType: StateMachineWorkflowActivity.CurrentStateName\n  fullName: StateMachineWorkflowActivity.CurrentStateName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the name of the currently executing <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.\n  remarks: \"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName%2A> property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity. The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the current state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string CurrentStateName { get; }\n    return:\n      type: System.String\n      description: The name of the current <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition\n  commentId: P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition\n  id: DynamicUpdateCondition\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: DynamicUpdateCondition\n  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition\n  fullName: StateMachineWorkflowActivity.DynamicUpdateCondition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that determines whether dynamic updates can be made in the workflow, when overridden in a derived class.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the `DynamicUpdateCondition` property. This example is from the Ordering State Machine SDK sample. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \\n  \\n [!code-csharp[wf_samples#127](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#127)]\\n [!code-vb[wf_samples#127](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#127)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition DynamicUpdateCondition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\n  commentId: P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\n  id: InitialStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: InitialStateName\n  nameWithType: StateMachineWorkflowActivity.InitialStateName\n  fullName: StateMachineWorkflowActivity.InitialStateName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created.\n  remarks: \"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.\"\n  example:\n  - \"The following code example shows how to set the value of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-csharp[wf_samples#184](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#184)]\\n [!code-vb[wf_samples#184](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#184)]\"\n  syntax:\n    content: >-\n      [System.Workflow.ComponentModel.Compiler.ValidationOption(System.Workflow.ComponentModel.Compiler.ValidationOption.Optional)]\n\n      public string InitialStateName { get; set; }\n    return:\n      type: System.String\n      description: The <xref href=\"System.Workflow.Activities.StateActivity\"></xref> in which the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> is when an instance of the state machine is created.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*\n  exceptions: []\n  attributes:\n  - type: System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty\n  commentId: F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty\n  id: InitialStateNameProperty\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: InitialStateNameProperty\n  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty\n  fullName: StateMachineWorkflowActivity.InitialStateNameProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> that targets the <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitialStateNameProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName\n  commentId: P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName\n  id: PreviousStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: PreviousStateName\n  nameWithType: StateMachineWorkflowActivity.PreviousStateName\n  fullName: StateMachineWorkflowActivity.PreviousStateName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the name of the previously executed <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.\n  remarks: \"The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName%2A> property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>. The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] how to determine the previous state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string PreviousStateName { get; }\n    return:\n      type: System.String\n      description: The name of the previous <xref href=\"System.Workflow.Activities.StateActivity\"></xref>.\n  overload: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName\n  commentId: F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName\n  id: SetStateQueueName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  langs:\n  - csharp\n  name: SetStateQueueName\n  nameWithType: StateMachineWorkflowActivity.SetStateQueueName\n  fullName: StateMachineWorkflowActivity.SetStateQueueName\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> that is used to change the state of a <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref>. This field is constant.\n  syntax:\n    content: public const string SetStateQueueName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.Activities.StateActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: StateActivity\n  nameWithType: StateActivity\n  fullName: System.Workflow.Activities.StateActivity\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: StateMachineWorkflowActivity()\n  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()\n  fullName: StateMachineWorkflowActivity.StateMachineWorkflowActivity()\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: StateMachineWorkflowActivity(String)\n  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)\n  fullName: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: CompletedStateName\n  nameWithType: StateMachineWorkflowActivity.CompletedStateName\n  fullName: StateMachineWorkflowActivity.CompletedStateName\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: CompletedStateNameProperty\n  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty\n  fullName: StateMachineWorkflowActivity.CompletedStateNameProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: CurrentStateName\n  nameWithType: StateMachineWorkflowActivity.CurrentStateName\n  fullName: StateMachineWorkflowActivity.CurrentStateName\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: DynamicUpdateCondition\n  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition\n  fullName: StateMachineWorkflowActivity.DynamicUpdateCondition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: InitialStateName\n  nameWithType: StateMachineWorkflowActivity.InitialStateName\n  fullName: StateMachineWorkflowActivity.InitialStateName\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: InitialStateNameProperty\n  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty\n  fullName: StateMachineWorkflowActivity.InitialStateNameProperty\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: PreviousStateName\n  nameWithType: StateMachineWorkflowActivity.PreviousStateName\n  fullName: StateMachineWorkflowActivity.PreviousStateName\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: SetStateQueueName\n  nameWithType: StateMachineWorkflowActivity.SetStateQueueName\n  fullName: StateMachineWorkflowActivity.SetStateQueueName\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: StateMachineWorkflowActivity\n  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity\n  fullName: StateMachineWorkflowActivity.StateMachineWorkflowActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: CompletedStateName\n  nameWithType: StateMachineWorkflowActivity.CompletedStateName\n  fullName: StateMachineWorkflowActivity.CompletedStateName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: CurrentStateName\n  nameWithType: StateMachineWorkflowActivity.CurrentStateName\n  fullName: StateMachineWorkflowActivity.CurrentStateName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: DynamicUpdateCondition\n  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition\n  fullName: StateMachineWorkflowActivity.DynamicUpdateCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: InitialStateName\n  nameWithType: StateMachineWorkflowActivity.InitialStateName\n  fullName: StateMachineWorkflowActivity.InitialStateName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*\n  parent: System.Workflow.Activities.StateMachineWorkflowActivity\n  isExternal: false\n  name: PreviousStateName\n  nameWithType: StateMachineWorkflowActivity.PreviousStateName\n  fullName: StateMachineWorkflowActivity.PreviousStateName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/StateMachineWorkflowActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: StateActivity.Cancel(ActivityExecutionContext)\n  fullName: StateActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: StateActivity.Execute(ActivityExecutionContext)\n  fullName: StateActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: StateActivity.Initialize(IServiceProvider)\n  fullName: StateActivity.Initialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: StateActivity.OnClosed(IServiceProvider)\n  fullName: StateActivity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: StateActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: StateActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: GetDynamicActivity(String)\n  nameWithType: StateActivity.GetDynamicActivity(String)\n  fullName: StateActivity.GetDynamicActivity(String)\n- uid: System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey\n  parent: System.Workflow.Activities.StateActivity\n  isExternal: false\n  name: StateChangeTrackingDataKey\n  nameWithType: StateActivity.StateChangeTrackingDataKey\n  fullName: StateActivity.StateChangeTrackingDataKey\n"}