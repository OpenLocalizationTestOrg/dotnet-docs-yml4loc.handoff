{"nodes":[{"content":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"pos":[0,211],"content":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"content":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.","pos":[0,211]}]}],"pos":[627,839],"yaml":true},{"content":"The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets. For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).  \n  \n An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.  \n  \n Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.  \n  \n Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`. However, the precise behavior is both provider and timing dependent.","nodes":[{"pos":[0,383],"content":"The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets. For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDataReader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.IDataRecord&gt;</ph> interfaces allow an inheriting class to implement a <ph id=\"ph3\">`DataReader`</ph> class, which provides a means of reading one or more forward-only streams of result sets.","pos":[0,224],"source":"The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets."},{"content":"For more information about <ph id=\"ph1\">`DataReader`</ph> classes, see <bpt id=\"p1\">[</bpt>Retrieving Data Using a DataReader<ept id=\"p1\">](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)</ept>.","pos":[225,383],"source":" For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)."}]},{"pos":[390,571],"content":"An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.","nodes":[{"content":"An application does not create an instance of the <ph id=\"ph1\">&lt;xref:System.Data.IDataReader&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id=\"ph2\">&lt;xref:System.Data.IDataReader&gt;</ph>.","pos":[0,181],"source":"An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>."}]},{"pos":[578,747],"content":"Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.","nodes":[{"content":"Classes that inherit <ph id=\"ph1\">&lt;xref:System.Data.IDataReader&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.","pos":[0,169],"source":"Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality."}]},{"pos":[754,977],"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`. However, the precise behavior is both provider and timing dependent.","nodes":[{"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an <ph id=\"ph1\">`IDataReader`</ph>.","pos":[0,154],"source":"Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`."},{"content":"However, the precise behavior is both provider and timing dependent.","pos":[155,223]}]}],"pos":[850,1836],"yaml":true,"extradata":"MT"},{"content":"Closes the <xref href=\"System.Data.IDataReader\"></xref> Object.","nodes":[{"pos":[0,63],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> Object.","source":"Closes the <xref href=\"System.Data.IDataReader\"></xref> Object."}],"pos":[3938,4002],"yaml":true},{"content":"You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.","nodes":[{"pos":[0,215],"content":"You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.","nodes":[{"content":"You must explicitly call the <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph> method when you are through using the <ph id=\"ph2\">&lt;xref:System.Data.IDataReader&gt;</ph> to use the associated <ph id=\"ph3\">&lt;xref:System.Data.IDbConnection&gt;</ph> for any other purpose.","pos":[0,215],"source":"You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose."}]}],"pos":[4013,4229],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating the depth of nesting for the current row.","nodes":[{"pos":[0,65],"content":"Gets a value indicating the depth of nesting for the current row.","nodes":[{"content":"Gets a value indicating the depth of nesting for the current row.","pos":[0,65]}]}],"pos":[5486,5552],"yaml":true},{"content":"The outermost table has a depth of zero.","nodes":[{"pos":[0,40],"content":"The outermost table has a depth of zero.","nodes":[{"content":"The outermost table has a depth of zero.","pos":[0,40]}]}],"pos":[5563,5604],"yaml":true,"extradata":"MT"},{"content":"The level of nesting.","nodes":[{"pos":[0,21],"content":"The level of nesting.","nodes":[{"content":"The level of nesting.","pos":[0,21]}]}],"pos":[5709,5731],"yaml":true},{"content":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\"></xref>.","nodes":[{"pos":[0,140],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata of the <ph id=\"ph2\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\"></xref>."}],"pos":[6982,7123],"yaml":true},{"content":"The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.  \n  \n|Data Provider|Member|  \n|-------------------|------------|  \n|.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \n|.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \n|.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \n|.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|","nodes":[{"pos":[0,610],"content":"The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.","nodes":[{"content":"The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.","pos":[0,610],"nodes":[{"content":"The implementation of <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.","pos":[0,284],"source":"The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer."},{"content":"The order in which <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.","pos":[285,492],"source":" The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use."},{"content":"The following table lists data providers and members that implement <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph>.","pos":[493,610],"source":" The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>."}]}]},{"pos":[617,630],"content":"Data Provider","nodes":[{"content":"Data Provider","pos":[0,13]}]},{"pos":[631,637],"content":"Member","nodes":[{"content":"Member","pos":[0,6]}]},{"pos":[679,706],"content":".NET Data Provider for ODBC","nodes":[{"content":".NET Data Provider for ODBC","pos":[0,27]}]},{"pos":[707,789],"content":"<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;</ph>.","pos":[0,82],"source":"<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>."}]},{"pos":[794,823],"content":".NET Data Provider for OLE DB","nodes":[{"content":".NET Data Provider for OLE DB","pos":[0,29]}]},{"pos":[824,908],"content":"<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>."}]},{"pos":[913,942],"content":".NET Data Provider for Oracle","nodes":[{"content":".NET Data Provider for Oracle","pos":[0,29]}]},{"pos":[943,1035],"content":"<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>."}]},{"pos":[1040,1073],"content":".NET Data Provider for SQL Server","nodes":[{"content":".NET Data Provider for SQL Server","pos":[0,33]}]},{"pos":[1074,1160],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;</ph>.","pos":[0,86],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>."}]}],"pos":[7134,8305],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata.","source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."}],"pos":[8460,8541],"yaml":true},{"content":"The <xref href=\"System.Data.IDataReader\"></xref> is closed.","nodes":[{"pos":[0,59],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Data.IDataReader\"></xref> is closed."}],"pos":[8717,8777],"yaml":true},{"content":"Gets a value indicating whether the data reader is closed.","nodes":[{"pos":[0,58],"content":"Gets a value indicating whether the data reader is closed.","nodes":[{"content":"Gets a value indicating whether the data reader is closed.","pos":[0,58]}]}],"pos":[9928,9987],"yaml":true},{"content":"<xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","nodes":[{"pos":[0,190],"content":"<xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id=\"ph3\">&lt;xref:System.Data.IDataReader&gt;</ph> is closed.","pos":[0,190],"source":"<xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed."}]}],"pos":[9998,10189],"yaml":true,"extradata":"MT"},{"content":"`true` if the data reader is closed; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the data reader is closed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the data reader is closed; otherwise, `false`."}],"pos":[10300,10359],"yaml":true},{"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","nodes":[{"pos":[0,94],"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","nodes":[{"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","pos":[0,94]}]}],"pos":[11589,11684],"yaml":true},{"content":"Used to process multiple results, which can be obtained by executing batch SQL statements.  \n  \n By default, the data reader is positioned on the first result.  \n  \n [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]\n [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]","nodes":[{"pos":[0,90],"content":"Used to process multiple results, which can be obtained by executing batch SQL statements.","nodes":[{"content":"Used to process multiple results, which can be obtained by executing batch SQL statements.","pos":[0,90]}]},{"pos":[97,159],"content":"By default, the data reader is positioned on the first result.","nodes":[{"content":"By default, the data reader is positioned on the first result.","pos":[0,62]}]},{"pos":[166,419],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>IDataReader_NextResult#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>IDataReader_NextResult#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]\n [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]"}],"pos":[11695,12122],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more rows; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if there are more rows; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more rows; otherwise, `false`."}],"pos":[12249,12302],"yaml":true},{"content":"Advances the <xref href=\"System.Data.IDataReader\"></xref> to the next record.","nodes":[{"pos":[0,77],"content":"Advances the <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> to the next record.","source":"Advances the <xref href=\"System.Data.IDataReader\"></xref> to the next record."}],"pos":[13498,13576],"yaml":true},{"content":"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.  \n  \n While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.","nodes":[{"pos":[0,180],"content":"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.","nodes":[{"content":"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.","pos":[0,180],"nodes":[{"content":"The default position of the <ph id=\"ph1\">&lt;xref:System.Data.IDataReader&gt;</ph> is prior to the first record.","pos":[0,88],"source":"The default position of the <xref:System.Data.IDataReader> is prior to the first record."},{"content":"Therefore you must call <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> to begin accessing any data.","pos":[89,180],"source":" Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data."}]}]},{"pos":[187,371],"content":"While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.","nodes":[{"content":"While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.","pos":[0,184],"nodes":[{"content":"While the data reader is in use, the associated connection is busy serving the <ph id=\"ph1\">&lt;xref:System.Data.IDataReader&gt;</ph>.","pos":[0,110],"source":"While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>."},{"content":"This is the case until <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph> is called.","pos":[111,184],"source":" This is the case until <xref:System.Data.IDataReader.Close%2A> is called."}]}]}],"pos":[13587,13963],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more rows; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if there are more rows; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more rows; otherwise, `false`."}],"pos":[14826,14879],"yaml":true},{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","nodes":[{"pos":[0,88],"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","nodes":[{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","pos":[0,88]}]}],"pos":[16131,16220],"yaml":true},{"content":"The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.  \n  \n <xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","nodes":[{"pos":[0,147],"content":"The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> property is not set until all rows are read and you close the <ph id=\"ph2\">&lt;xref:System.Data.IDataReader&gt;</ph>.","pos":[0,147],"source":"The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>."}]},{"pos":[154,344],"content":"<xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id=\"ph3\">&lt;xref:System.Data.IDataReader&gt;</ph> is closed.","pos":[0,190],"source":"<xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed."}]}],"pos":[16231,16580],"yaml":true,"extradata":"MT"},{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","nodes":[{"pos":[0,131],"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","nodes":[{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","pos":[0,131]}]}],"pos":[16695,16827],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.IDataReader\n  commentId: T:System.Data.IDataReader\n  id: IDataReader\n  children:\n  - System.Data.IDataReader.Close\n  - System.Data.IDataReader.Depth\n  - System.Data.IDataReader.GetSchemaTable\n  - System.Data.IDataReader.IsClosed\n  - System.Data.IDataReader.NextResult\n  - System.Data.IDataReader.Read\n  - System.Data.IDataReader.RecordsAffected\n  langs:\n  - csharp\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n  type: Interface\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.\n  remarks: \"The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets. For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).  \\n  \\n An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.  \\n  \\n Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.  \\n  \\n Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`. However, the precise behavior is both provider and timing dependent.\"\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \\n  \\n [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public interface IDataReader : IDisposable, System.Data.IDataRecord'\n  derivedClasses:\n  - System.Data.Common.DbDataReader\n  implements:\n  - System.Data.IDataRecord\n  - System.IDisposable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.Close\n  commentId: M:System.Data.IDataReader.Close\n  id: Close\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: IDataReader.Close()\n  fullName: IDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Closes the <xref href=\"System.Data.IDataReader\"></xref> Object.\n  remarks: You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Data.IDataReader.Close*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.Depth\n  commentId: P:System.Data.IDataReader.Depth\n  id: Depth\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: IDataReader.Depth\n  fullName: IDataReader.Depth\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets a value indicating the depth of nesting for the current row.\n  remarks: The outermost table has a depth of zero.\n  syntax:\n    content: public int Depth { get; }\n    return:\n      type: System.Int32\n      description: The level of nesting.\n  overload: System.Data.IDataReader.Depth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.GetSchemaTable\n  commentId: M:System.Data.IDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: IDataReader.GetSchemaTable()\n  fullName: IDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\"></xref>.\n  remarks: \"The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.  \\n  \\n|Data Provider|Member|  \\n|-------------------|------------|  \\n|.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|\"\n  syntax:\n    content: public System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.IDataReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.IDataReader\"></xref> is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.IsClosed\n  commentId: P:System.Data.IDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n  fullName: IDataReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets a value indicating whether the data reader is closed.\n  remarks: <xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.\n  syntax:\n    content: public bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the data reader is closed; otherwise, `false`.'\n  overload: System.Data.IDataReader.IsClosed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.NextResult\n  commentId: M:System.Data.IDataReader.NextResult\n  id: NextResult\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: IDataReader.NextResult()\n  fullName: IDataReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Advances the data reader to the next result, when reading the results of batch SQL statements.\n  remarks: \"Used to process multiple results, which can be obtained by executing batch SQL statements.  \\n  \\n By default, the data reader is positioned on the first result.  \\n  \\n [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]\\n [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]\"\n  syntax:\n    content: public bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more rows; otherwise, `false`.'\n  overload: System.Data.IDataReader.NextResult*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.Read\n  commentId: M:System.Data.IDataReader.Read\n  id: Read\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: IDataReader.Read()\n  fullName: IDataReader.Read()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Advances the <xref href=\"System.Data.IDataReader\"></xref> to the next record.\n  remarks: \"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.  \\n  \\n While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.\"\n  example:\n  - \"The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more rows; otherwise, `false`.'\n  overload: System.Data.IDataReader.Read*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDataReader.RecordsAffected\n  commentId: P:System.Data.IDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n  fullName: IDataReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.\n  remarks: \"The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.  \\n  \\n <xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.\"\n  syntax:\n    content: public int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.\n  overload: System.Data.IDataReader.RecordsAffected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Data.IDataReader.Close\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Close()\n  nameWithType: IDataReader.Close()\n  fullName: IDataReader.Close()\n- uid: System.Data.IDataReader.Depth\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: IDataReader.Depth\n  fullName: IDataReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.IDataReader.GetSchemaTable\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: IDataReader.GetSchemaTable()\n  fullName: IDataReader.GetSchemaTable()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.IDataReader.IsClosed\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n  fullName: IDataReader.IsClosed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.IDataReader.NextResult\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: IDataReader.NextResult()\n  fullName: IDataReader.NextResult()\n- uid: System.Data.IDataReader.Read\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Read()\n  nameWithType: IDataReader.Read()\n  fullName: IDataReader.Read()\n- uid: System.Data.IDataReader.RecordsAffected\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n  fullName: IDataReader.RecordsAffected\n- uid: System.Data.IDataReader.Close*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Close\n  nameWithType: IDataReader.Close\n  fullName: IDataReader.Close\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.Depth*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: IDataReader.Depth\n  fullName: IDataReader.Depth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.GetSchemaTable*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: IDataReader.GetSchemaTable\n  fullName: IDataReader.GetSchemaTable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.IsClosed*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n  fullName: IDataReader.IsClosed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.NextResult*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: NextResult\n  nameWithType: IDataReader.NextResult\n  fullName: IDataReader.NextResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.Read*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Read\n  nameWithType: IDataReader.Read\n  fullName: IDataReader.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataReader.RecordsAffected*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n  fullName: IDataReader.RecordsAffected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDataReader.xml\n- uid: System.Data.IDataRecord\n  parent: System.Data\n  isExternal: false\n  name: IDataRecord\n  nameWithType: IDataRecord\n  fullName: System.Data.IDataRecord\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}