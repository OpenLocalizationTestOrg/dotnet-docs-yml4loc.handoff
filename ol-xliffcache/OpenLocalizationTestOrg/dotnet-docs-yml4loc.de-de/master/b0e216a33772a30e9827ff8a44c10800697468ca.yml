### YamlMime:ManagedReference
items:
- uid: System.Uri
  commentId: T:System.Uri
  id: Uri
  children:
  - System.Uri.#ctor(System.String)
  - System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Uri.#ctor(System.String,System.Boolean)
  - System.Uri.#ctor(System.String,System.UriKind)
  - System.Uri.#ctor(System.Uri,System.String)
  - System.Uri.#ctor(System.Uri,System.Uri)
  - System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  - System.Uri.AbsolutePath
  - System.Uri.AbsoluteUri
  - System.Uri.Authority
  - System.Uri.Canonicalize
  - System.Uri.CheckHostName(System.String)
  - System.Uri.CheckSchemeName(System.String)
  - System.Uri.CheckSecurity
  - System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  - System.Uri.DnsSafeHost
  - System.Uri.Equals(System.Object)
  - System.Uri.Escape
  - System.Uri.EscapeDataString(System.String)
  - System.Uri.EscapeString(System.String)
  - System.Uri.EscapeUriString(System.String)
  - System.Uri.Fragment
  - System.Uri.FromHex(System.Char)
  - System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  - System.Uri.GetHashCode
  - System.Uri.GetLeftPart(System.UriPartial)
  - System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Uri.HexEscape(System.Char)
  - System.Uri.HexUnescape(System.String,System.Int32@)
  - System.Uri.Host
  - System.Uri.HostNameType
  - System.Uri.IdnHost
  - System.Uri.IsAbsoluteUri
  - System.Uri.IsBadFileSystemCharacter(System.Char)
  - System.Uri.IsBaseOf(System.Uri)
  - System.Uri.IsDefaultPort
  - System.Uri.IsExcludedCharacter(System.Char)
  - System.Uri.IsFile
  - System.Uri.IsHexDigit(System.Char)
  - System.Uri.IsHexEncoding(System.String,System.Int32)
  - System.Uri.IsLoopback
  - System.Uri.IsReservedCharacter(System.Char)
  - System.Uri.IsUnc
  - System.Uri.IsWellFormedOriginalString
  - System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  - System.Uri.LocalPath
  - System.Uri.MakeRelative(System.Uri)
  - System.Uri.MakeRelativeUri(System.Uri)
  - System.Uri.op_Equality(System.Uri,System.Uri)
  - System.Uri.op_Inequality(System.Uri,System.Uri)
  - System.Uri.OriginalString
  - System.Uri.Parse
  - System.Uri.PathAndQuery
  - System.Uri.Port
  - System.Uri.Query
  - System.Uri.Scheme
  - System.Uri.SchemeDelimiter
  - System.Uri.Segments
  - System.Uri.ToString
  - System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  - System.Uri.Unescape(System.String)
  - System.Uri.UnescapeDataString(System.String)
  - System.Uri.UriSchemeFile
  - System.Uri.UriSchemeFtp
  - System.Uri.UriSchemeGopher
  - System.Uri.UriSchemeHttp
  - System.Uri.UriSchemeHttps
  - System.Uri.UriSchemeMailto
  - System.Uri.UriSchemeNetPipe
  - System.Uri.UriSchemeNetTcp
  - System.Uri.UriSchemeNews
  - System.Uri.UriSchemeNntp
  - System.Uri.UserEscaped
  - System.Uri.UserInfo
  - System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
  type: Class
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
  remarks: "A URI is a compact representation of a resource available to your application on the intranet or Internet. The <xref:System.Uri> class defines the properties and methods for handling URIs, including parsing, comparing, and combining. The <xref:System.Uri> class properties are read-only; to create a modifiable object, use the <xref:System.UriBuilder> class.  \n  \n Relative URIs (for example, \"/new/index.htm\") must be expanded with respect to a base URI so that they are absolute. The <xref:System.Uri.MakeRelative%2A> method is provided to convert absolute URIs to relative URIs when necessary.  \n  \n The <xref:System.Uri> constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.  \n  \n The <xref:System.Uri> properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents. To put the URI in canonical form, the <xref:System.Uri> constructor performs the following steps:  \n  \n-   Converts the URI scheme to lowercase.  \n  \n-   Converts the host name to lowercase.  \n  \n-   If the host name is an IPv6 address, the canonical IPv6 address is used. ScopeId and other optional IPv6 data are removed.  \n  \n-   Removes default and empty port numbers.  \n  \n-   Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, //, including escaped representations. Note that there are some schemes for which escaped representations are not compacted.  \n  \n-   For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.  \n  \n-   By default, any reserved characters in the URI are escaped in accordance with RFC 2396. This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.  \n  \n As part of canonicalization in the constructor for some schemes, escaped representations are compacted. The schemes for which URI will compact escaped sequences include the following: file, http, https, net.pipe, and net.tcp. For all other schemes, escaped sequences are not compacted. For example: if you percent encode the two dots \"..\" as \"%2E%2E\" then the URI constructor will compact this sequence for some schemes. For example, the following code sample shows a URI constructor for the http scheme.  \n  \n```  \n  \nUri uri = new Uri(\"http://myUrl/%2E%2E/%2E%2E\");  \nConsole.WriteLine(uri.AbsoluteUri);  \nConsole.WriteLine(uri.PathAndQuery);  \n  \n```  \n  \n When this code is executed, it returns the following output with the escaped sequence compacted.  \n  \n```  \n  \nhttp://myUrl/  \n/  \n  \n```  \n  \n The following code example shows a URI constructor for the ftp scheme:  \n  \n```  \n  \nUri uri = new Uri(\"ftp://myUrl/%2E%2E/%2E%2E\");  \nConsole.WriteLine(uri.AbsoluteUri);  \nConsole.WriteLine(uri.PathAndQuery);  \n  \n```  \n  \n When this code is executed, it returns the following output with the escaped sequence not compacted.  \n  \n```  \n  \nftp://myUrl/%2E%2E/%2E%2E  \n/%2E%2E/%2E%2E  \n  \n```  \n  \n You can transform the contents of the <xref:System.Uri> class from an escape encoded URI reference to a readable URI reference by using the <xref:System.Uri.ToString%2A> method. Note that some reserved characters might still be escaped in the output of the <xref:System.Uri.ToString%2A> method. This is to support unambiguous reconstruction of a URI from the value returned by <xref:System.Uri.ToString%2A>.  \n  \n Some URIs include a fragment identifier or a query or both. A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <xref:System.Uri.Fragment%2A> property. Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <xref:System.Uri.Query%2A> property.  \n  \n In the .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and \"c:\\\\\", the Uri class inserts \"//\" after the colon. For example, the URI `xyz:c:\\abc` is converted to `xyz://c:/abc`. In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to `xyz:c:/abc`.  \n  \n> [!NOTE]\n>  The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol. Remember to enclose the IPv6 address in square brackets, as in http://[::1].  \n  \n## International Resource Identifier Support  \n Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:  \n  \n-   Upper and lower case ASCII letters from the English alphabet.  \n  \n-   Digits from 0 to 9.  \n  \n-   A small number of other ASCII symbols.  \n  \n The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).  \n  \n With the growth of the Internet, there is a growing need to identify resources using languages other than English. Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs). The specifications for IRIs are documented in RFC 3987 published by IETF. Using IRIs allows a URL to contain Unicode characters.  \n  \n The existing <xref:System.Uri> class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987. Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n To enable support for IRI, the following change is required:  \n  \n-   Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied. This can be done in the machine.config or in the app.config file. For example, add the following:  \n  \n    ```  \n    <configuration>  \n      <uri>  \n      <idn enabled=\"All\" />  \n      <iriParsing enabled=\"true\" />  \n      </uri>  \n    </configuration>  \n    ```  \n  \n Users of .NET Framework 4.5 and newer always have IRI enabled. IRI parsing cannot be changed using a .config file.  \n  \n Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents. Punycode names contain only ASCII characters and always start with the xn-- prefix. The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).  \n  \n Enabling IRI and IDN affects the value of the <xref:System.Uri.DnsSafeHost%2A?displayProperty=fullName> property. Enabling IRI and IDN can also change the behavior of the <xref:System.Uri.Equals%2A>, <xref:System.Uri.OriginalString%2A>, <xref:System.Uri.GetComponents%2A>, and <xref:System.Uri.IsWellFormedOriginalString%2A> methods.  \n  \n There are three possible values for IDN depending on the DNS servers that are used:  \n  \n-   idn enabled = All  \n  \n     This value will convert any Unicode domain names to their Punycode equivalents (IDN names).  \n  \n-   idn enabled = AllExceptIntranet  \n  \n     This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.  \n  \n-   idn enabled = None  \n  \n     This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behaviour.  \n  \n When IRI parsing is enabled (iriParsing enabled = `true`) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987. When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).  In versions of the .NET Framework before version 4.5, the default value is `false`. In .NET Framework version 4.5 and newer, the default value is `true`, and the enabled state of IRI parsing cannot be modified by settings in a .config file.  \n  \n IRI and IDN processing in the <xref:System.Uri> class can also be controlled using the <xref:System.Configuration.IriParsingElement?displayProperty=fullName>, <xref:System.Configuration.IdnElement?displayProperty=fullName>, and <xref:System.Configuration.UriSection?displayProperty=fullName> configuration setting classes. The <xref:System.Configuration.IriParsingElement?displayProperty=fullName> setting enables or disables IRI processing in the <xref:System.Uri> class. The <xref:System.Configuration.IdnElement?displayProperty=fullName> setting enables or disables IDN processing in the <xref:System.Uri> class. The <xref:System.Configuration.IriParsingElement?displayProperty=fullName> setting also indirectly controls IDN. IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \n  \n The configuration setting for the <xref:System.Configuration.IriParsingElement?displayProperty=fullName> and <xref:System.Configuration.IdnElement?displayProperty=fullName> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \n  \n The <xref:System.GenericUriParser?displayProperty=fullName> class has also been extended to allow creating a customizable parser that supports IRI and IDN. The behavior of a <xref:System.GenericUriParser?displayProperty=fullName> object is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=fullName> enumeration to the <xref:System.GenericUriParser?displayProperty=fullName> constructor. The <xref:System.GenericUriParserOptions?displayProperty=fullName> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI). Whether IRI is used is dictated by the configuration values previously discussed.  \n  \n The <xref:System.GenericUriParserOptions?displayProperty=fullName> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names. Whether IDN is used is dictated by the configuration values previously discussed.  \n  \n## Performance Considerations  \n If you use a Web.config file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard. In such a case, initialize the affected parts of your application when the URIs are needed, not at start time."
  example:
  - "The following example creates an instance of the <xref:System.Uri> class and uses it to create a <xref:System.Net.WebRequest> instance.  \n  \n [!code-cpp[Classic Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri Example/CS/source.cs#1)]\n [!code-vb[Classic Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]

      public class Uri : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.String)
  commentId: M:System.Uri.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String)
  nameWithType: Uri.Uri(String)
  fullName: Uri.Uri(String)
  type: Constructor
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI.
  remarks: "This constructor creates a <xref:System.Uri> instance from a URI string. It parses the URI, puts it in canonical format, and makes any required escape encodings.  \n  \n This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.  \n  \n This constructor assumes that the `string` parameter references an absolute URI and is equivalent to calling the <xref:System.Uri.%23ctor%2A> constructor with <xref:System.UriKind> set to <xref:System.UriKind.Absolute>. If the `string` parameter passed to the constructor is a relative URI, this constructor will throw a <xref:System.UriFormatException>."
  example:
  - "The following example creates a <xref:System.Uri> instance with the URI \"http://www.contoso.com/\".  \n  \n [!code-cpp[Classic Uri.Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri Example/VB/source.vb#1)]"
  syntax:
    content: public Uri (string uriString);
    parameters:
    - id: uriString
      type: System.String
      description: A URI.
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uriString</code> is `null`.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>\n    <code>uriString</code> is empty.  \n  \n -or-  \n  \n The scheme specified in <code>uriString</code> is not correctly formed. See <xref href=\"System.Uri.CheckSchemeName(System.String)\"></xref>.  \n  \n -or-  \n  \n <code>uriString</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The file name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The user name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in <code>uriString</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of <code>uriString</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in <code>uriString</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(SerializationInfo, StreamingContext)
  nameWithType: Uri.Uri(SerializationInfo, StreamingContext)
  fullName: Uri.Uri(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class from the specified instances of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> and <xref href="System.Runtime.Serialization.StreamingContext"></xref> classes.
  remarks: This constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Uri> class.
  syntax:
    content: protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: An instance of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> class containing the information required to serialize the new <xref href="System.Uri"></xref> instance.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: An instance of the <xref href="System.Runtime.Serialization.StreamingContext"></xref> class containing the source of the serialized stream associated with the new <xref href="System.Uri"></xref> instance.
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>serializationInfo</code> parameter contains a `null` URI.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "The <code>serializationInfo</code> parameter contains a URI that is empty.  \n  \n -or-  \n  \n The scheme specified is not correctly formed. See <xref href=\"System.Uri.CheckSchemeName(System.String)\"></xref>.  \n  \n -or-  \n  \n The URI contains too many slashes.  \n  \n -or-  \n  \n The password specified in the URI is not valid.  \n  \n -or-  \n  \n The host name specified in URI is not valid.  \n  \n -or-  \n  \n The file name specified in the URI is not valid.  \n  \n -or-  \n  \n The user name specified in the URI is not valid.  \n  \n -or-  \n  \n The host or authority name specified in the URI cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in the URI is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of URI exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in the URI exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in the URI.  \n  \n -or-  \n  \n The MS-DOS path specified in the URI must start with c:\\\\\\\\."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.String,System.Boolean)
  commentId: M:System.Uri.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String, Boolean)
  nameWithType: Uri.Uri(String, Boolean)
  fullName: Uri.Uri(String, Boolean)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI, with explicit control of character escaping.
  remarks: "This constructor creates a <xref:System.Uri> instance from a URI string. It parses the URI and puts it in canonical format.  \n  \n The `dontEscape` parameter controls whether reserved characters are translated into escape sequences. This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped. Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior. It is strongly recommended that you always set this parameter to `false`.  \n  \n If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence. If the character sequence following a percent is not valid, the percent is replaced by %25.  \n  \n This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource."
  example:
  - "The following example creates a <xref:System.Uri> instance for the URI http://www.contoso.com/Hello%20World.htm. Because the contained URI is completely escaped and is in canonical form, the `dontEscape` parameter can be set to `true`.  \n  \n [!code-cpp[Classic Uri.Uri1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Uri1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Uri1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri1 Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")]

      public Uri (string uriString, bool dontEscape);
    parameters:
    - id: uriString
      type: System.String
      description: The URI.
    - id: dontEscape
      type: System.Boolean
      description: '`true` if <code>uriString</code> is completely escaped; otherwise, `false`.'
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uriString</code> is `null`.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>uriString</code> is empty or contains only spaces.  \n  \n -or-  \n  \n The scheme specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n <code>uriString</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The file name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The user name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in <code>uriString</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of <code>uriString</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in <code>uriString</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.String,System.UriKind)
  commentId: M:System.Uri.#ctor(System.String,System.UriKind)
  id: '#ctor(System.String,System.UriKind)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String, UriKind)
  nameWithType: Uri.Uri(String, UriKind)
  fullName: Uri.Uri(String, UriKind)
  type: Constructor
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.
  remarks: Relative and absolute URIs have different restrictions on their format. For example, a relative URI does not require a scheme or an authority. The value you specify in `uriKind` must match the type of URI passed in `uriString`. However, if <xref:System.UriKind.RelativeOrAbsolute> is specified, the URI string can be relative or absolute.
  syntax:
    content: public Uri (string uriString, UriKind uriKind);
    parameters:
    - id: uriString
      type: System.String
      description: A string that identifies the resource to be represented by the <xref href="System.Uri"></xref> instance.
    - id: uriKind
      type: System.UriKind
      description: Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>uriKind</code> is invalid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uriString</code> is `null`.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>\n    <code>uriString</code> contains a relative URI and <code>uriKind</code> is <xref href=\"System.UriKind.Absolute\"></xref>.  \n  \n or  \n  \n <code>uriString</code> contains an absolute URI and <code>uriKind</code> is <xref href=\"System.UriKind.Relative\"></xref>.  \n  \n or  \n  \n <code>uriString</code> is empty.  \n  \n -or-  \n  \n The scheme specified in <code>uriString</code> is not correctly formed. See <xref href=\"System.Uri.CheckSchemeName(System.String)\"></xref>.  \n  \n -or-  \n  \n <code>uriString</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The file name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The user name specified in <code>uriString</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in <code>uriString</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of <code>uriString</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in <code>uriString</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.Uri,System.String)
  commentId: M:System.Uri.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri, String)
  nameWithType: Uri.Uri(Uri, String)
  fullName: Uri.Uri(Uri, String)
  type: Constructor
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the specified base URI and relative URI string.
  remarks: "This constructor creates a <xref:System.Uri> instance by combining the `baseUri` and the `relativeUri`. If `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.  \n  \n This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource."
  example:
  - "The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and catalog/showew.htm to form the absolute URI http://www.contoso.com/catalog/shownew.htm.  \n  \n [!code-cpp[Classic Uri.Uri3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Uri3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Uri3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri3 Example/VB/source.vb#1)]"
  syntax:
    content: public Uri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: The base URI.
    - id: relativeUri
      type: System.String
      description: The relative URI to add to the base URI.
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>baseUri</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>baseUri</code> is not an absolute <xref href="System.Uri"></xref> instance.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  \n  \n -or-  \n  \n The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  commentId: M:System.Uri.#ctor(System.Uri,System.Uri)
  id: '#ctor(System.Uri,System.Uri)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri, Uri)
  nameWithType: Uri.Uri(Uri, Uri)
  fullName: Uri.Uri(Uri, Uri)
  type: Constructor
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the combination of a specified base <xref href="System.Uri"></xref> instance and a relative <xref href="System.Uri"></xref> instance.
  remarks: "This constructor creates a new <xref:System.Uri> instance by combining an absolute <xref:System.Uri> instance, `baseUri`, with a relative <xref:System.Uri> instance, `relativeUri`. If `relativeUri` is an absolute <xref:System.Uri> instance (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.  \n  \n This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource."
  example:
  - "This example creates an absolute <xref:System.Uri> instance, `absoluteUri`, and a relative <xref:System.Uri> instance, `relativeUri`. A new <xref:System.Uri> instance, `combinedUri`, is then created from these two instances.  \n  \n [!code-cpp[NCLUriEnhancements#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#2)]\n [!code-csharp[NCLUriEnhancements#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#2)]\n [!code-vb[NCLUriEnhancements#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#2)]"
  syntax:
    content: public Uri (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: An absolute <xref href="System.Uri"></xref> that is the base for the new <xref href="System.Uri"></xref> instance.
    - id: relativeUri
      type: System.Uri
      description: A relative <xref href="System.Uri"></xref> instance that is combined with <code>baseUri</code>.
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>baseUri</code> is not an absolute <xref href="System.Uri"></xref> instance.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>baseUri</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>baseUri</code> is not an absolute <xref href="System.Uri"></xref> instance.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  \n  \n -or-  \n  \n The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  commentId: M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  id: '#ctor(System.Uri,System.String,System.Boolean)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri, String, Boolean)
  nameWithType: Uri.Uri(Uri, String, Boolean)
  fullName: Uri.Uri(Uri, String, Boolean)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the specified base and relative URIs, with explicit control of character escaping.
  remarks: "This constructor creates a <xref:System.Uri> instance by combining `baseUri` and `relativeUri`. If the URI passed in `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.  \n  \n The `dontEscape` parameter controls whether reserved characters are translated into escape sequences. This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped. Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior. It is strongly recommended that you always set this parameter to `false`. If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence. If the character sequence following a percent is not valid, the percent is replaced by %25.  \n  \n This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource."
  example:
  - "The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and Hello%20World.htm to form an absolute URI.  \n  \n [!code-cpp[Classic Uri.Uri4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Uri4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Uri4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri4 Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")]

      public Uri (Uri baseUri, string relativeUri, bool dontEscape);
    parameters:
    - id: baseUri
      type: System.Uri
      description: The base URI.
    - id: relativeUri
      type: System.String
      description: The relative URI to add to the base URI.
    - id: dontEscape
      type: System.Boolean
      description: '`true` if <code>uriString</code> is completely escaped; otherwise, `false`.'
  overload: System.Uri.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>baseUri</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>baseUri</code> is not an absolute <xref href="System.Uri"></xref> instance.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  \n  \n -or-  \n  \n The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  \n  \n -or-  \n  \n The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  \n  \n -or-  \n  \n The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  \n  \n -or-  \n  \n The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  \n  \n -or-  \n  \n The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  \n  \n -or-  \n  \n The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  \n  \n -or-  \n  \n There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  \n  \n -or-  \n  \n The MS-DOS path specified in <code>uriString</code> must start with c:\\\\\\\\."
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.AbsolutePath
  commentId: P:System.Uri.AbsolutePath
  id: AbsolutePath
  parent: System.Uri
  langs:
  - csharp
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
  fullName: Uri.AbsolutePath
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the absolute path of the URI.
  remarks: "The <xref:System.Uri.AbsolutePath%2A> property contains the path information that the server uses to resolve requests for information. Typically this is the path to the desired information on the server's file system, although it also can indicate the application or script the server must run to provide the information.  \n  \n The path information does not include the scheme, host name, or query portion of the URI."
  example:
  - "The following example writes the path /catalog/shownew.htm to the console.  \n  \n [!code-cpp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.AbsolutePath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/VB/source.vb#1)]"
  syntax:
    content: public string AbsolutePath { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the absolute path to the resource.
  overload: System.Uri.AbsolutePath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.AbsoluteUri
  commentId: P:System.Uri.AbsoluteUri
  id: AbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
  fullName: Uri.AbsoluteUri
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the absolute URI.
  remarks: The <xref:System.Uri.AbsoluteUri%2A> property includes the entire URI stored in the <xref:System.Uri> instance, including all fragments and query strings.
  example:
  - "The following example writes the complete contents of the <xref:System.Uri> instance to the console. In the example shown, http://www.contoso.com/catalog/shownew.htm?date=today is written to the console.  \n  \n [!code-cpp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/VB/source.vb#1)]"
  syntax:
    content: public string AbsoluteUri { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the entire URI.
  overload: System.Uri.AbsoluteUri*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Authority
  commentId: P:System.Uri.Authority
  id: Authority
  parent: System.Uri
  langs:
  - csharp
  name: Authority
  nameWithType: Uri.Authority
  fullName: Uri.Authority
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the Domain Name System (DNS) host name or IP address and the port number for a server.
  remarks: The <xref:System.Uri.Authority%2A> property is typically a server DNS host name or IP address. This property might include the service port number if it differs from the default port for the URI. If the <xref:System.Uri.Authority%2A> component contains reserved characters, these are escaped in the string value returned by this property.
  example:
  - "The following example writes the host name (www.contoso.com) and port number (8080) of the server to the console.  \n  \n [!code-cpp[Classic Uri.Authority Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Authority Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Authority Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Authority Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Authority Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Authority Example/VB/source.vb#1)]"
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the authority component of the URI represented by this instance.
  overload: System.Uri.Authority*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Canonicalize
  commentId: M:System.Uri.Canonicalize
  id: Canonicalize
  parent: System.Uri
  langs:
  - csharp
  name: Canonicalize()
  nameWithType: Uri.Canonicalize()
  fullName: Uri.Canonicalize()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the internally stored URI to canonical form.
  remarks: Stores the canonical version of the URI internally.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual void Canonicalize ();
    parameters: []
  overload: System.Uri.Canonicalize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this method is valid only for absolute URIs.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: The URI is incorrectly formed.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.CheckHostName(System.String)
  commentId: M:System.Uri.CheckHostName(System.String)
  id: CheckHostName(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: CheckHostName(String)
  nameWithType: Uri.CheckHostName(String)
  fullName: Uri.CheckHostName(String)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines whether the specified host name is a valid DNS name.
  remarks: The <xref:System.Uri.CheckHostName%2A> method checks that the host name provided meets the requirements for a valid Internet host name. It does not, however, perform a host-name lookup to verify the existence of the host.
  example:
  - "The following example checks whether the host name is valid.  \n  \n [!code-cpp[Classic Uri.CheckHostName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.CheckHostName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.CheckHostName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/VB/source.vb#1)]"
  syntax:
    content: public static UriHostNameType CheckHostName (string name);
    parameters:
    - id: name
      type: System.String
      description: The host name to validate. This can be an IPv4 or IPv6 address or an Internet host name.
    return:
      type: System.UriHostNameType
      description: A <xref href="System.UriHostNameType"></xref> that indicates the type of the host name. If the type of the host name cannot be determined or if the host name is `null` or a zero-length string, this method returns <xref href="System.UriHostNameType.Unknown"></xref>.
  overload: System.Uri.CheckHostName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.CheckSchemeName(System.String)
  commentId: M:System.Uri.CheckSchemeName(System.String)
  id: CheckSchemeName(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: CheckSchemeName(String)
  nameWithType: Uri.CheckSchemeName(String)
  fullName: Uri.CheckSchemeName(String)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines whether the specified scheme name is valid.
  remarks: "This method checks the scheme name for validity according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986. The scheme name must begin with a letter and must contain only letters, digits, and the characters \".\", \"+\", or \"-\".  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  example:
  - "The following example creates a <xref:System.Uri> instance and checks whether the scheme name is valid.  \n  \n [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]\n [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]\n [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]"
  syntax:
    content: public static bool CheckSchemeName (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: The scheme name to validate.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the scheme name is valid; otherwise, `false`.
  overload: System.Uri.CheckSchemeName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.CheckSecurity
  commentId: M:System.Uri.CheckSecurity
  id: CheckSecurity
  parent: System.Uri
  langs:
  - csharp
  name: CheckSecurity()
  nameWithType: Uri.CheckSecurity()
  fullName: Uri.CheckSecurity()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Calling this method has no effect.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual void CheckSecurity ();
    parameters: []
  overload: System.Uri.CheckSecurity*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  commentId: M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  id: Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  parent: System.Uri
  langs:
  - csharp
  name: Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  nameWithType: Uri.Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  fullName: Uri.Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Compares the specified parts of two URIs using the specified comparison rules.
  remarks: If both `uri1` and `uri2` are `null`, this method returns 0. When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI. For cases where both `uri1` and `uri2` are not `null` and are both relative URIs or both absolute URIs, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=fullName> method performs the comparison.
  syntax:
    content: public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);
    parameters:
    - id: uri1
      type: System.Uri
      description: The first <xref href="System.Uri"></xref>.
    - id: uri2
      type: System.Uri
      description: The second <xref href="System.Uri"></xref>.
    - id: partsToCompare
      type: System.UriComponents
      description: A bitwise combination of the <xref href="System.UriComponents"></xref> values that specifies the parts of <code>uri1</code> and <code>uri2</code> to compare.
    - id: compareFormat
      type: System.UriFormat
      description: One of the <xref href="System.UriFormat"></xref> values that specifies the character escaping used when the URI components are compared.
    - id: comparisonType
      type: System.StringComparison
      description: One of the <xref href="System.StringComparison"></xref> values.
    return:
      type: System.Int32
      description: "An <xref href=\"System.Int32\"></xref> value that indicates the lexical relationship between the compared <xref href=\"System.Uri\"></xref> components.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>uri1</code> is less than <code>uri2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>uri1</code> equals <code>uri2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>uri1</code> is greater than <code>uri2</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.Uri.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>comparisonType</code> is not a valid <xref href="System.StringComparison"></xref> value.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.DnsSafeHost
  commentId: P:System.Uri.DnsSafeHost
  id: DnsSafeHost
  parent: System.Uri
  langs:
  - csharp
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
  fullName: Uri.DnsSafeHost
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets an unescaped host name that is safe to use for DNS resolution.
  remarks: "For IPv6 addresses, the brackets ([]) are removed and the <xref:System.Net.IPAddress.ScopeId%2A> property is set, if one was specified when this instance was constructed.  \n  \n The <xref:System.Uri.DnsSafeHost%2A> property is dependent on configuration settings, as discussed later in this topic. Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using <xref:System.Uri.DnsSafeHost%2A>. The <xref:System.Uri.IdnHost%2A>property is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current app.config settings might be.  \n  \n The <xref:System.Uri.DnsSafeHost%2A> property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n To enable support for IRI, the following two changes are required:  \n  \n1.  Add the following line to the machine.config file under the .NET Framework 2.0 directory  \n  \n     \\<section name=\"uri\" type=\"System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n  \n2.  Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied. This can be done in the machine.config or in the app.config file. For example, add the following:  \n  \n    ```  \n    <configuration>  \n      <uri>  \n      <idn enabled=\"All\" />  \n      <iriParsing enabled=\"true\" />  \n      </uri>  \n    </configuration>  \n    ```  \n  \n Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents. Punycode names contain only ASCII characters and always start with the xn-- prefix. The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).  \n  \n Enabling IDN only affects the value of the <xref:System.Uri.DnsSafeHost%2A> property.  \n  \n There are three possible values for IDN depending on the DNS servers that are used:  \n  \n-   idn enabled = All  \n  \n     This value will convert any Unicode domain names to their Punycode equivalents (IDN names).  \n  \n-   idn enabled = AllExceptIntranet  \n  \n     This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.  \n  \n-   idn enabled = None  \n  \n     This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behaviour.  \n  \n Enabling IRI parsing (iriParsing enabled = `true`) will do normalization and character checking according to the latest IRI rules in RFC 3987. The default value is `false` and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  example:
  - "The following example creates a <xref:System.Uri> instance from a string. It illustrates the difference between the value returned from <xref:System.Uri.Host%2A>, which returns the host name or address specified in the URI, and the value returned from <xref:System.Uri.DnsSafeHost%2A>, which returns an address that is safe to use in DNS resolution.  \n  \n [!code-cpp[NCLUriEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#4)]\n [!code-csharp[NCLUriEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#4)]\n [!code-vb[NCLUriEnhancements#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#4)]"
  syntax:
    content: public string DnsSafeHost { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.
  overload: System.Uri.DnsSafeHost*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Equals(System.Object)
  commentId: M:System.Uri.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Uri
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Uri.Equals(Object)
  fullName: Uri.Equals(Object)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Compares two <xref href="System.Uri"></xref> instances for equality.
  remarks: "The <xref:System.Uri.Equals%2A> method compares the two instances without regard to user information (<xref:System.Uri.UserInfo%2A>) and fragment (<xref:System.Uri.Fragment%2A>) parts that they might contain. For example, given the URIs http://www.contoso.com/index.htm#search and http://user:password@www.contoso.com/index.htm, the <xref:System.Uri.Equals%2A> method would return `true`.  \n  \n If one <xref:System.Uri> instance is formed with a Unicode host name and `comparand` parameter contains a <xref:System.Uri> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then <xref:System.Uri.Equals%2A> returns `true` only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled. Punycode names contain only ASCII characters and always start with the xn-- prefix.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, the <xref:System.Uri.Query%2A> is also ignored.  \n  \n> [!NOTE]\n>  The <xref:System.Uri.Equals%2A> method can be overridden in a derived class; use caution as a malicious entity could modify the method. You should not use this method to perform security checks unless you know that this instance came from a trusted source."
  example:
  - "This example creates two <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value. `address1` and `address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison. The outcome is written to the console.  \n  \n [!code-cpp[NCLUriExamples#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#8)]\n [!code-csharp[NCLUriExamples#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#8)]\n [!code-vb[NCLUriExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#8)]"
  syntax:
    content: public override bool Equals (object comparand);
    parameters:
    - id: comparand
      type: System.Object
      description: The <xref href="System.Uri"></xref> instance or a URI identifier to compare with the current instance.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the two instances represent the same URI; otherwise, `false`.
  overload: System.Uri.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Escape
  commentId: M:System.Uri.Escape
  id: Escape
  parent: System.Uri
  langs:
  - csharp
  name: Escape()
  nameWithType: Uri.Escape()
  fullName: Uri.Escape()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual void Escape ();
    parameters: []
  overload: System.Uri.Escape*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: The URI passed from the constructor is invalid. This exception can occur if a URI has too many characters or the URI is relative.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.EscapeDataString(System.String)
  commentId: M:System.Uri.EscapeDataString(System.String)
  id: EscapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeDataString(String)
  nameWithType: Uri.EscapeDataString(String)
  fullName: Uri.EscapeDataString(String)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Converts a string to its escaped representation.
  remarks: "By default, the <xref:System.Uri.EscapeDataString%2A> method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeDataString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  \n  \n This method assumes that `stringToEscape` has no escape sequences in it.  \n  \n By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987. See these RFCs for a definition of reserved and unreserved characters.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  syntax:
    content: public static string EscapeDataString (string stringToEscape);
    parameters:
    - id: stringToEscape
      type: System.String
      description: The string to escape.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the escaped representation of <code>stringToEscape</code>.
  overload: System.Uri.EscapeDataString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stringToEscape</code> is `null`.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The length of <code>stringToEscape</code> exceeds 32766 characters."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.EscapeString(System.String)
  commentId: M:System.Uri.EscapeString(System.String)
  id: EscapeString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeString(String)
  nameWithType: Uri.EscapeString(String)
  fullName: Uri.EscapeString(String)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts a string to its escaped representation.
  remarks: "The <xref:System.Uri.EscapeString%2A> method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  \n  \n By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected static string EscapeString (string str);
    parameters:
    - id: str
      type: System.String
      description: The string to transform to its escaped representation.
    return:
      type: System.String
      description: The escaped representation of the string.
  overload: System.Uri.EscapeString*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.EscapeUriString(System.String)
  commentId: M:System.Uri.EscapeUriString(System.String)
  id: EscapeUriString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeUriString(String)
  nameWithType: Uri.EscapeUriString(String)
  fullName: Uri.EscapeUriString(String)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Converts a URI string to its escaped representation.
  remarks: "Use the <xref:System.Uri.EscapeUriString%2A> method to prepare an unescaped URI string to be a parameter to the <xref:System.Uri.%23ctor%2A> constructor.  \n  \n By default, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  \n  \n This method assumes that `stringToEscape` has no escape sequences in it.  \n  \n By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987. See these RFCs for a definition of reserved and unreserved characters.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  syntax:
    content: public static string EscapeUriString (string stringToEscape);
    parameters:
    - id: stringToEscape
      type: System.String
      description: The string to escape.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the escaped representation of <code>stringToEscape</code>.
  overload: System.Uri.EscapeUriString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stringToEscape</code> is `null`.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The length of <code>stringToEscape</code> exceeds 32766 characters."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Fragment
  commentId: P:System.Uri.Fragment
  id: Fragment
  parent: System.Uri
  langs:
  - csharp
  name: Fragment
  nameWithType: Uri.Fragment
  fullName: Uri.Fragment
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the escaped URI fragment.
  remarks: "The <xref:System.Uri.Fragment%2A> property gets any text following a fragment marker (#) in the URI, including the fragment marker itself. Given the URI http://www.contoso.com/index.htm#main, the <xref:System.Uri.Fragment%2A> property would return #main.  \n  \n The <xref:System.Uri.Fragment%2A> property is not considered in any <xref:System.Uri.Equals%2A> comparison."
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the fragment information to the console.  \n  \n [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]\n [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]\n [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]"
  syntax:
    content: public string Fragment { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains any URI fragment information.
  overload: System.Uri.Fragment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.FromHex(System.Char)
  commentId: M:System.Uri.FromHex(System.Char)
  id: FromHex(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: FromHex(Char)
  nameWithType: Uri.FromHex(Char)
  fullName: Uri.FromHex(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets the decimal value of a hexadecimal digit.
  remarks: The <xref:System.Uri.FromHex%2A> method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15). If `digit` is not a valid hexadecimal digit, an <xref:System.ArgumentException> exception is thrown.
  example:
  - "The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.  \n  \n [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]\n [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]\n [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]"
  syntax:
    content: public static int FromHex (char digit);
    parameters:
    - id: digit
      type: System.Char
      description: The hexadecimal digit (0-9, a-f, A-F) to convert.
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.
  overload: System.Uri.FromHex*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>digit</code> is not a valid hexadecimal digit (0-9, a-f, A-F).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  commentId: M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  id: GetComponents(System.UriComponents,System.UriFormat)
  parent: System.Uri
  langs:
  - csharp
  name: GetComponents(UriComponents, UriFormat)
  nameWithType: Uri.GetComponents(UriComponents, UriFormat)
  fullName: Uri.GetComponents(UriComponents, UriFormat)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the specified components of the current instance using the specified escaping for special characters.
  remarks: "The <xref:System.UriComponents.Query>, <xref:System.UriComponents.Fragment>, <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.UserInfo>, <xref:System.UriComponents.Host>, <xref:System.UriComponents.Port>, and <xref:System.UriComponents.Path> components do not include the delimiter. You can combine the <xref:System.UriComponents.KeepDelimiter> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter. For all other <xref:System.UriComponents> values, and combinations of values, the delimiters are included in the returned value.  \n  \n The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.  \n  \n When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <xref:System.String> increases. Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix. When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the <xref:System.Uri.GetComponents%2A> method.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.  \n  \n> [!NOTE]\n>  If the <xref:System.Uri.GetComponents%2A> method is called with `format` set to <xref:System.UriFormat.Unescaped> , you cannot use the return value as an argument to a <xref:System.Uri.%23ctor%2A> constructor to create an equivalent <xref:System.Uri>."
  syntax:
    content: public string GetComponents (UriComponents components, UriFormat format);
    parameters:
    - id: components
      type: System.UriComponents
      description: A bitwise combination of the <xref href="System.UriComponents"></xref> values that specifies which parts of the current instance to return to the caller.
    - id: format
      type: System.UriFormat
      description: One of the <xref href="System.UriFormat"></xref> values that controls how special characters are escaped.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the components.
  overload: System.Uri.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>components</code> is not a combination of valid <xref href="System.UriComponents"></xref> values.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Uri"></xref> is not an absolute URI. Relative URIs cannot be used with this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.GetHashCode
  commentId: M:System.Uri.GetHashCode
  id: GetHashCode
  parent: System.Uri
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Uri.GetHashCode()
  fullName: Uri.GetHashCode()
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the hash code for the URI.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the hash code to the console.  \n  \n [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]\n [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]\n [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> containing the hash value generated for this URI.
  overload: System.Uri.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.GetLeftPart(System.UriPartial)
  commentId: M:System.Uri.GetLeftPart(System.UriPartial)
  id: GetLeftPart(System.UriPartial)
  parent: System.Uri
  langs:
  - csharp
  name: GetLeftPart(UriPartial)
  nameWithType: Uri.GetLeftPart(UriPartial)
  fullName: Uri.GetLeftPart(UriPartial)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets the specified portion of a <xref href="System.Uri"></xref> instance.
  remarks: "The <xref:System.Uri.GetLeftPart%2A> method returns a string containing the leftmost portion of the URI string, ending with the portion specified by `part`.  \n  \n <xref:System.Uri.GetLeftPart%2A> includes delimiters in the following cases:  \n  \n-   <xref:System.UriPartial.Scheme> includes the scheme delimiter.  \n  \n-   <xref:System.UriPartial.Authority> does not include the path delimiter.  \n  \n-   <xref:System.UriPartial.Path> includes any delimiters in the original URI up to the query or fragment delimiter.  \n  \n-   <xref:System.UriPartial.Query> includes the <xref:System.UriPartial.Path>, plus the query and its delimiter.  \n  \n The following examples show a URI and the results of calling <xref:System.Uri.GetLeftPart%2A> with <xref:System.UriPartial.Scheme>, <xref:System.UriPartial.Authority>, <xref:System.UriPartial.Path>, or <xref:System.UriPartial.Query>.  \n  \n|URI|Scheme|Authority|Path|Query|  \n|---------|------------|---------------|----------|-----------|  \n|http://www.contoso.com/index.htm?date=today|http://|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm?date=today|  \n|http://www.contoso.com/index.htm#main|http://|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm|  \n|mailto:user@contoso.com?subject=uri|mailto:|mailto:user@contoso.com|mailto:user@contoso.com?subject=uri|\\<none>|  \n|nntp://news.contoso.com/123456@contoso.com|nntp://|nntp://news.contoso.com|nntp://news.contoso.com/123456@contoso.com|nntp://news.contoso.com/123456@contoso.com|  \n|news:123456@contoso.com|news:|news:123456@contoso.com|news:123456@contoso.com|\\<none>|  \n|file://server/filename.ext|file://|file://server|file://server/filename.ext|file://server/filename.ext|"
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the path to the console.  \n  \n [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]\n [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]\n [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]"
  syntax:
    content: public string GetLeftPart (UriPartial part);
    parameters:
    - id: part
      type: System.UriPartial
      description: One of the <xref href="System.UriPartial"></xref> values that specifies the end of the URI portion to return.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the specified portion of the <xref href="System.Uri"></xref> instance.
  overload: System.Uri.GetLeftPart*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Uri"></xref> instance is not an absolute instance.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified <code>part</code> is not valid.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Uri.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Uri.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the data needed to serialize the current instance.
  syntax:
    content: protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: A <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object containing the information required to serialize the <xref href="System.Uri"></xref>.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: A <xref href="System.Runtime.Serialization.StreamingContext"></xref> object containing the source and destination of the serialized stream associated with the <xref href="System.Uri"></xref>.
  overload: System.Uri.GetObjectData*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.HexEscape(System.Char)
  commentId: M:System.Uri.HexEscape(System.Char)
  id: HexEscape(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: HexEscape(Char)
  nameWithType: Uri.HexEscape(Char)
  fullName: Uri.HexEscape(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts a specified character into its hexadecimal equivalent.
  remarks: ''
  example:
  - "The following example converts a character to its hexadecimal equivalent and writes it to the console.  \n  \n [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]\n [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]\n [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]"
  syntax:
    content: public static string HexEscape (char character);
    parameters:
    - id: character
      type: System.Char
      description: The character to convert to hexadecimal representation.
    return:
      type: System.String
      description: The hexadecimal representation of the specified character.
  overload: System.Uri.HexEscape*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>character</code> is greater than 255.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.HexUnescape(System.String,System.Int32@)
  commentId: M:System.Uri.HexUnescape(System.String,System.Int32@)
  id: HexUnescape(System.String,System.Int32@)
  parent: System.Uri
  langs:
  - csharp
  name: HexUnescape(String, Int32)
  nameWithType: Uri.HexUnescape(String, Int32)
  fullName: Uri.HexUnescape(String, Int32)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts a specified hexadecimal representation of a character to the character.
  remarks: "The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.  \n  \n [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]\n [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]\n [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]"
  syntax:
    content: public static char HexUnescape (string pattern, ref int index);
    parameters:
    - id: pattern
      type: System.String
      description: The hexadecimal representation of a character.
    - id: index
      type: System.Int32
      description: The location in <code>pattern</code> where the hexadecimal representation of a character begins.
    return:
      type: System.Char
      description: The character represented by the hexadecimal encoding at position <code>index</code>. If the character at <code>index</code> is not hexadecimal encoded, the character at <code>index</code> is returned. The value of <code>index</code> is incremented to point to the character following the one returned.
  overload: System.Uri.HexUnescape*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than 0 or greater than or equal to the number of characters in <code>pattern</code>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Host
  commentId: P:System.Uri.Host
  id: Host
  parent: System.Uri
  langs:
  - csharp
  name: Host
  nameWithType: Uri.Host
  fullName: Uri.Host
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the host component of this instance.
  remarks: Unlike the <xref:System.Uri.Authority%2A> property, this property value does not include the port number.
  example:
  - "The following example writes the host name (www.contoso.com) of the server to the console.  \n  \n [!code-cpp[Classic Uri.Host Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Host Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Host Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Host Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Host Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Host Example/VB/source.vb#1)]"
  syntax:
    content: public string Host { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the host name. This is usually the DNS host name or IP address of the server.
  overload: System.Uri.Host*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.HostNameType
  commentId: P:System.Uri.HostNameType
  id: HostNameType
  parent: System.Uri
  langs:
  - csharp
  name: HostNameType
  nameWithType: Uri.HostNameType
  fullName: Uri.HostNameType
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the type of the host name specified in the URI.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the <xref:System.Uri.HostNameType%2A> to the console.  \n  \n [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]\n [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]\n [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]"
  syntax:
    content: public UriHostNameType HostNameType { get; }
    return:
      type: System.UriHostNameType
      description: A member of the <xref href="System.UriHostNameType"></xref> enumeration.
  overload: System.Uri.HostNameType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IdnHost
  commentId: P:System.Uri.IdnHost
  id: IdnHost
  parent: System.Uri
  langs:
  - csharp
  name: IdnHost
  nameWithType: Uri.IdnHost
  fullName: Uri.IdnHost
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.
  remarks: "This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form. If your code does not require that specific format, use <xref:System.Uri.Host%2A> for the hostname.  \n  \n The deprecated <xref:System.Uri.DnsSafeHost%2A> property is dependent on app.config settings, which cannot be changed by Windows Store applications. This property is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current app.config settings might be."
  syntax:
    content: public string IdnHost { get; }
    return:
      type: System.String
      description: Returns the hostname, formatted with Punycode according to the IDN standard.<xref href="System.String"></xref>.
  overload: System.Uri.IdnHost*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsAbsoluteUri
  commentId: P:System.Uri.IsAbsoluteUri
  id: IsAbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
  fullName: Uri.IsAbsoluteUri
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets whether the <xref href="System.Uri"></xref> instance is absolute.
  remarks: This property is `true` if the string or <xref:System.Uri> instance that was passed into the constructor can be parsed as an absolute <xref:System.Uri> instance, which contains a scheme, an authority, and a path. Otherwise, the <xref:System.Uri> instance is treated as relative and might omit the scheme or other URI components.
  syntax:
    content: public bool IsAbsoluteUri { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> instance is absolute; otherwise, `false`.
  overload: System.Uri.IsAbsoluteUri*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsBadFileSystemCharacter(System.Char)
  commentId: M:System.Uri.IsBadFileSystemCharacter(System.Char)
  id: IsBadFileSystemCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsBadFileSystemCharacter(Char)
  nameWithType: Uri.IsBadFileSystemCharacter(Char)
  fullName: Uri.IsBadFileSystemCharacter(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets whether a character is invalid in a file system name.
  remarks: The character is analyzed according to the rules for the NTFS file system.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual bool IsBadFileSystemCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: The <xref href="System.Char"></xref> to test.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the specified character is invalid; otherwise `false`.
  overload: System.Uri.IsBadFileSystemCharacter*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsBaseOf(System.Uri)
  commentId: M:System.Uri.IsBaseOf(System.Uri)
  id: IsBaseOf(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: IsBaseOf(Uri)
  nameWithType: Uri.IsBaseOf(Uri)
  fullName: Uri.IsBaseOf(Uri)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines whether the current <xref href="System.Uri"></xref> instance is a base of the specified <xref href="System.Uri"></xref> instance.
  remarks: "<xref:System.Uri.IsBaseOf%2A> is used to compare the current <xref:System.Uri> instance to a specified <xref:System.Uri> to determine whether this URI is a base for the specified <xref:System.Uri>. When comparing two <xref:System.Uri> objects to determine a base relationship, the user information (<xref:System.Uri.UserInfo%2A>) is not evaluated. When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical. Using http://host/path/path/file?query as the base URI, the following table shows whether it is a base for other URIs.  \n  \n|URI|http://host/path/path/file?query is base of|  \n|---------|------------------------------------------------------|  \n|http://host/path/path/file/|yes|  \n|http://host/path/path/#fragment|yes|  \n|http://host/path/path/MoreDir/\"|yes|  \n|http://host/path/path/OtherFile?Query|yes|  \n|http://host/path/path/|yes|  \n|http://host/path/path/file|yes|  \n|http://host/path/path|no|  \n|http://host/path/path?query|no|  \n|http://host/path/path#Fragment|no|  \n|http://host/path/path2/|no|  \n://host/path/path2/MoreDir|no|  \n|http://host/path/File|no|"
  example:
  - "This example creates a <xref:System.Uri> instance that represents a base <xref:System.Uri> instance. It then creates a second <xref:System.Uri> instance from a string. It calls <xref:System.Uri.IsBaseOf%2A> to determine whether the base instance is the base of the second instance. The outcome is written to the console.  \n  \n [!code-cpp[NCLUriEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#6)]\n [!code-csharp[NCLUriEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#6)]\n [!code-vb[NCLUriEnhancements#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#6)]"
  syntax:
    content: public bool IsBaseOf (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: The specified <xref href="System.Uri"></xref> instance to test.
    return:
      type: System.Boolean
      description: '`true` if the current <xref href="System.Uri"></xref> instance is a base of <code>uri</code>; otherwise, `false`.'
  overload: System.Uri.IsBaseOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsDefaultPort
  commentId: P:System.Uri.IsDefaultPort
  id: IsDefaultPort
  parent: System.Uri
  langs:
  - csharp
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
  fullName: Uri.IsDefaultPort
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets whether the port value of the URI is the default for this scheme.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and checks whether it uses the default port.  \n  \n [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]\n [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]\n [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]"
  syntax:
    content: public bool IsDefaultPort { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the value in the <xref href="System.Uri.Port"></xref> property is the default port for this scheme; otherwise, `false`.
  overload: System.Uri.IsDefaultPort*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsExcludedCharacter(System.Char)
  commentId: M:System.Uri.IsExcludedCharacter(System.Char)
  id: IsExcludedCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsExcludedCharacter(Char)
  nameWithType: Uri.IsExcludedCharacter(Char)
  fullName: Uri.IsExcludedCharacter(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets whether the specified character should be escaped.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected static bool IsExcludedCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: The <xref href="System.Char"></xref> to test.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the specified character should be escaped; otherwise, `false`.
  overload: System.Uri.IsExcludedCharacter*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsFile
  commentId: P:System.Uri.IsFile
  id: IsFile
  parent: System.Uri
  langs:
  - csharp
  name: IsFile
  nameWithType: Uri.IsFile
  fullName: Uri.IsFile
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets a value indicating whether the specified <xref href="System.Uri"></xref> is a file URI.
  remarks: The <xref:System.Uri.IsFile%2A> property is `true` when the <xref:System.Uri.Scheme%2A> property equals <xref:System.Uri.UriSchemeFile>.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether it is a file URI.  \n  \n [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]\n [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]\n [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]"
  syntax:
    content: public bool IsFile { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> is a file URI; otherwise, `false`.
  overload: System.Uri.IsFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsHexDigit(System.Char)
  commentId: M:System.Uri.IsHexDigit(System.Char)
  id: IsHexDigit(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsHexDigit(Char)
  nameWithType: Uri.IsHexDigit(Char)
  fullName: Uri.IsHexDigit(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether a specified character is a valid hexadecimal digit.
  remarks: Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.
  example:
  - "The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.  \n  \n [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]\n [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]\n [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]"
  syntax:
    content: public static bool IsHexDigit (char character);
    parameters:
    - id: character
      type: System.Char
      description: The character to validate.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the character is a valid hexadecimal digit; otherwise `false`.
  overload: System.Uri.IsHexDigit*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsHexEncoding(System.String,System.Int32)
  commentId: M:System.Uri.IsHexEncoding(System.String,System.Int32)
  id: IsHexEncoding(System.String,System.Int32)
  parent: System.Uri
  langs:
  - csharp
  name: IsHexEncoding(String, Int32)
  nameWithType: Uri.IsHexEncoding(String, Int32)
  fullName: Uri.IsHexEncoding(String, Int32)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether a character in a string is hexadecimal encoded.
  remarks: The <xref:System.Uri.IsHexEncoding%2A> method checks for hexadecimal encoding that follows the pattern "%hexhex" in a string, where "hex" is a digit from 0 to 9 or a letter from A-F (case-insensitive).
  example:
  - "The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.  \n  \n [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]\n [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]\n [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]"
  syntax:
    content: public static bool IsHexEncoding (string pattern, int index);
    parameters:
    - id: pattern
      type: System.String
      description: The string to check.
    - id: index
      type: System.Int32
      description: The location in <code>pattern</code> to check for hexadecimal encoding.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if <code>pattern</code> is hexadecimal encoded at the specified location; otherwise, `false`.
  overload: System.Uri.IsHexEncoding*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsLoopback
  commentId: P:System.Uri.IsLoopback
  id: IsLoopback
  parent: System.Uri
  langs:
  - csharp
  name: IsLoopback
  nameWithType: Uri.IsLoopback
  fullName: Uri.IsLoopback
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets whether the specified <xref href="System.Uri"></xref> references the local host.
  remarks: <xref:System.Uri.IsLoopback%2A> returns `true` if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt). All other URIs return `false`.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether it references a local host.  \n  \n [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]\n [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]\n [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]"
  syntax:
    content: public bool IsLoopback { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if this <xref href="System.Uri"></xref> references the local host; otherwise, `false`.
  overload: System.Uri.IsLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsReservedCharacter(System.Char)
  commentId: M:System.Uri.IsReservedCharacter(System.Char)
  id: IsReservedCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsReservedCharacter(Char)
  nameWithType: Uri.IsReservedCharacter(Char)
  fullName: Uri.IsReservedCharacter(Char)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets whether the specified character is a reserved character.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual bool IsReservedCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: The <xref href="System.Char"></xref> to test.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the specified character is a reserved character otherwise, `false`.
  overload: System.Uri.IsReservedCharacter*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsUnc
  commentId: P:System.Uri.IsUnc
  id: IsUnc
  parent: System.Uri
  langs:
  - csharp
  name: IsUnc
  nameWithType: Uri.IsUnc
  fullName: Uri.IsUnc
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets whether the specified <xref href="System.Uri"></xref> is a universal naming convention (UNC) path.
  remarks: The <xref:System.Uri.IsUnc%2A> property is `true` if the specified <xref:System.Uri> instance is a UNC path (such as \\\server\folder or file://server/folder). This property always returns `true` if the URI has the file:// scheme and specifies a host component.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether it is a UNC path.  \n  \n [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]\n [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]\n [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]"
  syntax:
    content: public bool IsUnc { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> is a UNC path; otherwise, `false`.
  overload: System.Uri.IsUnc*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsWellFormedOriginalString
  commentId: M:System.Uri.IsWellFormedOriginalString
  id: IsWellFormedOriginalString
  parent: System.Uri
  langs:
  - csharp
  name: IsWellFormedOriginalString()
  nameWithType: Uri.IsWellFormedOriginalString()
  fullName: Uri.IsWellFormedOriginalString()
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Indicates whether the string used to construct this <xref href="System.Uri"></xref> was well-formed and is not required to be further escaped.
  remarks: "The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987  \n  \n The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.  \n  \n|Error|Example|  \n|-----------|-------------|  \n|The string is not correctly escaped.|[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name|  \n|The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.|c:\\\\\\directory\\filename|  \n|The string is an absolute URI that is missing a slash before the path.|file://c:/directory/filename|  \n|The string contains unescaped backslashes even if they are treated as forward slashes.|http:\\\\\\host/path/file|  \n|The string represents a hierarchical absolute <xref:System.Uri> and does not contain \"://\".|www.contoso.com/path/file|  \n|The parser for the <xref:System.Uri.Scheme%2A?displayProperty=fullName> indicates that the original string was not well-formed.|The example depends on the scheme of the URI.|  \n  \n By default, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 2396 and RFC 2732.  \n  \n When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 3986 and RFC 3987. Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  syntax:
    content: public bool IsWellFormedOriginalString ();
    parameters: []
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the string was well-formed; else `false`.
  overload: System.Uri.IsWellFormedOriginalString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  commentId: M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  id: IsWellFormedUriString(System.String,System.UriKind)
  parent: System.Uri
  langs:
  - csharp
  name: IsWellFormedUriString(String, UriKind)
  nameWithType: Uri.IsWellFormedUriString(String, UriKind)
  fullName: Uri.IsWellFormedUriString(String, UriKind)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.
  remarks: "In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.  \n  \n Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled. Note, however, that this is only true for apps that target .NET 4.5 or later. Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.  \n  \n The string is considered poorly formed, causing the method to return false, if any of the following conditions occur  \n  \n|Error|Example|  \n|-----------|-------------|  \n|The string is not correctly escaped.|[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name|  \n|The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.|c:\\\\\\directory\\filename|  \n|The string is an absolute URI that is missing a slash before the path.|file://c:/directory/filename|  \n|The string contains unescaped backslashes even if they will be treated as forward slashes|http:\\\\\\host/path/file|  \n|The string represents a hierarchical absolute <xref:System.Uri> and does not contain \"://\"|www.contoso.com/path/file|  \n|The parser for the <xref:System.Uri.Scheme%2A> indicates that the original string was not well-formed.|The example depends on the scheme of the URI.|  \n|Beginning with .NET 4.5, relative URIs with a colon (':') in their first segment are not considered well-formed.|2013.05.29_14:33:41|  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  syntax:
    content: public static bool IsWellFormedUriString (string uriString, UriKind uriKind);
    parameters:
    - id: uriString
      type: System.String
      description: The string used to attempt to construct a <xref href="System.Uri"></xref>.
    - id: uriKind
      type: System.UriKind
      description: The type of the <xref href="System.Uri"></xref> in <code>uriString</code>.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the string was well-formed; else `false`.
  overload: System.Uri.IsWellFormedUriString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.LocalPath
  commentId: P:System.Uri.LocalPath
  id: LocalPath
  parent: System.Uri
  langs:
  - csharp
  name: LocalPath
  nameWithType: Uri.LocalPath
  fullName: Uri.LocalPath
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets a local operating-system representation of a file name.
  remarks: "The value returned by this property is unescaped. If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (\\\\).  \n  \n For the URI `file://computer/file.ext`, the absolute path is `/file.ext` and the local path is `\\\\computer\\file.ext`."
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the local path to the console.  \n  \n [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]\n [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]\n [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]"
  syntax:
    content: public string LocalPath { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the local operating-system representation of a file name.
  overload: System.Uri.LocalPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.MakeRelative(System.Uri)
  commentId: M:System.Uri.MakeRelative(System.Uri)
  id: MakeRelative(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: MakeRelative(Uri)
  nameWithType: Uri.MakeRelative(Uri)
  fullName: Uri.MakeRelative(Uri)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines the difference between two <xref href="System.Uri"></xref> instances.
  remarks: "The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelative%2A>.  \n  \n|Current URI instance|`toUri`|Return value|  \n|--------------------------|-------------|------------------|  \n|http://www.contoso.com/|http://www.contoso.com/test/test.htm|test/test.htm|  \n|http://www.contoso.com/test1/|http://www.contoso.com/|../|  \n|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  \n|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|test1/test1.txt|  \n  \n User information, if present in the URI, is ignored."
  example:
  - "The following example creates 2 <xref:System.Uri> instances. The difference in the path information is written to the console.  \n  \n [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]\n [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]\n [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]"
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). http://go.microsoft.com/fwlink/?linkid=14202")]

      public string MakeRelative (Uri toUri);
    parameters:
    - id: toUri
      type: System.Uri
      description: The URI to compare to the current URI.
    return:
      type: System.String
      description: "If the hostname and scheme of this URI instance and <code>toUri</code> are the same, then this method returns a <xref href=\"System.String\"></xref> that represents a relative URI that, when appended to the current URI instance, yields the <code>toUri</code> parameter.  \n  \n If the hostname or scheme is different, then this method returns a <xref href=\"System.String\"></xref> that represents the <code>toUri</code> parameter."
  overload: System.Uri.MakeRelative*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>toUri</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this method is valid only for absolute URIs.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.MakeRelativeUri(System.Uri)
  commentId: M:System.Uri.MakeRelativeUri(System.Uri)
  id: MakeRelativeUri(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: MakeRelativeUri(Uri)
  nameWithType: Uri.MakeRelativeUri(Uri)
  fullName: Uri.MakeRelativeUri(Uri)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines the difference between two <xref href="System.Uri"></xref> instances.
  remarks: "The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelativeUri%2A>.  \n  \n|Current URI instance|`toUri`|Return value|  \n|--------------------------|-------------|------------------|  \n|http://www.contoso.com/|http://www.contoso.com/test/test.htm|test/test.htm|  \n|http://www.contoso.com/test1/|http://www.contoso.com/|../|  \n|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  \n|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|test1/test1.txt|  \n  \n User information, if present in the URI, is ignored."
  example:
  - "The following example creates 2 <xref:System.Uri> instances. The difference in the path information is written to the console.  \n  \n [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]\n [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]\n [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]"
  syntax:
    content: public Uri MakeRelativeUri (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: The URI to compare to the current URI.
    return:
      type: System.Uri
      description: "If the hostname and scheme of this URI instance and <code>uri</code> are the same, then this method returns a relative <xref href=\"System.Uri\"></xref> that, when appended to the current URI instance, yields <code>uri</code>.  \n  \n If the hostname or scheme is different, then this method returns a <xref href=\"System.Uri\"></xref> that represents the <code>uri</code> parameter."
  overload: System.Uri.MakeRelativeUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>uri</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  commentId: M:System.Uri.op_Equality(System.Uri,System.Uri)
  id: op_Equality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: op_Equality(Uri, Uri)
  nameWithType: Uri.op_Equality(Uri, Uri)
  fullName: Uri.op_Equality(Uri, Uri)
  type: Operator
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines whether two <xref href="System.Uri"></xref> instances have the same value.
  remarks: This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are equivalent. <xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.
  example:
  - "This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value. `Address1` and `Address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison. The outcome is written to the console.  \n  \n [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]\n [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]\n [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]"
  syntax:
    content: public static bool op_Equality (Uri uri1, Uri uri2);
    parameters:
    - id: uri1
      type: System.Uri
      description: A <xref href="System.Uri"></xref> instance to compare with <code>uri2</code>.
    - id: uri2
      type: System.Uri
      description: A <xref href="System.Uri"></xref> instance to compare with <code>uri1</code>.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> instances are equivalent; otherwise, `false`.
  overload: System.Uri.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  commentId: M:System.Uri.op_Inequality(System.Uri,System.Uri)
  id: op_Inequality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: op_Inequality(Uri, Uri)
  nameWithType: Uri.op_Inequality(Uri, Uri)
  fullName: Uri.op_Inequality(Uri, Uri)
  type: Operator
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Determines whether two <xref href="System.Uri"></xref> instances do not have the same value.
  remarks: This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are not equivalent. <xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.
  example:
  - "This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value. `Address2` and `Address3` are not the same because `Address3` contains a <xref:System.Uri.Query%2A> that is not found in `Address2`. The outcome is written to the console.  \n  \n [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]\n [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]\n [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]"
  syntax:
    content: public static bool op_Inequality (Uri uri1, Uri uri2);
    parameters:
    - id: uri1
      type: System.Uri
      description: A <xref href="System.Uri"></xref> instance to compare with <code>uri2</code>.
    - id: uri2
      type: System.Uri
      description: A <xref href="System.Uri"></xref> instance to compare with <code>uri1</code>.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the two <xref href="System.Uri"></xref> instances are not equal; otherwise, `false`. If either parameter is `null`, this method returns `true`.
  overload: System.Uri.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.OriginalString
  commentId: P:System.Uri.OriginalString
  id: OriginalString
  parent: System.Uri
  langs:
  - csharp
  name: OriginalString
  nameWithType: Uri.OriginalString
  fullName: Uri.OriginalString
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the original URI string that was passed to the <xref href="System.Uri"></xref> constructor.
  remarks: "If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.  \n  \n The value returned by this property differs from <xref:System.Uri.ToString%2A> and <xref:System.Uri.AbsoluteUri%2A>. <xref:System.Uri.ToString%2A> returns the canonically unescaped form of the URI. <xref:System.Uri.AbsoluteUri%2A> returns the canonically escaped form of the URI.  \n  \n When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, <xref:System.Uri.OriginalString%2A> returns the original non normalized string with Punycode host name if one was used to initialize the <xref:System.Uri> instance. Punycode names contain only ASCII characters and always start with the xn-- prefix.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.  \n  \n When a <xref:System.Uri> object is serialized, the <xref:System.Uri.OriginalString%2A> is not preserved. The serialization process uses the fully escaped and canonicalized <xref:System.Uri.AbsoluteUri%2A> property when serializing. For a <xref:System.Uri> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <xref:System.Uri> object."
  example:
  - "The following example creates a new <xref:System.Uri> instance from a string. It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.  \n  \n [!code-cpp[NCLUriEnhancements#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#3)]\n [!code-csharp[NCLUriEnhancements#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#3)]\n [!code-vb[NCLUriEnhancements#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#3)]"
  syntax:
    content: public string OriginalString { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the exact URI specified when this instance was constructed; otherwise, <xref href="System.String.Empty"></xref>.
  overload: System.Uri.OriginalString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Parse
  commentId: M:System.Uri.Parse
  id: Parse
  parent: System.Uri
  langs:
  - csharp
  name: Parse()
  nameWithType: Uri.Parse()
  fullName: Uri.Parse()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual void Parse ();
    parameters: []
  overload: System.Uri.Parse*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: The Uri passed from the constructor is invalid.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.PathAndQuery
  commentId: P:System.Uri.PathAndQuery
  id: PathAndQuery
  parent: System.Uri
  langs:
  - csharp
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
  fullName: Uri.PathAndQuery
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the <xref href="System.Uri.AbsolutePath"></xref> and <xref href="System.Uri.Query"></xref> properties separated by a question mark (?).
  remarks: "The <xref:System.Uri.PathAndQuery%2A> property contains the absolute path on the server and the query information sent with the request. It is identical to concatenating the <xref:System.Uri.AbsolutePath%2A> and <xref:System.Uri.Query%2A> properties.  \n  \n The <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 3986 and RFC 3987.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  example:
  - "The following example writes the URI path (/catalog/shownew.htm) and query (date= today) information to the console.  \n  \n [!code-cpp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.PathAndQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#1)]"
  syntax:
    content: public string PathAndQuery { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the <xref href="System.Uri.AbsolutePath"></xref> and <xref href="System.Uri.Query"></xref> properties separated by a question mark (?).
  overload: System.Uri.PathAndQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Port
  commentId: P:System.Uri.Port
  id: Port
  parent: System.Uri
  langs:
  - csharp
  name: Port
  nameWithType: Uri.Port
  fullName: Uri.Port
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the port number of this URI.
  remarks: The port number defines the protocol port used for contacting the server referenced in the URI. If a port is not specified as part of the URI, the <xref:System.Uri.Port%2A> property returns the default value for the protocol. If there is no default port number, this property returns -1.
  example:
  - "The following example writes the URI port number to the console. In this case, the value is the default port number for HTTP, port 80.  \n  \n [!code-cpp[Classic Uri.Port Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Port Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Port Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Port Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Port Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Port Example/VB/source.vb#1)]"
  syntax:
    content: public int Port { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value that contains the port number for this URI.
  overload: System.Uri.Port*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Query
  commentId: P:System.Uri.Query
  id: Query
  parent: System.Uri
  langs:
  - csharp
  name: Query
  nameWithType: Uri.Query
  fullName: Uri.Query
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets any query information included in the specified URI.
  remarks: "The <xref:System.Uri.Query%2A> property contains any query information included in the URI. Query information is separated from the path information by a question mark (?) and continues to the end of the URI. The query information returned includes the leading question mark.  \n  \n The query information is escaped according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."
  example:
  - "The following example writes the query ?date= today to the console.  \n  \n [!code-cpp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#2)]\n [!code-csharp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#2)]\n [!code-vb[Classic Uri.PathAndQuery Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#2)]"
  syntax:
    content: public string Query { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains any query information included in the specified URI.
  overload: System.Uri.Query*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Scheme
  commentId: P:System.Uri.Scheme
  id: Scheme
  parent: System.Uri
  langs:
  - csharp
  name: Scheme
  nameWithType: Uri.Scheme
  fullName: Uri.Scheme
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the scheme name for this URI.
  remarks: "The <xref:System.Uri.Scheme%2A> property returns the scheme used to initialize the <xref:System.Uri> instance. This property does not indicate that the scheme used to initialize the <xref:System.Uri> instance was recognized.  \n  \n The following table shows examples of some possible values returned by the <xref:System.Uri.Scheme%2A> property.  \n  \n|Scheme|Description|  \n|------------|-----------------|  \n|file|The resource is a file on the local computer.|  \n|ftp|The resource is accessed through FTP.|  \n|gopher|The resource is accessed through the Gopher protocol.|  \n|http|The resource is accessed through HTTP.|  \n|https|The resource is accessed through SSL-encrypted HTTP.|  \n|ldap|The resource is accessed through the LDAP protocol.|  \n|mailto|The resource is an e-mail address and accessed through the SMTP protocol.|  \n|net.pipe|The resource is accessed through a named pipe.|  \n|net.tcp|The resource is accessed from TCP endpoint.|  \n|news|The resource is accessed through the NNTP protocol.|  \n|nntp|The resource is accessed through the NNTP protocol.|  \n|telnet|The resource is accessed through the TELNET protocol.|  \n|uuid|The resource is accessed through a unique UUID endpoint name for communicating with a service.|"
  example:
  - "The following example writes the scheme name (http) to the console for the http://www.contoso.com/ URI.  \n  \n [!code-cpp[Classic Uri.Scheme Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CPP/source.cpp#1)]\n [!code-csharp[Classic Uri.Scheme Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CS/source.cs#1)]\n [!code-vb[Classic Uri.Scheme Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Scheme Example/VB/source.vb#1)]"
  syntax:
    content: public string Scheme { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the scheme for this URI, converted to lowercase.
  overload: System.Uri.Scheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.SchemeDelimiter
  commentId: F:System.Uri.SchemeDelimiter
  id: SchemeDelimiter
  parent: System.Uri
  langs:
  - csharp
  name: SchemeDelimiter
  nameWithType: Uri.SchemeDelimiter
  fullName: Uri.SchemeDelimiter
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.
  remarks: ''
  example:
  - "The following example creates a string from <xref:System.Uri.UriSchemeHttp>, <xref:System.Uri.SchemeDelimiter>, and an address. A <xref:System.Uri> instance is then created from the string.  \n  \n [!code-cpp[NCLUriExamples#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#17)]\n [!code-csharp[NCLUriExamples#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#17)]\n [!code-vb[NCLUriExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#17)]"
  syntax:
    content: public static readonly string SchemeDelimiter;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Segments
  commentId: P:System.Uri.Segments
  id: Segments
  parent: System.Uri
  langs:
  - csharp
  name: Segments
  nameWithType: Uri.Segments
  fullName: Uri.Segments
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets an array containing the path segments that make up the specified URI.
  remarks: "The <xref:System.Uri.Segments%2A> property returns an array of strings containing the \"segments\" (substrings) that form the URI's absolute path. The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path. Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path. (A URI's absolute path contains everything after the host and port and before the query and fragment.)  \n  \n The following example shows the absolute path and segments for two URIs. The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.  \n  \n Absolute URI  \n http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm  \n  \n Absolute path  \n /Chapters/Chapter1/Sections/Section1.htm  \n  \n Segments  \n /Chapters/Chapter1/Sections/Section1.htm  \n  \n Absolute URI  \n http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO  \n  \n Absolute path  \n /Chapters/Chapter1/Sections/Section1.htm  \n  \n Segments  \n /Chapters/Chapter1/Sections/Section1.htm  \n  \n Note that because the absolute path starts with a '/', the first segment contains it and nothing else."
  example:
  - "The following example creates a <xref:System.Uri> instance with 3 segments and displays the segments on the screen.  \n  \n [!code-cpp[NCLUriExamples#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#5)]\n [!code-csharp[NCLUriExamples#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#5)]\n [!code-vb[NCLUriExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#5)]"
  syntax:
    content: public string[] Segments { get; }
    return:
      type: System.String[]
      description: A <xref href="System.String"></xref> array that contains the path segments that make up the specified URI.
  overload: System.Uri.Segments*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.ToString
  commentId: M:System.Uri.ToString
  id: ToString
  parent: System.Uri
  langs:
  - csharp
  name: ToString()
  nameWithType: Uri.ToString()
  fullName: Uri.ToString()
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets a canonical string representation for the specified <xref href="System.Uri"></xref> instance.
  remarks: "The string returned by this method does not contain port information when the port is the default port for the scheme.  \n  \n> [!NOTE]\n>  The string returned by the <xref:System.Uri.ToString%2A> method may contain control characters, which can corrupt the state of a console application. You can use the <xref:System.Uri.GetComponents%2A> method with the <xref:System.UriFormat?displayProperty=fullName> format to remove control characters from the returned string."
  example:
  - "The following example creates a new <xref:System.Uri> instance from a string. It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.  \n  \n [!code-cpp[NCLUriExamples#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#7)]\n [!code-csharp[NCLUriExamples#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#7)]\n [!code-vb[NCLUriExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#7)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'A <xref href="System.String"></xref> instance that contains the unescaped canonical representation of the <xref href="System.Uri"></xref> instance. All characters are unescaped except #, ?, and %.'
  overload: System.Uri.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  id: TryCreate(System.String,System.UriKind,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(String, UriKind, Uri)
  nameWithType: Uri.TryCreate(String, UriKind, Uri)
  fullName: Uri.TryCreate(String, UriKind, Uri)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified <xref href="System.String"></xref> instance and a <xref href="System.UriKind"></xref>.
  remarks: If this method returns `true`, the new <xref:System.Uri> is in `result`.
  syntax:
    content: public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);
    parameters:
    - id: uriString
      type: System.String
      description: The <xref href="System.String"></xref> representing the <xref href="System.Uri"></xref>.
    - id: uriKind
      type: System.UriKind
      description: The type of the Uri.
    - id: result
      type: System.Uri
      description: When this method returns, contains the constructed <xref href="System.Uri"></xref>.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> was successfully created; otherwise, `false`.
  overload: System.Uri.TryCreate*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  id: TryCreate(System.Uri,System.String,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(Uri, String, Uri)
  nameWithType: Uri.TryCreate(Uri, String, Uri)
  fullName: Uri.TryCreate(Uri, String, Uri)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified base and relative <xref href="System.String"></xref> instances.
  remarks: If this method returns `true`, the new <xref:System.Uri> is in `result`.
  syntax:
    content: public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);
    parameters:
    - id: baseUri
      type: System.Uri
      description: The base <xref href="System.Uri"></xref>.
    - id: relativeUri
      type: System.String
      description: The relative <xref href="System.Uri"></xref>, represented as a <xref href="System.String"></xref>, to add to the base <xref href="System.Uri"></xref>.
    - id: result
      type: System.Uri
      description: When this method returns, contains a <xref href="System.Uri"></xref> constructed from <code>baseUri</code> and <code>relativeUri</code>. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> was successfully created; otherwise, `false`.
  overload: System.Uri.TryCreate*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  id: TryCreate(System.Uri,System.Uri,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(Uri, Uri, Uri)
  nameWithType: Uri.TryCreate(Uri, Uri, Uri)
  fullName: Uri.TryCreate(Uri, Uri, Uri)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified base and relative <xref href="System.Uri"></xref> instances.
  remarks: "If this method returns `true`, the new <xref:System.Uri> is in `result`.  \n  \n This method constructs the URI, puts it in canonical form, and validates it. If an unhandled exception occurs, this method catches it. If you want to create a <xref:System.Uri> and get exceptions use one of the <xref:System.Uri.%23ctor%2A> constructors."
  syntax:
    content: public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);
    parameters:
    - id: baseUri
      type: System.Uri
      description: The base <xref href="System.Uri"></xref>.
    - id: relativeUri
      type: System.Uri
      description: The relative <xref href="System.Uri"></xref> to add to the base <xref href="System.Uri"></xref>.
    - id: result
      type: System.Uri
      description: When this method returns, contains a <xref href="System.Uri"></xref> constructed from <code>baseUri</code> and <code>relativeUri</code>. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <xref href="System.Uri"></xref> was successfully created; otherwise, `false`.
  overload: System.Uri.TryCreate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>baseUri</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.Unescape(System.String)
  commentId: M:System.Uri.Unescape(System.String)
  id: Unescape(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: Unescape(String)
  nameWithType: Uri.Unescape(String)
  fullName: Uri.Unescape(String)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the specified string by replacing any escape sequences with their unescaped representation.
  syntax:
    content: >-
      [System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")]

      protected virtual string Unescape (string path);
    parameters:
    - id: path
      type: System.String
      description: The <xref href="System.String"></xref> to convert.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the unescaped value of the <code>path</code> parameter.
  overload: System.Uri.Unescape*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UnescapeDataString(System.String)
  commentId: M:System.Uri.UnescapeDataString(System.String)
  id: UnescapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: UnescapeDataString(String)
  nameWithType: Uri.UnescapeDataString(String)
  fullName: Uri.UnescapeDataString(String)
  type: Method
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Converts a string to its unescaped representation.
  remarks: "You should use this method with care. Unescaping a string that has been previously unescaped can lead to ambiguities and errors.  \n  \n Many Web browsers escape spaces inside of URIs into plus (\"+\") characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes."
  example:
  - "The following code example unescapes a URI, and then converts any plus characters (\"+\") into spaces.  \n  \n [!code-csharp[NCLUriExamples#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#19)]"
  syntax:
    content: public static string UnescapeDataString (string stringToUnescape);
    parameters:
    - id: stringToUnescape
      type: System.String
      description: The string to unescape.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the unescaped representation of <code>stringToUnescape</code>.
  overload: System.Uri.UnescapeDataString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stringToUnescape</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeFile
  commentId: F:System.Uri.UriSchemeFile
  id: UriSchemeFile
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeFile
  nameWithType: Uri.UriSchemeFile
  fullName: Uri.UriSchemeFile
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is a pointer to a file. This field is read-only.
  remarks: In .NET Framework version 1.1, a "`file:///path`" URI was translated to "`file:/path`". This has been corrected for version 2.0.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFile>.  \n  \n [!code-cpp[NCLUriExamples#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#10)]\n [!code-csharp[NCLUriExamples#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#10)]\n [!code-vb[NCLUriExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#10)]"
  syntax:
    content: public static readonly string UriSchemeFile;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeFtp
  commentId: F:System.Uri.UriSchemeFtp
  id: UriSchemeFtp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeFtp
  nameWithType: Uri.UriSchemeFtp
  fullName: Uri.UriSchemeFtp
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFtp>.  \n  \n [!code-cpp[NCLUriExamples#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#15)]\n [!code-csharp[NCLUriExamples#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#15)]\n [!code-vb[NCLUriExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#15)]"
  syntax:
    content: public static readonly string UriSchemeFtp;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeGopher
  commentId: F:System.Uri.UriSchemeGopher
  id: UriSchemeGopher
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeGopher
  nameWithType: Uri.UriSchemeGopher
  fullName: Uri.UriSchemeGopher
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the Gopher protocol. This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeGopher>.  \n  \n [!code-cpp[NCLUriExamples#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#14)]\n [!code-csharp[NCLUriExamples#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#14)]\n [!code-vb[NCLUriExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#14)]"
  syntax:
    content: public static readonly string UriSchemeGopher;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeHttp
  commentId: F:System.Uri.UriSchemeHttp
  id: UriSchemeHttp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeHttp
  nameWithType: Uri.UriSchemeHttp
  fullName: Uri.UriSchemeHttp
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttp>.  \n  \n [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]\n [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]\n [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]"
  syntax:
    content: public static readonly string UriSchemeHttp;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeHttps
  commentId: F:System.Uri.UriSchemeHttps
  id: UriSchemeHttps
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeHttps
  nameWithType: Uri.UriSchemeHttps
  fullName: Uri.UriSchemeHttps
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttps>.  \n  \n [!code-cpp[NCLUriExamples#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#16)]\n [!code-csharp[NCLUriExamples#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#16)]\n [!code-vb[NCLUriExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#16)]"
  syntax:
    content: public static readonly string UriSchemeHttps;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeMailto
  commentId: F:System.Uri.UriSchemeMailto
  id: UriSchemeMailto
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeMailto
  nameWithType: Uri.UriSchemeMailto
  fullName: Uri.UriSchemeMailto
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeMailto>.  \n  \n [!code-cpp[NCLUriExamples#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#11)]\n [!code-csharp[NCLUriExamples#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#11)]\n [!code-vb[NCLUriExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#11)]"
  syntax:
    content: public static readonly string UriSchemeMailto;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeNetPipe
  commentId: F:System.Uri.UriSchemeNetPipe
  id: UriSchemeNetPipe
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNetPipe
  nameWithType: Uri.UriSchemeNetPipe
  fullName: Uri.UriSchemeNetPipe
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNetPipe;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeNetTcp
  commentId: F:System.Uri.UriSchemeNetTcp
  id: UriSchemeNetTcp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNetTcp
  nameWithType: Uri.UriSchemeNetTcp
  fullName: Uri.UriSchemeNetTcp
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNetTcp;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeNews
  commentId: F:System.Uri.UriSchemeNews
  id: UriSchemeNews
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNews
  nameWithType: Uri.UriSchemeNews
  fullName: Uri.UriSchemeNews
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNews>.  \n  \n [!code-cpp[NCLUriExamples#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#12)]\n [!code-csharp[NCLUriExamples#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#12)]\n [!code-vb[NCLUriExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#12)]"
  syntax:
    content: public static readonly string UriSchemeNews;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UriSchemeNntp
  commentId: F:System.Uri.UriSchemeNntp
  id: UriSchemeNntp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNntp
  nameWithType: Uri.UriSchemeNntp
  fullName: Uri.UriSchemeNntp
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
  remarks: The NNTP <xref:System.Uri> parsing errors in .NET Framework version 1.1 have been corrected.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNntp>.  \n  \n [!code-cpp[NCLUriExamples#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#13)]\n [!code-csharp[NCLUriExamples#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#13)]\n [!code-vb[NCLUriExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#13)]"
  syntax:
    content: public static readonly string UriSchemeNntp;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UserEscaped
  commentId: P:System.Uri.UserEscaped
  id: UserEscaped
  parent: System.Uri
  langs:
  - csharp
  name: UserEscaped
  nameWithType: Uri.UserEscaped
  fullName: Uri.UserEscaped
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Indicates that the URI string was completely escaped before the <xref href="System.Uri"></xref> instance was created.
  remarks: The <xref:System.Uri.UserEscaped%2A> property is set to `true` to indicate that the string used to create the <xref:System.Uri> instance was completely escaped before it was passed to the constructor; that is, the `dontEscape` parameter of the constructor call was set to `true`.
  example:
  - "The following example creates a <xref:System.Uri> instance and determines whether it was fully escaped when it was created.  \n  \n [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]\n [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]\n [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]"
  syntax:
    content: public bool UserEscaped { get; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that is `true` if the <code>dontEscape</code> parameter was set to `true` when the <xref href="System.Uri"></xref> instance was created; otherwise, `false`.
  overload: System.Uri.UserEscaped*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.UserInfo
  commentId: P:System.Uri.UserInfo
  id: UserInfo
  parent: System.Uri
  langs:
  - csharp
  name: UserInfo
  nameWithType: Uri.UserInfo
  fullName: Uri.UserInfo
  type: Property
  assemblies:
  - System.Runtime
  - System
  - netstandard
  namespace: System
  summary: Gets the user name, password, or other user-specific information associated with the specified URI.
  remarks: The value returned by this property is usually in the format "userName:password".
  example:
  - "The following example creates a <xref:System.Uri> instance and writes the user information to the console.  \n  \n [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]\n [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]\n [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]"
  syntax:
    content: public string UserInfo { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the user information associated with the URI. The returned value does not include the '@' character reserved for delimiting the user information part of the URI.
  overload: System.Uri.UserInfo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This instance represents a relative URI, and this property is valid only for absolute URIs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Uri
  langs:
  - csharp
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Uri.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Uri.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the data needed to serialize the current instance.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: A <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object containing the information required to serialize the <xref href="System.Uri"></xref>.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: A <xref href="System.Runtime.Serialization.StreamingContext"></xref> object containing the source and destination of the serialized stream associated with the <xref href="System.Uri"></xref>.
  overload: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
  ms.technology:
  - dotnet-standard
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.UriFormatException
  parent: System
  isExternal: false
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Uri.#ctor(System.String)
  parent: System.Uri
  isExternal: false
  name: Uri(String)
  nameWithType: Uri.Uri(String)
  fullName: Uri.Uri(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: Uri(SerializationInfo, StreamingContext)
  nameWithType: Uri.Uri(SerializationInfo, StreamingContext)
  fullName: Uri.Uri(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Uri.#ctor(System.String,System.Boolean)
  parent: System.Uri
  isExternal: false
  name: Uri(String, Boolean)
  nameWithType: Uri.Uri(String, Boolean)
  fullName: Uri.Uri(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri.#ctor(System.String,System.UriKind)
  parent: System.Uri
  isExternal: false
  name: Uri(String, UriKind)
  nameWithType: Uri.Uri(String, UriKind)
  fullName: Uri.Uri(String, UriKind)
- uid: System.UriKind
  parent: System
  isExternal: false
  name: UriKind
  nameWithType: UriKind
  fullName: System.UriKind
- uid: System.Uri.#ctor(System.Uri,System.String)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri, String)
  nameWithType: Uri.Uri(Uri, String)
  fullName: Uri.Uri(Uri, String)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri, Uri)
  nameWithType: Uri.Uri(Uri, Uri)
  fullName: Uri.Uri(Uri, Uri)
- uid: System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri, String, Boolean)
  nameWithType: Uri.Uri(Uri, String, Boolean)
  fullName: Uri.Uri(Uri, String, Boolean)
- uid: System.Uri.AbsolutePath
  parent: System.Uri
  isExternal: false
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
  fullName: Uri.AbsolutePath
- uid: System.Uri.AbsoluteUri
  parent: System.Uri
  isExternal: false
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
  fullName: Uri.AbsoluteUri
- uid: System.Uri.Authority
  parent: System.Uri
  isExternal: false
  name: Authority
  nameWithType: Uri.Authority
  fullName: Uri.Authority
- uid: System.Uri.Canonicalize
  parent: System.Uri
  isExternal: false
  name: Canonicalize()
  nameWithType: Uri.Canonicalize()
  fullName: Uri.Canonicalize()
- uid: System.Uri.CheckHostName(System.String)
  parent: System.Uri
  isExternal: false
  name: CheckHostName(String)
  nameWithType: Uri.CheckHostName(String)
  fullName: Uri.CheckHostName(String)
- uid: System.UriHostNameType
  parent: System
  isExternal: false
  name: UriHostNameType
  nameWithType: UriHostNameType
  fullName: System.UriHostNameType
- uid: System.Uri.CheckSchemeName(System.String)
  parent: System.Uri
  isExternal: false
  name: CheckSchemeName(String)
  nameWithType: Uri.CheckSchemeName(String)
  fullName: Uri.CheckSchemeName(String)
- uid: System.Uri.CheckSecurity
  parent: System.Uri
  isExternal: false
  name: CheckSecurity()
  nameWithType: Uri.CheckSecurity()
  fullName: Uri.CheckSecurity()
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  parent: System.Uri
  isExternal: false
  name: Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  nameWithType: Uri.Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  fullName: Uri.Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriComponents
  parent: System
  isExternal: false
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: false
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.StringComparison
  parent: System
  isExternal: false
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Uri.DnsSafeHost
  parent: System.Uri
  isExternal: false
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
  fullName: Uri.DnsSafeHost
- uid: System.Uri.Equals(System.Object)
  parent: System.Uri
  isExternal: false
  name: Equals(Object)
  nameWithType: Uri.Equals(Object)
  fullName: Uri.Equals(Object)
- uid: System.Uri.Escape
  parent: System.Uri
  isExternal: false
  name: Escape()
  nameWithType: Uri.Escape()
  fullName: Uri.Escape()
- uid: System.Uri.EscapeDataString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeDataString(String)
  nameWithType: Uri.EscapeDataString(String)
  fullName: Uri.EscapeDataString(String)
- uid: System.Uri.EscapeString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeString(String)
  nameWithType: Uri.EscapeString(String)
  fullName: Uri.EscapeString(String)
- uid: System.Uri.EscapeUriString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeUriString(String)
  nameWithType: Uri.EscapeUriString(String)
  fullName: Uri.EscapeUriString(String)
- uid: System.Uri.Fragment
  parent: System.Uri
  isExternal: false
  name: Fragment
  nameWithType: Uri.Fragment
  fullName: Uri.Fragment
- uid: System.Uri.FromHex(System.Char)
  parent: System.Uri
  isExternal: false
  name: FromHex(Char)
  nameWithType: Uri.FromHex(Char)
  fullName: Uri.FromHex(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  parent: System.Uri
  isExternal: false
  name: GetComponents(UriComponents, UriFormat)
  nameWithType: Uri.GetComponents(UriComponents, UriFormat)
  fullName: Uri.GetComponents(UriComponents, UriFormat)
- uid: System.Uri.GetHashCode
  parent: System.Uri
  isExternal: false
  name: GetHashCode()
  nameWithType: Uri.GetHashCode()
  fullName: Uri.GetHashCode()
- uid: System.Uri.GetLeftPart(System.UriPartial)
  parent: System.Uri
  isExternal: false
  name: GetLeftPart(UriPartial)
  nameWithType: Uri.GetLeftPart(UriPartial)
  fullName: Uri.GetLeftPart(UriPartial)
- uid: System.UriPartial
  parent: System
  isExternal: false
  name: UriPartial
  nameWithType: UriPartial
  fullName: System.UriPartial
- uid: System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Uri.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Uri.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Uri.HexEscape(System.Char)
  parent: System.Uri
  isExternal: false
  name: HexEscape(Char)
  nameWithType: Uri.HexEscape(Char)
  fullName: Uri.HexEscape(Char)
- uid: System.Uri.HexUnescape(System.String,System.Int32@)
  parent: System.Uri
  isExternal: false
  name: HexUnescape(String, Int32)
  nameWithType: Uri.HexUnescape(String, Int32)
  fullName: Uri.HexUnescape(String, Int32)
- uid: System.Uri.Host
  parent: System.Uri
  isExternal: false
  name: Host
  nameWithType: Uri.Host
  fullName: Uri.Host
- uid: System.Uri.HostNameType
  parent: System.Uri
  isExternal: false
  name: HostNameType
  nameWithType: Uri.HostNameType
  fullName: Uri.HostNameType
- uid: System.Uri.IdnHost
  parent: System.Uri
  isExternal: false
  name: IdnHost
  nameWithType: Uri.IdnHost
  fullName: Uri.IdnHost
- uid: System.Uri.IsAbsoluteUri
  parent: System.Uri
  isExternal: false
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
  fullName: Uri.IsAbsoluteUri
- uid: System.Uri.IsBadFileSystemCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsBadFileSystemCharacter(Char)
  nameWithType: Uri.IsBadFileSystemCharacter(Char)
  fullName: Uri.IsBadFileSystemCharacter(Char)
- uid: System.Uri.IsBaseOf(System.Uri)
  parent: System.Uri
  isExternal: false
  name: IsBaseOf(Uri)
  nameWithType: Uri.IsBaseOf(Uri)
  fullName: Uri.IsBaseOf(Uri)
- uid: System.Uri.IsDefaultPort
  parent: System.Uri
  isExternal: false
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
  fullName: Uri.IsDefaultPort
- uid: System.Uri.IsExcludedCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsExcludedCharacter(Char)
  nameWithType: Uri.IsExcludedCharacter(Char)
  fullName: Uri.IsExcludedCharacter(Char)
- uid: System.Uri.IsFile
  parent: System.Uri
  isExternal: false
  name: IsFile
  nameWithType: Uri.IsFile
  fullName: Uri.IsFile
- uid: System.Uri.IsHexDigit(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsHexDigit(Char)
  nameWithType: Uri.IsHexDigit(Char)
  fullName: Uri.IsHexDigit(Char)
- uid: System.Uri.IsHexEncoding(System.String,System.Int32)
  parent: System.Uri
  isExternal: false
  name: IsHexEncoding(String, Int32)
  nameWithType: Uri.IsHexEncoding(String, Int32)
  fullName: Uri.IsHexEncoding(String, Int32)
- uid: System.Uri.IsLoopback
  parent: System.Uri
  isExternal: false
  name: IsLoopback
  nameWithType: Uri.IsLoopback
  fullName: Uri.IsLoopback
- uid: System.Uri.IsReservedCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsReservedCharacter(Char)
  nameWithType: Uri.IsReservedCharacter(Char)
  fullName: Uri.IsReservedCharacter(Char)
- uid: System.Uri.IsUnc
  parent: System.Uri
  isExternal: false
  name: IsUnc
  nameWithType: Uri.IsUnc
  fullName: Uri.IsUnc
- uid: System.Uri.IsWellFormedOriginalString
  parent: System.Uri
  isExternal: false
  name: IsWellFormedOriginalString()
  nameWithType: Uri.IsWellFormedOriginalString()
  fullName: Uri.IsWellFormedOriginalString()
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  parent: System.Uri
  isExternal: false
  name: IsWellFormedUriString(String, UriKind)
  nameWithType: Uri.IsWellFormedUriString(String, UriKind)
  fullName: Uri.IsWellFormedUriString(String, UriKind)
- uid: System.Uri.LocalPath
  parent: System.Uri
  isExternal: false
  name: LocalPath
  nameWithType: Uri.LocalPath
  fullName: Uri.LocalPath
- uid: System.Uri.MakeRelative(System.Uri)
  parent: System.Uri
  isExternal: false
  name: MakeRelative(Uri)
  nameWithType: Uri.MakeRelative(Uri)
  fullName: Uri.MakeRelative(Uri)
- uid: System.Uri.MakeRelativeUri(System.Uri)
  parent: System.Uri
  isExternal: false
  name: MakeRelativeUri(Uri)
  nameWithType: Uri.MakeRelativeUri(Uri)
  fullName: Uri.MakeRelativeUri(Uri)
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: op_Equality(Uri, Uri)
  nameWithType: Uri.op_Equality(Uri, Uri)
  fullName: Uri.op_Equality(Uri, Uri)
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: op_Inequality(Uri, Uri)
  nameWithType: Uri.op_Inequality(Uri, Uri)
  fullName: Uri.op_Inequality(Uri, Uri)
- uid: System.Uri.OriginalString
  parent: System.Uri
  isExternal: false
  name: OriginalString
  nameWithType: Uri.OriginalString
  fullName: Uri.OriginalString
- uid: System.Uri.Parse
  parent: System.Uri
  isExternal: false
  name: Parse()
  nameWithType: Uri.Parse()
  fullName: Uri.Parse()
- uid: System.Uri.PathAndQuery
  parent: System.Uri
  isExternal: false
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
  fullName: Uri.PathAndQuery
- uid: System.Uri.Port
  parent: System.Uri
  isExternal: false
  name: Port
  nameWithType: Uri.Port
  fullName: Uri.Port
- uid: System.Uri.Query
  parent: System.Uri
  isExternal: false
  name: Query
  nameWithType: Uri.Query
  fullName: Uri.Query
- uid: System.Uri.Scheme
  parent: System.Uri
  isExternal: false
  name: Scheme
  nameWithType: Uri.Scheme
  fullName: Uri.Scheme
- uid: System.Uri.SchemeDelimiter
  parent: System.Uri
  isExternal: false
  name: SchemeDelimiter
  nameWithType: Uri.SchemeDelimiter
  fullName: Uri.SchemeDelimiter
- uid: System.Uri.Segments
  parent: System.Uri
  isExternal: false
  name: Segments
  nameWithType: Uri.Segments
  fullName: Uri.Segments
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Uri.ToString
  parent: System.Uri
  isExternal: false
  name: ToString()
  nameWithType: Uri.ToString()
  fullName: Uri.ToString()
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(String, UriKind, Uri)
  nameWithType: Uri.TryCreate(String, UriKind, Uri)
  fullName: Uri.TryCreate(String, UriKind, Uri)
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(Uri, String, Uri)
  nameWithType: Uri.TryCreate(Uri, String, Uri)
  fullName: Uri.TryCreate(Uri, String, Uri)
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(Uri, Uri, Uri)
  nameWithType: Uri.TryCreate(Uri, Uri, Uri)
  fullName: Uri.TryCreate(Uri, Uri, Uri)
- uid: System.Uri.Unescape(System.String)
  parent: System.Uri
  isExternal: false
  name: Unescape(String)
  nameWithType: Uri.Unescape(String)
  fullName: Uri.Unescape(String)
- uid: System.Uri.UnescapeDataString(System.String)
  parent: System.Uri
  isExternal: false
  name: UnescapeDataString(String)
  nameWithType: Uri.UnescapeDataString(String)
  fullName: Uri.UnescapeDataString(String)
- uid: System.Uri.UriSchemeFile
  parent: System.Uri
  isExternal: false
  name: UriSchemeFile
  nameWithType: Uri.UriSchemeFile
  fullName: Uri.UriSchemeFile
- uid: System.Uri.UriSchemeFtp
  parent: System.Uri
  isExternal: false
  name: UriSchemeFtp
  nameWithType: Uri.UriSchemeFtp
  fullName: Uri.UriSchemeFtp
- uid: System.Uri.UriSchemeGopher
  parent: System.Uri
  isExternal: false
  name: UriSchemeGopher
  nameWithType: Uri.UriSchemeGopher
  fullName: Uri.UriSchemeGopher
- uid: System.Uri.UriSchemeHttp
  parent: System.Uri
  isExternal: false
  name: UriSchemeHttp
  nameWithType: Uri.UriSchemeHttp
  fullName: Uri.UriSchemeHttp
- uid: System.Uri.UriSchemeHttps
  parent: System.Uri
  isExternal: false
  name: UriSchemeHttps
  nameWithType: Uri.UriSchemeHttps
  fullName: Uri.UriSchemeHttps
- uid: System.Uri.UriSchemeMailto
  parent: System.Uri
  isExternal: false
  name: UriSchemeMailto
  nameWithType: Uri.UriSchemeMailto
  fullName: Uri.UriSchemeMailto
- uid: System.Uri.UriSchemeNetPipe
  parent: System.Uri
  isExternal: false
  name: UriSchemeNetPipe
  nameWithType: Uri.UriSchemeNetPipe
  fullName: Uri.UriSchemeNetPipe
- uid: System.Uri.UriSchemeNetTcp
  parent: System.Uri
  isExternal: false
  name: UriSchemeNetTcp
  nameWithType: Uri.UriSchemeNetTcp
  fullName: Uri.UriSchemeNetTcp
- uid: System.Uri.UriSchemeNews
  parent: System.Uri
  isExternal: false
  name: UriSchemeNews
  nameWithType: Uri.UriSchemeNews
  fullName: Uri.UriSchemeNews
- uid: System.Uri.UriSchemeNntp
  parent: System.Uri
  isExternal: false
  name: UriSchemeNntp
  nameWithType: Uri.UriSchemeNntp
  fullName: Uri.UriSchemeNntp
- uid: System.Uri.UserEscaped
  parent: System.Uri
  isExternal: false
  name: UserEscaped
  nameWithType: Uri.UserEscaped
  fullName: Uri.UserEscaped
- uid: System.Uri.UserInfo
  parent: System.Uri
  isExternal: false
  name: UserInfo
  nameWithType: Uri.UserInfo
  fullName: Uri.UserInfo
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Uri.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Uri.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Uri.#ctor*
  parent: System.Uri
  isExternal: false
  name: Uri
  nameWithType: Uri.Uri
  fullName: Uri.Uri
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.AbsolutePath*
  parent: System.Uri
  isExternal: false
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
  fullName: Uri.AbsolutePath
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.AbsoluteUri*
  parent: System.Uri
  isExternal: false
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
  fullName: Uri.AbsoluteUri
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Authority*
  parent: System.Uri
  isExternal: false
  name: Authority
  nameWithType: Uri.Authority
  fullName: Uri.Authority
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Canonicalize*
  parent: System.Uri
  isExternal: false
  name: Canonicalize
  nameWithType: Uri.Canonicalize
  fullName: Uri.Canonicalize
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.CheckHostName*
  parent: System.Uri
  isExternal: false
  name: CheckHostName
  nameWithType: Uri.CheckHostName
  fullName: Uri.CheckHostName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.CheckSchemeName*
  parent: System.Uri
  isExternal: false
  name: CheckSchemeName
  nameWithType: Uri.CheckSchemeName
  fullName: Uri.CheckSchemeName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.CheckSecurity*
  parent: System.Uri
  isExternal: false
  name: CheckSecurity
  nameWithType: Uri.CheckSecurity
  fullName: Uri.CheckSecurity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Compare*
  parent: System.Uri
  isExternal: false
  name: Compare
  nameWithType: Uri.Compare
  fullName: Uri.Compare
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.DnsSafeHost*
  parent: System.Uri
  isExternal: false
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
  fullName: Uri.DnsSafeHost
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Equals*
  parent: System.Uri
  isExternal: false
  name: Equals
  nameWithType: Uri.Equals
  fullName: Uri.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Escape*
  parent: System.Uri
  isExternal: false
  name: Escape
  nameWithType: Uri.Escape
  fullName: Uri.Escape
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.EscapeDataString*
  parent: System.Uri
  isExternal: false
  name: EscapeDataString
  nameWithType: Uri.EscapeDataString
  fullName: Uri.EscapeDataString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.EscapeString*
  parent: System.Uri
  isExternal: false
  name: EscapeString
  nameWithType: Uri.EscapeString
  fullName: Uri.EscapeString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.EscapeUriString*
  parent: System.Uri
  isExternal: false
  name: EscapeUriString
  nameWithType: Uri.EscapeUriString
  fullName: Uri.EscapeUriString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Fragment*
  parent: System.Uri
  isExternal: false
  name: Fragment
  nameWithType: Uri.Fragment
  fullName: Uri.Fragment
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.FromHex*
  parent: System.Uri
  isExternal: false
  name: FromHex
  nameWithType: Uri.FromHex
  fullName: Uri.FromHex
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.GetComponents*
  parent: System.Uri
  isExternal: false
  name: GetComponents
  nameWithType: Uri.GetComponents
  fullName: Uri.GetComponents
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.GetHashCode*
  parent: System.Uri
  isExternal: false
  name: GetHashCode
  nameWithType: Uri.GetHashCode
  fullName: Uri.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.GetLeftPart*
  parent: System.Uri
  isExternal: false
  name: GetLeftPart
  nameWithType: Uri.GetLeftPart
  fullName: Uri.GetLeftPart
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.GetObjectData*
  parent: System.Uri
  isExternal: false
  name: GetObjectData
  nameWithType: Uri.GetObjectData
  fullName: Uri.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.HexEscape*
  parent: System.Uri
  isExternal: false
  name: HexEscape
  nameWithType: Uri.HexEscape
  fullName: Uri.HexEscape
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.HexUnescape*
  parent: System.Uri
  isExternal: false
  name: HexUnescape
  nameWithType: Uri.HexUnescape
  fullName: Uri.HexUnescape
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Host*
  parent: System.Uri
  isExternal: false
  name: Host
  nameWithType: Uri.Host
  fullName: Uri.Host
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.HostNameType*
  parent: System.Uri
  isExternal: false
  name: HostNameType
  nameWithType: Uri.HostNameType
  fullName: Uri.HostNameType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IdnHost*
  parent: System.Uri
  isExternal: false
  name: IdnHost
  nameWithType: Uri.IdnHost
  fullName: Uri.IdnHost
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsAbsoluteUri*
  parent: System.Uri
  isExternal: false
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
  fullName: Uri.IsAbsoluteUri
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsBadFileSystemCharacter*
  parent: System.Uri
  isExternal: false
  name: IsBadFileSystemCharacter
  nameWithType: Uri.IsBadFileSystemCharacter
  fullName: Uri.IsBadFileSystemCharacter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsBaseOf*
  parent: System.Uri
  isExternal: false
  name: IsBaseOf
  nameWithType: Uri.IsBaseOf
  fullName: Uri.IsBaseOf
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsDefaultPort*
  parent: System.Uri
  isExternal: false
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
  fullName: Uri.IsDefaultPort
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsExcludedCharacter*
  parent: System.Uri
  isExternal: false
  name: IsExcludedCharacter
  nameWithType: Uri.IsExcludedCharacter
  fullName: Uri.IsExcludedCharacter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsFile*
  parent: System.Uri
  isExternal: false
  name: IsFile
  nameWithType: Uri.IsFile
  fullName: Uri.IsFile
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsHexDigit*
  parent: System.Uri
  isExternal: false
  name: IsHexDigit
  nameWithType: Uri.IsHexDigit
  fullName: Uri.IsHexDigit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsHexEncoding*
  parent: System.Uri
  isExternal: false
  name: IsHexEncoding
  nameWithType: Uri.IsHexEncoding
  fullName: Uri.IsHexEncoding
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsLoopback*
  parent: System.Uri
  isExternal: false
  name: IsLoopback
  nameWithType: Uri.IsLoopback
  fullName: Uri.IsLoopback
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsReservedCharacter*
  parent: System.Uri
  isExternal: false
  name: IsReservedCharacter
  nameWithType: Uri.IsReservedCharacter
  fullName: Uri.IsReservedCharacter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsUnc*
  parent: System.Uri
  isExternal: false
  name: IsUnc
  nameWithType: Uri.IsUnc
  fullName: Uri.IsUnc
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsWellFormedOriginalString*
  parent: System.Uri
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: Uri.IsWellFormedOriginalString
  fullName: Uri.IsWellFormedOriginalString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.IsWellFormedUriString*
  parent: System.Uri
  isExternal: false
  name: IsWellFormedUriString
  nameWithType: Uri.IsWellFormedUriString
  fullName: Uri.IsWellFormedUriString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.LocalPath*
  parent: System.Uri
  isExternal: false
  name: LocalPath
  nameWithType: Uri.LocalPath
  fullName: Uri.LocalPath
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.MakeRelative*
  parent: System.Uri
  isExternal: false
  name: MakeRelative
  nameWithType: Uri.MakeRelative
  fullName: Uri.MakeRelative
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.MakeRelativeUri*
  parent: System.Uri
  isExternal: false
  name: MakeRelativeUri
  nameWithType: Uri.MakeRelativeUri
  fullName: Uri.MakeRelativeUri
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.op_Equality*
  parent: System.Uri
  isExternal: false
  name: op_Equality
  nameWithType: Uri.op_Equality
  fullName: Uri.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.op_Inequality*
  parent: System.Uri
  isExternal: false
  name: op_Inequality
  nameWithType: Uri.op_Inequality
  fullName: Uri.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.OriginalString*
  parent: System.Uri
  isExternal: false
  name: OriginalString
  nameWithType: Uri.OriginalString
  fullName: Uri.OriginalString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Parse*
  parent: System.Uri
  isExternal: false
  name: Parse
  nameWithType: Uri.Parse
  fullName: Uri.Parse
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.PathAndQuery*
  parent: System.Uri
  isExternal: false
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
  fullName: Uri.PathAndQuery
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Port*
  parent: System.Uri
  isExternal: false
  name: Port
  nameWithType: Uri.Port
  fullName: Uri.Port
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Query*
  parent: System.Uri
  isExternal: false
  name: Query
  nameWithType: Uri.Query
  fullName: Uri.Query
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Scheme*
  parent: System.Uri
  isExternal: false
  name: Scheme
  nameWithType: Uri.Scheme
  fullName: Uri.Scheme
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Segments*
  parent: System.Uri
  isExternal: false
  name: Segments
  nameWithType: Uri.Segments
  fullName: Uri.Segments
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.ToString*
  parent: System.Uri
  isExternal: false
  name: ToString
  nameWithType: Uri.ToString
  fullName: Uri.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.TryCreate*
  parent: System.Uri
  isExternal: false
  name: TryCreate
  nameWithType: Uri.TryCreate
  fullName: Uri.TryCreate
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.Unescape*
  parent: System.Uri
  isExternal: false
  name: Unescape
  nameWithType: Uri.Unescape
  fullName: Uri.Unescape
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.UnescapeDataString*
  parent: System.Uri
  isExternal: false
  name: UnescapeDataString
  nameWithType: Uri.UnescapeDataString
  fullName: Uri.UnescapeDataString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.UserEscaped*
  parent: System.Uri
  isExternal: false
  name: UserEscaped
  nameWithType: Uri.UserEscaped
  fullName: Uri.UserEscaped
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.UserInfo*
  parent: System.Uri
  isExternal: false
  name: UserInfo
  nameWithType: Uri.UserInfo
  fullName: Uri.UserInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Uri
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Uri.System.Runtime.Serialization.ISerializable.GetObjectData
  fullName: Uri.System.Runtime.Serialization.ISerializable.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Uri.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
