{"nodes":[{"content":"Defines an <xref href=\"System.Windows.Input.ICommand\"></xref> that is routed through the element tree and contains a text property.","nodes":[{"pos":[0,131],"content":"Defines an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand\"&gt;&lt;/xref&gt;</ph> that is routed through the element tree and contains a text property.","source":"Defines an <xref href=\"System.Windows.Input.ICommand\"></xref> that is routed through the element tree and contains a text property."}],"pos":[698,830],"yaml":true},{"content":"The difference between a <xref:System.Windows.Input.RoutedUICommand> and <xref:System.Windows.Input.RoutedCommand> is that <xref:System.Windows.Input.RoutedUICommand> includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property.  \n  \n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.  \n  \n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.  \n  \n<a name=\"xamlAttributeUsage_RoutedUICommand\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"predefinedCommandName\"/>  \n- or -  \n<object property=\"predefinedClassName.predefinedCommandName\"/>  \n- or -  \n<object property=\"{x:Static customClassName.customCommandName}\"/>  \n  \n```  \n  \n<a name=\"xamlValues_RoutedUICommand\"></a>   \n## XAML Values  \n *predefinedClassName*  \n One of the predefined command classes.  \n  \n *predefinedCommandName*  \n One of the predefined commands.  \n  \n *prefix*  \n The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  \n  \n *customClassName*  \n A custom class that contains the custom command.  \n  \n *customCommandName*  \n A custom command.","nodes":[{"pos":[0,239],"content":"The difference between a <xref:System.Windows.Input.RoutedUICommand> and <xref:System.Windows.Input.RoutedCommand> is that <xref:System.Windows.Input.RoutedUICommand> includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property.","nodes":[{"content":"The difference between a <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is that <ph id=\"ph3\">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph> includes a <ph id=\"ph4\">&lt;xref:System.Windows.Input.RoutedUICommand.Text%2A&gt;</ph> property.","pos":[0,239],"source":"The difference between a <xref:System.Windows.Input.RoutedUICommand> and <xref:System.Windows.Input.RoutedCommand> is that <xref:System.Windows.Input.RoutedUICommand> includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property."}]},{"pos":[246,773],"content":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.","nodes":[{"content":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.","pos":[0,527],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> methods on a <ph id=\"ph3\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> do not contain the command logic for the command, as is the case with a typical <ph id=\"ph4\">&lt;xref:System.Windows.Input.ICommand&gt;</ph>.","pos":[0,289],"source":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>."},{"content":"These methods raise events that traverse the element tree looking for an object with a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>.","pos":[291,421],"source":"  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>."},{"content":"The event handlers attached to the <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> contain the command logic.","pos":[423,527],"source":"  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic."}]}]},{"pos":[780,1183],"content":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.","nodes":[{"content":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.","pos":[0,403],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> events.","pos":[0,197],"source":"The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> events.","pos":[199,403],"source":"  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events."}]}]},{"pos":[1245,1265],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1533,1544],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1548,1611],"content":"*predefinedClassName*  \n One of the predefined command classes.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>predefinedClassName<ept id=\"p1\">*</ept>","pos":[0,21],"source":"*predefinedClassName*"},{"content":"One of the predefined command classes.","pos":[25,63]}]},{"pos":[1618,1676],"content":"*predefinedCommandName*  \n One of the predefined commands.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>predefinedCommandName<ept id=\"p1\">*</ept>","pos":[0,23],"source":"*predefinedCommandName*"},{"content":"One of the predefined commands.","pos":[27,58]}]},{"pos":[1683,2001],"content":"*prefix*  \n The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*prefix*"},{"content":" The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).","pos":[11,318],"nodes":[{"content":"The <ph id=\"ph1\">`xlmns`</ph> prefix that maps <bpt id=\"p1\">*</bpt>customClassName<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>customCommandName<ept id=\"p2\">*</ept> to the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph> class.","pos":[1,141],"source":" The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.","pos":[143,307],"source":"  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)."}]}]},{"pos":[2008,2077],"content":"*customClassName*  \n A custom class that contains the custom command.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>customClassName<ept id=\"p1\">*</ept>","pos":[0,17],"source":"*customClassName*"},{"content":"A custom class that contains the custom command.","pos":[21,69]}]},{"pos":[2084,2124],"content":"*customCommandName*  \n A custom command.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>customCommandName<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*customCommandName*"},{"content":"A custom command.","pos":[23,40]}]}],"pos":[841,3011],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class."}],"pos":[5267,5366],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, and owner type.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;&lt;/xref&gt;</ph> class, using the specified descriptive text, declared name, and owner type.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, and owner type."}],"pos":[6633,6801],"yaml":true},{"content":"Descriptive text for the command.","nodes":[{"pos":[0,33],"content":"Descriptive text for the command.","nodes":[{"content":"Descriptive text for the command.","pos":[0,33]}]}],"pos":[6967,7001],"yaml":true},{"content":"The declared name of the command for serialization.","nodes":[{"pos":[0,51],"content":"The declared name of the command for serialization.","nodes":[{"content":"The declared name of the command for serialization.","pos":[0,51]}]}],"pos":[7061,7113],"yaml":true},{"content":"The type that is registering the command.","nodes":[{"pos":[0,41],"content":"The type that is registering the command.","nodes":[{"content":"The type that is registering the command.","pos":[0,41]}]}],"pos":[7176,7218],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[7390,7419],"yaml":true},{"content":"<code>ownerType</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>ownerType</code> is `null`."}],"pos":[7513,7547],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, owner type, and input gestures.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;&lt;/xref&gt;</ph> class, using the specified descriptive text, declared name, owner type, and input gestures.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, owner type, and input gestures."}],"pos":[8876,9060],"yaml":true},{"content":"Descriptive text for the command.","nodes":[{"pos":[0,33],"content":"Descriptive text for the command.","nodes":[{"content":"Descriptive text for the command.","pos":[0,33]}]}],"pos":[9285,9319],"yaml":true},{"content":"The declared name of the command for serialization.","nodes":[{"pos":[0,51],"content":"The declared name of the command for serialization.","nodes":[{"content":"The declared name of the command for serialization.","pos":[0,51]}]}],"pos":[9379,9431],"yaml":true},{"content":"The type that is registering the command.","nodes":[{"pos":[0,41],"content":"The type that is registering the command.","nodes":[{"content":"The type that is registering the command.","pos":[0,41]}]}],"pos":[9494,9536],"yaml":true},{"content":"A collection of gestures to associate with the command.","nodes":[{"pos":[0,55],"content":"A collection of gestures to associate with the command.","nodes":[{"content":"A collection of gestures to associate with the command.","pos":[0,55]}]}],"pos":[9635,9691],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[9863,9892],"yaml":true},{"content":"<code>ownerType</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>ownerType</code> is `null`."}],"pos":[9986,10020],"yaml":true},{"content":"Gets or sets the text that describes this command.","nodes":[{"pos":[0,50],"content":"Gets or sets the text that describes this command.","nodes":[{"content":"Gets or sets the text that describes this command.","pos":[0,50]}]}],"pos":[10915,10966],"yaml":true},{"content":"The text that describes the command.  The default is an empty string.","nodes":[{"pos":[0,69],"content":"The text that describes the command.  The default is an empty string.","nodes":[{"content":"The text that describes the command.  The default is an empty string.","pos":[0,69],"nodes":[{"content":"The text that describes the command.","pos":[0,36]},{"content":"The default is an empty string.","pos":[38,69]}]}]}],"pos":[11079,11149],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.RoutedUICommand\n  commentId: T:System.Windows.Input.RoutedUICommand\n  id: RoutedUICommand\n  children:\n  - System.Windows.Input.RoutedUICommand.#ctor\n  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  - System.Windows.Input.RoutedUICommand.Text\n  langs:\n  - csharp\n  name: RoutedUICommand\n  nameWithType: RoutedUICommand\n  fullName: System.Windows.Input.RoutedUICommand\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Defines an <xref href=\"System.Windows.Input.ICommand\"></xref> that is routed through the element tree and contains a text property.\n  remarks: \"The difference between a <xref:System.Windows.Input.RoutedUICommand> and <xref:System.Windows.Input.RoutedCommand> is that <xref:System.Windows.Input.RoutedUICommand> includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property.  \\n  \\n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.  \\n  \\n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.  \\n  \\n<a name=\\\"xamlAttributeUsage_RoutedUICommand\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"predefinedCommandName\\\"/>  \\n- or -  \\n<object property=\\\"predefinedClassName.predefinedCommandName\\\"/>  \\n- or -  \\n<object property=\\\"{x:Static customClassName.customCommandName}\\\"/>  \\n  \\n```  \\n  \\n<a name=\\\"xamlValues_RoutedUICommand\\\"></a>   \\n## XAML Values  \\n *predefinedClassName*  \\n One of the predefined command classes.  \\n  \\n *predefinedCommandName*  \\n One of the predefined commands.  \\n  \\n *prefix*  \\n The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  \\n  \\n *customClassName*  \\n A custom class that contains the custom command.  \\n  \\n *customCommandName*  \\n A custom command.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null\")]\n\n      public class RoutedUICommand : System.Windows.Input.RoutedCommand\n  inheritance:\n  - System.Object\n  - System.Windows.Input.RoutedCommand\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)\n  - System.Windows.Input.RoutedCommand.CanExecuteChanged\n  - System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)\n  - System.Windows.Input.RoutedCommand.InputGestures\n  - System.Windows.Input.RoutedCommand.Name\n  - System.Windows.Input.RoutedCommand.OwnerType\n  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)\n  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.RoutedUICommand.#ctor\n  commentId: M:System.Windows.Input.RoutedUICommand.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand()\n  nameWithType: RoutedUICommand.RoutedUICommand()\n  fullName: RoutedUICommand.RoutedUICommand()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class.\n  syntax:\n    content: public RoutedUICommand ();\n    parameters: []\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  commentId: M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  id: '#ctor(System.String,System.String,System.Type)'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand(String, String, Type)\n  nameWithType: RoutedUICommand.RoutedUICommand(String, String, Type)\n  fullName: RoutedUICommand.RoutedUICommand(String, String, Type)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, and owner type.\n  syntax:\n    content: public RoutedUICommand (string text, string name, Type ownerType);\n    parameters:\n    - id: text\n      type: System.String\n      description: Descriptive text for the command.\n    - id: name\n      type: System.String\n      description: The declared name of the command for serialization.\n    - id: ownerType\n      type: System.Type\n      description: The type that is registering the command.\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ownerType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  commentId: M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  id: '#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand(String, String, Type, InputGestureCollection)\n  nameWithType: RoutedUICommand.RoutedUICommand(String, String, Type, InputGestureCollection)\n  fullName: RoutedUICommand.RoutedUICommand(String, String, Type, InputGestureCollection)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, owner type, and input gestures.\n  syntax:\n    content: public RoutedUICommand (string text, string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);\n    parameters:\n    - id: text\n      type: System.String\n      description: Descriptive text for the command.\n    - id: name\n      type: System.String\n      description: The declared name of the command for serialization.\n    - id: ownerType\n      type: System.Type\n      description: The type that is registering the command.\n    - id: inputGestures\n      type: System.Windows.Input.InputGestureCollection\n      description: A collection of gestures to associate with the command.\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ownerType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.RoutedUICommand.Text\n  commentId: P:System.Windows.Input.RoutedUICommand.Text\n  id: Text\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: Text\n  nameWithType: RoutedUICommand.Text\n  fullName: RoutedUICommand.Text\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the text that describes this command.\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text that describes the command.  The default is an empty string.\n  overload: System.Windows.Input.RoutedUICommand.Text*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.RoutedCommand\n  parent: System.Windows.Input\n  isExternal: false\n  name: RoutedCommand\n  nameWithType: RoutedCommand\n  fullName: System.Windows.Input.RoutedCommand\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Input.RoutedUICommand.#ctor\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand()\n  nameWithType: RoutedUICommand.RoutedUICommand()\n  fullName: RoutedUICommand.RoutedUICommand()\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand(String, String, Type)\n  nameWithType: RoutedUICommand.RoutedUICommand(String, String, Type)\n  fullName: RoutedUICommand.RoutedUICommand(String, String, Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand(String, String, Type, InputGestureCollection)\n  nameWithType: RoutedUICommand.RoutedUICommand(String, String, Type, InputGestureCollection)\n  fullName: RoutedUICommand.RoutedUICommand(String, String, Type, InputGestureCollection)\n- uid: System.Windows.Input.InputGestureCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputGestureCollection\n  nameWithType: InputGestureCollection\n  fullName: System.Windows.Input.InputGestureCollection\n- uid: System.Windows.Input.RoutedUICommand.Text\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: Text\n  nameWithType: RoutedUICommand.Text\n  fullName: RoutedUICommand.Text\n- uid: System.Windows.Input.RoutedUICommand.#ctor*\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand\n  nameWithType: RoutedUICommand.RoutedUICommand\n  fullName: RoutedUICommand.RoutedUICommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n- uid: System.Windows.Input.RoutedUICommand.Text*\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: Text\n  nameWithType: RoutedUICommand.Text\n  fullName: RoutedUICommand.Text\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/RoutedUICommand.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: CanExecute(Object, IInputElement)\n  nameWithType: RoutedCommand.CanExecute(Object, IInputElement)\n  fullName: RoutedCommand.CanExecute(Object, IInputElement)\n- uid: System.Windows.Input.RoutedCommand.CanExecuteChanged\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: CanExecuteChanged\n  nameWithType: RoutedCommand.CanExecuteChanged\n  fullName: RoutedCommand.CanExecuteChanged\n- uid: System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: Execute(Object, IInputElement)\n  nameWithType: RoutedCommand.Execute(Object, IInputElement)\n  fullName: RoutedCommand.Execute(Object, IInputElement)\n- uid: System.Windows.Input.RoutedCommand.InputGestures\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: InputGestures\n  nameWithType: RoutedCommand.InputGestures\n  fullName: RoutedCommand.InputGestures\n- uid: System.Windows.Input.RoutedCommand.Name\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: Name\n  nameWithType: RoutedCommand.Name\n  fullName: RoutedCommand.Name\n- uid: System.Windows.Input.RoutedCommand.OwnerType\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: OwnerType\n  nameWithType: RoutedCommand.OwnerType\n  fullName: RoutedCommand.OwnerType\n- uid: System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: ICommand.CanExecute(Object)\n  nameWithType: RoutedCommand.ICommand.CanExecute(Object)\n  fullName: RoutedCommand.ICommand.CanExecute(Object)\n- uid: System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)\n  parent: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: ICommand.Execute(Object)\n  nameWithType: RoutedCommand.ICommand.Execute(Object)\n  fullName: RoutedCommand.ICommand.Execute(Object)\n"}