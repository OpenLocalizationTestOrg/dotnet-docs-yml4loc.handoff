{"nodes":[{"content":"Provides command execution functions for invoking compilers. This class cannot be inherited.","nodes":[{"pos":[0,92],"content":"Provides command execution functions for invoking compilers. This class cannot be inherited.","nodes":[{"content":"Provides command execution functions for invoking compilers. This class cannot be inherited.","pos":[0,92],"nodes":[{"content":"Provides command execution functions for invoking compilers.","pos":[0,60]},{"content":"This class cannot be inherited.","pos":[61,92]}]}]}],"pos":[1104,1197],"yaml":true},{"content":"This class provides a collection of methods that can be used to invoke a compiler, typically from an <xref:System.CodeDom.Compiler.ICodeCompiler> implementation.  \n  \n> [!NOTE]\n>  This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For more information, see [Link Demands](~/docs/framework/misc/link-demands.md).","nodes":[{"pos":[0,161],"content":"This class provides a collection of methods that can be used to invoke a compiler, typically from an <xref:System.CodeDom.Compiler.ICodeCompiler> implementation.","nodes":[{"content":"This class provides a collection of methods that can be used to invoke a compiler, typically from an <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation.","pos":[0,161],"source":"This class provides a collection of methods that can be used to invoke a compiler, typically from an <xref:System.CodeDom.Compiler.ICodeCompiler> implementation."}]},{"pos":[169,458],"content":"[!NOTE]\n This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For more information, see [Link Demands](~/docs/framework/misc/link-demands.md).","leadings":["","> "],"nodes":[{"content":" This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For more information, see [Link Demands](~/docs/framework/misc/link-demands.md).","pos":[8,287],"nodes":[{"content":"This class contains a link demand at the class level that applies to all members.","pos":[1,82]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the immediate caller does not have full-trust permission.","pos":[83,198],"source":" A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Link Demands<ept id=\"p1\">](~/docs/framework/misc/link-demands.md)</ept>.","pos":[199,279],"source":" For more information, see [Link Demands](~/docs/framework/misc/link-demands.md)."}]}]}],"pos":[1208,1672],"yaml":true,"extradata":"MT"},{"content":"Executes the command using the specified temporary files and waits for the call to return.","nodes":[{"pos":[0,90],"content":"Executes the command using the specified temporary files and waits for the call to return.","nodes":[{"content":"Executes the command using the specified temporary files and waits for the call to return.","pos":[0,90]}]}],"pos":[3301,3392],"yaml":true},{"content":"The command to execute.","nodes":[{"pos":[0,23],"content":"The command to execute.","nodes":[{"content":"The command to execute.","pos":[0,23]}]}],"pos":[3586,3610],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;&lt;/xref&gt;</ph> with which to manage and store references to intermediate files generated during compilation.","source":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation."}],"pos":[3704,3864],"yaml":true},{"content":"Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"pos":[0,181],"content":"Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"content":"Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.","pos":[0,181]}]}],"pos":[5373,5555],"yaml":true},{"content":"The command to execute.","nodes":[{"pos":[0,23],"content":"The command to execute.","nodes":[{"content":"The command to execute.","pos":[0,23]}]}],"pos":[5804,5828],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;&lt;/xref&gt;</ph> with which to manage and store references to intermediate files generated during compilation.","source":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation."}],"pos":[5922,6082],"yaml":true},{"content":"A reference to a string that will store the compiler's message output.","nodes":[{"pos":[0,70],"content":"A reference to a string that will store the compiler's message output.","nodes":[{"content":"A reference to a string that will store the compiler's message output.","pos":[0,70]}]}],"pos":[6148,6219],"yaml":true},{"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"pos":[0,84],"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"content":"A reference to a string that will store the name of the error or errors encountered.","pos":[0,84]}]}],"pos":[6284,6369],"yaml":true},{"content":"The return value from the compiler.","nodes":[{"pos":[0,35],"content":"The return value from the compiler.","nodes":[{"content":"The return value from the compiler.","pos":[0,35]}]}],"pos":[6425,6461],"yaml":true},{"content":"Executes the specified command using the specified user token and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"pos":[0,197],"content":"Executes the specified command using the specified user token and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"content":"Executes the specified command using the specified user token and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","pos":[0,197]}]}],"pos":[8047,8245],"yaml":true},{"content":"The `userToken` parameter accepts a Win32 security access token that indicates the security context for the process to be started in. For more information, consult the Windows `CreateProcessAsUser` method documentation in the Platform SDK documentation in MSDN.","nodes":[{"pos":[0,261],"content":"The `userToken` parameter accepts a Win32 security access token that indicates the security context for the process to be started in. For more information, consult the Windows `CreateProcessAsUser` method documentation in the Platform SDK documentation in MSDN.","nodes":[{"content":"The <ph id=\"ph1\">`userToken`</ph> parameter accepts a Win32 security access token that indicates the security context for the process to be started in.","pos":[0,133],"source":"The `userToken` parameter accepts a Win32 security access token that indicates the security context for the process to be started in."},{"content":"For more information, consult the Windows <ph id=\"ph1\">`CreateProcessAsUser`</ph> method documentation in the Platform SDK documentation in MSDN.","pos":[134,261],"source":" For more information, consult the Windows `CreateProcessAsUser` method documentation in the Platform SDK documentation in MSDN."}]}],"pos":[8256,8518],"yaml":true,"extradata":"MT"},{"content":"The token to start the compiler process with.","nodes":[{"pos":[0,45],"content":"The token to start the compiler process with.","nodes":[{"content":"The token to start the compiler process with.","pos":[0,45]}]}],"pos":[8791,8837],"yaml":true},{"content":"The command to execute.","nodes":[{"pos":[0,23],"content":"The command to execute.","nodes":[{"content":"The command to execute.","pos":[0,23]}]}],"pos":[8896,8920],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;&lt;/xref&gt;</ph> with which to manage and store references to intermediate files generated during compilation.","source":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation."}],"pos":[9014,9174],"yaml":true},{"content":"A reference to a string that will store the compiler's message output.","nodes":[{"pos":[0,70],"content":"A reference to a string that will store the compiler's message output.","nodes":[{"content":"A reference to a string that will store the compiler's message output.","pos":[0,70]}]}],"pos":[9240,9311],"yaml":true},{"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"pos":[0,84],"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"content":"A reference to a string that will store the name of the error or errors encountered.","pos":[0,84]}]}],"pos":[9376,9461],"yaml":true},{"content":"The return value from the compiler.","nodes":[{"pos":[0,35],"content":"The return value from the compiler.","nodes":[{"content":"The return value from the compiler.","pos":[0,35]}]}],"pos":[9517,9553],"yaml":true},{"content":"Executes the specified command using the specified current directory and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"pos":[0,204],"content":"Executes the specified command using the specified current directory and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"content":"Executes the specified command using the specified current directory and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.","pos":[0,204]}]}],"pos":[11139,11344],"yaml":true},{"content":"The command to execute.","nodes":[{"pos":[0,23],"content":"The command to execute.","nodes":[{"content":"The command to execute.","pos":[0,23]}]}],"pos":[11612,11636],"yaml":true},{"content":"The current directory.","nodes":[{"pos":[0,22],"content":"The current directory.","nodes":[{"content":"The current directory.","pos":[0,22]}]}],"pos":[11702,11725],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;&lt;/xref&gt;</ph> with which to manage and store references to intermediate files generated during compilation.","source":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation."}],"pos":[11819,11979],"yaml":true},{"content":"A reference to a string that will store the compiler's message output.","nodes":[{"pos":[0,70],"content":"A reference to a string that will store the compiler's message output.","nodes":[{"content":"A reference to a string that will store the compiler's message output.","pos":[0,70]}]}],"pos":[12045,12116],"yaml":true},{"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"pos":[0,84],"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"content":"A reference to a string that will store the name of the error or errors encountered.","pos":[0,84]}]}],"pos":[12181,12266],"yaml":true},{"content":"The return value from the compiler.","nodes":[{"pos":[0,35],"content":"The return value from the compiler.","nodes":[{"content":"The return value from the compiler.","pos":[0,35]}]}],"pos":[12322,12358],"yaml":true},{"content":"Executes the specified command using the specified user token, current directory, and temporary files; then waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"pos":[0,218],"content":"Executes the specified command using the specified user token, current directory, and temporary files; then waits for the call to return, storing output and error information from the compiler in the specified strings.","nodes":[{"content":"Executes the specified command using the specified user token, current directory, and temporary files; then waits for the call to return, storing output and error information from the compiler in the specified strings.","pos":[0,218]}]}],"pos":[14010,14229],"yaml":true},{"content":"The token to start the compiler process with.","nodes":[{"pos":[0,45],"content":"The token to start the compiler process with.","nodes":[{"content":"The token to start the compiler process with.","pos":[0,45]}]}],"pos":[14521,14567],"yaml":true},{"content":"The command to execute.","nodes":[{"pos":[0,23],"content":"The command to execute.","nodes":[{"content":"The command to execute.","pos":[0,23]}]}],"pos":[14626,14650],"yaml":true},{"content":"The directory to start the process in.","nodes":[{"pos":[0,38],"content":"The directory to start the process in.","nodes":[{"content":"The directory to start the process in.","pos":[0,38]}]}],"pos":[14716,14755],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.TempFileCollection\"&gt;&lt;/xref&gt;</ph> with which to manage and store references to intermediate files generated during compilation.","source":"A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation."}],"pos":[14849,15009],"yaml":true},{"content":"A reference to a string that will store the compiler's message output.","nodes":[{"pos":[0,70],"content":"A reference to a string that will store the compiler's message output.","nodes":[{"content":"A reference to a string that will store the compiler's message output.","pos":[0,70]}]}],"pos":[15075,15146],"yaml":true},{"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"pos":[0,84],"content":"A reference to a string that will store the name of the error or errors encountered.","nodes":[{"content":"A reference to a string that will store the name of the error or errors encountered.","pos":[0,84]}]}],"pos":[15211,15296],"yaml":true},{"content":"The return value from the compiler.","nodes":[{"pos":[0,35],"content":"The return value from the compiler.","nodes":[{"content":"The return value from the compiler.","pos":[0,35]}]}],"pos":[15352,15388],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.Compiler.Executor\n  commentId: T:System.CodeDom.Compiler.Executor\n  id: Executor\n  children:\n  - System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)\n  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  langs:\n  - csharp\n  name: Executor\n  nameWithType: Executor\n  fullName: System.CodeDom.Compiler.Executor\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Provides command execution functions for invoking compilers. This class cannot be inherited.\n  remarks: \"This class provides a collection of methods that can be used to invoke a compiler, typically from an <xref:System.CodeDom.Compiler.ICodeCompiler> implementation.  \\n  \\n> [!NOTE]\\n>  This class contains a link demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission. For more information, see [Link Demands](~/docs/framework/misc/link-demands.md).\"\n  syntax:\n    content: public static class Executor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)\n  commentId: M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)\n  id: ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)\n  parent: System.CodeDom.Compiler.Executor\n  langs:\n  - csharp\n  name: ExecWait(String, TempFileCollection)\n  nameWithType: Executor.ExecWait(String, TempFileCollection)\n  fullName: Executor.ExecWait(String, TempFileCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Executes the command using the specified temporary files and waits for the call to return.\n  syntax:\n    content: public static void ExecWait (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles);\n    parameters:\n    - id: cmd\n      type: System.String\n      description: The command to execute.\n    - id: tempFiles\n      type: System.CodeDom.Compiler.TempFileCollection\n      description: A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.\n  overload: System.CodeDom.Compiler.Executor.ExecWait*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  commentId: M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  id: ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  langs:\n  - csharp\n  name: ExecWaitWithCapture(String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(String, TempFileCollection, String, String)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.\n  syntax:\n    content: public static int ExecWaitWithCapture (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);\n    parameters:\n    - id: cmd\n      type: System.String\n      description: The command to execute.\n    - id: tempFiles\n      type: System.CodeDom.Compiler.TempFileCollection\n      description: A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.\n    - id: outputName\n      type: System.String\n      description: A reference to a string that will store the compiler's message output.\n    - id: errorName\n      type: System.String\n      description: A reference to a string that will store the name of the error or errors encountered.\n    return:\n      type: System.Int32\n      description: The return value from the compiler.\n  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  commentId: M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  id: ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  langs:\n  - csharp\n  name: ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Executes the specified command using the specified user token and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.\n  remarks: The `userToken` parameter accepts a Win32 security access token that indicates the security context for the process to be started in. For more information, consult the Windows `CreateProcessAsUser` method documentation in the Platform SDK documentation in MSDN.\n  syntax:\n    content: public static int ExecWaitWithCapture (IntPtr userToken, string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The token to start the compiler process with.\n    - id: cmd\n      type: System.String\n      description: The command to execute.\n    - id: tempFiles\n      type: System.CodeDom.Compiler.TempFileCollection\n      description: A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.\n    - id: outputName\n      type: System.String\n      description: A reference to a string that will store the compiler's message output.\n    - id: errorName\n      type: System.String\n      description: A reference to a string that will store the name of the error or errors encountered.\n    return:\n      type: System.Int32\n      description: The return value from the compiler.\n  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  commentId: M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  id: ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  langs:\n  - csharp\n  name: ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Executes the specified command using the specified current directory and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.\n  syntax:\n    content: public static int ExecWaitWithCapture (string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);\n    parameters:\n    - id: cmd\n      type: System.String\n      description: The command to execute.\n    - id: currentDir\n      type: System.String\n      description: The current directory.\n    - id: tempFiles\n      type: System.CodeDom.Compiler.TempFileCollection\n      description: A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.\n    - id: outputName\n      type: System.String\n      description: A reference to a string that will store the compiler's message output.\n    - id: errorName\n      type: System.String\n      description: A reference to a string that will store the name of the error or errors encountered.\n    return:\n      type: System.Int32\n      description: The return value from the compiler.\n  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  commentId: M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  id: ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  langs:\n  - csharp\n  name: ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Executes the specified command using the specified user token, current directory, and temporary files; then waits for the call to return, storing output and error information from the compiler in the specified strings.\n  syntax:\n    content: public static int ExecWaitWithCapture (IntPtr userToken, string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The token to start the compiler process with.\n    - id: cmd\n      type: System.String\n      description: The command to execute.\n    - id: currentDir\n      type: System.String\n      description: The directory to start the process in.\n    - id: tempFiles\n      type: System.CodeDom.Compiler.TempFileCollection\n      description: A <xref href=\"System.CodeDom.Compiler.TempFileCollection\"></xref> with which to manage and store references to intermediate files generated during compilation.\n    - id: outputName\n      type: System.String\n      description: A reference to a string that will store the compiler's message output.\n    - id: errorName\n      type: System.String\n      description: A reference to a string that will store the name of the error or errors encountered.\n    return:\n      type: System.Int32\n      description: The return value from the compiler.\n  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWait(String, TempFileCollection)\n  nameWithType: Executor.ExecWait(String, TempFileCollection)\n  fullName: Executor.ExecWait(String, TempFileCollection)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.Compiler.TempFileCollection\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: TempFileCollection\n  nameWithType: TempFileCollection\n  fullName: System.CodeDom.Compiler.TempFileCollection\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWaitWithCapture(String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(String, TempFileCollection, String, String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(IntPtr, String, TempFileCollection, String, String)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(String, String, TempFileCollection, String, String)\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n  nameWithType: Executor.ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n  fullName: Executor.ExecWaitWithCapture(IntPtr, String, String, TempFileCollection, String, String)\n- uid: System.CodeDom.Compiler.Executor.ExecWait*\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWait\n  nameWithType: Executor.ExecWait\n  fullName: Executor.ExecWait\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*\n  parent: System.CodeDom.Compiler.Executor\n  isExternal: false\n  name: ExecWaitWithCapture\n  nameWithType: Executor.ExecWaitWithCapture\n  fullName: Executor.ExecWaitWithCapture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/Executor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}