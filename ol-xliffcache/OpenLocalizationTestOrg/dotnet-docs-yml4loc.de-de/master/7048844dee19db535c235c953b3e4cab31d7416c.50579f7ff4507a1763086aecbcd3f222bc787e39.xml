{"nodes":[{"content":"Provides random access to unmanaged blocks of memory from managed code.","nodes":[{"pos":[0,71],"content":"Provides random access to unmanaged blocks of memory from managed code.","nodes":[{"content":"Provides random access to unmanaged blocks of memory from managed code.","pos":[0,71]}]}],"pos":[3260,3332],"yaml":true},{"content":"The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object returns the unmanaged blocks of memory for working with views of memory-mapped files.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,234],"content":"The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object returns the unmanaged blocks of memory for working with views of memory-mapped files.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A&gt;</ph> method of a <ph id=\"ph2\">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> object returns the unmanaged blocks of memory for working with views of memory-mapped files.","pos":[0,234],"source":"The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object returns the unmanaged blocks of memory for working with views of memory-mapped files."}]},{"pos":[242,768],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[3343,4119],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.UnmanagedMemoryAccessor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class."}],"pos":[5935,6031],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, and capacity.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.UnmanagedMemoryAccessor\"&gt;&lt;/xref&gt;</ph> class with a specified buffer, offset, and capacity.","source":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, and capacity."}],"pos":[7761,7903],"yaml":true},{"content":"The buffer to contain the accessor.","nodes":[{"pos":[0,35],"content":"The buffer to contain the accessor.","nodes":[{"content":"The buffer to contain the accessor.","pos":[0,35]}]}],"pos":[8143,8179],"yaml":true},{"content":"The byte at which to start the accessor.","nodes":[{"pos":[0,40],"content":"The byte at which to start the accessor.","nodes":[{"content":"The byte at which to start the accessor.","pos":[0,40]}]}],"pos":[8240,8281],"yaml":true},{"content":"The size, in bytes, of memory to allocate.","nodes":[{"pos":[0,42],"content":"The size, in bytes, of memory to allocate.","nodes":[{"content":"The size, in bytes, of memory to allocate.","pos":[0,42]}]}],"pos":[8344,8387],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>."}],"pos":[8548,8632],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[8734,8765],"yaml":true},{"content":"<code>offset</code> or <code>capacity</code> is less than zero.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>capacity</code> is less than zero."}],"pos":[8879,8943],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> would wrap around the high end of the address space.","source":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space."}],"pos":[9053,9153],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, capacity, and access right.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.UnmanagedMemoryAccessor\"&gt;&lt;/xref&gt;</ph> class with a specified buffer, offset, capacity, and access right.","source":"Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, capacity, and access right."}],"pos":[10849,11005],"yaml":true},{"content":"The buffer to contain the accessor.","nodes":[{"pos":[0,35],"content":"The buffer to contain the accessor.","nodes":[{"content":"The buffer to contain the accessor.","pos":[0,35]}]}],"pos":[11274,11310],"yaml":true},{"content":"The byte at which to start the accessor.","nodes":[{"pos":[0,40],"content":"The byte at which to start the accessor.","nodes":[{"content":"The byte at which to start the accessor.","pos":[0,40]}]}],"pos":[11371,11412],"yaml":true},{"content":"The size, in bytes, of memory to allocate.","nodes":[{"pos":[0,42],"content":"The size, in bytes, of memory to allocate.","nodes":[{"content":"The size, in bytes, of memory to allocate.","pos":[0,42]}]}],"pos":[11475,11518],"yaml":true},{"content":"The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.","nodes":[{"pos":[0,139],"content":"The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.","nodes":[{"content":"The type of access allowed to the memory.","pos":[0,41]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"&gt;&lt;/xref&gt;</ph>.","pos":[42,139],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>."}]}],"pos":[11587,11727],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>."}],"pos":[11888,11972],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[12074,12105],"yaml":true},{"content":"<code>offset</code> or <code>capacity</code> is less than zero.  \n  \n -or-  \n  \n <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>capacity</code> is less than zero."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,206],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"<code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}],"pos":[12219,12434],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> would wrap around the high end of the address space.","source":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space."}],"pos":[12544,12644],"yaml":true},{"content":"Determines whether the accessor is readable.","nodes":[{"pos":[0,44],"content":"Determines whether the accessor is readable.","nodes":[{"content":"Determines whether the accessor is readable.","pos":[0,44]}]}],"pos":[13909,13954],"yaml":true},{"content":"`true` if the accessor is readable; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the accessor is readable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the accessor is readable; otherwise, `false`."}],"pos":[14064,14122],"yaml":true},{"content":"Determines whether the accessory is writable.","nodes":[{"pos":[0,45],"content":"Determines whether the accessory is writable.","nodes":[{"content":"Determines whether the accessory is writable.","pos":[0,45]}]}],"pos":[15448,15494],"yaml":true},{"content":"`true` if the accessor is writable; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the accessor is writable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the accessor is writable; otherwise, `false`."}],"pos":[15605,15663],"yaml":true},{"content":"Gets the capacity of the accessor.","nodes":[{"pos":[0,34],"content":"Gets the capacity of the accessor.","nodes":[{"content":"Gets the capacity of the accessor.","pos":[0,34]}]}],"pos":[16990,17025],"yaml":true},{"content":"The capacity of the accessor.","nodes":[{"pos":[0,29],"content":"The capacity of the accessor.","nodes":[{"content":"The capacity of the accessor.","pos":[0,29]}]}],"pos":[17134,17164],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref>.","nodes":[{"pos":[0,90],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.UnmanagedMemoryAccessor\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref>."}],"pos":[18489,18580],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,146],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.UnmanagedMemoryAccessor\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> and optionally releases the managed resources."}],"pos":[20039,20186],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.UnmanagedMemoryAccessor> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,535],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.UnmanagedMemoryAccessor> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.IO.UnmanagedMemoryAccessor&gt;</ph> references.","pos":[0,165],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.UnmanagedMemoryAccessor> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[166,235],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[20197,20737],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[20891,20994],"yaml":true},{"content":"Sets the initial values for the accessor.","nodes":[{"pos":[0,41],"content":"Sets the initial values for the accessor.","nodes":[{"content":"Sets the initial values for the accessor.","pos":[0,41]}]}],"pos":[22714,22756],"yaml":true},{"content":"This method is called by the constructors for this class.","nodes":[{"pos":[0,57],"content":"This method is called by the constructors for this class.","nodes":[{"content":"This method is called by the constructors for this class.","pos":[0,57]}]}],"pos":[22767,22825],"yaml":true,"extradata":"MT"},{"content":"The buffer to contain the accessor.","nodes":[{"pos":[0,35],"content":"The buffer to contain the accessor.","nodes":[{"content":"The buffer to contain the accessor.","pos":[0,35]}]}],"pos":[23089,23125],"yaml":true},{"content":"The byte at which to start the accessor.","nodes":[{"pos":[0,40],"content":"The byte at which to start the accessor.","nodes":[{"content":"The byte at which to start the accessor.","pos":[0,40]}]}],"pos":[23186,23227],"yaml":true},{"content":"The size, in bytes, of memory to allocate.","nodes":[{"pos":[0,42],"content":"The size, in bytes, of memory to allocate.","nodes":[{"content":"The size, in bytes, of memory to allocate.","pos":[0,42]}]}],"pos":[23290,23333],"yaml":true},{"content":"The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.","nodes":[{"pos":[0,139],"content":"The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.","nodes":[{"content":"The type of access allowed to the memory.","pos":[0,41]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"&gt;&lt;/xref&gt;</ph>.","pos":[42,139],"source":" The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>."}]}],"pos":[23402,23542],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>."}],"pos":[23708,23792],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[23894,23925],"yaml":true},{"content":"<code>offset</code> or <code>capacity</code> is less than zero.  \n  \n -or-  \n  \n <code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>capacity</code> is less than zero."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,206],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"<code>access</code> is not a valid <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\"></xref> enumeration value."}],"pos":[24039,24254],"yaml":true},{"content":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;capacity&lt;/code&gt;</ph> would wrap around the high end of the address space.","source":"<code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space."}],"pos":[24364,24464],"yaml":true},{"content":"Determines whether the accessor is currently open by a process.","nodes":[{"pos":[0,63],"content":"Determines whether the accessor is currently open by a process.","nodes":[{"content":"Determines whether the accessor is currently open by a process.","pos":[0,63]}]}],"pos":[25723,25787],"yaml":true},{"content":"`true` if the accessor is open; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> if the accessor is open; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the accessor is open; otherwise, `false`."}],"pos":[25899,25953],"yaml":true},{"content":"Reads a structure of type <code>T</code> from the accessor into a provided reference.","nodes":[{"pos":[0,85],"content":"Reads a structure of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> from the accessor into a provided reference.","source":"Reads a structure of type <code>T</code> from the accessor into a provided reference."}],"pos":[27321,27407],"yaml":true},{"content":"Use this method to read medium to large structures that are not easily accommodated by the other read methods in this class.","nodes":[{"pos":[0,124],"content":"Use this method to read medium to large structures that are not easily accommodated by the other read methods in this class.","nodes":[{"content":"Use this method to read medium to large structures that are not easily accommodated by the other read methods in this class.","pos":[0,124]}]}],"pos":[27418,27543],"yaml":true,"extradata":"MT"},{"content":"The position in the accessor at which to begin reading.","nodes":[{"pos":[0,55],"content":"The position in the accessor at which to begin reading.","nodes":[{"content":"The position in the accessor at which to begin reading.","pos":[0,55]}]}],"pos":[27767,27823],"yaml":true},{"content":"The structure to contain the read data.","nodes":[{"pos":[0,39],"content":"The structure to contain the read data.","nodes":[{"content":"The structure to contain the read data.","pos":[0,39]}]}],"pos":[27876,27916],"yaml":true},{"content":"The type of structure.","nodes":[{"pos":[0,22],"content":"The type of structure.","nodes":[{"content":"The type of structure.","pos":[0,22]}]}],"pos":[27967,27990],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read in a structure of type <code>T</code>.  \n  \n -or-  \n  \n `T` is a value type that contains one or more reference types.","nodes":[{"pos":[0,101],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read in a structure of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"There are not enough bytes after <code>position</code> to read in a structure of type <code>T</code>."},{"pos":[108,112],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[119,181],"content":"<ph id=\"ph1\">`T`</ph> is a value type that contains one or more reference types.","source":"`T` is a value type that contains one or more reference types."}],"pos":[28153,28341],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[28455,28541],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[28643,28682],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[28788,28820],"yaml":true},{"content":"Reads structures of type <code>T</code> from the accessor into an array of type <code>T</code>.","nodes":[{"pos":[0,95],"content":"Reads structures of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> from the accessor into an array of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Reads structures of type <code>T</code> from the accessor into an array of type <code>T</code>."}],"pos":[30278,30374],"yaml":true},{"content":"This method is not safe.","nodes":[{"pos":[0,24],"content":"This method is not safe.","nodes":[{"content":"This method is not safe.","pos":[0,24]}]}],"pos":[30385,30410],"yaml":true,"extradata":"MT"},{"content":"The number of bytes in the accessor at which to begin reading.","nodes":[{"pos":[0,62],"content":"The number of bytes in the accessor at which to begin reading.","nodes":[{"content":"The number of bytes in the accessor at which to begin reading.","pos":[0,62]}]}],"pos":[30655,30718],"yaml":true},{"content":"The array to contain the structures read from the accessor.","nodes":[{"pos":[0,59],"content":"The array to contain the structures read from the accessor.","nodes":[{"content":"The array to contain the structures read from the accessor.","pos":[0,59]}]}],"pos":[30769,30829],"yaml":true},{"content":"The index in <code>array</code> in which to place the first copied structure.","nodes":[{"pos":[0,77],"content":"The index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> in which to place the first copied structure.","source":"The index in <code>array</code> in which to place the first copied structure."}],"pos":[30890,30968],"yaml":true},{"content":"The number of structures of type <code>T</code> to read from the accessor.","nodes":[{"pos":[0,74],"content":"The number of structures of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read from the accessor.","source":"The number of structures of type <code>T</code> to read from the accessor."}],"pos":[31028,31103],"yaml":true},{"content":"The type of structure.","nodes":[{"pos":[0,22],"content":"The type of structure.","nodes":[{"content":"The type of structure.","pos":[0,22]}]}],"pos":[31154,31177],"yaml":true},{"content":"The number of structures read into <code>array</code>. This value can be less than <code>count</code> if there are fewer structures available, or zero if the end of the accessor is reached.","nodes":[{"pos":[0,189],"content":"The number of structures read into <code>array</code>. This value can be less than <code>count</code> if there are fewer structures available, or zero if the end of the accessor is reached.","nodes":[{"content":"The number of structures read into <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,54],"source":"The number of structures read into <code>array</code>."},{"content":"This value can be less than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> if there are fewer structures available, or zero if the end of the accessor is reached.","pos":[55,189],"source":" This value can be less than <code>count</code> if there are fewer structures available, or zero if the end of the accessor is reached."}]}],"pos":[31233,31423],"yaml":true},{"content":"<code>array</code> is not large enough to contain <code>count</code> of structures (starting from <code>position</code>).","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is not large enough to contain <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> of structures (starting from <ph id=\"ph3\">&lt;code&gt;position&lt;/code&gt;</ph>).","source":"<code>array</code> is not large enough to contain <code>count</code> of structures (starting from <code>position</code>)."}],"pos":[31591,31713],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[31815,31845],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[31959,32045],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[32147,32186],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[32292,32324],"yaml":true},{"content":"Reads a Boolean value from the accessor.","nodes":[{"pos":[0,40],"content":"Reads a Boolean value from the accessor.","nodes":[{"content":"Reads a Boolean value from the accessor.","pos":[0,40]}]}],"pos":[33659,33700],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[33843,33908],"yaml":true},{"content":"`true` or `false`.","nodes":[{"pos":[0,18],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","source":"`true` or `false`."}],"pos":[33966,33987],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[34154,34226],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[34340,34426],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[34528,34567],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[34673,34705],"yaml":true},{"content":"Reads a byte value from the accessor.","nodes":[{"pos":[0,37],"content":"Reads a byte value from the accessor.","nodes":[{"content":"Reads a byte value from the accessor.","pos":[0,37]}]}],"pos":[36020,36058],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[36198,36263],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[36318,36343],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[36507,36579],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[36693,36779],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[36881,36920],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[37026,37058],"yaml":true},{"content":"Reads a character from the accessor.","nodes":[{"pos":[0,36],"content":"Reads a character from the accessor.","nodes":[{"content":"Reads a character from the accessor.","pos":[0,36]}]}],"pos":[38373,38410],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[38550,38615],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[38670,38695],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[38859,38931],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[39045,39131],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[39233,39272],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[39378,39410],"yaml":true},{"content":"Reads a decimal value from the accessor.","nodes":[{"pos":[0,40],"content":"Reads a decimal value from the accessor.","nodes":[{"content":"Reads a decimal value from the accessor.","pos":[0,40]}]}],"pos":[40760,40801],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[40947,41012],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[41070,41095],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.  \n  \n -or-  \n  \n The decimal to read is invalid.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."},{"pos":[78,82],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[89,120],"content":"The decimal to read is invalid.","nodes":[{"content":"The decimal to read is invalid.","pos":[0,31]}]}],"pos":[41262,41389],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[41503,41589],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[41691,41730],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[41836,41868],"yaml":true},{"content":"Reads a double-precision floating-point value from the accessor.","nodes":[{"pos":[0,64],"content":"Reads a double-precision floating-point value from the accessor.","nodes":[{"content":"Reads a double-precision floating-point value from the accessor.","pos":[0,64]}]}],"pos":[43212,43277],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[43421,43486],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[43543,43568],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[43734,43806],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[43920,44006],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[44108,44147],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[44253,44285],"yaml":true},{"content":"Reads a 16-bit integer from the accessor.","nodes":[{"pos":[0,41],"content":"Reads a 16-bit integer from the accessor.","nodes":[{"content":"Reads a 16-bit integer from the accessor.","pos":[0,41]}]}],"pos":[45623,45665],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[45807,45872],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[45928,45953],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[46118,46190],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[46304,46390],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[46492,46531],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[46637,46669],"yaml":true},{"content":"Reads a 32-bit integer from the accessor.","nodes":[{"pos":[0,41],"content":"Reads a 32-bit integer from the accessor.","nodes":[{"content":"Reads a 32-bit integer from the accessor.","pos":[0,41]}]}],"pos":[48007,48049],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[48189,48254],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[48310,48335],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[48500,48572],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[48686,48772],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[48874,48913],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[49019,49051],"yaml":true},{"content":"Reads a 64-bit integer from the accessor.","nodes":[{"pos":[0,41],"content":"Reads a 64-bit integer from the accessor.","nodes":[{"content":"Reads a 64-bit integer from the accessor.","pos":[0,41]}]}],"pos":[50389,50431],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[50572,50637],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[50693,50718],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[50883,50955],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[51069,51155],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[51257,51296],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[51402,51434],"yaml":true},{"content":"Reads an 8-bit signed integer from the accessor.","nodes":[{"pos":[0,48],"content":"Reads an 8-bit signed integer from the accessor.","nodes":[{"content":"Reads an 8-bit signed integer from the accessor.","pos":[0,48]}]}],"pos":[52772,52821],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[53008,53073],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[53129,53154],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[53319,53391],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[53505,53591],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[53693,53732],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[53838,53870],"yaml":true},{"content":"Reads a single-precision floating-point value from the accessor.","nodes":[{"pos":[0,64],"content":"Reads a single-precision floating-point value from the accessor.","nodes":[{"content":"Reads a single-precision floating-point value from the accessor.","pos":[0,64]}]}],"pos":[55279,55344],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[55487,55552],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[55609,55634],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[55800,55872],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[55986,56072],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[56174,56213],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[56319,56351],"yaml":true},{"content":"Reads an unsigned 16-bit integer from the accessor.","nodes":[{"pos":[0,51],"content":"Reads an unsigned 16-bit integer from the accessor.","nodes":[{"content":"Reads an unsigned 16-bit integer from the accessor.","pos":[0,51]}]}],"pos":[57695,57747],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[57936,58001],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[58058,58083],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[58249,58321],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[58435,58521],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[58623,58662],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[58768,58800],"yaml":true},{"content":"Reads an unsigned 32-bit integer from the accessor.","nodes":[{"pos":[0,51],"content":"Reads an unsigned 32-bit integer from the accessor.","nodes":[{"content":"Reads an unsigned 32-bit integer from the accessor.","pos":[0,51]}]}],"pos":[60209,60261],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[60448,60513],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[60570,60595],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[60761,60833],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[60947,61033],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[61135,61174],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[61280,61312],"yaml":true},{"content":"Reads an unsigned 64-bit integer from the accessor.","nodes":[{"pos":[0,51],"content":"Reads an unsigned 64-bit integer from the accessor.","nodes":[{"content":"Reads an unsigned 64-bit integer from the accessor.","pos":[0,51]}]}],"pos":[62721,62773],"yaml":true},{"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin reading.","nodes":[{"content":"The number of bytes into the accessor at which to begin reading.","pos":[0,64]}]}],"pos":[62961,63026],"yaml":true},{"content":"The value that was read.","nodes":[{"pos":[0,24],"content":"The value that was read.","nodes":[{"content":"The value that was read.","pos":[0,24]}]}],"pos":[63083,63108],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to read a value.","nodes":[{"pos":[0,71],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read a value.","source":"There are not enough bytes after <code>position</code> to read a value."}],"pos":[63274,63346],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[63460,63546],"yaml":true},{"content":"The accessor does not support reading.","nodes":[{"pos":[0,38],"content":"The accessor does not support reading.","nodes":[{"content":"The accessor does not support reading.","pos":[0,38]}]}],"pos":[63648,63687],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[63793,63825],"yaml":true},{"content":"Writes an unsigned 64-bit integer into the accessor.","nodes":[{"pos":[0,52],"content":"Writes an unsigned 64-bit integer into the accessor.","nodes":[{"content":"Writes an unsigned 64-bit integer into the accessor.","pos":[0,52]}]}],"pos":[65272,65325],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[65520,65585],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[65646,65666],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[65827,65900],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[66014,66100],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[66202,66241],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[66347,66379],"yaml":true},{"content":"Writes an unsigned 32-bit integer into the accessor.","nodes":[{"pos":[0,52],"content":"Writes an unsigned 32-bit integer into the accessor.","nodes":[{"content":"Writes an unsigned 32-bit integer into the accessor.","pos":[0,52]}]}],"pos":[67826,67879],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[68073,68138],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[68199,68219],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[68380,68453],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[68567,68653],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[68755,68794],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[68900,68932],"yaml":true},{"content":"Writes an unsigned 16-bit integer into the accessor.","nodes":[{"pos":[0,52],"content":"Writes an unsigned 16-bit integer into the accessor.","nodes":[{"content":"Writes an unsigned 16-bit integer into the accessor.","pos":[0,52]}]}],"pos":[70377,70430],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[70626,70691],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[70752,70772],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[70933,71006],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[71120,71206],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[71308,71347],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[71453,71485],"yaml":true},{"content":"Writes a `Single` into the accessor.","nodes":[{"pos":[0,36],"content":"Writes a <ph id=\"ph1\">`Single`</ph> into the accessor.","source":"Writes a `Single` into the accessor."}],"pos":[72930,72967],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[73117,73182],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[73243,73263],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[73424,73497],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[73611,73697],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[73799,73838],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[73944,73976],"yaml":true},{"content":"Writes an 8-bit integer into the accessor.","nodes":[{"pos":[0,42],"content":"Writes an 8-bit integer into the accessor.","nodes":[{"content":"Writes an 8-bit integer into the accessor.","pos":[0,42]}]}],"pos":[75350,75393],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[75588,75653],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[75713,75733],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[75894,75967],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[76081,76167],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[76269,76308],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[76414,76446],"yaml":true},{"content":"Writes a 64-bit integer into the accessor.","nodes":[{"pos":[0,42],"content":"Writes a 64-bit integer into the accessor.","nodes":[{"content":"Writes a 64-bit integer into the accessor.","pos":[0,42]}]}],"pos":[77885,77928],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[78077,78142],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[78202,78222],"yaml":true},{"content":"There are not enough bytes after position to write a value.","nodes":[{"pos":[0,59],"content":"There are not enough bytes after position to write a value.","nodes":[{"content":"There are not enough bytes after position to write a value.","pos":[0,59]}]}],"pos":[78383,78443],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[78557,78643],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[78745,78784],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[78890,78922],"yaml":true},{"content":"Writes a `Double` value into the accessor.","nodes":[{"pos":[0,42],"content":"Writes a <ph id=\"ph1\">`Double`</ph> value into the accessor.","source":"Writes a `Double` value into the accessor."}],"pos":[80302,80345],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[80496,80561],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[80622,80642],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[80803,80876],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[80990,81076],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[81178,81217],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[81323,81355],"yaml":true},{"content":"Writes a 16-bit integer into the accessor.","nodes":[{"pos":[0,42],"content":"Writes a 16-bit integer into the accessor.","nodes":[{"content":"Writes a 16-bit integer into the accessor.","pos":[0,42]}]}],"pos":[82729,82772],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[82922,82987],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[83047,83067],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[83228,83301],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[83415,83501],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[83603,83642],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[83748,83780],"yaml":true},{"content":"Writes a decimal value into the accessor.","nodes":[{"pos":[0,41],"content":"Writes a decimal value into the accessor.","nodes":[{"content":"Writes a decimal value into the accessor.","pos":[0,41]}]}],"pos":[85166,85208],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[85360,85425],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[85487,85507],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.  \n  \n -or-  \n  \n The decimal is invalid.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,113],"content":"The decimal is invalid.","nodes":[{"content":"The decimal is invalid.","pos":[0,23]}]}],"pos":[85668,85788],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[85902,85988],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[86090,86129],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[86235,86267],"yaml":true},{"content":"Writes a character into the accessor.","nodes":[{"pos":[0,37],"content":"Writes a character into the accessor.","nodes":[{"content":"Writes a character into the accessor.","pos":[0,37]}]}],"pos":[87635,87673],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[87822,87887],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[87946,87966],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[88127,88200],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[88314,88400],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[88502,88541],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[88647,88679],"yaml":true},{"content":"Writes a byte value into the accessor.","nodes":[{"pos":[0,38],"content":"Writes a byte value into the accessor.","nodes":[{"content":"Writes a byte value into the accessor.","pos":[0,38]}]}],"pos":[90047,90086],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[90235,90300],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[90359,90379],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[90540,90613],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[90727,90813],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[90915,90954],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[91060,91092],"yaml":true},{"content":"Writes a Boolean value into the accessor.","nodes":[{"pos":[0,41],"content":"Writes a Boolean value into the accessor.","nodes":[{"content":"Writes a Boolean value into the accessor.","pos":[0,41]}]}],"pos":[92461,92503],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[92652,92717],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[92779,92799],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[92960,93033],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[93147,93233],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[93335,93374],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[93480,93512],"yaml":true},{"content":"Writes a 32-bit integer into the accessor.","nodes":[{"pos":[0,42],"content":"Writes a 32-bit integer into the accessor.","nodes":[{"content":"Writes a 32-bit integer into the accessor.","pos":[0,42]}]}],"pos":[94869,94912],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[95060,95125],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[95185,95205],"yaml":true},{"content":"There are not enough bytes after <code>position</code> to write a value.","nodes":[{"pos":[0,72],"content":"There are not enough bytes after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a value.","source":"There are not enough bytes after <code>position</code> to write a value."}],"pos":[95366,95439],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[95553,95639],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[95741,95780],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[95886,95918],"yaml":true},{"content":"Writes a structure into the accessor.","nodes":[{"pos":[0,37],"content":"Writes a structure into the accessor.","nodes":[{"content":"Writes a structure into the accessor.","pos":[0,37]}]}],"pos":[97238,97276],"yaml":true},{"content":"Use this method to write medium to large structures that are not easily accommodated by the other <xref:System.IO.UnmanagedMemoryAccessor.Write%2A> methods in this class.","nodes":[{"pos":[0,170],"content":"Use this method to write medium to large structures that are not easily accommodated by the other <xref:System.IO.UnmanagedMemoryAccessor.Write%2A> methods in this class.","nodes":[{"content":"Use this method to write medium to large structures that are not easily accommodated by the other <ph id=\"ph1\">&lt;xref:System.IO.UnmanagedMemoryAccessor.Write%2A&gt;</ph> methods in this class.","pos":[0,170],"source":"Use this method to write medium to large structures that are not easily accommodated by the other <xref:System.IO.UnmanagedMemoryAccessor.Write%2A> methods in this class."}]}],"pos":[97287,97458],"yaml":true,"extradata":"MT"},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[97683,97748],"yaml":true},{"content":"The structure to write.","nodes":[{"pos":[0,23],"content":"The structure to write.","nodes":[{"content":"The structure to write.","pos":[0,23]}]}],"pos":[97801,97825],"yaml":true},{"content":"The type of structure.","nodes":[{"pos":[0,22],"content":"The type of structure.","nodes":[{"content":"The type of structure.","pos":[0,22]}]}],"pos":[97876,97899],"yaml":true},{"content":"There are not enough bytes in the accessor after <code>position</code> to write a structure of type <code>T</code>.","nodes":[{"pos":[0,115],"content":"There are not enough bytes in the accessor after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write a structure of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"There are not enough bytes in the accessor after <code>position</code> to write a structure of type <code>T</code>."}],"pos":[98063,98179],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."}],"pos":[98293,98379],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[98481,98520],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[98626,98658],"yaml":true},{"content":"Writes structures from an array of type <code>T</code> into the accessor.","nodes":[{"pos":[0,73],"content":"Writes structures from an array of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> into the accessor.","source":"Writes structures from an array of type <code>T</code> into the accessor."}],"pos":[100122,100196],"yaml":true},{"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"pos":[0,64],"content":"The number of bytes into the accessor at which to begin writing.","nodes":[{"content":"The number of bytes into the accessor at which to begin writing.","pos":[0,64]}]}],"pos":[100443,100508],"yaml":true},{"content":"The array to write into the accessor.","nodes":[{"pos":[0,37],"content":"The array to write into the accessor.","nodes":[{"content":"The array to write into the accessor.","pos":[0,37]}]}],"pos":[100559,100597],"yaml":true},{"content":"The index in <code>array</code> to start writing from.","nodes":[{"pos":[0,54],"content":"The index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> to start writing from.","source":"The index in <code>array</code> to start writing from."}],"pos":[100658,100713],"yaml":true},{"content":"The number of structures in <code>array</code> to write.","nodes":[{"pos":[0,56],"content":"The number of structures in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write.","source":"The number of structures in <code>array</code> to write."}],"pos":[100773,100830],"yaml":true},{"content":"The type of structure.","nodes":[{"pos":[0,22],"content":"The type of structure.","nodes":[{"content":"The type of structure.","pos":[0,22]}]}],"pos":[100881,100904],"yaml":true},{"content":"There are not enough bytes in the accessor after <code>position</code> to write the number of structures specified by <code>count</code>.","nodes":[{"pos":[0,137],"content":"There are not enough bytes in the accessor after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p1\">&lt;/code&gt;</ept> to write the number of structures specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"There are not enough bytes in the accessor after <code>position</code> to write the number of structures specified by <code>count</code>."}],"pos":[101073,101211],"yaml":true},{"content":"<code>position</code> is less than zero or greater than the capacity of the accessor.  \n  \n -or-  \n  \n <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> is less than zero or greater than the capacity of the accessor.","source":"<code>position</code> is less than zero or greater than the capacity of the accessor."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,163],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>count</code> is less than zero."}],"pos":[101325,101495],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[101597,101627],"yaml":true},{"content":"The accessor does not support writing.","nodes":[{"pos":[0,38],"content":"The accessor does not support writing.","nodes":[{"content":"The accessor does not support writing.","pos":[0,38]}]}],"pos":[101729,101768],"yaml":true},{"content":"The accessor has been disposed.","nodes":[{"pos":[0,31],"content":"The accessor has been disposed.","nodes":[{"content":"The accessor has been disposed.","pos":[0,31]}]}],"pos":[101874,101906],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.UnmanagedMemoryAccessor\n  commentId: T:System.IO.UnmanagedMemoryAccessor\n  id: UnmanagedMemoryAccessor\n  children:\n  - System.IO.UnmanagedMemoryAccessor.#ctor\n  - System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryAccessor.CanRead\n  - System.IO.UnmanagedMemoryAccessor.CanWrite\n  - System.IO.UnmanagedMemoryAccessor.Capacity\n  - System.IO.UnmanagedMemoryAccessor.Dispose\n  - System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  - System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryAccessor.IsOpen\n  - System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)\n  - System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  - System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)\n  - System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: UnmanagedMemoryAccessor\n  nameWithType: UnmanagedMemoryAccessor\n  fullName: System.IO.UnmanagedMemoryAccessor\n  type: Class\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Provides random access to unmanaged blocks of memory from managed code.\n  remarks: \"The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object returns the unmanaged blocks of memory for working with views of memory-mapped files.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  syntax:\n    content: 'public class UnmanagedMemoryAccessor : IDisposable'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor\n  id: '#ctor'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: UnmanagedMemoryAccessor()\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n  type: Constructor\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class.\n  syntax:\n    content: protected UnmanagedMemoryAccessor ();\n    parameters: []\n  overload: System.IO.UnmanagedMemoryAccessor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  type: Constructor\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, and capacity.\n  syntax:\n    content: public UnmanagedMemoryAccessor (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long capacity);\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: The buffer to contain the accessor.\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the accessor.\n    - id: capacity\n      type: System.Int64\n      description: The size, in bytes, of memory to allocate.\n  overload: System.IO.UnmanagedMemoryAccessor.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> or <code>capacity</code> is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: '#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)'\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  type: Constructor\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> class with a specified buffer, offset, capacity, and access right.\n  syntax:\n    content: public UnmanagedMemoryAccessor (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long capacity, System.IO.FileAccess access);\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: The buffer to contain the accessor.\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the accessor.\n    - id: capacity\n      type: System.Int64\n      description: The size, in bytes, of memory to allocate.\n    - id: access\n      type: System.IO.FileAccess\n      description: The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.\n  overload: System.IO.UnmanagedMemoryAccessor.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.CanRead\n  commentId: P:System.IO.UnmanagedMemoryAccessor.CanRead\n  id: CanRead\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: UnmanagedMemoryAccessor.CanRead\n  fullName: UnmanagedMemoryAccessor.CanRead\n  type: Property\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Determines whether the accessor is readable.\n  syntax:\n    content: public bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the accessor is readable; otherwise, `false`.'\n  overload: System.IO.UnmanagedMemoryAccessor.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.CanWrite\n  commentId: P:System.IO.UnmanagedMemoryAccessor.CanWrite\n  id: CanWrite\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: UnmanagedMemoryAccessor.CanWrite\n  fullName: UnmanagedMemoryAccessor.CanWrite\n  type: Property\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Determines whether the accessory is writable.\n  syntax:\n    content: public bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the accessor is writable; otherwise, `false`.'\n  overload: System.IO.UnmanagedMemoryAccessor.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Capacity\n  commentId: P:System.IO.UnmanagedMemoryAccessor.Capacity\n  id: Capacity\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Capacity\n  nameWithType: UnmanagedMemoryAccessor.Capacity\n  fullName: UnmanagedMemoryAccessor.Capacity\n  type: Property\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Gets the capacity of the accessor.\n  syntax:\n    content: public long Capacity { get; }\n    return:\n      type: System.Int64\n      description: The capacity of the accessor.\n  overload: System.IO.UnmanagedMemoryAccessor.Capacity*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose\n  id: Dispose\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UnmanagedMemoryAccessor.Dispose()\n  fullName: UnmanagedMemoryAccessor.Dispose()\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Releases all resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.UnmanagedMemoryAccessor.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: UnmanagedMemoryAccessor.Dispose(Boolean)\n  fullName: UnmanagedMemoryAccessor.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.UnmanagedMemoryAccessor\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.UnmanagedMemoryAccessor> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.UnmanagedMemoryAccessor.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  id: Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Sets the initial values for the accessor.\n  remarks: This method is called by the constructors for this class.\n  syntax:\n    content: protected void Initialize (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long capacity, System.IO.FileAccess access);\n    parameters:\n    - id: buffer\n      type: System.Runtime.InteropServices.SafeBuffer\n      description: The buffer to contain the accessor.\n    - id: offset\n      type: System.Int64\n      description: The byte at which to start the accessor.\n    - id: capacity\n      type: System.Int64\n      description: The size, in bytes, of memory to allocate.\n    - id: access\n      type: System.IO.FileAccess\n      description: The type of access allowed to the memory. The default is <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite\"></xref>.\n  overload: System.IO.UnmanagedMemoryAccessor.Initialize*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>capacity</code> is greater than <code>buffer</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>capacity</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>access</code> is not a valid <xref href=\\\"System.IO.MemoryMappedFiles.MemoryMappedFileAccess\\\"></xref> enumeration value.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>offset</code> plus <code>capacity</code> would wrap around the high end of the address space.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.IsOpen\n  commentId: P:System.IO.UnmanagedMemoryAccessor.IsOpen\n  id: IsOpen\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: IsOpen\n  nameWithType: UnmanagedMemoryAccessor.IsOpen\n  fullName: UnmanagedMemoryAccessor.IsOpen\n  type: Property\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Determines whether the accessor is currently open by a process.\n  syntax:\n    content: protected bool IsOpen { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the accessor is open; otherwise, `false`.'\n  overload: System.IO.UnmanagedMemoryAccessor.IsOpen*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)\n  id: Read``1(System.Int64,``0@)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Read<T>(Int64, T)\n  nameWithType: UnmanagedMemoryAccessor.Read<T>(Int64, T)\n  fullName: UnmanagedMemoryAccessor.Read<T>(Int64, T)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a structure of type <code>T</code> from the accessor into a provided reference.\n  remarks: Use this method to read medium to large structures that are not easily accommodated by the other read methods in this class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void Read<T> (long position, out T structure) where T : struct;\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The position in the accessor at which to begin reading.\n    - id: structure\n      type: T\n      description: The structure to contain the read data.\n    typeParameters:\n    - id: T\n      description: The type of structure.\n  overload: System.IO.UnmanagedMemoryAccessor.Read``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"There are not enough bytes after <code>position</code> to read in a structure of type <code>T</code>.  \\n  \\n -or-  \\n  \\n `T` is a value type that contains one or more reference types.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  id: ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadArray<T>(Int64, T[], Int32, Int32)\n  nameWithType: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)\n  fullName: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads structures of type <code>T</code> from the accessor into an array of type <code>T</code>.\n  remarks: This method is not safe.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public int ReadArray<T> (long position, T[] array, int offset, int count) where T : struct;\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes in the accessor at which to begin reading.\n    - id: array\n      type: T[]\n      description: The array to contain the structures read from the accessor.\n    - id: offset\n      type: System.Int32\n      description: The index in <code>array</code> in which to place the first copied structure.\n    - id: count\n      type: System.Int32\n      description: The number of structures of type <code>T</code> to read from the accessor.\n    typeParameters:\n    - id: T\n      description: The type of structure.\n    return:\n      type: System.Int32\n      description: The number of structures read into <code>array</code>. This value can be less than <code>count</code> if there are fewer structures available, or zero if the end of the accessor is reached.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadArray``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>array</code> is not large enough to contain <code>count</code> of structures (starting from <code>position</code>).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  id: ReadBoolean(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadBoolean(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadBoolean(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadBoolean(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a Boolean value from the accessor.\n  syntax:\n    content: public bool ReadBoolean (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Boolean\n      description: '`true` or `false`.'\n  overload: System.IO.UnmanagedMemoryAccessor.ReadBoolean*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  id: ReadByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadByte(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadByte(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadByte(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a byte value from the accessor.\n  syntax:\n    content: public byte ReadByte (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Byte\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadByte*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  id: ReadChar(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadChar(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadChar(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadChar(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a character from the accessor.\n  syntax:\n    content: public char ReadChar (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Char\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadChar*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  id: ReadDecimal(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadDecimal(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadDecimal(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadDecimal(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a decimal value from the accessor.\n  syntax:\n    content: public decimal ReadDecimal (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Decimal\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadDecimal*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"There are not enough bytes after <code>position</code> to read a value.  \\n  \\n -or-  \\n  \\n The decimal to read is invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  id: ReadDouble(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadDouble(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadDouble(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadDouble(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a double-precision floating-point value from the accessor.\n  syntax:\n    content: public double ReadDouble (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Double\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadDouble*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  id: ReadInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadInt16(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt16(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt16(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a 16-bit integer from the accessor.\n  syntax:\n    content: public short ReadInt16 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Int16\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadInt16*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  id: ReadInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadInt32(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt32(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt32(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a 32-bit integer from the accessor.\n  syntax:\n    content: public int ReadInt32 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Int32\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadInt32*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  id: ReadInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadInt64(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt64(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt64(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a 64-bit integer from the accessor.\n  syntax:\n    content: public long ReadInt64 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Int64\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadInt64*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  id: ReadSByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadSByte(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadSByte(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadSByte(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads an 8-bit signed integer from the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public sbyte ReadSByte (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.SByte\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadSByte*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int16\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  id: ReadSingle(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadSingle(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadSingle(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadSingle(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads a single-precision floating-point value from the accessor.\n  syntax:\n    content: public float ReadSingle (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.Single\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadSingle*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  id: ReadUInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadUInt16(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt16(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt16(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads an unsigned 16-bit integer from the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public ushort ReadUInt16 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.UInt16\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadUInt16*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int32\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  id: ReadUInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadUInt32(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt32(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt32(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads an unsigned 32-bit integer from the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public uint ReadUInt32 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.UInt32\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadUInt32*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int64\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  id: ReadUInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: ReadUInt64(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt64(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt64(Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Reads an unsigned 64-bit integer from the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public ulong ReadUInt64 (long position);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin reading.\n    return:\n      type: System.UInt64\n      description: The value that was read.\n  overload: System.IO.UnmanagedMemoryAccessor.ReadUInt64*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to read a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support reading.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Decimal\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  id: Write(System.Int64,System.UInt64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, UInt64)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt64)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes an unsigned 64-bit integer into the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public void Write (long position, ulong value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.UInt64\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Decimal\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  id: Write(System.Int64,System.UInt32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, UInt32)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt32)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt32)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes an unsigned 32-bit integer into the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public void Write (long position, uint value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.UInt32\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int64\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  id: Write(System.Int64,System.UInt16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, UInt16)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt16)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt16)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes an unsigned 16-bit integer into the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public void Write (long position, ushort value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.UInt16\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int32\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  id: Write(System.Int64,System.Single)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Single)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Single)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Single)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a `Single` into the accessor.\n  syntax:\n    content: public void Write (long position, float value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Single\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  id: Write(System.Int64,System.SByte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, SByte)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, SByte)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, SByte)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes an 8-bit integer into the accessor.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public void Write (long position, sbyte value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.SByte\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Int16\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  id: Write(System.Int64,System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Int64)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int64)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int64)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a 64-bit integer into the accessor.\n  syntax:\n    content: public void Write (long position, long value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Int64\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after position to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  id: Write(System.Int64,System.Double)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Double)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Double)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Double)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a `Double` value into the accessor.\n  syntax:\n    content: public void Write (long position, double value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Double\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  id: Write(System.Int64,System.Int16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Int16)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int16)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int16)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a 16-bit integer into the accessor.\n  syntax:\n    content: public void Write (long position, short value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Int16\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  id: Write(System.Int64,System.Decimal)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Decimal)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Decimal)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Decimal)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a decimal value into the accessor.\n  syntax:\n    content: public void Write (long position, decimal value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Decimal\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"There are not enough bytes after <code>position</code> to write a value.  \\n  \\n -or-  \\n  \\n The decimal is invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  id: Write(System.Int64,System.Char)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Char)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Char)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Char)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a character into the accessor.\n  syntax:\n    content: public void Write (long position, char value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Char\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  id: Write(System.Int64,System.Byte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Byte)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Byte)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Byte)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a byte value into the accessor.\n  syntax:\n    content: public void Write (long position, byte value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Byte\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  id: Write(System.Int64,System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Boolean)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Boolean)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Boolean)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a Boolean value into the accessor.\n  syntax:\n    content: public void Write (long position, bool value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Boolean\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  id: Write(System.Int64,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write(Int64, Int32)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int32)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int32)\n  type: Method\n  assemblies:\n  - System.IO.UnmanagedMemoryStream\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a 32-bit integer into the accessor.\n  syntax:\n    content: public void Write (long position, int value);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: value\n      type: System.Int32\n      description: The value to write.\n  overload: System.IO.UnmanagedMemoryAccessor.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes after <code>position</code> to write a value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)\n  id: Write``1(System.Int64,``0@)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: Write<T>(Int64, T)\n  nameWithType: UnmanagedMemoryAccessor.Write<T>(Int64, T)\n  fullName: UnmanagedMemoryAccessor.Write<T>(Int64, T)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes a structure into the accessor.\n  remarks: Use this method to write medium to large structures that are not easily accommodated by the other <xref:System.IO.UnmanagedMemoryAccessor.Write%2A> methods in this class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void Write<T> (long position, ref T structure) where T : struct;\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: structure\n      type: T\n      description: The structure to write.\n    typeParameters:\n    - id: T\n      description: The type of structure.\n  overload: System.IO.UnmanagedMemoryAccessor.Write``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes in the accessor after <code>position</code> to write a structure of type <code>T</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> is less than zero or greater than the capacity of the accessor.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  commentId: M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  id: WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  langs:\n  - csharp\n  name: WriteArray<T>(Int64, T[], Int32, Int32)\n  nameWithType: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)\n  fullName: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.IO\n  summary: Writes structures from an array of type <code>T</code> into the accessor.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void WriteArray<T> (long position, T[] array, int offset, int count) where T : struct;\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The number of bytes into the accessor at which to begin writing.\n    - id: array\n      type: T[]\n      description: The array to write into the accessor.\n    - id: offset\n      type: System.Int32\n      description: The index in <code>array</code> to start writing from.\n    - id: count\n      type: System.Int32\n      description: The number of structures in <code>array</code> to write.\n    typeParameters:\n    - id: T\n      description: The type of structure.\n  overload: System.IO.UnmanagedMemoryAccessor.WriteArray``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are not enough bytes in the accessor after <code>position</code> to write the number of structures specified by <code>count</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>position</code> is less than zero or greater than the capacity of the accessor.  \\n  \\n -or-  \\n  \\n <code>offset</code> or <code>count</code> is less than zero.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The accessor does not support writing.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The accessor has been disposed.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: UnmanagedMemoryAccessor()\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor()\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64)\n- uid: System.Runtime.InteropServices.SafeBuffer\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeBuffer\n  nameWithType: SafeBuffer\n  fullName: System.Runtime.InteropServices.SafeBuffer\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.UnmanagedMemoryAccessor.CanRead\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: CanRead\n  nameWithType: UnmanagedMemoryAccessor.CanRead\n  fullName: UnmanagedMemoryAccessor.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.UnmanagedMemoryAccessor.CanWrite\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: CanWrite\n  nameWithType: UnmanagedMemoryAccessor.CanWrite\n  fullName: UnmanagedMemoryAccessor.CanWrite\n- uid: System.IO.UnmanagedMemoryAccessor.Capacity\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Capacity\n  nameWithType: UnmanagedMemoryAccessor.Capacity\n  fullName: UnmanagedMemoryAccessor.Capacity\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Dispose()\n  nameWithType: UnmanagedMemoryAccessor.Dispose()\n  fullName: UnmanagedMemoryAccessor.Dispose()\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: UnmanagedMemoryAccessor.Dispose(Boolean)\n  fullName: UnmanagedMemoryAccessor.Dispose(Boolean)\n- uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  nameWithType: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n  fullName: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)\n- uid: System.IO.UnmanagedMemoryAccessor.IsOpen\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: IsOpen\n  nameWithType: UnmanagedMemoryAccessor.IsOpen\n  fullName: UnmanagedMemoryAccessor.IsOpen\n- uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Read<T>(Int64, T)\n  nameWithType: UnmanagedMemoryAccessor.Read<T>(Int64, T)\n  fullName: UnmanagedMemoryAccessor.Read<T>(Int64, T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadArray<T>(Int64, T[], Int32, Int32)\n  nameWithType: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)\n  fullName: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T[]\n  isExternal: true\n  name: T[]\n  nameWithType: T[]\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadBoolean(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadBoolean(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadBoolean(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadByte(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadByte(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadByte(Int64)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadChar(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadChar(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadChar(Int64)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadDecimal(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadDecimal(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadDecimal(Int64)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadDouble(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadDouble(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadDouble(Int64)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt16(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt16(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt16(Int64)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt32(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt32(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt32(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt64(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadInt64(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadInt64(Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadSByte(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadSByte(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadSByte(Int64)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadSingle(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadSingle(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadSingle(Int64)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt16(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt16(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt16(Int64)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt32(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt32(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt32(Int64)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt64(Int64)\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt64(Int64)\n  fullName: UnmanagedMemoryAccessor.ReadUInt64(Int64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, UInt64)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt64)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt64)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, UInt32)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt32)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt32)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, UInt16)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt16)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, UInt16)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Single)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Single)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Single)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, SByte)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, SByte)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, SByte)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Int64)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int64)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int64)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Double)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Double)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Double)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Int16)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int16)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int16)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Decimal)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Decimal)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Decimal)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Char)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Char)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Char)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Byte)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Byte)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Byte)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Boolean)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Boolean)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Boolean)\n- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write(Int64, Int32)\n  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int32)\n  fullName: UnmanagedMemoryAccessor.Write(Int64, Int32)\n- uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write<T>(Int64, T)\n  nameWithType: UnmanagedMemoryAccessor.Write<T>(Int64, T)\n  fullName: UnmanagedMemoryAccessor.Write<T>(Int64, T)\n- uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: WriteArray<T>(Int64, T[], Int32, Int32)\n  nameWithType: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)\n  fullName: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)\n- uid: System.IO.UnmanagedMemoryAccessor.#ctor*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: UnmanagedMemoryAccessor\n  nameWithType: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor\n  fullName: UnmanagedMemoryAccessor.UnmanagedMemoryAccessor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.CanRead*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: CanRead\n  nameWithType: UnmanagedMemoryAccessor.CanRead\n  fullName: UnmanagedMemoryAccessor.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.CanWrite*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: CanWrite\n  nameWithType: UnmanagedMemoryAccessor.CanWrite\n  fullName: UnmanagedMemoryAccessor.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Capacity*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Capacity\n  nameWithType: UnmanagedMemoryAccessor.Capacity\n  fullName: UnmanagedMemoryAccessor.Capacity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Dispose*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Dispose\n  nameWithType: UnmanagedMemoryAccessor.Dispose\n  fullName: UnmanagedMemoryAccessor.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Initialize*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Initialize\n  nameWithType: UnmanagedMemoryAccessor.Initialize\n  fullName: UnmanagedMemoryAccessor.Initialize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.IsOpen*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: IsOpen\n  nameWithType: UnmanagedMemoryAccessor.IsOpen\n  fullName: UnmanagedMemoryAccessor.IsOpen\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Read``1*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Read<T>\n  nameWithType: UnmanagedMemoryAccessor.Read<T>\n  fullName: UnmanagedMemoryAccessor.Read<T>\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadArray<T>\n  nameWithType: UnmanagedMemoryAccessor.ReadArray<T>\n  fullName: UnmanagedMemoryAccessor.ReadArray<T>\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadBoolean\n  nameWithType: UnmanagedMemoryAccessor.ReadBoolean\n  fullName: UnmanagedMemoryAccessor.ReadBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadByte*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadByte\n  nameWithType: UnmanagedMemoryAccessor.ReadByte\n  fullName: UnmanagedMemoryAccessor.ReadByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadChar*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadChar\n  nameWithType: UnmanagedMemoryAccessor.ReadChar\n  fullName: UnmanagedMemoryAccessor.ReadChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadDecimal\n  nameWithType: UnmanagedMemoryAccessor.ReadDecimal\n  fullName: UnmanagedMemoryAccessor.ReadDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadDouble*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadDouble\n  nameWithType: UnmanagedMemoryAccessor.ReadDouble\n  fullName: UnmanagedMemoryAccessor.ReadDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt16*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt16\n  nameWithType: UnmanagedMemoryAccessor.ReadInt16\n  fullName: UnmanagedMemoryAccessor.ReadInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt32*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt32\n  nameWithType: UnmanagedMemoryAccessor.ReadInt32\n  fullName: UnmanagedMemoryAccessor.ReadInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadInt64*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadInt64\n  nameWithType: UnmanagedMemoryAccessor.ReadInt64\n  fullName: UnmanagedMemoryAccessor.ReadInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSByte*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadSByte\n  nameWithType: UnmanagedMemoryAccessor.ReadSByte\n  fullName: UnmanagedMemoryAccessor.ReadSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadSingle*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadSingle\n  nameWithType: UnmanagedMemoryAccessor.ReadSingle\n  fullName: UnmanagedMemoryAccessor.ReadSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt16\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt16\n  fullName: UnmanagedMemoryAccessor.ReadUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt32\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt32\n  fullName: UnmanagedMemoryAccessor.ReadUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: ReadUInt64\n  nameWithType: UnmanagedMemoryAccessor.ReadUInt64\n  fullName: UnmanagedMemoryAccessor.ReadUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Write*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write\n  nameWithType: UnmanagedMemoryAccessor.Write\n  fullName: UnmanagedMemoryAccessor.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.Write``1*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: Write<T>\n  nameWithType: UnmanagedMemoryAccessor.Write<T>\n  fullName: UnmanagedMemoryAccessor.Write<T>\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1*\n  parent: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: WriteArray<T>\n  nameWithType: UnmanagedMemoryAccessor.WriteArray<T>\n  fullName: UnmanagedMemoryAccessor.WriteArray<T>\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/UnmanagedMemoryAccessor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}