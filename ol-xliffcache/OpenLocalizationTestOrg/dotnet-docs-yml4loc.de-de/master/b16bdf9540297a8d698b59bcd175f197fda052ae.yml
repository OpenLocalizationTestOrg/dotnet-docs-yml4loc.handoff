### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ISynchronizeInvoke
  commentId: T:System.ComponentModel.ISynchronizeInvoke
  id: ISynchronizeInvoke
  children:
  - System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  - System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  langs:
  - csharp
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
  type: Interface
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: Provides a way to synchronously or asynchronously execute a delegate.
  remarks: "The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event. Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event. In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.  \n  \n The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:  \n  \n1.  Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately. Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.  \n  \n2.  Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns. Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)."
  syntax:
    content: public interface ISynchronizeInvoke
  derivedClasses:
  - System.Windows.Forms.Control
  implements: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  commentId: M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: BeginInvoke(Delegate, Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate, Object[])
  fullName: ISynchronizeInvoke.BeginInvoke(Delegate, Object[])
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: Asynchronously executes the delegate on the thread that created this object.
  remarks: "The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.  \n  \n The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread. If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.  \n  \n If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead."
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: A <xref href="System.Delegate"></xref> to a method that takes parameters of the same number and type that are contained in <code>args</code>.
    - id: args
      type: System.Object[]
      description: An array of type <xref href="System.Object"></xref> to pass as arguments to the given method. This can be `null` if no arguments are needed.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> interface that represents the asynchronous operation started by calling this method.
  overload: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  commentId: M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: Waits until the process started by calling <xref href="System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])"></xref> completes, and then returns the value generated by the process.
  remarks: This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface. If the asynchronous operation has not completed, this method will wait until the result is available.
  syntax:
    content: public object EndInvoke (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> interface that represents the asynchronous operation started by calling <xref href="System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])"></xref>.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the return value generated by the asynchronous operation.
  overload: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  commentId: M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  id: Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: Invoke(Delegate, Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate, Object[])
  fullName: ISynchronizeInvoke.Invoke(Delegate, Object[])
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.
  remarks: "Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning. Exceptions raised during the call are propagated back to the caller.  \n  \n Use this method when calling a method from a different thread to marshal the call to the proper thread."
  syntax:
    content: public object Invoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: A <xref href="System.Delegate"></xref> that contains a method to call, in the context of the thread for the control.
    - id: args
      type: System.Object[]
      description: An array of type <xref href="System.Object"></xref> that represents the arguments to pass to the given method. This can be `null` if no arguments are needed.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the return value from the delegate being invoked, or `null` if the delegate has no return value.
  overload: System.ComponentModel.ISynchronizeInvoke.Invoke*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  commentId: P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  id: InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: ISynchronizeInvoke.InvokeRequired
  type: Property
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: Gets a value indicating whether the caller must call <xref href="System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])"></xref> when calling an object that implements this interface.
  remarks: This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface. Such objects are bound to a specific thread and are not thread-safe. If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.
  syntax:
    content: public bool InvokeRequired { get; }
    return:
      type: System.Boolean
      description: '`true` if the caller must call <xref href="System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])"></xref>; otherwise, `false`.'
  overload: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke(Delegate, Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate, Object[])
  fullName: ISynchronizeInvoke.BeginInvoke(Delegate, Object[])
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: ISynchronizeInvoke.EndInvoke(IAsyncResult)
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke(Delegate, Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate, Object[])
  fullName: ISynchronizeInvoke.Invoke(Delegate, Object[])
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: ISynchronizeInvoke.InvokeRequired
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke
  nameWithType: ISynchronizeInvoke.BeginInvoke
  fullName: ISynchronizeInvoke.BeginInvoke
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke
  nameWithType: ISynchronizeInvoke.EndInvoke
  fullName: ISynchronizeInvoke.EndInvoke
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke
  nameWithType: ISynchronizeInvoke.Invoke
  fullName: ISynchronizeInvoke.Invoke
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: ISynchronizeInvoke.InvokeRequired
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ISynchronizeInvoke.xml
