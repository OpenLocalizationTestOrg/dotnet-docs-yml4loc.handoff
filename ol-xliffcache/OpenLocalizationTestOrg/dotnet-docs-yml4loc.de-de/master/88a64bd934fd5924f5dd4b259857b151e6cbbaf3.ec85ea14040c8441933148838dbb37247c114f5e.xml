{"nodes":[{"content":"A Visual Basic `Collection` is an ordered set of items that can be referred to as a unit.","nodes":[{"pos":[0,89],"content":"A Visual Basic <ph id=\"ph1\">`Collection`</ph> is an ordered set of items that can be referred to as a unit.","source":"A Visual Basic `Collection` is an ordered set of items that can be referred to as a unit."}],"pos":[2582,2672],"yaml":true},{"content":"> [!NOTE]\n>  Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`. For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).  \n  \n The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object. The items, or *elements*, in a collection need only be related by the fact that they exist in the collection. Elements of a collection do not have to share the same data type.  \n  \n You can create a collection the same way you create other objects, as the following example illustrates.  \n  \n```  \nDim coll As New Microsoft.VisualBasic.Collection()  \n```  \n  \n Once you have created a collection, you can do any of the following:  \n  \n-   Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.  \n  \n-   Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.  \n  \n-   Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.  \n  \n-   Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.  \n  \n-   Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.  \n  \n-   Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.  \n  \n-   Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).  \n  \n    > [!NOTE]\n    >  Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.  \n  \n    > [!CAUTION]\n    >  Iterating through a Visual Basic `Collection` is not a thread-safe procedure. Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception. To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads. For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).","nodes":[{"pos":[2,353],"content":"[!NOTE]\n Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`. For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).","leadings":["","> "],"nodes":[{"content":" Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`. For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).","pos":[8,349],"nodes":[{"content":"Whenever possible, you should use the generic collections in the <ph id=\"ph1\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph> namespace or the <ph id=\"ph2\">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace instead of a Visual Basic <ph id=\"ph3\">`Collection`</ph>.","pos":[1,228],"source":" Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Collections<ept id=\"p1\">](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b)</ept>.","pos":[229,341],"source":" For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b)."}]}]},{"pos":[360,655],"content":"The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object. The items, or *elements*, in a collection need only be related by the fact that they exist in the collection. Elements of a collection do not have to share the same data type.","nodes":[{"content":"The Visual Basic <ph id=\"ph1\">`Collection`</ph> object provides a convenient way to refer to a related group of items as a single object.","pos":[0,119],"source":"The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object."},{"content":"The items, or <bpt id=\"p1\">*</bpt>elements<ept id=\"p1\">*</ept>, in a collection need only be related by the fact that they exist in the collection.","pos":[120,229],"source":" The items, or *elements*, in a collection need only be related by the fact that they exist in the collection."},{"content":"Elements of a collection do not have to share the same data type.","pos":[230,295]}]},{"pos":[662,766],"content":"You can create a collection the same way you create other objects, as the following example illustrates.","nodes":[{"content":"You can create a collection the same way you create other objects, as the following example illustrates.","pos":[0,104]}]},{"pos":[841,909],"content":"Once you have created a collection, you can do any of the following:","nodes":[{"content":"Once you have created a collection, you can do any of the following:","pos":[0,68]}]},{"pos":[919,997],"content":"Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.","nodes":[{"content":"Add an element with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph> method.","pos":[0,78],"source":"Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method."}]},{"pos":[1007,1091],"content":"Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.","nodes":[{"content":"Remove an element with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;</ph> method.","pos":[0,84],"source":"Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method."}]},{"pos":[1101,1186],"content":"Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.","nodes":[{"content":"Remove all elements with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;</ph> method.","pos":[0,85],"source":"Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method."}]},{"pos":[1196,1314],"content":"Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.","nodes":[{"content":"Find out how many elements the collection contains with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property.","pos":[0,118],"source":"Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property."}]},{"pos":[1324,1436],"content":"Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.","nodes":[{"content":"Check whether a specific element is present with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;</ph> method.","pos":[0,112],"source":"Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method."}]},{"pos":[1446,1558],"content":"Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.","nodes":[{"content":"Return a specific element from the collection with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph> property.","pos":[0,112],"source":"Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property."}]},{"pos":[1568,1721],"content":"Iterate through the entire collection with the <bpt id=\"p1\">[</bpt>For Each...Next Statement<ept id=\"p1\">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>.","source":"Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)."},{"pos":[1733,1919],"content":"[!NOTE]\nAlthough the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.","leadings":["","    >  "],"nodes":[{"content":"Although the Visual Basic <ph id=\"ph1\">`Collection`</ph> object has functionality identical to the <ph id=\"ph2\">`Collection`</ph> object in Visual Basic 6.0, the two cannot interoperate in a COM environment.","pos":[8,179],"source":"Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment."}]},{"pos":[1931,2457],"content":"[!CAUTION]\nIterating through a Visual Basic `Collection` is not a thread-safe procedure. Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception. To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads. For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).","leadings":["","    >  "],"nodes":[{"content":"Iterating through a Visual Basic `Collection` is not a thread-safe procedure. Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception. To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads. For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).","pos":[11,519],"nodes":[{"content":"Iterating through a Visual Basic <ph id=\"ph1\">`Collection`</ph> is not a thread-safe procedure.","pos":[0,77],"source":"Iterating through a Visual Basic `Collection` is not a thread-safe procedure."},{"content":"Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.","pos":[78,210]},{"content":"To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.","pos":[211,354]},{"content":"For more information on locking a programming element, see <bpt id=\"p1\">[</bpt>SyncLock Statement<ept id=\"p1\">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept>.","pos":[355,508],"source":" For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md)."}]}]}],"pos":[2683,5174],"yaml":true,"extradata":"MT"},{"content":"Creates and returns a new [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,131],"content":"Creates and returns a new <ph id=\"ph1\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and returns a new [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[7962,8094],"yaml":true},{"content":"The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collection returned by this constructor is empty and does not have any initial capacity allocated.  \n  \n [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=fullName>, <xref:System.Collections.Generic?displayProperty=fullName>, and <xref:System.Collections.Specialized?displayProperty=fullName> namespaces.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collection returned by this constructor is empty and does not have any initial capacity allocated.","source":"The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collection returned by this constructor is empty and does not have any initial capacity allocated."},{"pos":[153,510],"content":"<ph id=\"ph1\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collections are not compatible with the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> collections available in the <ph id=\"ph3\">&lt;xref:System.Collections?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Collections.Specialized?displayProperty=fullName&gt;</ph> namespaces.","source":"[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=fullName>, <xref:System.Collections.Generic?displayProperty=fullName>, and <xref:System.Collections.Specialized?displayProperty=fullName> namespaces."}],"pos":[8105,8620],"yaml":true,"extradata":"MT"},{"content":"Adds an element to a `Collection` object.","nodes":[{"pos":[0,41],"content":"Adds an element to a <ph id=\"ph1\">`Collection`</ph> object.","source":"Adds an element to a `Collection` object."}],"pos":[10327,10369],"yaml":true},{"content":"The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.  \n  \n If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.  \n  \n An error also occurs if a specified `Key` value matches the key for an existing element of the collection.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">`Before`</ph> or <ph id=\"ph2\">`After`</ph> argument must refer to an existing element of the collection; otherwise, an error occurs.","source":"The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs."},{"pos":[120,229],"content":"If both the <ph id=\"ph1\">`Before`</ph> and <ph id=\"ph2\">`After`</ph> arguments are omitted, the new object is added to the end of the collection.","source":"If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection."},{"pos":[236,342],"content":"An error also occurs if a specified <ph id=\"ph1\">`Key`</ph> value matches the key for an existing element of the collection.","source":"An error also occurs if a specified `Key` value matches the key for an existing element of the collection."}],"pos":[10380,10729],"yaml":true,"extradata":"MT"},{"content":"Required. An object of any type that specifies the element to add to the collection.","nodes":[{"pos":[0,84],"content":"Required. An object of any type that specifies the element to add to the collection.","nodes":[{"content":"Required. An object of any type that specifies the element to add to the collection.","pos":[0,84],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"An object of any type that specifies the element to add to the collection.","pos":[10,84]}]}]}],"pos":[11730,11815],"yaml":true},{"content":"Optional. A unique `String` expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.","nodes":[{"pos":[0,159],"content":"Optional. A unique `String` expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A unique <ph id=\"ph1\">`String`</ph> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.","pos":[10,159],"source":" A unique `String` expression that specifies a key string that can be used instead of a positional index to access this new element in the collection."}]}],"pos":[11874,12034],"yaml":true},{"content":"Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the <code>Before</code> argument. If <code>Before</code> is a numeric expression, it must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. If <code>Before</code> is a `String` expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.","nodes":[{"pos":[0,607],"content":"Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the <code>Before</code> argument. If <code>Before</code> is a numeric expression, it must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. If <code>Before</code> is a `String` expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"An expression that specifies a relative position in the collection.","pos":[10,77]},{"content":"The element to be added is placed in the collection before the element identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Before</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","pos":[78,196],"source":" The element to be added is placed in the collection before the element identified by the <code>Before</code> argument."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Before</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a numeric expression, it must be a number from 1 through the value of the collection's <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection.Count\"&gt;&lt;/xref&gt;</ph> property.","pos":[197,379],"source":" If <code>Before</code> is a numeric expression, it must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Before</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph2\">`String`</ph> expression, it must correspond to the key string specified when the element being referred to was added to the collection.","pos":[380,539],"source":" If <code>Before</code> is a `String` expression, it must correspond to the key string specified when the element being referred to was added to the collection."},{"content":"You cannot specify both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Before</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">After</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[540,607],"source":" You cannot specify both <code>Before</code> and <code>After</code>."}]}],"pos":[12096,12704],"yaml":true},{"content":"Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the <code>After</code> argument. If <code>After</code> is a numeric expression, it must be a number from 1 through the value of the collection's `Count` property. If <code>After</code> is a `String` expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.","nodes":[{"pos":[0,545],"content":"Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the <code>After</code> argument. If <code>After</code> is a numeric expression, it must be a number from 1 through the value of the collection's `Count` property. If <code>After</code> is a `String` expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"An expression that specifies a relative position in the collection.","pos":[10,77]},{"content":"The element to be added is placed in the collection after the element identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">After</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","pos":[78,194],"source":" The element to be added is placed in the collection after the element identified by the <code>After</code> argument."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">After</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a numeric expression, it must be a number from 1 through the value of the collection's <ph id=\"ph2\">`Count`</ph> property.","pos":[195,324],"source":" If <code>After</code> is a numeric expression, it must be a number from 1 through the value of the collection's `Count` property."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">After</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph2\">`String`</ph> expression, it must correspond to the key string specified when the element referred to was added to the collection.","pos":[325,477],"source":" If <code>After</code> is a `String` expression, it must correspond to the key string specified when the element referred to was added to the collection."},{"content":"You cannot specify both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Before</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">After</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[478,545],"source":" You cannot specify both <code>Before</code> and <code>After</code>."}]}],"pos":[12765,13311],"yaml":true},{"content":"Deletes all elements of a Visual Basic `Collection` object.","nodes":[{"pos":[0,59],"content":"Deletes all elements of a Visual Basic <ph id=\"ph1\">`Collection`</ph> object.","source":"Deletes all elements of a Visual Basic `Collection` object."}],"pos":[14231,14291],"yaml":true},{"content":"The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">`Clear`</ph> method empties the collection and resets its <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property to 0.","source":"The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0."}],"pos":[14302,14423],"yaml":true,"extradata":"MT"},{"content":"Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key.","nodes":[{"pos":[0,120],"content":"Returns a <ph id=\"ph1\">`Boolean`</ph> value indicating whether a Visual Basic <ph id=\"ph2\">`Collection`</ph> object contains an element with a specific key.","source":"Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key."}],"pos":[15637,15758],"yaml":true},{"content":"`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`. Otherwise, `Contains` returns `False`. Case is ignored when matching key values.  \n  \n A Visual Basic `Collection` can hold some elements that have keys and other elements without keys. This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.","nodes":[{"pos":[0,179],"content":"`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`. Otherwise, `Contains` returns `False`. Case is ignored when matching key values.","nodes":[{"content":"<ph id=\"ph1\">`Contains`</ph> returns <ph id=\"ph2\">`True`</ph> if the collection contains an element with a key exactly matching <ph id=\"ph3\">`Key`</ph>.","pos":[0,98],"source":"`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`."},{"content":"Otherwise, <ph id=\"ph1\">`Contains`</ph> returns <ph id=\"ph2\">`False`</ph>.","pos":[99,137],"source":" Otherwise, `Contains` returns `False`."},{"content":"Case is ignored when matching key values.","pos":[138,179]}]},{"pos":[186,432],"content":"A Visual Basic `Collection` can hold some elements that have keys and other elements without keys. This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.","nodes":[{"content":"A Visual Basic <ph id=\"ph1\">`Collection`</ph> can hold some elements that have keys and other elements without keys.","pos":[0,98],"source":"A Visual Basic `Collection` can hold some elements that have keys and other elements without keys."},{"content":"This depends on whether the call to the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph> method supplies an argument to the optional <ph id=\"ph2\">`Key`</ph> parameter.","pos":[99,246],"source":" This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter."}]}],"pos":[15769,16206],"yaml":true,"extradata":"MT"},{"content":"Required. A `String` expression that specifies the key for which to search the elements of the collection.","nodes":[{"pos":[0,106],"content":"Required. A `String` expression that specifies the key for which to search the elements of the collection.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <ph id=\"ph1\">`String`</ph> expression that specifies the key for which to search the elements of the collection.","pos":[10,106],"source":" A `String` expression that specifies the key for which to search the elements of the collection."}]}],"pos":[16640,16747],"yaml":true},{"content":"Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key.","nodes":[{"pos":[0,120],"content":"Returns a <ph id=\"ph1\">`Boolean`</ph> value indicating whether a Visual Basic <ph id=\"ph2\">`Collection`</ph> object contains an element with a specific key.","source":"Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key."}],"pos":[16805,16926],"yaml":true},{"content":"Returns an `Integer` containing the number of elements in a collection. Read-only.","nodes":[{"pos":[0,82],"content":"Returns an `Integer` containing the number of elements in a collection. Read-only.","nodes":[{"content":"Returns an <ph id=\"ph1\">`Integer`</ph> containing the number of elements in a collection.","pos":[0,71],"source":"Returns an `Integer` containing the number of elements in a collection."},{"content":"Read-only.","pos":[72,82]}]}],"pos":[17847,17930],"yaml":true},{"content":"Use the `Count` property to determine the number of elements in a `Collection` object.","nodes":[{"pos":[0,86],"content":"Use the <ph id=\"ph1\">`Count`</ph> property to determine the number of elements in a <ph id=\"ph2\">`Collection`</ph> object.","source":"Use the `Count` property to determine the number of elements in a `Collection` object."}],"pos":[17941,18028],"yaml":true,"extradata":"MT"},{"content":"Returns an `Integer` containing the number of elements in a collection. Read-only.","nodes":[{"pos":[0,82],"content":"Returns an `Integer` containing the number of elements in a collection. Read-only.","nodes":[{"content":"Returns an <ph id=\"ph1\">`Integer`</ph> containing the number of elements in a collection.","pos":[0,71],"source":"Returns an `Integer` containing the number of elements in a collection."},{"content":"Read-only.","pos":[72,82]}]}],"pos":[18745,18828],"yaml":true},{"content":"Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,138],"content":"Returns a reference to an enumerator object, which is used to iterate over a <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[19798,19937],"yaml":true},{"content":"The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements. Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.  \n  \n If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal. The following are some cases in which you might need to do this.  \n  \n-   You might want to return to the beginning of the collection and start the iteration again before it is finished.  \n  \n-   You might want to skip over one or more elements for a variety of reasons.  \n  \n-   You might need to change the elements of the collection in the middle of a traversal. In this case you must obtain a new enumerator object because the previous one is invalidated.","nodes":[{"pos":[0,349],"content":"The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements. Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.","nodes":[{"content":"The <bpt id=\"p1\">[</bpt>For Each...Next Statement<ept id=\"p1\">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept> calls <ph id=\"ph1\">`GetEnumerator`</ph> to obtain an enumerator object to support iteration over a collection's elements.","pos":[0,213],"source":"The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements."},{"content":"Normally, you use a <ph id=\"ph1\">`For Each`</ph>...<ph id=\"ph2\">`Next`</ph> loop to traverse a collection or array, and you do not need to call <ph id=\"ph3\">`GetEnumerator`</ph> explicitly.","pos":[214,349],"source":" Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly."}]},{"pos":[356,589],"content":"If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal. The following are some cases in which you might need to do this.","nodes":[{"content":"If you need closer control over the iteration than the <ph id=\"ph1\">`For Each`</ph>...<ph id=\"ph2\">`Next`</ph> statements provide, you can use the <ph id=\"ph3\">`GetEnumerator`</ph> method to perform a customized traversal.","pos":[0,168],"source":"If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal."},{"content":"The following are some cases in which you might need to do this.","pos":[169,233]}]},{"pos":[599,711],"content":"You might want to return to the beginning of the collection and start the iteration again before it is finished.","nodes":[{"content":"You might want to return to the beginning of the collection and start the iteration again before it is finished.","pos":[0,112]}]},{"pos":[721,795],"content":"You might want to skip over one or more elements for a variety of reasons.","nodes":[{"content":"You might want to skip over one or more elements for a variety of reasons.","pos":[0,74]}]},{"pos":[805,984],"content":"You might need to change the elements of the collection in the middle of a traversal. In this case you must obtain a new enumerator object because the previous one is invalidated.","nodes":[{"content":"You might need to change the elements of the collection in the middle of a traversal. In this case you must obtain a new enumerator object because the previous one is invalidated.","pos":[0,179],"nodes":[{"content":"You might need to change the elements of the collection in the middle of a traversal.","pos":[0,85]},{"content":"In this case you must obtain a new enumerator object because the previous one is invalidated.","pos":[86,179]}]}]}],"pos":[19948,20943],"yaml":true,"extradata":"MT"},{"content":"Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,138],"content":"Returns a reference to an enumerator object, which is used to iterate over a <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[21905,22044],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[23027,23120],"yaml":true},{"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \n  \n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \n  \n```  \nMsgBox(CStr(customers.Item(1)))  \nMsgBox(CStr(customers(1)))  \n```","nodes":[{"pos":[0,242],"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.","nodes":[{"content":"If <ph id=\"ph1\">`Index`</ph> is of type <ph id=\"ph2\">`Object`</ph>, the <ph id=\"ph3\">`Item`</ph> property attempts to treat it as a <ph id=\"ph4\">`String`</ph>, <ph id=\"ph5\">`Char`</ph>, <ph id=\"ph6\">`Char`</ph> array, or integer value.","pos":[0,127],"source":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value."},{"content":"If <ph id=\"ph1\">`Item`</ph> cannot convert <ph id=\"ph2\">`Index`</ph> to <ph id=\"ph3\">`String`</ph> or <ph id=\"ph4\">`Integer`</ph>, it throws an <ph id=\"ph5\">&lt;xref:System.ArgumentException&gt;</ph> exception.","pos":[128,242],"source":" If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception."}]},{"pos":[249,365],"content":"The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.","nodes":[{"content":"The <ph id=\"ph1\">`Item`</ph> property is the default property for a collection.","pos":[0,61],"source":"The `Item` property is the default property for a collection."},{"content":"Therefore, the following lines of code are equivalent.","pos":[62,116]}]}],"pos":[23131,23584],"yaml":true,"extradata":"MT"},{"content":"(A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.","nodes":[{"pos":[0,341],"content":"(A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.","nodes":[{"content":"(A) A numeric expression that specifies the position of an element of the collection.","pos":[0,85]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Index</ph><ept id=\"p1\">&lt;/code&gt;</ept> must be a number from 1 through the value of the collection's <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection.Count\"&gt;&lt;/xref&gt;</ph> property.","pos":[86,236],"source":"<code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property."},{"content":"Or (B) An <ph id=\"ph1\">`Object`</ph> expression that specifies the position or key string of an element of the collection.","pos":[237,341],"source":" Or (B) An `Object` expression that specifies the position or key string of an element of the collection."}]}],"pos":[24464,24806],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[24863,24956],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[25936,26029],"yaml":true},{"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \n  \n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \n  \n```  \nMsgBox(CStr(customers.Item(1)))  \nMsgBox(CStr(customers(1)))  \n```","nodes":[{"pos":[0,242],"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.","nodes":[{"content":"If <ph id=\"ph1\">`Index`</ph> is of type <ph id=\"ph2\">`Object`</ph>, the <ph id=\"ph3\">`Item`</ph> property attempts to treat it as a <ph id=\"ph4\">`String`</ph>, <ph id=\"ph5\">`Char`</ph>, <ph id=\"ph6\">`Char`</ph> array, or integer value.","pos":[0,127],"source":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value."},{"content":"If <ph id=\"ph1\">`Item`</ph> cannot convert <ph id=\"ph2\">`Index`</ph> to <ph id=\"ph3\">`String`</ph> or <ph id=\"ph4\">`Integer`</ph>, it throws an <ph id=\"ph5\">&lt;xref:System.ArgumentException&gt;</ph> exception.","pos":[128,242],"source":" If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception."}]},{"pos":[249,365],"content":"The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.","nodes":[{"content":"The <ph id=\"ph1\">`Item`</ph> property is the default property for a collection.","pos":[0,61],"source":"The `Item` property is the default property for a collection."},{"content":"Therefore, the following lines of code are equivalent.","pos":[62,116]}]}],"pos":[26040,26493],"yaml":true,"extradata":"MT"},{"content":"(A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.","nodes":[{"pos":[0,341],"content":"(A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.","nodes":[{"content":"(A) A numeric expression that specifies the position of an element of the collection.","pos":[0,85]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Index</ph><ept id=\"p1\">&lt;/code&gt;</ept> must be a number from 1 through the value of the collection's <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection.Count\"&gt;&lt;/xref&gt;</ph> property.","pos":[86,236],"source":"<code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property."},{"content":"Or (B) An <ph id=\"ph1\">`Object`</ph> expression that specifies the position or key string of an element of the collection.","pos":[237,341],"source":" Or (B) An `Object` expression that specifies the position or key string of an element of the collection."}]}],"pos":[27377,27719],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[27776,27869],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[28866,28959],"yaml":true},{"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \n  \n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \n  \n```  \nMsgBox(CStr(customers.Item(1)))  \nMsgBox(CStr(customers(1)))  \n```","nodes":[{"pos":[0,242],"content":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.","nodes":[{"content":"If <ph id=\"ph1\">`Index`</ph> is of type <ph id=\"ph2\">`Object`</ph>, the <ph id=\"ph3\">`Item`</ph> property attempts to treat it as a <ph id=\"ph4\">`String`</ph>, <ph id=\"ph5\">`Char`</ph>, <ph id=\"ph6\">`Char`</ph> array, or integer value.","pos":[0,127],"source":"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value."},{"content":"If <ph id=\"ph1\">`Item`</ph> cannot convert <ph id=\"ph2\">`Index`</ph> to <ph id=\"ph3\">`String`</ph> or <ph id=\"ph4\">`Integer`</ph>, it throws an <ph id=\"ph5\">&lt;xref:System.ArgumentException&gt;</ph> exception.","pos":[128,242],"source":" If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception."}]},{"pos":[249,365],"content":"The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.","nodes":[{"content":"The <ph id=\"ph1\">`Item`</ph> property is the default property for a collection.","pos":[0,61],"source":"The `Item` property is the default property for a collection."},{"content":"Therefore, the following lines of code are equivalent.","pos":[62,116]}]}],"pos":[28970,29423],"yaml":true,"extradata":"MT"},{"content":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.","nodes":[{"pos":[0,267],"content":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.","nodes":[{"content":"A unique <ph id=\"ph1\">`String`</ph> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.","pos":[0,145],"source":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Key</ph><ept id=\"p1\">&lt;/code&gt;</ept> must correspond to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Key</ph><ept id=\"p2\">&lt;/code&gt;</ept> argument specified when the element was added to the collection.","pos":[146,267],"source":"<code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection."}]}],"pos":[30303,30571],"yaml":true},{"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"pos":[0,92],"content":"Returns a specific element of a `Collection` object either by position or by key. Read-only.","nodes":[{"content":"Returns a specific element of a <ph id=\"ph1\">`Collection`</ph> object either by position or by key.","pos":[0,81],"source":"Returns a specific element of a `Collection` object either by position or by key."},{"content":"Read-only.","pos":[82,92]}]}],"pos":[30628,30721],"yaml":true},{"content":"Removes an element from a `Collection` object.","nodes":[{"pos":[0,46],"content":"Removes an element from a <ph id=\"ph1\">`Collection`</ph> object.","source":"Removes an element from a `Collection` object."}],"pos":[31705,31752],"yaml":true},{"content":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.  \n  \n If an element was added to the collection without a `Key`, you must use its `Index` to remove it.","nodes":[{"pos":[0,264],"content":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.","nodes":[{"content":"When <ph id=\"ph1\">`Remove`</ph> deletes an element from a collection, it decrements the collection's <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property by one.","pos":[0,148],"source":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one."},{"content":"It also decrements the <ph id=\"ph1\">`Index`</ph> value of every element that formerly followed the deleted element in the collection.","pos":[149,264],"source":" It also decrements the `Index` value of every element that formerly followed the deleted element in the collection."}]},{"pos":[271,368],"content":"If an element was added to the collection without a <ph id=\"ph1\">`Key`</ph>, you must use its <ph id=\"ph2\">`Index`</ph> to remove it.","source":"If an element was added to the collection without a `Key`, you must use its `Index` to remove it."}],"pos":[31763,32136],"yaml":true,"extradata":"MT"},{"content":"A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property.","nodes":[{"pos":[0,232],"content":"A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property.","nodes":[{"content":"A numeric expression that specifies the position of an element of the collection.","pos":[0,81]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Index</ph><ept id=\"p1\">&lt;/code&gt;</ept> must be a number from 1 through the value of the collection's <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection.Count\"&gt;&lt;/xref&gt;</ph> property.","pos":[82,232],"source":"<code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property."}]}],"pos":[33146,33379],"yaml":true},{"content":"Removes an element from a `Collection` object.","nodes":[{"pos":[0,46],"content":"Removes an element from a <ph id=\"ph1\">`Collection`</ph> object.","source":"Removes an element from a `Collection` object."}],"pos":[34371,34418],"yaml":true},{"content":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.  \n  \n If an element was added to the collection without a `Key`, you must use its `Index` to remove it.","nodes":[{"pos":[0,264],"content":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.","nodes":[{"content":"When <ph id=\"ph1\">`Remove`</ph> deletes an element from a collection, it decrements the collection's <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property by one.","pos":[0,148],"source":"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one."},{"content":"It also decrements the <ph id=\"ph1\">`Index`</ph> value of every element that formerly followed the deleted element in the collection.","pos":[149,264],"source":" It also decrements the `Index` value of every element that formerly followed the deleted element in the collection."}]},{"pos":[271,368],"content":"If an element was added to the collection without a <ph id=\"ph1\">`Key`</ph>, you must use its <ph id=\"ph2\">`Index`</ph> to remove it.","source":"If an element was added to the collection without a `Key`, you must use its `Index` to remove it."}],"pos":[34429,34802],"yaml":true,"extradata":"MT"},{"content":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.","nodes":[{"pos":[0,267],"content":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.","nodes":[{"content":"A unique <ph id=\"ph1\">`String`</ph> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.","pos":[0,145],"source":"A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Key</ph><ept id=\"p1\">&lt;/code&gt;</ept> must correspond to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Key</ph><ept id=\"p2\">&lt;/code&gt;</ept> argument specified when the element was added to the collection.","pos":[146,267],"source":"<code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection."}]}],"pos":[35812,36080],"yaml":true},{"content":"Copies the elements of the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.","nodes":[{"pos":[0,265],"content":"Copies the elements of the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.","nodes":[{"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> to an <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id=\"ph3\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> index.","pos":[0,187],"source":"Copies the elements of the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> interface.","pos":[188,265],"source":" Implements the <xref href=\"System.Collections.ICollection\"></xref> interface."}]}],"pos":[37249,37515],"yaml":true},{"content":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.  \n  \n This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*>.","nodes":[{"pos":[0,161],"content":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"content":"The elements are copied to the <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.","pos":[0,161],"source":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object."}]},{"pos":[168,324],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is obtained from the <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*>."}],"pos":[37526,37855],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,236],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,167],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[168,236],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[38004,38241],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[38301,38369],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[38569,38599],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[38713,38751],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,264],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}],"pos":[38845,39118],"yaml":true},{"content":"The type of the source <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,163],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[39218,39382],"yaml":true},{"content":"Returns an enumerator that iterates through the collection. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.","nodes":[{"pos":[0,137],"content":"Returns an enumerator that iterates through the collection. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.","nodes":[{"content":"Returns an enumerator that iterates through the collection.","pos":[0,59]},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> interface.","pos":[60,137],"source":" Implements the <xref href=\"System.Collections.ICollection\"></xref> interface."}]}],"pos":[44142,44280],"yaml":true},{"content":"[Visual Basic, C#]  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined. Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"pos":[0,18],"content":"[Visual Basic, C#]","nodes":[{"content":"[Visual Basic, C#]","pos":[0,18]}]},{"pos":[25,229],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[113,204],"source":" Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[236,356],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[363,877],"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined. Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined. Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,514],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.","pos":[84,191],"source":" The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position."},{"content":"At this position, the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.","pos":[192,285],"source":" At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined."},{"content":"Therefore, you must call the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[286,514],"source":" Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[884,1205],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[1212,1946],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.","pos":[360,509],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","pos":[510,734],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."}]},{"pos":[1953,2188],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2195,2584],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,389],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[155,260]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[261,389]}]}]}],"pos":[44291,46892],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection."}],"pos":[47069,47183],"yaml":true},{"content":"Adds an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,153],"content":"Adds an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,81],"source":"Adds an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[82,153],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[48282,48436],"yaml":true},{"content":"You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"pos":[0,202],"content":"You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"content":"You can also use the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.","pos":[0,202],"source":"You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object."}]}],"pos":[48447,48650],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[48780,48895],"yaml":true},{"content":"The position into which the new element was inserted.","nodes":[{"pos":[0,53],"content":"The position into which the new element was inserted.","nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]}],"pos":[48951,49005],"yaml":true},{"content":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object has a fixed size.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size."}],"pos":[49196,49385],"yaml":true},{"content":"Removes all items from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,160],"content":"Removes all items from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,88],"source":"Removes all items from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[89,160],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[50325,50486],"yaml":true},{"content":"This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"pos":[0,86],"content":"This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"content":"This method removes all items from the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.","pos":[0,86],"source":"This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object."}]}],"pos":[50497,50584],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[50840,50904],"yaml":true},{"content":"Determines whether the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object contains a specific value. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,182],"content":"Determines whether the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object contains a specific value. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object contains a specific value.","pos":[0,110],"source":"Determines whether the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object contains a specific value."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[111,182],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[51925,52108],"yaml":true},{"content":"This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.","nodes":[{"pos":[0,108],"content":"This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.","nodes":[{"content":"This method determines whether the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object contains a specific value.","pos":[0,108],"source":"This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value."}]}],"pos":[52119,52228],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[52364,52482],"yaml":true},{"content":"Returns `True` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object; otherwise, `False`.","nodes":[{"pos":[0,154],"content":"Returns <ph id=\"ph1\">`True`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`False`</ph>.","source":"Returns `True` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object; otherwise, `False`."}],"pos":[52540,52695],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,180],"content":"Determines the index of a specific item in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,108],"source":"Determines the index of a specific item in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[109,180],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[57418,57599],"yaml":true},{"content":"This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"pos":[0,106],"content":"This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"content":"This method determines the index of a specific item in the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.","pos":[0,106],"source":"This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object."}]}],"pos":[57610,57717],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[57851,57969],"yaml":true},{"content":"The index of <code>value</code> if found in the collection; otherwise, -1.","nodes":[{"pos":[0,74],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the collection; otherwise, -1.","source":"The index of <code>value</code> if found in the collection; otherwise, -1."}],"pos":[58025,58100],"yaml":true},{"content":"Inserts an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,179],"content":"Inserts an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object at the specified index.","pos":[0,107],"source":"Inserts an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object at the specified index."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[108,179],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[59265,59445],"yaml":true},{"content":"If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,129],"content":"If <ph id=\"ph1\">`index`</ph> equals the number of items in the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object, then <ph id=\"ph3\">`value`</ph> is appended to the end.","source":"If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end."},{"pos":[136,487],"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,351],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.","pos":[0,140]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[141,231]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[232,351]}]}]}],"pos":[59456,59948],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[60092,60161],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to insert into the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[60222,60342],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[60548,60657],"yaml":true},{"content":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object has a fixed size.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size."}],"pos":[60759,60948],"yaml":true},{"content":"<code>value</code> is null reference in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is null reference in the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>value</code> is null reference in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[61052,61158],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,192],"content":"Removes the first occurrence of a specific object from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,120],"source":"Removes the first occurrence of a specific object from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[121,192],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[62167,62360],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.","nodes":[{"pos":[0,521],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]},{"content":"If <ph id=\"ph1\">`value`</ph> is not found in the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object, the <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object remains unchanged and no exception is thrown.","pos":[346,521],"source":" If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown."}]}],"pos":[62371,62893],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[63027,63147],"yaml":true},{"content":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object has a fixed size.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size."}],"pos":[63341,63530],"yaml":true},{"content":"Removes the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object item at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"pos":[0,173],"content":"Removes the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object item at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object item at the specified index.","pos":[0,101],"source":"Removes the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object item at the specified index."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> interface.","pos":[102,173],"source":" Implements the <xref href=\"System.Collections.IList\"></xref> interface."}]}],"pos":[64545,64719],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,345],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]}],"pos":[64730,65076],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[65208,65252],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[65460,65569],"yaml":true},{"content":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object is read-only."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object has a fixed size.","source":"The <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object has a fixed size."}],"pos":[65671,65860],"yaml":true},{"content":"Runs after the entire <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object graph has been deserialized. Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface.","nodes":[{"pos":[0,212],"content":"Runs after the entire <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object graph has been deserialized. Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface.","nodes":[{"content":"Runs after the entire <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object graph has been deserialized.","pos":[0,111],"source":"Runs after the entire <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object graph has been deserialized."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.IDeserializationCallback\"&gt;&lt;/xref&gt;</ph> interface.","pos":[112,212],"source":" Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface."}]}],"pos":[67045,67258],"yaml":true},{"content":"This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.","nodes":[{"pos":[0,114],"content":"This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.","nodes":[{"content":"This method is called after the entire <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object graph has been deserialized.","pos":[0,114],"source":"This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized."}]}],"pos":[67269,67384],"yaml":true,"extradata":"MT"},{"content":"The object that initiated the callback.","nodes":[{"pos":[0,39],"content":"The object that initiated the callback.","nodes":[{"content":"The object that initiated the callback.","pos":[0,39]}]}],"pos":[67550,67590],"yaml":true},{"content":"Returns the data needed to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface.","nodes":[{"pos":[0,192],"content":"Returns the data needed to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface.","nodes":[{"content":"Returns the data needed to serialize the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,102],"source":"Returns the data needed to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."},{"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface.","pos":[103,192],"source":" Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface."}]}],"pos":[69155,69348],"yaml":true},{"content":"This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"pos":[0,100],"content":"This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.","nodes":[{"content":"This method returns the data needed to serialize the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.","pos":[0,100],"source":"This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object."}]}],"pos":[69359,69460],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,191],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object containing the information required to serialize the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[69786,69978],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object containing the source and destination of the serialized stream associated with the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.","nodes":[{"pos":[0,220],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualBasic.Collection\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object containing the source and destination of the serialized stream associated with the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object."}],"pos":[70073,70294],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Collection\n  commentId: T:Microsoft.VisualBasic.Collection\n  id: Collection\n  children:\n  - Microsoft.VisualBasic.Collection.#ctor\n  - Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)\n  - Microsoft.VisualBasic.Collection.Clear\n  - Microsoft.VisualBasic.Collection.Contains(System.String)\n  - Microsoft.VisualBasic.Collection.Count\n  - Microsoft.VisualBasic.Collection.GetEnumerator\n  - Microsoft.VisualBasic.Collection.Item(System.Int32)\n  - Microsoft.VisualBasic.Collection.Item(System.Object)\n  - Microsoft.VisualBasic.Collection.Item(System.String)\n  - Microsoft.VisualBasic.Collection.Remove(System.Int32)\n  - Microsoft.VisualBasic.Collection.Remove(System.String)\n  - Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount\n  - Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionIsSynchronized\n  - Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionSyncRoot\n  - Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#Clear\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsFixedSize\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsReadOnly\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#IListItem(System.Int32)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)\n  - Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)\n  - Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: Collection\n  nameWithType: Collection\n  fullName: Microsoft.VisualBasic.Collection\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: A Visual Basic `Collection` is an ordered set of items that can be referred to as a unit.\n  remarks: \"> [!NOTE]\\n>  Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`. For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).  \\n  \\n The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object. The items, or *elements*, in a collection need only be related by the fact that they exist in the collection. Elements of a collection do not have to share the same data type.  \\n  \\n You can create a collection the same way you create other objects, as the following example illustrates.  \\n  \\n```  \\nDim coll As New Microsoft.VisualBasic.Collection()  \\n```  \\n  \\n Once you have created a collection, you can do any of the following:  \\n  \\n-   Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.  \\n  \\n-   Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.  \\n  \\n-   Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.  \\n  \\n-   Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.  \\n  \\n-   Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.  \\n  \\n-   Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.  \\n  \\n-   Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).  \\n  \\n    > [!NOTE]\\n    >  Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.  \\n  \\n    > [!CAUTION]\\n    >  Iterating through a Visual Basic `Collection` is not a thread-safe procedure. Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception. To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads. For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).\"\n  example:\n  - \"The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection. It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.  \\n  \\n To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance. Leave the default name as `nameClass`. Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure. (This example works only with host applications that support classes.)  \\n  \\n [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]\"\n  syntax:\n    content: 'public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.#ctor\n  commentId: M:Microsoft.VisualBasic.Collection.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Collection()\n  nameWithType: Collection.Collection()\n  fullName: Collection.Collection()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Creates and returns a new [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  remarks: \"The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collection returned by this constructor is empty and does not have any initial capacity allocated.  \\n  \\n [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=fullName>, <xref:System.Collections.Generic?displayProperty=fullName>, and <xref:System.Collections.Specialized?displayProperty=fullName> namespaces.\"\n  example:\n  - \"The following example creates a new [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collection and assigns it to the variable `coll`:  \\n  \\n```  \\nDim coll As New Microsoft.VisualBasic.Collection()  \\n```  \\n  \\n This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property. [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] collections hold elements of type <xref:System.Object>.\"\n  syntax:\n    content: public Collection ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Collection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)\n  id: Add(System.Object,System.String,System.Object,System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Add(Object, String, Object, Object)\n  nameWithType: Collection.Add(Object, String, Object, Object)\n  fullName: Collection.Add(Object, String, Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Adds an element to a `Collection` object.\n  remarks: \"The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.  \\n  \\n If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.  \\n  \\n An error also occurs if a specified `Key` value matches the key for an existing element of the collection.\"\n  example:\n  - \"The following example uses the `Add` method to add `child` objects — instances of a class called `child` containing a `Public` property `name` — to a collection called `family`. To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`. Add the `child` class definition and the `family` declaration to the form code. Modify the `_Click` event handlers for the **Add** and **List** buttons as shown. The **Add** button allows you to add children. The **List** button displays the names of all the children.  \\n  \\n [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]\"\n  syntax:\n    content: public void Add (object Item, string Key = null, object Before = null, object After = null);\n    parameters:\n    - id: Item\n      type: System.Object\n      description: Required. An object of any type that specifies the element to add to the collection.\n    - id: Key\n      type: System.String\n      description: Optional. A unique `String` expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.\n    - id: Before\n      type: System.Object\n      description: Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the <code>Before</code> argument. If <code>Before</code> is a numeric expression, it must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. If <code>Before</code> is a `String` expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.\n    - id: After\n      type: System.Object\n      description: Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the <code>After</code> argument. If <code>After</code> is a numeric expression, it must be a number from 1 through the value of the collection's `Count` property. If <code>After</code> is a `String` expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both <code>Before</code> and <code>After</code>.\n  overload: Microsoft.VisualBasic.Collection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Clear\n  commentId: M:Microsoft.VisualBasic.Collection.Clear\n  id: Clear\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: Collection.Clear()\n  fullName: Collection.Clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Deletes all elements of a Visual Basic `Collection` object.\n  remarks: The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.\n  example:\n  - '[!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]'\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Collection.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Contains(System.String)\n  commentId: M:Microsoft.VisualBasic.Collection.Contains(System.String)\n  id: Contains(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: Collection.Contains(String)\n  fullName: Collection.Contains(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key.\n  remarks: \"`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`. Otherwise, `Contains` returns `False`. Case is ignored when matching key values.  \\n  \\n A Visual Basic `Collection` can hold some elements that have keys and other elements without keys. This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.\"\n  example:\n  - \"[!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  \\n  \\n If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.\"\n  syntax:\n    content: public bool Contains (string Key);\n    parameters:\n    - id: Key\n      type: System.String\n      description: Required. A `String` expression that specifies the key for which to search the elements of the collection.\n    return:\n      type: System.Boolean\n      description: Returns a `Boolean` value indicating whether a Visual Basic `Collection` object contains an element with a specific key.\n  overload: Microsoft.VisualBasic.Collection.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Count\n  commentId: P:Microsoft.VisualBasic.Collection.Count\n  id: Count\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Collection.Count\n  fullName: Collection.Count\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns an `Integer` containing the number of elements in a collection. Read-only.\n  remarks: Use the `Count` property to determine the number of elements in a `Collection` object.\n  example:\n  - \"This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  \\n  \\n The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns an `Integer` containing the number of elements in a collection. Read-only.\n  overload: Microsoft.VisualBasic.Collection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.GetEnumerator\n  commentId: M:Microsoft.VisualBasic.Collection.GetEnumerator\n  id: GetEnumerator\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Collection.GetEnumerator()\n  fullName: Collection.GetEnumerator()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  remarks: \"The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements. Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.  \\n  \\n If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal. The following are some cases in which you might need to do this.  \\n  \\n-   You might want to return to the beginning of the collection and start the iteration again before it is finished.  \\n  \\n-   You might want to skip over one or more elements for a variety of reasons.  \\n  \\n-   You might need to change the elements of the collection in the middle of a traversal. In this case you must obtain a new enumerator object because the previous one is invalidated.\"\n  example:\n  - \"The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.  \\n  \\n [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  \\n  \\n `GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace. The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods. For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Returns a reference to an enumerator object, which is used to iterate over a <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  overload: Microsoft.VisualBasic.Collection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Item(System.Int32)\n  commentId: P:Microsoft.VisualBasic.Collection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: Collection.Item(Int32)\n  fullName: Collection.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  remarks: \"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \\n  \\n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \\n  \\n```  \\nMsgBox(CStr(customers.Item(1)))  \\nMsgBox(CStr(customers(1)))  \\n```\"\n  example:\n  - \"The following example uses the `Item` property to retrieve a reference to an object in a collection. It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `\\\"Bill\\\"` as the `Index` argument.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  \\n  \\n Note that the first call explicitly specifies the `Item` property, but the second does not. Both calls work because the `Item` property is the default property for a `Collection` object.\"\n  syntax:\n    content: public object this[int Index] { get; }\n    parameters:\n    - id: Index\n      type: System.Int32\n      description: (A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.\n    return:\n      type: System.Object\n      description: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  overload: Microsoft.VisualBasic.Collection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Item(System.Object)\n  commentId: P:Microsoft.VisualBasic.Collection.Item(System.Object)\n  id: Item(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: Collection.Item(Object)\n  fullName: Collection.Item(Object)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  remarks: \"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \\n  \\n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \\n  \\n```  \\nMsgBox(CStr(customers.Item(1)))  \\nMsgBox(CStr(customers(1)))  \\n```\"\n  example:\n  - \"The following example uses the `Item` property to retrieve a reference to an object in a collection. It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `\\\"Bill\\\"` as the `Index` argument.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  \\n  \\n Note that the first call explicitly specifies the `Item` property, but the second does not. Both calls work because the `Item` property is the default property for a `Collection` object.\"\n  syntax:\n    content: public object this[object Index] { get; }\n    parameters:\n    - id: Index\n      type: System.Object\n      description: (A) A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property. Or (B) An `Object` expression that specifies the position or key string of an element of the collection.\n    return:\n      type: System.Object\n      description: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  overload: Microsoft.VisualBasic.Collection.Item*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Item(System.String)\n  commentId: P:Microsoft.VisualBasic.Collection.Item(System.String)\n  id: Item(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: Collection.Item(String)\n  fullName: Collection.Item(String)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  remarks: \"If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value. If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.  \\n  \\n The `Item` property is the default property for a collection. Therefore, the following lines of code are equivalent.  \\n  \\n```  \\nMsgBox(CStr(customers.Item(1)))  \\nMsgBox(CStr(customers(1)))  \\n```\"\n  example:\n  - \"The following example uses the `Item` property to retrieve a reference to an object in a collection. It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `\\\"Bill\\\"` as the `Index` argument.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  \\n  \\n Note that the first call explicitly specifies the `Item` property, but the second does not. Both calls work because the `Item` property is the default property for a `Collection` object.\"\n  syntax:\n    content: public object this[string Key] { get; }\n    parameters:\n    - id: Key\n      type: System.String\n      description: A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.\n    return:\n      type: System.Object\n      description: Returns a specific element of a `Collection` object either by position or by key. Read-only.\n  overload: Microsoft.VisualBasic.Collection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Remove(System.Int32)\n  commentId: M:Microsoft.VisualBasic.Collection.Remove(System.Int32)\n  id: Remove(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Remove(Int32)\n  nameWithType: Collection.Remove(Int32)\n  fullName: Collection.Remove(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Removes an element from a `Collection` object.\n  remarks: \"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.  \\n  \\n If an element was added to the collection without a `Key`, you must use its `Index` to remove it.\"\n  example:\n  - \"This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  \\n  \\n Following the four calls to the `Add` method, the `Count` property contains 4, element `\\\"Bill\\\"` has index value 1, and element `\\\"Pete\\\"` has index value 4.  \\n  \\n Following the first call to `Remove`, `Count` is 3, element `\\\"Bill\\\"` is deleted, and element `\\\"Pete\\\"` has index value 3.  \\n  \\n Following the second call to `Remove`, `Count` is 2, element `\\\"Mike\\\"` is deleted, and element `\\\"Pete\\\"` has index value 2.\"\n  syntax:\n    content: public void Remove (int Index);\n    parameters:\n    - id: Index\n      type: System.Int32\n      description: A numeric expression that specifies the position of an element of the collection. <code>Index</code> must be a number from 1 through the value of the collection's <xref href=\"Microsoft.VisualBasic.Collection.Count\"></xref> property.\n  overload: Microsoft.VisualBasic.Collection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.Remove(System.String)\n  commentId: M:Microsoft.VisualBasic.Collection.Remove(System.String)\n  id: Remove(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: Collection.Remove(String)\n  fullName: Collection.Remove(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Removes an element from a `Collection` object.\n  remarks: \"When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one. It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.  \\n  \\n If an element was added to the collection without a `Key`, you must use its `Index` to remove it.\"\n  example:\n  - \"This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.  \\n  \\n [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  \\n[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  \\n  \\n Following the four calls to the `Add` method, the `Count` property contains 4, element `\\\"Bill\\\"` has index value 1, and element `\\\"Pete\\\"` has index value 4.  \\n  \\n Following the first call to `Remove`, `Count` is 3, element `\\\"Bill\\\"` is deleted, and element `\\\"Pete\\\"` has index value 3.  \\n  \\n Following the second call to `Remove`, `Count` is 2, element `\\\"Mike\\\"` is deleted, and element `\\\"Pete\\\"` has index value 2.\"\n  syntax:\n    content: public void Remove (string Key);\n    parameters:\n    - id: Key\n      type: System.String\n      description: A unique `String` expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <code>Key</code> must correspond to the <code>Key</code> argument specified when the element was added to the collection.\n  overload: Microsoft.VisualBasic.Collection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: Collection.ICollection.CopyTo(Array, Int32)\n  fullName: Collection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Copies the elements of the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.\n  remarks: \"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.  \\n  \\n This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*>.\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object cannot be cast automatically to the type of the destination <code>array</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount\n  commentId: P:Microsoft.VisualBasic.Collection.ICollectionCount\n  id: System#Collections#ICollection#ICollectionCount\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: ICollection.ICollectionCount\n  nameWithType: Collection.ICollection.ICollectionCount\n  fullName: Collection.ICollection.ICollectionCount\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: int System.Collections.ICollection.ICollectionCount { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionIsSynchronized\n  commentId: P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized\n  id: System#Collections#ICollection#ICollectionIsSynchronized\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: ICollection.ICollectionIsSynchronized\n  nameWithType: Collection.ICollection.ICollectionIsSynchronized\n  fullName: Collection.ICollection.ICollectionIsSynchronized\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: bool System.Collections.ICollection.ICollectionIsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionIsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionSyncRoot\n  commentId: P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot\n  id: System#Collections#ICollection#ICollectionSyncRoot\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: ICollection.ICollectionSyncRoot\n  nameWithType: Collection.ICollection.ICollectionSyncRoot\n  fullName: Collection.ICollection.ICollectionSyncRoot\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: object System.Collections.ICollection.ICollectionSyncRoot { get; }\n    return:\n      type: System.Object\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionSyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: Collection.IEnumerable.GetEnumerator()\n  fullName: Collection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns an enumerator that iterates through the collection. Implements the <xref href=\"System.Collections.ICollection\"></xref> interface.\n  remarks: \"[Visual Basic, C#]  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined. Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: Collection.IList.Add(Object)\n  fullName: Collection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Adds an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to add to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object has a fixed size.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Clear\n  commentId: M:Microsoft.VisualBasic.Collection.IListClear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: Collection.IList.Clear()\n  fullName: Collection.IList.Clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Removes all items from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.IList\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.IListContains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: Collection.IList.Contains(Object)\n  fullName: Collection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Determines whether the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object contains a specific value. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n    return:\n      type: System.Boolean\n      description: Returns `True` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object; otherwise, `False`.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsFixedSize\n  commentId: P:Microsoft.VisualBasic.Collection.IListIsFixedSize\n  id: System#Collections#IList#IListIsFixedSize\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.IListIsFixedSize\n  nameWithType: Collection.IList.IListIsFixedSize\n  fullName: Collection.IList.IListIsFixedSize\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: bool System.Collections.IList.IListIsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsReadOnly\n  commentId: P:Microsoft.VisualBasic.Collection.IListIsReadOnly\n  id: System#Collections#IList#IListIsReadOnly\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.IListIsReadOnly\n  nameWithType: Collection.IList.IListIsReadOnly\n  fullName: Collection.IList.IListIsReadOnly\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: bool System.Collections.IList.IListIsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListItem(System.Int32)\n  commentId: P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)\n  id: System#Collections#IList#IListItem(System.Int32)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.IListItem(Int32)\n  nameWithType: Collection.IList.IListItem(Int32)\n  fullName: Collection.IList.IListItem(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  syntax:\n    content: object System.Collections.IList.IListItem[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#IListItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: Collection.IList.IndexOf(Object)\n  fullName: Collection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Determines the index of a specific item in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the collection; otherwise, -1.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: Collection.IList.Insert(Int32, Object)\n  fullName: Collection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Inserts an item to the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: \"If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\"\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object has a fixed size.\"\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: <code>value</code> is null reference in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: Collection.IList.Remove(Object)\n  fullName: Collection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Removes the first occurrence of a specific object from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object has a fixed size.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)\n  commentId: M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IList.RemoveAt(Int32)\n  nameWithType: Collection.IList.RemoveAt(Int32)\n  fullName: Collection.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Removes the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object item at the specified index. Implements the <xref href=\"System.Collections.IList\"></xref> interface.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"Microsoft.VisualBasic.Collection\\\"></xref> object has a fixed size.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: Collection.IDeserializationCallback.OnDeserialization(Object)\n  fullName: Collection.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Runs after the entire <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object graph has been deserialized. Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface.\n  remarks: This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that initiated the callback.\n  overload: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: Microsoft.VisualBasic.Collection\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Collection.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Collection.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns the data needed to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object. Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface.\n  remarks: This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object containing the source and destination of the serialized stream associated with the <xref href=\"Microsoft.VisualBasic.Collection\"></xref> object.\n  overload: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.NullReferenceException\n  parent: System\n  isExternal: false\n  name: NullReferenceException\n  nameWithType: NullReferenceException\n  fullName: System.NullReferenceException\n- uid: Microsoft.VisualBasic.Collection.#ctor\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Collection()\n  nameWithType: Collection.Collection()\n  fullName: Collection.Collection()\n- uid: Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Add(Object, String, Object, Object)\n  nameWithType: Collection.Add(Object, String, Object, Object)\n  fullName: Collection.Add(Object, String, Object, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Collection.Clear\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Clear()\n  nameWithType: Collection.Clear()\n  fullName: Collection.Clear()\n- uid: Microsoft.VisualBasic.Collection.Contains(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: Collection.Contains(String)\n  fullName: Collection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Collection.Count\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Count\n  nameWithType: Collection.Count\n  fullName: Collection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Collection.GetEnumerator\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Collection.GetEnumerator()\n  fullName: Collection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: Microsoft.VisualBasic.Collection.Item(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: Collection.Item(Int32)\n  fullName: Collection.Item(Int32)\n- uid: Microsoft.VisualBasic.Collection.Item(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Item(Object)\n  nameWithType: Collection.Item(Object)\n  fullName: Collection.Item(Object)\n- uid: Microsoft.VisualBasic.Collection.Item(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Item(String)\n  nameWithType: Collection.Item(String)\n  fullName: Collection.Item(String)\n- uid: Microsoft.VisualBasic.Collection.Remove(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Remove(Int32)\n  nameWithType: Collection.Remove(Int32)\n  fullName: Collection.Remove(Int32)\n- uid: Microsoft.VisualBasic.Collection.Remove(System.String)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: Collection.Remove(String)\n  fullName: Collection.Remove(String)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: Collection.ICollection.CopyTo(Array, Int32)\n  fullName: Collection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: ICollection.ICollectionCount\n  nameWithType: Collection.ICollection.ICollectionCount\n  fullName: Collection.ICollection.ICollectionCount\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionIsSynchronized\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: ICollection.ICollectionIsSynchronized\n  nameWithType: Collection.ICollection.ICollectionIsSynchronized\n  fullName: Collection.ICollection.ICollectionIsSynchronized\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionSyncRoot\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: ICollection.ICollectionSyncRoot\n  nameWithType: Collection.ICollection.ICollectionSyncRoot\n  fullName: Collection.ICollection.ICollectionSyncRoot\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: Collection.IEnumerable.GetEnumerator()\n  fullName: Collection.IEnumerable.GetEnumerator()\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: Collection.IList.Add(Object)\n  fullName: Collection.IList.Add(Object)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Clear\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: Collection.IList.Clear()\n  fullName: Collection.IList.Clear()\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: Collection.IList.Contains(Object)\n  fullName: Collection.IList.Contains(Object)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsFixedSize\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.IListIsFixedSize\n  nameWithType: Collection.IList.IListIsFixedSize\n  fullName: Collection.IList.IListIsFixedSize\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsReadOnly\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.IListIsReadOnly\n  nameWithType: Collection.IList.IListIsReadOnly\n  fullName: Collection.IList.IListIsReadOnly\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListItem(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.IListItem(Int32)\n  nameWithType: Collection.IList.IListItem(Int32)\n  fullName: Collection.IList.IListItem(Int32)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: Collection.IList.IndexOf(Object)\n  fullName: Collection.IList.IndexOf(Object)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: Collection.IList.Insert(Int32, Object)\n  fullName: Collection.IList.Insert(Int32, Object)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: Collection.IList.Remove(Object)\n  fullName: Collection.IList.Remove(Object)\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: Collection.IList.RemoveAt(Int32)\n  fullName: Collection.IList.RemoveAt(Int32)\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: Collection.IDeserializationCallback.OnDeserialization(Object)\n  fullName: Collection.IDeserializationCallback.OnDeserialization(Object)\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Collection.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Collection.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: Microsoft.VisualBasic.Collection.#ctor*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Collection\n  nameWithType: Collection.Collection\n  fullName: Collection.Collection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Add*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Add\n  nameWithType: Collection.Add\n  fullName: Collection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Clear*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Clear\n  nameWithType: Collection.Clear\n  fullName: Collection.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Contains*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Contains\n  nameWithType: Collection.Contains\n  fullName: Collection.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Count*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Count\n  nameWithType: Collection.Count\n  fullName: Collection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.GetEnumerator*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: Collection.GetEnumerator\n  fullName: Collection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Item*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Item\n  nameWithType: Collection.Item\n  fullName: Collection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.Remove*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: Remove\n  nameWithType: Collection.Remove\n  fullName: Collection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: Collection.System.Collections.ICollection.CopyTo\n  fullName: Collection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionCount*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.ICollection.ICollectionCount\n  nameWithType: Collection.System.Collections.ICollection.ICollectionCount\n  fullName: Collection.System.Collections.ICollection.ICollectionCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionIsSynchronized*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.ICollection.ICollectionIsSynchronized\n  nameWithType: Collection.System.Collections.ICollection.ICollectionIsSynchronized\n  fullName: Collection.System.Collections.ICollection.ICollectionIsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#ICollection#ICollectionSyncRoot*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.ICollection.ICollectionSyncRoot\n  nameWithType: Collection.System.Collections.ICollection.ICollectionSyncRoot\n  fullName: Collection.System.Collections.ICollection.ICollectionSyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: Collection.System.Collections.IEnumerable.GetEnumerator\n  fullName: Collection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Add*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: Collection.System.Collections.IList.Add\n  fullName: Collection.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Clear*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: Collection.System.Collections.IList.Clear\n  fullName: Collection.System.Collections.IList.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Contains*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: Collection.System.Collections.IList.Contains\n  fullName: Collection.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsFixedSize*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.IListIsFixedSize\n  nameWithType: Collection.System.Collections.IList.IListIsFixedSize\n  fullName: Collection.System.Collections.IList.IListIsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListIsReadOnly*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.IListIsReadOnly\n  nameWithType: Collection.System.Collections.IList.IListIsReadOnly\n  fullName: Collection.System.Collections.IList.IListIsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IListItem*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.IListItem\n  nameWithType: Collection.System.Collections.IList.IListItem\n  fullName: Collection.System.Collections.IList.IListItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: Collection.System.Collections.IList.IndexOf\n  fullName: Collection.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Insert*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: Collection.System.Collections.IList.Insert\n  fullName: Collection.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#Remove*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: Collection.System.Collections.IList.Remove\n  fullName: Collection.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: Collection.System.Collections.IList.RemoveAt\n  fullName: Collection.System.Collections.IList.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: Collection.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: Collection.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: Microsoft.VisualBasic.Collection\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: Collection.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: Collection.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/Collection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}