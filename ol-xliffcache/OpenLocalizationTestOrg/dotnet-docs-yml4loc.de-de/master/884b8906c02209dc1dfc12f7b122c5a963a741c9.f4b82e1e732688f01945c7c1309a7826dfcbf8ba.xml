{"nodes":[{"content":"Indicates the possible lease states of a lifetime lease.","nodes":[{"pos":[0,56],"content":"Indicates the possible lease states of a lifetime lease.","nodes":[{"content":"Indicates the possible lease states of a lifetime lease.","pos":[0,56]}]}],"pos":[671,728],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease.","nodes":[{"pos":[0,113],"content":"The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A&gt;</ph> property returns the lease status for a lease.","pos":[0,113],"source":"The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease."}]}],"pos":[739,853],"yaml":true,"extradata":"MT"},{"content":"The lease is active and has not expired.","nodes":[{"pos":[0,40],"content":"The lease is active and has not expired.","nodes":[{"content":"The lease is active and has not expired.","pos":[0,40]}]}],"pos":[2124,2165],"yaml":true},{"content":"The lease has expired and cannot be renewed.","nodes":[{"pos":[0,44],"content":"The lease has expired and cannot be renewed.","nodes":[{"content":"The lease has expired and cannot be renewed.","pos":[0,44]}]}],"pos":[3267,3312],"yaml":true},{"content":"The lease has been created, but is not yet active.","nodes":[{"pos":[0,50],"content":"The lease has been created, but is not yet active.","nodes":[{"content":"The lease has been created, but is not yet active.","pos":[0,50]}]}],"pos":[4415,4466],"yaml":true},{"content":"The lease is not initialized.","nodes":[{"pos":[0,29],"content":"The lease is not initialized.","nodes":[{"content":"The lease is not initialized.","pos":[0,29]}]}],"pos":[5555,5585],"yaml":true},{"content":"The lease has expired and is seeking sponsorship.","nodes":[{"pos":[0,49],"content":"The lease has expired and is seeking sponsorship.","nodes":[{"content":"The lease has expired and is seeking sponsorship.","pos":[0,49]}]}],"pos":[6693,6743],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Lifetime.LeaseState\n  commentId: T:System.Runtime.Remoting.Lifetime.LeaseState\n  id: LeaseState\n  children:\n  - System.Runtime.Remoting.Lifetime.LeaseState.Active\n  - System.Runtime.Remoting.Lifetime.LeaseState.Expired\n  - System.Runtime.Remoting.Lifetime.LeaseState.Initial\n  - System.Runtime.Remoting.Lifetime.LeaseState.Null\n  - System.Runtime.Remoting.Lifetime.LeaseState.Renewing\n  langs:\n  - csharp\n  name: LeaseState\n  nameWithType: LeaseState\n  fullName: System.Runtime.Remoting.Lifetime.LeaseState\n  type: Enum\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: Indicates the possible lease states of a lifetime lease.\n  remarks: The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum LeaseState\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active\n  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Active\n  id: Active\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  langs:\n  - csharp\n  name: Active\n  nameWithType: LeaseState.Active\n  fullName: LeaseState.Active\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: The lease is active and has not expired.\n  syntax:\n    content: Active\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired\n  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Expired\n  id: Expired\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  langs:\n  - csharp\n  name: Expired\n  nameWithType: LeaseState.Expired\n  fullName: LeaseState.Expired\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: The lease has expired and cannot be renewed.\n  syntax:\n    content: Expired\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial\n  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Initial\n  id: Initial\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  langs:\n  - csharp\n  name: Initial\n  nameWithType: LeaseState.Initial\n  fullName: LeaseState.Initial\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: The lease has been created, but is not yet active.\n  syntax:\n    content: Initial\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null\n  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Null\n  id: \"Null\"\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: LeaseState.Null\n  fullName: LeaseState.Null\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: The lease is not initialized.\n  syntax:\n    content: \"Null\"\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing\n  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Renewing\n  id: Renewing\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  langs:\n  - csharp\n  name: Renewing\n  nameWithType: LeaseState.Renewing\n  fullName: LeaseState.Renewing\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: The lease has expired and is seeking sponsorship.\n  syntax:\n    content: Renewing\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  isExternal: false\n  name: Active\n  nameWithType: LeaseState.Active\n  fullName: LeaseState.Active\n- uid: System.Runtime.Remoting.Lifetime.LeaseState\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: LeaseState\n  nameWithType: LeaseState\n  fullName: System.Runtime.Remoting.Lifetime.LeaseState\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  isExternal: false\n  name: Expired\n  nameWithType: LeaseState.Expired\n  fullName: LeaseState.Expired\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  isExternal: false\n  name: Initial\n  nameWithType: LeaseState.Initial\n  fullName: LeaseState.Initial\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  isExternal: false\n  name: \"Null\"\n  nameWithType: LeaseState.Null\n  fullName: LeaseState.Null\n- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing\n  parent: System.Runtime.Remoting.Lifetime.LeaseState\n  isExternal: false\n  name: Renewing\n  nameWithType: LeaseState.Renewing\n  fullName: LeaseState.Renewing\n"}