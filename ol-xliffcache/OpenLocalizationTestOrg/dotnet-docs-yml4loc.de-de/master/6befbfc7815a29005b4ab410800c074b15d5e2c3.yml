### YamlMime:ManagedReference
items:
- uid: System.Data.DataSet
  commentId: T:System.Data.DataSet
  id: DataSet
  children:
  - System.Data.DataSet.#ctor
  - System.Data.DataSet.#ctor(System.String)
  - System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)
  - System.Data.DataSet.AcceptChanges
  - System.Data.DataSet.BeginInit
  - System.Data.DataSet.CaseSensitive
  - System.Data.DataSet.Clear
  - System.Data.DataSet.Clone
  - System.Data.DataSet.Copy
  - System.Data.DataSet.CreateDataReader(System.Data.DataTable[])
  - System.Data.DataSet.CreateDataReader
  - System.Data.DataSet.DataSetName
  - System.Data.DataSet.DefaultViewManager
  - System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)
  - System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DataSet.EndInit
  - System.Data.DataSet.EnforceConstraints
  - System.Data.DataSet.ExtendedProperties
  - System.Data.DataSet.GetChanges
  - System.Data.DataSet.GetChanges(System.Data.DataRowState)
  - System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)
  - System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DataSet.GetSchemaSerializable
  - System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DataSet.GetXml
  - System.Data.DataSet.GetXmlSchema
  - System.Data.DataSet.HasChanges
  - System.Data.DataSet.HasChanges(System.Data.DataRowState)
  - System.Data.DataSet.HasErrors
  - System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])
  - System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])
  - System.Data.DataSet.InferXmlSchema(System.String,System.String[])
  - System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])
  - System.Data.DataSet.Initialized
  - System.Data.DataSet.InitializeDerivedDataSet
  - System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DataSet.IsInitialized
  - System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])
  - System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])
  - System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])
  - System.Data.DataSet.Locale
  - System.Data.DataSet.Merge(System.Data.DataRow[])
  - System.Data.DataSet.Merge(System.Data.DataSet)
  - System.Data.DataSet.Merge(System.Data.DataTable)
  - System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)
  - System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)
  - System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)
  - System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)
  - System.Data.DataSet.MergeFailed
  - System.Data.DataSet.Namespace
  - System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  - System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)
  - System.Data.DataSet.OnRemoveTable(System.Data.DataTable)
  - System.Data.DataSet.Prefix
  - System.Data.DataSet.RaisePropertyChanging(System.String)
  - System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)
  - System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)
  - System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)
  - System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)
  - System.Data.DataSet.ReadXml(System.String)
  - System.Data.DataSet.ReadXml(System.IO.TextReader)
  - System.Data.DataSet.ReadXml(System.IO.Stream)
  - System.Data.DataSet.ReadXml(System.Xml.XmlReader)
  - System.Data.DataSet.ReadXmlSchema(System.IO.Stream)
  - System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)
  - System.Data.DataSet.ReadXmlSchema(System.String)
  - System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)
  - System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)
  - System.Data.DataSet.RejectChanges
  - System.Data.DataSet.Relations
  - System.Data.DataSet.RemotingFormat
  - System.Data.DataSet.Reset
  - System.Data.DataSet.SchemaSerializationMode
  - System.Data.DataSet.ShouldSerializeRelations
  - System.Data.DataSet.ShouldSerializeTables
  - System.Data.DataSet.Site
  - System.Data.DataSet.Tables
  - System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)
  - System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)
  - System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)
  - System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)
  - System.Data.DataSet.WriteXml(System.String)
  - System.Data.DataSet.WriteXml(System.IO.TextWriter)
  - System.Data.DataSet.WriteXml(System.Xml.XmlWriter)
  - System.Data.DataSet.WriteXml(System.IO.Stream)
  - System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})
  - System.Data.DataSet.WriteXmlSchema(System.IO.Stream)
  - System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)
  - System.Data.DataSet.WriteXmlSchema(System.String)
  - System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)
  - System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})
  - System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})
  - System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})
  - System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.DataSet.System#ComponentModel#IListSource#GetList
  - System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
  type: Class
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Represents an in-memory cache of data.
  remarks: "The <xref:System.Data.DataSet>, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture. The <xref:System.Data.DataSet> consists of a collection of <xref:System.Data.DataTable> objects that you can relate to each other with <xref:System.Data.DataRelation> objects. You can also enforce data integrity in the <xref:System.Data.DataSet> by using the <xref:System.Data.UniqueConstraint> and <xref:System.Data.ForeignKeyConstraint> objects. For further details about working with <xref:System.Data.DataSet> objects, see [DataSets, DataTables, and DataViews](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md).  \n  \n Whereas <xref:System.Data.DataTable> objects contain the data, the <xref:System.Data.DataRelationCollection> allows you to navigate though the table hierarchy. The tables are contained in a <xref:System.Data.DataTableCollection> accessed through the <xref:System.Data.DataSet.Tables%2A> property. When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive. For example, if one <xref:System.Data.DataTable> is named \"mydatatable\" and another is named \"Mydatatable\", a string used to search for one of the tables is regarded as case sensitive. However, if \"mydatatable\" exists and \"Mydatatable\" does not, the search string is regarded as case insensitive. For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).  \n  \n A <xref:System.Data.DataSet> can read and write data and schema as XML documents. The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled. You can save the schema as an XML schema with the <xref:System.Data.DataSet.WriteXmlSchema%2A> method, and both schema and data can be saved using the <xref:System.Data.DataSet.WriteXml%2A> method. To read an XML document that includes both schema and data, use the <xref:System.Data.DataSet.ReadXml%2A> method.  \n  \n In a typical multiple-tier implementation, the steps for creating and refreshing a <xref:System.Data.DataSet>, and in turn, updating the original data are to:  \n  \n1.  Build and fill each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> with data from a data source using a <xref:System.Data.Common.DataAdapter>.  \n  \n2.  Change the data in individual <xref:System.Data.DataTable> objects by adding, updating, or deleting <xref:System.Data.DataRow> objects.  \n  \n3.  Invoke the <xref:System.Data.DataSet.GetChanges%2A> method to create a second <xref:System.Data.DataSet> that features only the changes to the data.  \n  \n4.  Call the <xref:System.Data.Common.DataAdapter.Update%2A> method of the <xref:System.Data.Common.DataAdapter>, passing the second <xref:System.Data.DataSet> as an argument.  \n  \n5.  Invoke the <xref:System.Data.DataSet.Merge%2A> method to merge the changes from the second <xref:System.Data.DataSet> into the first.  \n  \n6.  Invoke the <xref:System.Data.DataSet.AcceptChanges%2A> on the <xref:System.Data.DataSet>. Alternatively, invoke <xref:System.Data.DataSet.RejectChanges%2A> to cancel the changes.  \n  \n> [!NOTE]\n>  The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for remoting. These are the only ADO.NET objects that can be remoted.  \n  \n> [!NOTE]\n>  Classes inherited from <xref:System.Data.DataSet> are not finalized by the garbage collector, because the finalizer has been suppressed in <xref:System.Data.DataSet>. The derived class can call the <xref:System.GC.ReRegisterForFinalize%2A> method in its constructor to allow the class to be finalized by the garbage collector."
  example:
  - "The following example consists of several methods that, combined, create and fill a <xref:System.Data.DataSet> from the **Northwind** database.  \n  \n [!code-csharp[Classic WebData DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet Example/VB/source.vb#1)]"
  syntax:
    content: 'public class DataSet : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable'
  inheritance:
  - System.Object
  - System.ComponentModel.MarshalByValueComponent
  implements:
  - System.ComponentModel.IListSource
  - System.ComponentModel.ISupportInitializeNotification
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.#ctor
  commentId: M:System.Data.DataSet.#ctor
  id: '#ctor'
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DataSet()
  nameWithType: DataSet.DataSet()
  fullName: DataSet.DataSet()
  type: Constructor
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.DataSet"></xref> class.
  remarks: "This implementation of the <xref:System.Data.DataSet> constructor takes no parameters, and creates a default name, \"NewDataSet,\" for the new instance.  \n  \n A name for the <xref:System.Data.DataSet> is required to ensure that the XML representation of the <xref:System.Data.DataSet> always has a name for the document element, which is the highest-level element in a schema definition."
  example:
  - "The following example creates a new <xref:System.Data.DataSet>, and adds two <xref:System.Data.DataTable> objects to it.  \n  \n [!code-vb[Classic WebData DataSet.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.DataSet Example/VB/source.vb#1)]"
  syntax:
    content: public DataSet ();
    parameters: []
  overload: System.Data.DataSet.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.#ctor(System.String)
  commentId: M:System.Data.DataSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DataSet(String)
  nameWithType: DataSet.DataSet(String)
  fullName: DataSet.DataSet(String)
  type: Constructor
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Initializes a new instance of a <xref href="System.Data.DataSet"></xref> class with the given name.
  remarks: A name for the <xref:System.Data.DataSet> is required to ensure that the XML representation of the <xref:System.Data.DataSet> always has a name for the document element, which is the highest level element in a schema definition.
  example:
  - "The following example creates a new <xref:System.Data.DataSet>, to which two <xref:System.Data.DataTable> objects are added.  \n  \n [!code-vb[Classic WebData DataSet.DataSet1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.DataSet1 Example/VB/source.vb#1)]"
  syntax:
    content: public DataSet (string dataSetName);
    parameters:
    - id: dataSetName
      type: System.String
      description: The name of the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DataSet(SerializationInfo, StreamingContext)
  nameWithType: DataSet.DataSet(SerializationInfo, StreamingContext)
  fullName: DataSet.DataSet(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Initializes a new instance of a <xref href="System.Data.DataSet"></xref> class that has the given serialization information and context.
  syntax:
    content: protected DataSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The data needed to serialize or deserialize an object.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The source and destination of a given serialized stream.
  overload: System.Data.DataSet.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)
  commentId: M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)'
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DataSet(SerializationInfo, StreamingContext, Boolean)
  nameWithType: DataSet.DataSet(SerializationInfo, StreamingContext, Boolean)
  fullName: DataSet.DataSet(SerializationInfo, StreamingContext, Boolean)
  type: Constructor
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.DataSet"></xref> class.
  syntax:
    content: protected DataSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, bool ConstructSchema);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> object.
    - id: ConstructSchema
      type: System.Boolean
      description: The boolean value.
  overload: System.Data.DataSet.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.AcceptChanges
  commentId: M:System.Data.DataSet.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataSet
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataSet.AcceptChanges()
  fullName: DataSet.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Commits all the changes made to this <xref href="System.Data.DataSet"></xref> since it was loaded or since the last time <xref href="System.Data.DataSet.AcceptChanges"></xref> was called.
  remarks: "Both the <xref:System.Data.DataRow> and <xref:System.Data.DataTable> classes have <xref:System.Data.DataSet.AcceptChanges%2A> methods. Calling <xref:System.Data.DataTable.AcceptChanges%2A> at the <xref:System.Data.DataTable> level causes the <xref:System.Data.DataRow.AcceptChanges%2A> method for each <xref:System.Data.DataRow> to be called. Similarly, invoking <xref:System.Data.DataSet.AcceptChanges%2A> on the <xref:System.Data.DataSet> causes <xref:System.Data.DataTable.AcceptChanges%2A> to be called on each table within the <xref:System.Data.DataSet>. In this manner, you have multiple levels at which the method can be invoked. Calling the <xref:System.Data.DataSet.AcceptChanges%2A> of the <xref:System.Data.DataSet> enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.  \n  \n When you call `AcceptChanges` on the `DataSet`, any <xref:System.Data.DataRow> objects still in edit-mode end their edits successfully. The <xref:System.Data.DataRow.RowState%2A> property of each <xref:System.Data.DataRow> also changes; `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.  \n  \n If the `DataSet` contains <xref:System.Data.ForeignKeyConstraint> objects, invoking the `AcceptChanges` method also causes the <xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A> to be enforced.  \n  \n> [!NOTE]\n>  `AcceptChanges` and `RejectChanges` only apply to `DataRow` related changes (that is, Add, Remove, Delete, and Modify). They are not applicable to schema or structural changes.  \n>   \n>  Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter. In that situation, call <xref:System.Data.Common.DataAdapter.Update%2A> instead. See [Updating Data Sources with DataAdapters](http://msdn.microsoft.com/library/33y2221y.aspx) for more information."
  example:
  - "The following example adds a <xref:System.Data.DataRow> to a <xref:System.Data.DataTable> in a <xref:System.Data.DataSet>. The <xref:System.Data.DataSet.AcceptChanges%2A> method is then called on the <xref:System.Data.DataSet>, which cascades to all <xref:System.Data.DataTable> objects that it contains.  \n  \n [!code-csharp[Classic WebData DataSet.AcceptChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.AcceptChanges/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.AcceptChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.AcceptChanges/VB/source.vb#1)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataSet.AcceptChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.BeginInit
  commentId: M:System.Data.DataSet.BeginInit
  id: BeginInit
  parent: System.Data.DataSet
  langs:
  - csharp
  name: BeginInit()
  nameWithType: DataSet.BeginInit()
  fullName: DataSet.BeginInit()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Begins the initialization of a <xref href="System.Data.DataSet"></xref> that is used on a form or used by another component. The initialization occurs at run time.
  remarks: The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component. The <xref:System.Data.DataSet.EndInit%2A> method ends the initialization. Using the <xref:System.Data.DataSet.BeginInit%2A> and <xref:System.Data.DataSet.EndInit%2A> methods prevents the control from being used before it is fully initialized.
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Data.DataSet.BeginInit*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.CaseSensitive
  commentId: P:System.Data.DataSet.CaseSensitive
  id: CaseSensitive
  parent: System.Data.DataSet
  langs:
  - csharp
  name: CaseSensitive
  nameWithType: DataSet.CaseSensitive
  fullName: DataSet.CaseSensitive
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets a value indicating whether string comparisons within <xref href="System.Data.DataTable"></xref> objects are case-sensitive.
  remarks: "The <xref:System.Data.DataSet.CaseSensitive%2A> property affects how sorting, searching, and filtering operations are performed on each <xref:System.Data.DataTable> object contained in a <xref:System.Data.DataSet> when using the <xref:System.Data.DataTable.Select%2A> method.  \n  \n By default, setting the <xref:System.Data.DataSet.CaseSensitive%2A> property for a <xref:System.Data.DataSet> also sets the <xref:System.Data.DataTable.CaseSensitive%2A> property of each associated <xref:System.Data.DataTable> to the same value."
  example:
  - "The following example toggles the <xref:System.Data.DataSet.CaseSensitive%2A> property.  \n  \n [!code-vb[Classic WebData DataSet.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.CaseSensitive Example/VB/source.vb#1)]"
  syntax:
    content: public bool CaseSensitive { get; set; }
    return:
      type: System.Boolean
      description: '`true` if string comparisons are case-sensitive; otherwise `false`. The default is `false`.'
  overload: System.Data.DataSet.CaseSensitive*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Clear
  commentId: M:System.Data.DataSet.Clear
  id: Clear
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Clear()
  nameWithType: DataSet.Clear()
  fullName: DataSet.Clear()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Clears the <xref href="System.Data.DataSet"></xref> of any data by removing all rows in all tables.
  remarks: If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=fullName> or <xref:System.Data.DataTable.Clear%2A?displayProperty=fullName> raises the <xref:System.NotSupportedException>. To avoid this situation, traverse each table, removing each row one at a time.
  example:
  - "The following example clears the <xref:System.Data.DataSet> of all rows in all tables.  \n  \n [!code-csharp[Classic WebData DataSet.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Clear Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Clear Example/VB/source.vb#1)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataSet.Clear*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Clone
  commentId: M:System.Data.DataSet.Clone
  id: Clone
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Clone()
  nameWithType: DataSet.Clone()
  fullName: DataSet.Clone()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Copies the structure of the <xref href="System.Data.DataSet"></xref>, including all <xref href="System.Data.DataTable"></xref> schemas, relations, and constraints. Does not copy any data.
  remarks: >-
    > [!NOTE]

    >  If these classes have been subclassed, the clone will also be of the same subclasses.
  example:
  - "The following example creates a clone of a <xref:System.Data.DataSet> object's schema.  \n  \n [!code-csharp[Classic WebData DataSet.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Clone Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Clone Example/VB/source.vb#1)]"
  syntax:
    content: public virtual System.Data.DataSet Clone ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: A new <xref href="System.Data.DataSet"></xref> with the same schema as the current <xref href="System.Data.DataSet"></xref>, but none of the data.
  overload: System.Data.DataSet.Clone*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Copy
  commentId: M:System.Data.DataSet.Copy
  id: Copy
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Copy()
  nameWithType: DataSet.Copy()
  fullName: DataSet.Copy()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Copies both the structure and data for this <xref href="System.Data.DataSet"></xref>.
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataSet.Copy%2A> method to create a copy of the original <xref:System.Data.DataSet>.  \n  \n [!code-csharp[Classic WebData DataSet.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Copy Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Copy Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataSet Copy ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "A new <xref href=\"System.Data.DataSet\"></xref> with the same structure (table schemas, relations, and constraints) and data as this <xref href=\"System.Data.DataSet\"></xref>.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n If these classes have been subclassed, the copy will also be of the same subclasses.  \n  \n</p></block>"
  overload: System.Data.DataSet.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.CreateDataReader(System.Data.DataTable[])
  commentId: M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])
  id: CreateDataReader(System.Data.DataTable[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: CreateDataReader(DataTable[])
  nameWithType: DataSet.CreateDataReader(DataTable[])
  fullName: DataSet.CreateDataReader(DataTable[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Returns a <xref href="System.Data.DataTableReader"></xref> with one result set per <xref href="System.Data.DataTable"></xref>.
  remarks: In order to ensure that the order of the result sets within the returned <xref:System.Data.DataTableReader>, if a <xref:System.Data.DataTable> within the <xref:System.Data.DataSet> is empty, it is represented by an empty result set within the returned `DataTableReader`. Because this overloaded version allows you to supply a list of `DataTable` instances as parameters, you can specify the order in which the result sets appear within the returned `DataTableReader`.
  example:
  - "This example, a Console application, creates three <xref:System.Data.DataTable> instances and adds each to a <xref:System.Data.DataSet>. The example calls the <xref:System.Data.DataSet.CreateDataReader%2A> method and displays the contents of the returned <xref:System.Data.DataTableReader>. Note that the order of the result sets in the `DataTableReader` is controlled by the order of the `DataTable` instances passed as parameters. The example displays the results in the Console window.  \n  \n [!code-csharp[DataWorks DataSet.DataTableReaderTables#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.DataTableReaderTables/CS/source.cs#1)]\n [!code-vb[DataWorks DataSet.DataTableReaderTables#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.DataTableReaderTables/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataTableReader CreateDataReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: An array of DataTables providing the order of the result sets to be returned in the <xref href="System.Data.DataTableReader"></xref>.
    return:
      type: System.Data.DataTableReader
      description: A <xref href="System.Data.DataTableReader"></xref> containing one or more result sets, corresponding to the <xref href="System.Data.DataTable"></xref> instances contained within the source <xref href="System.Data.DataSet"></xref>. The returned result sets are in the order specified by the <code>dataTables</code> parameter.
  overload: System.Data.DataSet.CreateDataReader*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.CreateDataReader
  commentId: M:System.Data.DataSet.CreateDataReader
  id: CreateDataReader
  parent: System.Data.DataSet
  langs:
  - csharp
  name: CreateDataReader()
  nameWithType: DataSet.CreateDataReader()
  fullName: DataSet.CreateDataReader()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Returns a <xref href="System.Data.DataTableReader"></xref> with one result set per <xref href="System.Data.DataTable"></xref>, in the same sequence as the tables appear in the <xref href="System.Data.DataSet.Tables"></xref> collection.
  remarks: In order to ensure the order of the result sets within the returned <xref:System.Data.DataTableReader>, if a <xref:System.Data.DataTable> within the <xref:System.Data.DataSet> is empty, it is represented by an empty result set within the returned `DataTableReader`.
  example:
  - "The following example creates three <xref:System.Data.DataTable> instances, and adds each to a <xref:System.Data.DataSet>. The example then passes the filled `DataSet` to a procedure that calls the <xref:System.Data.DataSet.CreateDataReader%2A> method, and proceeds to iterate through all the result sets contained within the <xref:System.Data.DataTableReader>. The example displays the results in the Console window.  \n  \n [!code-csharp[DataWorks DataSet.DataTableReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.DataTableReader/CS/source.cs#1)]\n [!code-vb[DataWorks DataSet.DataTableReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.DataTableReader/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataTableReader CreateDataReader ();
    parameters: []
    return:
      type: System.Data.DataTableReader
      description: A <xref href="System.Data.DataTableReader"></xref> containing one or more result sets, corresponding to the <xref href="System.Data.DataTable"></xref> instances contained within the source <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.CreateDataReader*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.DataSetName
  commentId: P:System.Data.DataSet.DataSetName
  id: DataSetName
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DataSetName
  nameWithType: DataSet.DataSetName
  fullName: DataSet.DataSetName
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the name of the current <xref href="System.Data.DataSet"></xref>.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataSet> with the given <xref:System.Data.DataSet.DataSetName%2A>.  \n  \n [!code-csharp[Classic WebData DataSet.DataSetName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.DataSetName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.DataSetName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.DataSetName Example/VB/source.vb#1)]"
  syntax:
    content: public string DataSetName { get; set; }
    return:
      type: System.String
      description: The name of the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.DataSetName*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.DefaultViewManager
  commentId: P:System.Data.DataSet.DefaultViewManager
  id: DefaultViewManager
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DefaultViewManager
  nameWithType: DataSet.DefaultViewManager
  fullName: DataSet.DefaultViewManager
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a custom view of the data contained in the <xref href="System.Data.DataSet"></xref> to allow filtering, searching, and navigating using a custom <xref href="System.Data.DataViewManager"></xref>.
  remarks: "The <xref:System.Data.DataViewManager> returned by the <xref:System.Data.DataSet.DefaultViewManager%2A> property allows you to create custom settings for each <xref:System.Data.DataTable> in the <xref:System.Data.DataSet>.  \n  \n When you obtain a <xref:System.Data.DataView> from a <xref:System.Data.DataTable>, the sort order, filtering, and <xref:System.Data.DataViewRowState> are configured according to the settings in the <xref:System.Data.DataSet.DefaultViewManager%2A> property."
  example:
  - "The following example gets the default <xref:System.Data.DataViewManager> for a <xref:System.Data.DataSet>, and adds a <xref:System.Data.DataTable> to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-vb[Classic WebData DataSet.DefaultViewManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.DefaultViewManager Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Data.DataViewManager DefaultViewManager { get; }
    return:
      type: System.Data.DataViewManager
      description: A <xref href="System.Data.DataViewManager"></xref> object.
  overload: System.Data.DataSet.DefaultViewManager*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)
  commentId: M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)
  id: DetermineSchemaSerializationMode(System.Xml.XmlReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DetermineSchemaSerializationMode(XmlReader)
  nameWithType: DataSet.DetermineSchemaSerializationMode(XmlReader)
  fullName: DataSet.DetermineSchemaSerializationMode(XmlReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Determines the <xref href="System.Data.DataSet.SchemaSerializationMode"></xref> for a <xref href="System.Data.DataSet"></xref>.
  remarks: This method can be called when deserializing a typed <xref:System.Data.DataSet> to determine its <xref:System.Data.DataSet.SchemaSerializationMode%2A>.
  syntax:
    content: protected System.Data.SchemaSerializationMode DetermineSchemaSerializationMode (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> instance that is passed during deserialization of the <xref href="System.Data.DataSet"></xref>.
    return:
      type: System.Data.SchemaSerializationMode
      description: An <xref href="System.Data.SchemaSerializationMode"></xref> enumeration indicating whether schema information has been omitted from the payload.
  overload: System.Data.DataSet.DetermineSchemaSerializationMode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
  nameWithType: DataSet.DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
  fullName: DataSet.DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Determines the <xref href="System.Data.DataSet.SchemaSerializationMode"></xref> for a <xref href="System.Data.DataSet"></xref>.
  remarks: This method can be called when deserializing a typed <xref:System.Data.DataSet> to determine its <xref:System.Data.DataSet.SchemaSerializationMode%2A>.
  syntax:
    content: protected System.Data.SchemaSerializationMode DetermineSchemaSerializationMode (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that a `DataSet`’s protected constructor <xref href="System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></xref> is invoked with during deserialization in remoting scenarios.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that a `DataSet`’s protected constructor <xref href="System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></xref> is invoked with during deserialization in remoting scenarios.
    return:
      type: System.Data.SchemaSerializationMode
      description: An <xref href="System.Data.SchemaSerializationMode"></xref> enumeration indicating whether schema information has been omitted from the payload.
  overload: System.Data.DataSet.DetermineSchemaSerializationMode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.EndInit
  commentId: M:System.Data.DataSet.EndInit
  id: EndInit
  parent: System.Data.DataSet
  langs:
  - csharp
  name: EndInit()
  nameWithType: DataSet.EndInit()
  fullName: DataSet.EndInit()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Ends the initialization of a <xref href="System.Data.DataSet"></xref> that is used on a form or used by another component. The initialization occurs at run time.
  remarks: The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component. The <xref:System.Data.DataSet.BeginInit%2A> method starts the initialization. Using the <xref:System.Data.DataSet.BeginInit%2A> and <xref:System.Data.DataSet.EndInit%2A> methods prevents the control from being used before it is fully initialized.
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Data.DataSet.EndInit*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.EnforceConstraints
  commentId: P:System.Data.DataSet.EnforceConstraints
  id: EnforceConstraints
  parent: System.Data.DataSet
  langs:
  - csharp
  name: EnforceConstraints
  nameWithType: DataSet.EnforceConstraints
  fullName: DataSet.EnforceConstraints
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.
  remarks: Constraints are set at the <xref:System.Data.DataTable> level (<xref:System.Data.DataTable.Constraints%2A> property). For more information about creating constraints, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).
  example:
  - "The following example creates a <xref:System.Data.DataSet> with one table, one column, five rows, and one <xref:System.Data.UniqueConstraint>. The <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false` and the values of each row are set to the same value. When the <xref:System.Data.DataSet.EnforceConstraints%2A> property is reset to `true`, a <xref:System.Data.ConstraintException> is generated.  \n  \n [!code-csharp[Classic WebData DataSet.EnforceConstraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.EnforceConstraints Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.EnforceConstraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.EnforceConstraints Example/VB/source.vb#1)]"
  syntax:
    content: public bool EnforceConstraints { get; set; }
    return:
      type: System.Boolean
      description: '`true` if rules are enforced; otherwise `false`. The default is `true`.'
  overload: System.Data.DataSet.EnforceConstraints*
  exceptions:
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: One or more constraints cannot be enforced.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ExtendedProperties
  commentId: P:System.Data.DataSet.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: DataSet.ExtendedProperties
  fullName: DataSet.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the collection of customized user information associated with the `DataSet`.
  remarks: "The <xref:System.Data.DataSet.ExtendedProperties%2A> property enables you to store custom information with the `DataSet`. For example, you might store a time when the data should be refreshed.  \n  \n Extended properties must be of type <xref:System.String> if you want them persisted when the <xref:System.Data.DataSet> is written as XML."
  example:
  - "The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property. The second example retrieves the custom property.  \n  \n [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: A <xref href="System.Data.PropertyCollection"></xref> with all custom user information.
  overload: System.Data.DataSet.ExtendedProperties*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetChanges
  commentId: M:System.Data.DataSet.GetChanges
  id: GetChanges
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetChanges()
  nameWithType: DataSet.GetChanges()
  fullName: DataSet.GetChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a copy of the <xref href="System.Data.DataSet"></xref> that contains all changes made to it since it was loaded or since <xref href="System.Data.DataSet.AcceptChanges"></xref> was last called.
  remarks: Creates a new <xref:System.Data.DataSet> that contains a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes. Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows. The method returns `null` if there are no rows in the original <xref:System.Data.DataSet> that have pending changes.
  example:
  - "The following example creates a simple <xref:System.Data.DataSet> with one table, two columns, and ten rows. Two values are changed, and one row is added. A subset of the changed data is created using the <xref:System.Data.DataSet.GetChanges%2A> method. After reconciling errors, a new column is added to the subset, changing the schema. When the <xref:System.Data.DataSet.Merge%2A> method is called with the `missingSchemaAction` set to `MissingSchemaAction.Add`, the new column is added to the original <xref:System.Data.DataSet> object's schema.  \n  \n [!code-csharp[Classic WebData DataSet.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataSet GetChanges ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: A copy of the changes from this <xref href="System.Data.DataSet"></xref> that can have actions performed on it and later be merged back in using <xref href="System.Data.DataSet.Merge(System.Data.DataSet)"></xref>. If no changed rows are found, the method returns `null`.
  overload: System.Data.DataSet.GetChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetChanges(System.Data.DataRowState)
  commentId: M:System.Data.DataSet.GetChanges(System.Data.DataRowState)
  id: GetChanges(System.Data.DataRowState)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetChanges(DataRowState)
  nameWithType: DataSet.GetChanges(DataRowState)
  fullName: DataSet.GetChanges(DataRowState)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a copy of the <xref href="System.Data.DataSet"></xref> containing all changes made to it since it was last loaded, or since <xref href="System.Data.DataSet.AcceptChanges"></xref> was called, filtered by <xref href="System.Data.DataRowState"></xref>.
  remarks: "The <xref:System.Data.DataSet.GetChanges%2A> method is used to produce a second <xref:System.Data.DataSet> object that contains only the changes introduced into the original. Use the `rowStates` argument to specify the type of changes the new object should include.  \n  \n This returned copy is designed to be merged back in to this original <xref:System.Data.DataSet>. Relationship constraints may cause parent rows marked `Unchanged` to be included. If no rows of the desired <xref:System.Data.DataRowState> are found, the <xref:System.Data.DataSet.GetChanges%2A> method returns `null`."
  example:
  - "The following example uses the <xref:System.Data.DataSet.GetChanges%2A> method to create a second <xref:System.Data.DataSet> object, which is then used to update a data source.  \n  \n [!code-csharp[Classic WebData DataSet.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges1 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataSet GetChanges (System.Data.DataRowState rowStates);
    parameters:
    - id: rowStates
      type: System.Data.DataRowState
      description: One of the <xref href="System.Data.DataRowState"></xref> values.
    return:
      type: System.Data.DataSet
      description: A filtered copy of the <xref href="System.Data.DataSet"></xref> that can have actions performed on it, and subsequently be merged back in using <xref href="System.Data.DataSet.Merge(System.Data.DataSet)"></xref>. If no rows of the desired <xref href="System.Data.DataRowState"></xref> are found, the method returns `null`.
  overload: System.Data.DataSet.GetChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)
  id: GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetDataSetSchema(XmlSchemaSet)
  nameWithType: DataSet.GetDataSetSchema(XmlSchemaSet)
  fullName: DataSet.GetDataSetSchema(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a copy of <xref href="System.Xml.Schema.XmlSchemaSet"></xref> for the DataSet.
  syntax:
    content: public static System.Xml.Schema.XmlSchemaComplexType GetDataSetSchema (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The specified schema set.
    return:
      type: System.Xml.Schema.XmlSchemaComplexType
      description: A copy of <xref href="System.Xml.Schema.XmlSchemaSet"></xref>.
  overload: System.Data.DataSet.GetDataSetSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: DataSet.GetObjectData(SerializationInfo, StreamingContext)
  fullName: DataSet.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Populates a serialization information object with the data needed to serialize the <xref href="System.Data.DataSet"></xref>.
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: A <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized data associated with the <xref href="System.Data.DataSet"></xref>.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: A <xref href="System.Runtime.Serialization.StreamingContext"></xref> that contains the source and destination of the serialized stream associated with the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>info</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetSchemaSerializable
  commentId: M:System.Data.DataSet.GetSchemaSerializable
  id: GetSchemaSerializable
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetSchemaSerializable()
  nameWithType: DataSet.GetSchemaSerializable()
  fullName: DataSet.GetSchemaSerializable()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Returns a serializable <xref href="System.Xml.Schema.XMLSchema"></xref> instance.
  syntax:
    content: protected virtual System.Xml.Schema.XmlSchema GetSchemaSerializable ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: The <xref href="System.Xml.Schema.XMLSchema"></xref> instance.
  overload: System.Data.DataSet.GetSchemaSerializable*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetSerializationData(SerializationInfo, StreamingContext)
  nameWithType: DataSet.GetSerializationData(SerializationInfo, StreamingContext)
  fullName: DataSet.GetSerializationData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Deserializes the table data from the binary or XML stream.
  syntax:
    content: protected void GetSerializationData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> instance.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The streaming context.
  overload: System.Data.DataSet.GetSerializationData*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetXml
  commentId: M:System.Data.DataSet.GetXml
  id: GetXml
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetXml()
  nameWithType: DataSet.GetXml()
  fullName: DataSet.GetXml()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Returns the XML representation of the data stored in the <xref href="System.Data.DataSet"></xref>.
  remarks: "Calling this method is identical to calling <xref:System.Data.DataSet.WriteXml%2A> with <xref:System.Data.XmlWriteMode> set to <xref:System.Data.XmlWriteMode.IgnoreSchema>.  \n  \n <xref:System.Data.DataSet.GetXml%2A> returns XML as a string, and therefore requires more overhead than <xref:System.Data.DataSet.WriteXml%2A> to write XML to a file.  \n  \n If you build a <xref:System.Data.DataSet> using schema inference and serialize it using XML or Web services, the column ordering may change."
  example:
  - "The following example creates a <xref:System.Data.DataSet> and <xref:System.Data.DataTable>, adds sample data, and then displays the data in XML format.  \n  \n [!code-csharp[Classic WebData DataSet.GetXml Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetXml Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetXml Example/VB/source.vb#1)]  \n  \n This sample demonstrates how to write data into an XML file from a DataSet and read data into DataSet from XML. This sample will create one dataset with two tables, use two ways to export a dataset into the XML files (WriteXml and GetXml), and use two ways (ReadXml and InferXmlSchema) to import a dataset from the XML files.  \n  \n Before you compile and run the sample, you need to create four XML files in the sample directory. First, create ElementsWithAttributes.xml:  \n  \n```  \n<MySchool>  \n  <Course CourseID=\"C1045\" Year=\"2012\"  Title=\"Calculus\" Credits=\"4\" DepartmentID=\"7\">New</Course>  \n  <Course CourseID=\"C1061\" Year=\"2012\"  Title=\"Physics\" Credits=\"4\" DepartmentID=\"1\" />  \n  <Department DepartmentID=\"1\" Name=\"Engineering\" Budget=\"350000\" StartDate=\"2007-09-01T00:00:00+08:00\" Administrator=\"2\" />  \n  <Department DepartmentID=\"7\" Name=\"Mathematics\" Budget=\"250024\" StartDate=\"2007-09-01T00:00:00+08:00\" Administrator=\"3\">Cancelled</Department>  \n</MySchool>  \n```  \n  \n Next, create ElementsWithChildElementsxml.xml:  \n  \n```  \n<MySchool>  \n  <Course>  \n    <CourseID>C1045</CourseID>  \n    <Year>2012</Year>  \n    <Title>Calculus</Title>  \n    <Credits>4</Credits>  \n    <DepartmentID>7</DepartmentID>  \n  </Course>  \n  <Course>  \n    <CourseID>C1061</CourseID>  \n    <Year>2012</Year>  \n    <Title>Physics</Title>  \n    <Credits>4</Credits>  \n    <DepartmentID>1</DepartmentID>  \n  </Course>  \n  <Course>  \n    <CourseID>C2021</CourseID>  \n    <Year>2012</Year>  \n    <Title>Composition</Title>  \n    <Credits>3</Credits>  \n    <DepartmentID>2</DepartmentID>  \n  </Course>  \n  <Course>  \n    <CourseID>C2042</CourseID>  \n    <Year>2012</Year>  \n    <Title>Literature</Title>  \n    <Credits>4</Credits>  \n    <DepartmentID>2</DepartmentID>  \n  </Course>  \n  <Department>  \n    <DepartmentID>1</DepartmentID>  \n    <Name>Engineering</Name>  \n    <Budget>350000</Budget>  \n    <StartDate>2007-09-01T00:00:00+08:00</StartDate>  \n    <Administrator>2</Administrator>  \n  </Department>  \n  <Department>  \n    <DepartmentID>2</DepartmentID>  \n    <Name>English</Name>  \n    <Budget>120000</Budget>  \n    <StartDate>2007-09-01T00:00:00+08:00</StartDate>  \n    <Administrator>6</Administrator>  \n  </Department>  \n  <Department>  \n    <DepartmentID>4</DepartmentID>  \n    <Name>Economics</Name>  \n    <Budget>200000</Budget>  \n    <StartDate>2007-09-01T00:00:00+08:00</StartDate>  \n    <Administrator>4</Administrator>  \n  </Department>  \n  <Department>  \n    <DepartmentID>7</DepartmentID>  \n    <Name>Mathematics</Name>  \n    <Budget>250024</Budget>  \n    <StartDate>2007-09-01T00:00:00+08:00</StartDate>  \n    <Administrator>3</Administrator>  \n  </Department>  \n</MySchool>  \n```  \n  \n Now create ElementsWithOnlyAttributes.xml:  \n  \n```  \n<MySchool>  \n  <Course CourseID=\"C1045\" Year=\"2012\"  Title=\"Calculus\" Credits=\"4\" DepartmentID=\"7\" />  \n  <Course CourseID=\"C1061\" Year=\"2012\"  Title=\"Physics\" Credits=\"4\" DepartmentID=\"1\" />  \n  <Department DepartmentID=\"1\" Name=\"Engineering\" Budget=\"350000\" StartDate=\"2007-09-01T00:00:00+08:00\" Administrator=\"2\" />  \n  <Department DepartmentID=\"7\" Name=\"Mathematics\" Budget=\"250024\" StartDate=\"2007-09-01T00:00:00+08:00\" Administrator=\"3\" />  \n</MySchool>  \n```  \n  \n And finally, create RepeatingElements.xml:  \n  \n```  \n<MySchool>  \n  <Course>C1045</Course>  \n  <Course>C1061</Course>  \n  <Department>Engineering</Department>   \n  <Department>Mathematics</Department>  \n</MySchool>  \n```  \n  \n Now you can compile and run the following source code.  [How to Store Data of DataSet into XML File](http://code.msdn.microsoft.com/How-to-Store-Data-of-7b9710f3) has Visual Basic and C# projects for this sample.  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.IO;  \nusing System.Text;  \nusing System.Xml;  \n  \n// Use WriteXml method to export the dataset.  \nstatic class DataTableHelper {  \n   public static void WriteDataSetToXML(DataSet dataset, String xmlFileName) {  \n      using (FileStream fsWriterStream = new FileStream(xmlFileName, FileMode.Create)) {  \n         using (XmlTextWriter xmlWriter = new XmlTextWriter(fsWriterStream, Encoding.Unicode)) {  \n            dataset.WriteXml(xmlWriter, XmlWriteMode.WriteSchema);  \n            Console.WriteLine(\"Write {0} to the File {1}.\", dataset.DataSetName, xmlFileName);  \n            Console.WriteLine();  \n         }  \n      }  \n   }  \n  \n   // Use GetXml method to get the XML data of the dataset and then export to the file.  \n   public static void GetXMLFromDataSet(DataSet dataset, String xmlFileName) {  \n      using (StreamWriter writer = new StreamWriter(xmlFileName)) {  \n         writer.WriteLine(dataset.GetXml());  \n         Console.WriteLine(\"Get Xml data from {0} and write to the File {1}.\", dataset.DataSetName, xmlFileName);  \n         Console.WriteLine();  \n      }  \n   }  \n  \n   // Use ReadXml method to import the dataset from the dataset.  \n   public static void ReadXmlIntoDataSet(DataSet newDataSet, String xmlFileName) {  \n      using (FileStream fsReaderStream = new FileStream(xmlFileName, FileMode.Open)) {  \n         using (XmlTextReader xmlReader = new XmlTextReader(fsReaderStream)) {  \n            newDataSet.ReadXml(xmlReader, XmlReadMode.ReadSchema);  \n         }  \n      }  \n   }  \n  \n   // Display the columns and value of DataSet.  \n   public static void ShowDataSet(DataSet dataset) {  \n      foreach (DataTable table in dataset.Tables) {  \n         Console.WriteLine(\"Table {0}:\", table.TableName);  \n         ShowDataTable(table);  \n      }  \n   }  \n  \n   // Display the columns and value of DataTable.  \n   private static void ShowDataTable(DataTable table) {  \n      foreach (DataColumn col in table.Columns) {  \n         Console.Write(\"{0,-14}\", col.ColumnName);  \n      }  \n      Console.WriteLine(\"{0,-14}\", \"\");  \n  \n      foreach (DataRow row in table.Rows) {  \n         if (row.RowState == DataRowState.Deleted) {  \n            foreach (DataColumn col in table.Columns) {  \n               if (col.DataType.Equals(typeof(DateTime))) {  \n                  Console.Write(\"{0,-14:d}\", row[col, DataRowVersion.Original]);  \n               }  \n               else if (col.DataType.Equals(typeof(Decimal))) {  \n                  Console.Write(\"{0,-14:C}\", row[col, DataRowVersion.Original]);  \n               }  \n               else {  \n                  Console.Write(\"{0,-14}\", row[col, DataRowVersion.Original]);  \n               }  \n            }  \n         }  \n         else {  \n            foreach (DataColumn col in table.Columns) {  \n               if (col.DataType.Equals(typeof(DateTime))) {  \n                  Console.Write(\"{0,-14:d}\", row[col]);  \n               }  \n               else if (col.DataType.Equals(typeof(Decimal))) {  \n                  Console.Write(\"{0,-14:C}\", row[col]);  \n               }  \n               else {  \n                  Console.Write(\"{0,-14}\", row[col]);  \n               }  \n            }  \n         }  \n         Console.WriteLine(\"{0,-14}\", \"\");  \n      }  \n   }  \n  \n   // Display the columns of DataSet.  \n   public static void ShowDataSetSchema(DataSet dataSet) {  \n      Console.WriteLine(\"{0} contains the following tables:\", dataSet.DataSetName);  \n      foreach (DataTable table in dataSet.Tables) {  \n         Console.WriteLine(\"   Table {0} contains the following columns:\", table.TableName);  \n         ShowDataTableSchema(table);  \n      }  \n   }  \n  \n   // Display the columns of DataTable  \n   private static void ShowDataTableSchema(DataTable table) {  \n      String columnString = \"\";  \n      foreach (DataColumn col in table.Columns) {  \n         columnString += col.ColumnName + \"   \";  \n      }  \n      Console.WriteLine(columnString);  \n   }  \n}  \n  \nclass Program {  \n   static void Main(string[] args) {  \n      // Create the DataSet  \n      DataSet school = new DataSet(\"MySchool\");  \n      DataTable course = CreateCourse();  \n      DataTable department = CreateDepartment();  \n      school.Tables.Add(course);  \n      school.Tables.Add(department);  \n  \n      // Define the constraint between the tables.  \n      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint(\"CourseDepartFK\", department.Columns[\"DepartmentID\"], course.Columns[\"DepartmentID\"]);  \n      courseDepartFK.DeleteRule = Rule.Cascade;  \n      courseDepartFK.UpdateRule = Rule.Cascade;  \n      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  \n      course.Constraints.Add(courseDepartFK);  \n  \n      InsertDepartments(department);  \n      InsertCourses(course);  \n  \n      // Export the dataset to the XML file.  \n      Console.WriteLine(\"Data of the whole DataSet {0}\", school.DataSetName);  \n      DataTableHelper.ShowDataSet(school);  \n  \n      String xmlWithSchemaFileName = \"WriterXMLWithSchema.xml\";  \n      String xmlGetDataFileName = \"GetXML.xml\";  \n  \n      // Use two ways to export the dataset to the Xml file.  \n      DataTableHelper.WriteDataSetToXML(school, xmlWithSchemaFileName);  \n      DataTableHelper.GetXMLFromDataSet(school, xmlGetDataFileName);  \n  \n      // Import the dataset from the XML file.  \n      // Use two ways to import the dataset from the Xml file.  \n      Console.WriteLine(\"Read Xml document into a new DataSet:\");  \n      DataSet newSchool = new DataSet(\"NewSchool\");  \n      DataTableHelper.ReadXmlIntoDataSet(newSchool, xmlWithSchemaFileName);  \n      DataTableHelper.ShowDataSetSchema(newSchool);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Infer a schema for a DataSet from an XML document:\");  \n      InferDataSetSchemaFromXml();  \n  \n      Console.WriteLine(\"Press any key to exit.\");  \n      Console.ReadKey();  \n   }  \n  \n   static DataTable CreateCourse() {  \n      DataTable course = new DataTable(\"Course\");  \n      DataColumn[] cols ={  \n                              new DataColumn(\"CourseID\",typeof(String)),  \n                              new DataColumn(\"Year\",typeof(Int32)),  \n                              new DataColumn(\"Title\",typeof(String)),  \n                              new DataColumn(\"Credits\",typeof(Int32)),  \n                              new DataColumn(\"DepartmentID\",typeof(Int32))};  \n      course.Columns.AddRange(cols);  \n  \n      course.PrimaryKey = new DataColumn[] { course.Columns[\"CourseID\"], course.Columns[\"Year\"] };  \n  \n      return course;  \n   }  \n  \n   static DataTable CreateDepartment() {  \n      DataTable department = new DataTable(\"Department\");  \n      DataColumn[] cols = {   \n                                new DataColumn(\"DepartmentID\", typeof(Int32)),  \n                                new DataColumn(\"Name\",typeof(String)),  \n                                new DataColumn(\"Budget\",typeof(Decimal)),  \n                                new DataColumn(\"StartDate\",typeof(DateTime)),  \n                                new DataColumn(\"Administrator\",typeof(Int32))};  \n      department.Columns.AddRange(cols);  \n  \n      department.PrimaryKey = new DataColumn[] { department.Columns[\"DepartmentID\"] };  \n  \n      return department;  \n   }  \n  \n   static void InsertDepartments(DataTable department) {  \n      Object[] rows = {   \n                            new Object[]{1,\"Engineering\",350000.00,new DateTime(2007,9,1),2},  \n                            new Object[]{2,\"English\",120000.00,new DateTime(2007,9,1),6},  \n                            new Object[]{4,\"Economics\",200000.00,new DateTime(2007,9,1),4},  \n                            new Object[]{7,\"Mathematics\",250024.00,new DateTime(2007,9,1),3}};  \n  \n      foreach (Object[] row in rows) {  \n         department.Rows.Add(row);  \n      }  \n   }  \n  \n   static void InsertCourses(DataTable course) {  \n      Object[] rows ={  \n                               new Object[]{\"C1045\",2012,\"Calculus\",4,7},  \n                               new Object[]{\"C1061\",2012,\"Physics\",4,1},  \n                               new Object[]{\"C2021\",2012,\"Composition\",3,2},  \n                               new Object[]{\"C2042\",2012,\"Literature\",4,2}};  \n  \n      foreach (Object[] row in rows) {  \n         course.Rows.Add(row);  \n      }  \n   }  \n  \n   // Display the results of inferring schema from four types of XML structures  \n   private static void InferDataSetSchemaFromXml() {  \n      String[] xmlFileNames = {   \n  \n                                    @\"ElementsWithOnlyAttributes.xml\",   \n                                    @\"ElementsWithAttributes.xml\",  \n                                    @\"RepeatingElements.xml\",   \n                                    @\"ElementsWithChildElements.xml\" };  \n  \n      foreach (String xmlFileName in xmlFileNames) {  \n         Console.WriteLine(\"Result of {0}\", Path.GetFileNameWithoutExtension(xmlFileName));  \n         DataSet newSchool = new DataSet();  \n         newSchool.InferXmlSchema(xmlFileName, null);  \n         DataTableHelper.ShowDataSetSchema(newSchool);  \n         Console.WriteLine();  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public string GetXml ();
    parameters: []
    return:
      type: System.String
      description: A string that is a representation of the data stored in the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.GetXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.GetXmlSchema
  commentId: M:System.Data.DataSet.GetXmlSchema
  id: GetXmlSchema
  parent: System.Data.DataSet
  langs:
  - csharp
  name: GetXmlSchema()
  nameWithType: DataSet.GetXmlSchema()
  fullName: DataSet.GetXmlSchema()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Returns the XML Schema for the XML representation of the data stored in the <xref href="System.Data.DataSet"></xref>.
  remarks: "Calling this method is identical to calling <xref:System.Data.DataSet.WriteXmlSchema%2A>, except that only the primary schema is written.  \n  \n <xref:System.Data.DataSet.GetXmlSchema%2A> returns XML as a string, and therefore requires more overhead than <xref:System.Data.DataSet.WriteXmlSchema%2A> to write XML to a file.  \n  \n If you build a <xref:System.Data.DataSet> using schema inference and serialize it using XML or Web services, the column ordering may change."
  example:
  - "The following example creates a <xref:System.Data.DataSet> and <xref:System.Data.DataTable>, and then displays the schema in XML format.  \n  \n [!code-csharp[Classic WebData DataSet.GetXmlSchema Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetXmlSchema Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetXmlSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetXmlSchema Example/VB/source.vb#1)]"
  syntax:
    content: public string GetXmlSchema ();
    parameters: []
    return:
      type: System.String
      description: String that is the XML Schema for the XML representation of the data stored in the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.GetXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.HasChanges
  commentId: M:System.Data.DataSet.HasChanges
  id: HasChanges
  parent: System.Data.DataSet
  langs:
  - csharp
  name: HasChanges()
  nameWithType: DataSet.HasChanges()
  fullName: DataSet.HasChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value indicating whether the <xref href="System.Data.DataSet"></xref> has changes, including new, deleted, or modified rows.
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataSet.GetChanges%2A> method to create a second <xref:System.Data.DataSet> object that is then used to update a data source.  \n  \n [!code-csharp[Classic WebData DataSet.HasChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.HasChanges Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.HasChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.HasChanges Example/VB/source.vb#1)]"
  syntax:
    content: public bool HasChanges ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Data.DataSet"></xref> has changes; otherwise `false`.'
  overload: System.Data.DataSet.HasChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.HasChanges(System.Data.DataRowState)
  commentId: M:System.Data.DataSet.HasChanges(System.Data.DataRowState)
  id: HasChanges(System.Data.DataRowState)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: HasChanges(DataRowState)
  nameWithType: DataSet.HasChanges(DataRowState)
  fullName: DataSet.HasChanges(DataRowState)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value indicating whether the <xref href="System.Data.DataSet"></xref> has changes, including new, deleted, or modified rows, filtered by <xref href="System.Data.DataRowState"></xref>.
  remarks: Examine the <xref:System.Data.DataSet.HasChanges%2A> property of the `DataSet` before invoking the <xref:System.Data.DataSet.GetChanges%2A> method.
  example:
  - "The following example uses the <xref:System.Data.DataSet.GetChanges%2A> method to create a second <xref:System.Data.DataSet> object, which is then used to update a data source.  \n  \n [!code-csharp[Classic WebData DataSet.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges1 Example/VB/source.vb#1)]"
  syntax:
    content: public bool HasChanges (System.Data.DataRowState rowStates);
    parameters:
    - id: rowStates
      type: System.Data.DataRowState
      description: One of the <xref href="System.Data.DataRowState"></xref> values.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Data.DataSet"></xref> has changes; otherwise `false`.'
  overload: System.Data.DataSet.HasChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.HasErrors
  commentId: P:System.Data.DataSet.HasErrors
  id: HasErrors
  parent: System.Data.DataSet
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataSet.HasErrors
  fullName: DataSet.HasErrors
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value indicating whether there are errors in any of the <xref href="System.Data.DataTable"></xref> objects within this <xref href="System.Data.DataSet"></xref>.
  remarks: Each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> also has a <xref:System.Data.DataTable.HasErrors%2A> property. Use the `HasErrors` property of the `DataSet` first, to determine if any table has errors, before checking individual <xref:System.Data.DataTable> objects. If a `DataTable` has errors, the <xref:System.Data.DataTable.GetErrors%2A> method returns an array of <xref:System.Data.DataRow> objects containing the errors.
  example:
  - "The following example uses the <xref:System.Data.DataSet.HasErrors%2A> property to determine whether a <xref:System.Data.DataSet> object contains errors. If so, the errors for each <xref:System.Data.DataRow> in each <xref:System.Data.DataTable> are printed.  \n  \n [!code-csharp[Classic WebData DataSet.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.HasErrors Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.HasErrors Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: '`true` if any table contains an error;otherwise `false`.'
  overload: System.Data.DataSet.HasErrors*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])
  commentId: M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])
  id: InferXmlSchema(System.IO.Stream,System.String[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: InferXmlSchema(Stream, String[])
  nameWithType: DataSet.InferXmlSchema(Stream, String[])
  fullName: DataSet.InferXmlSchema(Stream, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Applies the XML schema from the specified <xref href="System.IO.Stream"></xref> to the <xref href="System.Data.DataSet"></xref>.
  syntax:
    content: public void InferXmlSchema (System.IO.Stream stream, string[] nsArray);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The `Stream` from which to read the schema.
    - id: nsArray
      type: System.String[]
      description: An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.
  overload: System.Data.DataSet.InferXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])
  commentId: M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])
  id: InferXmlSchema(System.IO.TextReader,System.String[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: InferXmlSchema(TextReader, String[])
  nameWithType: DataSet.InferXmlSchema(TextReader, String[])
  fullName: DataSet.InferXmlSchema(TextReader, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Applies the XML schema from the specified <xref href="System.IO.TextReader"></xref> to the <xref href="System.Data.DataSet"></xref>.
  syntax:
    content: public void InferXmlSchema (System.IO.TextReader reader, string[] nsArray);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: The `TextReader` from which to read the schema.
    - id: nsArray
      type: System.String[]
      description: An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.
  overload: System.Data.DataSet.InferXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.InferXmlSchema(System.String,System.String[])
  commentId: M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])
  id: InferXmlSchema(System.String,System.String[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: InferXmlSchema(String, String[])
  nameWithType: DataSet.InferXmlSchema(String, String[])
  fullName: DataSet.InferXmlSchema(String, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Applies the XML schema from the specified file to the <xref href="System.Data.DataSet"></xref>.
  syntax:
    content: public void InferXmlSchema (string fileName, string[] nsArray);
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file (including the path) from which to read the schema.
    - id: nsArray
      type: System.String[]
      description: An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.
  overload: System.Data.DataSet.InferXmlSchema*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])
  commentId: M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])
  id: InferXmlSchema(System.Xml.XmlReader,System.String[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: InferXmlSchema(XmlReader, String[])
  nameWithType: DataSet.InferXmlSchema(XmlReader, String[])
  fullName: DataSet.InferXmlSchema(XmlReader, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Applies the XML schema from the specified <xref href="System.Xml.XmlReader"></xref> to the <xref href="System.Data.DataSet"></xref>.
  syntax:
    content: public void InferXmlSchema (System.Xml.XmlReader reader, string[] nsArray);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The `XMLReader` from which to read the schema.
    - id: nsArray
      type: System.String[]
      description: An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.
  overload: System.Data.DataSet.InferXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Initialized
  commentId: E:System.Data.DataSet.Initialized
  id: Initialized
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Initialized
  nameWithType: DataSet.Initialized
  fullName: DataSet.Initialized
  type: Event
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Occurs after the <xref href="System.Data.DataSet"></xref> is initialized.
  remarks: For more information, see <xref:System.Data.DataSet.IsInitialized%2A>.
  syntax:
    content: public event EventHandler Initialized;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.InitializeDerivedDataSet
  commentId: M:System.Data.DataSet.InitializeDerivedDataSet
  id: InitializeDerivedDataSet
  parent: System.Data.DataSet
  langs:
  - csharp
  name: InitializeDerivedDataSet()
  nameWithType: DataSet.InitializeDerivedDataSet()
  fullName: DataSet.InitializeDerivedDataSet()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Deserialize all of the tables data of the DataSet from the binary or XML stream.
  syntax:
    content: protected virtual void InitializeDerivedDataSet ();
    parameters: []
  overload: System.Data.DataSet.InitializeDerivedDataSet*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IsBinarySerialized(SerializationInfo, StreamingContext)
  nameWithType: DataSet.IsBinarySerialized(SerializationInfo, StreamingContext)
  fullName: DataSet.IsBinarySerialized(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Inspects the format of the serialized representation of the `DataSet`.
  remarks: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  syntax:
    content: protected bool IsBinarySerialized (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the specified <xref href="System.Runtime.Serialization.SerializationInfo"></xref> represents a `DataSet` serialized in its binary format, `false` otherwise.'
  overload: System.Data.DataSet.IsBinarySerialized*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.IsInitialized
  commentId: P:System.Data.DataSet.IsInitialized
  id: IsInitialized
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IsInitialized
  nameWithType: DataSet.IsInitialized
  fullName: DataSet.IsInitialized
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether the <xref href="System.Data.DataSet"></xref> is initialized.
  remarks: Returns the status of the <xref:System.Data.DataSet> while it’s being constructed, for instance by Visual Studio. The <xref:System.Data.DataSet.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataSet.EndInit%2A> method sets it to `true`.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public bool IsInitialized { get; }
    return:
      type: System.Boolean
      description: '`true` to indicate the component has completed initialization; otherwise `false`.'
  overload: System.Data.DataSet.IsInitialized*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])
  commentId: M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])
  id: Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Load(IDataReader, LoadOption, DataTable[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, DataTable[])
  fullName: DataSet.Load(IDataReader, LoadOption, DataTable[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Fills a <xref href="System.Data.DataSet"></xref> with values from a data source using the supplied <xref href="System.Data.IDataReader"></xref>, using an array of <xref href="System.Data.DataTable"></xref> instances to supply the schema and namespace information.
  remarks: "The <xref:System.Data.DataTable.Load%2A> method provides a technique for filling a single <xref:System.Data.DataTable> with data, retrieved from an <xref:System.Data.IDataReader> instance. This method provides the same functionality, but allows you to load multiple result sets from an <xref:System.Data.IDataReader> into multiple tables within a <xref:System.Data.DataSet>.  \n  \n> [!NOTE]\n>  The load operation will fail with an <xref:System.InvalidOperationException> if any of the source data columns in the incoming `reader` are computed columns.  \n  \n The `loadOption` parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <xref:System.Data.LoadOption> enumeration. See the documentation for the <xref:System.Data.DataTable><xref:System.Data.DataTable.Load%2A> method for more information on using this parameter.  \n  \n The `tables` parameter allows you to specify an array of <xref:System.Data.DataTable> instances, indicating the order of the tables corresponding to each result set loaded from the reader. The <xref:System.Data.DataSet.Load%2A>method fills each supplied <xref:System.Data.DataTable> instance with data from a single result set from the source data reader. After each result set, the <xref:System.Data.DataSet.Load%2A>method moves on to the next result set within the reader, until there are no more result sets.  \n  \n The name resolution scheme for this method is the same as that followed by the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method of the <xref:System.Data.Common.DbDataAdapter> class."
  example:
  - "The following example creates a new <xref:System.Data.DataSet>, adds two <xref:System.Data.DataTable> instances to the <xref:System.Data.DataSet>, and then fills the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.Load%2A> method, retrieving data from a <xref:System.Data.DataTableReader> that contains two result sets. Finally, the example displays the contents of the tables in the console window.  \n  \n [!code-csharp[DataWorks DataSet.LoadTables#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.LoadTables/CS/source.cs#1)]\n [!code-vb[DataWorks DataSet.LoadTables#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.LoadTables/VB/source.vb#1)]"
  syntax:
    content: public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.DataTable[] tables);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: An <xref href="System.Data.IDataReader"></xref> that provides one or more result sets.
    - id: loadOption
      type: System.Data.LoadOption
      description: A value from the <xref href="System.Data.LoadOption"></xref> enumeration that indicates how rows already in the <xref href="System.Data.DataTable"></xref> instances within the <xref href="System.Data.DataSet"></xref> will be combined with incoming rows that share the same primary key.
    - id: tables
      type: System.Data.DataTable[]
      description: An array of <xref href="System.Data.DataTable"></xref> instances, from which the <xref href="System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])"></xref> method retrieves name and namespace information. Each of these tables must be a member of the <xref href="System.Data.DataTableCollection"></xref> contained by this <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.Load*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])
  commentId: M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])
  id: Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Load(IDataReader, LoadOption, String[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, String[])
  fullName: DataSet.Load(IDataReader, LoadOption, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Fills a <xref href="System.Data.DataSet"></xref> with values from a data source using the supplied <xref href="System.Data.IDataReader"></xref>, using an array of strings to supply the names for the tables within the `DataSet`.
  remarks: "The <xref:System.Data.DataTable.Load%2A> method provides a technique for filling a single <xref:System.Data.DataTable> with data, retrieved from an <xref:System.Data.IDataReader> instance. This method provides the same functionality, but allows you to load multiple result sets from an `IDataReader` into multiple tables within a `DataSet`.  \n  \n> [!NOTE]\n>  The load operation will fail with an <xref:System.InvalidOperationException> if any of the source data columns in the incoming `reader` are computed columns.  \n  \n The `loadOption` parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <xref:System.Data.LoadOption> enumeration. See the documentation for the <xref:System.Data.DataTable.Load%2A> method for more information on using this parameter.  \n  \n The `tables` parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader. The `Load` method attempts to find a table within the `DataSet` matching the name found in the array of table names, in order. If a matching table is found, that table is loaded with the content of the current result set. If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set. After each result set, the `Load` method moves on to the next result set within the reader, until there are no more result sets.  \n  \n The default namespace associated with `DataSet`, if any, is associated with each newly created `DataTable`. The name resolution scheme for this method is the same as that followed by the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method of the <xref:System.Data.Common.DbDataAdapter> class."
  example:
  - "The following Console application example first creates tables and loads data from a reader into a <xref:System.Data.DataSet>, using the `Load` method. The example then adds tables to a <xref:System.Data.DataSet> and attempts to fill the tables with data from a <xref:System.Data.DataTableReader>. In this example, because the parameters passed to the `Load` method indicate a table name that does not exist, the `Load` method creates a new table to match the name passed as a parameter. Once the data has been loaded, the example displays the contents of all its tables in the Console window.  \n  \n [!code-csharp[DataWorks DataSet.LoadString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.LoadString/CS/source.cs#1)]\n [!code-vb[DataWorks DataSet.LoadString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.LoadString/VB/source.vb#1)]"
  syntax:
    content: public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, string[] tables);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: An <xref href="System.Data.IDataReader"></xref> that provides one or more result sets.
    - id: loadOption
      type: System.Data.LoadOption
      description: A value from the <xref href="System.Data.LoadOption"></xref> enumeration that indicates how rows already in the <xref href="System.Data.DataTable"></xref> instances within the `DataSet` will be combined with incoming rows that share the same primary key.
    - id: tables
      type: System.String[]
      description: An array of strings, from which the `Load` method retrieves table name information.
  overload: System.Data.DataSet.Load*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])
  commentId: M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])
  id: Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
  fullName: DataSet.Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Fills a <xref href="System.Data.DataSet"></xref> with values from a data source using the supplied <xref href="System.Data.IDataReader"></xref>, using an array of <xref href="System.Data.DataTable"></xref> instances to supply the schema and namespace information.
  remarks: "The <xref:System.Data.DataTable.Load%2A> method provides a technique for filling a single <xref:System.Data.DataTable> with data, retrieved from an <xref:System.Data.IDataReader> instance. This method provides the same functionality, but allows you to load multiple result sets from an <xref:System.Data.IDataReader> into multiple tables within a <xref:System.Data.DataSet>.  \n  \n> [!NOTE]\n>  The load operation will fail with an <xref:System.InvalidOperationException> if any of the source data columns in the incoming `reader` are computed columns.  \n  \n The `loadOption` parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <xref:System.Data.LoadOption> enumeration. See the documentation for the <xref:System.Data.DataTable><xref:System.Data.DataTable.Load%2A> method for more information on using this parameter.  \n  \n The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data. The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled. Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like. The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing; set the property to `false` to indicate that you wish to halt processing. Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.  \n  \n The `tables` parameter allows you to specify an array of <xref:System.Data.DataTable> instances, indicating the order of the tables corresponding to each result set loaded from the reader. The <xref:System.Data.DataSet.Load%2A>method fills each supplied <xref:System.Data.DataTable> instance with data from a single result set from the source data reader. After each result set, the <xref:System.Data.DataSet.Load%2A>method moves on to the next result set within the reader, until there are no more result sets.  \n  \n The name resolution scheme for this method is the same as that followed by the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method of the <xref:System.Data.Common.DbDataAdapter> class."
  example:
  - "The following example adds a table to a <xref:System.Data.DataSet>, and then attempts to use the <xref:System.Data.DataSet.Load%2A> method to load data from a <xref:System.Data.DataTableReader> that contains an incompatible schema. Rather than trapping the error, this example uses a <xref:System.Data.FillErrorEventHandler> delegate to investigate and handle the error. The output is displayed in the console window.  \n  \n [!code-csharp[DataWorks DataSet.Load#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataSet.Load/CS/source.cs#1)]\n [!code-vb[DataWorks DataSet.Load#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataSet.Load/VB/source.vb#1)]"
  syntax:
    content: public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler, System.Data.DataTable[] tables);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: An <xref href="System.Data.IDataReader"></xref> that provides one or more result sets.
    - id: loadOption
      type: System.Data.LoadOption
      description: A value from the <xref href="System.Data.LoadOption"></xref> enumeration that indicates how rows already in the <xref href="System.Data.DataTable"></xref> instances within the <xref href="System.Data.DataSet"></xref> will be combined with incoming rows that share the same primary key.
    - id: errorHandler
      type: System.Data.FillErrorEventHandler
      description: A <xref href="System.Data.FillErrorEventHandler"></xref> delegate to call when an error occurs while loading data.
    - id: tables
      type: System.Data.DataTable[]
      description: An array of <xref href="System.Data.DataTable"></xref> instances, from which the <xref href="System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])"></xref> method retrieves name and namespace information.
  overload: System.Data.DataSet.Load*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Locale
  commentId: P:System.Data.DataSet.Locale
  id: Locale
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Locale
  nameWithType: DataSet.Locale
  fullName: DataSet.Locale
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the locale information used to compare strings within the table.
  remarks: "The <xref:System.Data.DataSet.Locale%2A> property specifies the locale for which sorting applies.  \n  \n By default, setting the <xref:System.Data.DataSet.Locale%2A> for a <xref:System.Data.DataSet> also sets the <xref:System.Data.DataSet.Locale%2A> for each <xref:System.Data.DataTable> object in that `DataSet` to the same value.  \n  \n> [!NOTE]\n>  In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used. The <xref:System.StringComparison.CurrentCulture> is ignored."
  example:
  - "The following example gets the <xref:System.Globalization.CultureInfo> for a <xref:System.Data.DataSet> and prints the <xref:System.Globalization.CultureInfo.DisplayName%2A> and <xref:System.Globalization.CultureInfo.EnglishName%2A> properties.  \n  \n [!code-vb[Classic WebData DataSet.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Locale Example/VB/source.vb#1)]"
  syntax:
    content: public System.Globalization.CultureInfo Locale { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> that contains data about the user's machine locale. The default is `null`.
  overload: System.Data.DataSet.Locale*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataRow[])
  commentId: M:System.Data.DataSet.Merge(System.Data.DataRow[])
  id: Merge(System.Data.DataRow[])
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataRow[])
  nameWithType: DataSet.Merge(DataRow[])
  fullName: DataSet.Merge(DataRow[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges an array of <xref href="System.Data.DataRow"></xref> objects into the current <xref href="System.Data.DataSet"></xref>.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of a merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  syntax:
    content: public void Merge (System.Data.DataRow[] rows);
    parameters:
    - id: rows
      type: System.Data.DataRow[]
      description: The array of `DataRow` objects to be merged into the `DataSet`.
  overload: System.Data.DataSet.Merge*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataSet)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataSet)
  id: Merge(System.Data.DataSet)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataSet)
  nameWithType: DataSet.Merge(DataSet)
  fullName: DataSet.Merge(DataSet)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges a specified <xref href="System.Data.DataSet"></xref> and its schema into the current `DataSet`.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  example:
  - "The following example uses the <xref:System.Data.DataSet.GetChanges%2A>, Update, and <xref:System.Data.DataSet.Merge%2A> methods on a <xref:System.Data.DataSet>.  \n  \n [!code-csharp[Classic WebData DataSet.Merge Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Merge Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge Example/VB/source.vb#1)]"
  syntax:
    content: public void Merge (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: The `DataSet` whose data and schema will be merged.
  overload: System.Data.DataSet.Merge*
  exceptions:
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: One or more constraints cannot be enabled.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>dataSet</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataTable)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataTable)
  id: Merge(System.Data.DataTable)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataTable)
  nameWithType: DataSet.Merge(DataTable)
  fullName: DataSet.Merge(DataTable)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges a specified <xref href="System.Data.DataTable"></xref> and its schema into the current <xref href="System.Data.DataSet"></xref>.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  example:
  - "The following example creates a simple <xref:System.Data.DataSet> with one table, two columns, and ten rows. A second <xref:System.Data.DataTable> is created that is identical to the first. Two rows are added to the second table, which is then merged into the <xref:System.Data.DataSet>.  \n  \n [!code-csharp[Classic WebData DataSet.Merge3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge3 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Merge3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge3 Example/VB/source.vb#1)]"
  syntax:
    content: public void Merge (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: The <xref href="System.Data.DataTable"></xref> whose data and schema will be merged.
  overload: System.Data.DataSet.Merge*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>table</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)
  id: Merge(System.Data.DataSet,System.Boolean)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataSet, Boolean)
  nameWithType: DataSet.Merge(DataSet, Boolean)
  fullName: DataSet.Merge(DataSet, Boolean)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges a specified <xref href="System.Data.DataSet"></xref> and its schema into the current `DataSet`, preserving or discarding any changes in this `DataSet` according to the given argument.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  example:
  - "The following example creates a simple <xref:System.Data.DataSet> with one table, two columns, and ten rows. After adding ten rows, two values are changed, and one row is added. A subset of the changed data is created using the <xref:System.Data.DataSet.GetChanges%2A> method. After reconciling errors, the subset data is merged into the original <xref:System.Data.DataSet>.  \n  \n [!code-csharp[Classic WebData DataSet.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.GetChanges Example/VB/source.vb#1)]"
  syntax:
    content: public void Merge (System.Data.DataSet dataSet, bool preserveChanges);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: The `DataSet` whose data and schema will be merged.
    - id: preserveChanges
      type: System.Boolean
      description: '`true` to preserve changes in the current `DataSet`; otherwise `false`.'
  overload: System.Data.DataSet.Merge*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)
  id: Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataRow[], Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataRow[], Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataRow[], Boolean, MissingSchemaAction)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges an array of <xref href="System.Data.DataRow"></xref> objects into the current <xref href="System.Data.DataSet"></xref>, preserving or discarding changes in the `DataSet` and handling an incompatible schema according to the given arguments.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n To facilitate explanation of the <xref:System.Data.DataSet.Merge%2A> method, we use \"target\" to signify the current <xref:System.Data.DataSet>, and \"source\" to name the second (parameter) <xref:System.Data.DataSet>. The target <xref:System.Data.DataSet> is so named because it is the object upon which an action (the merge) occurs. The second <xref:System.Data.DataSet> is called a \"source\" because the information it contains does not change, but instead is merged into the current <xref:System.Data.DataSet>.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  syntax:
    content: public void Merge (System.Data.DataRow[] rows, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);
    parameters:
    - id: rows
      type: System.Data.DataRow[]
      description: The array of <xref href="System.Data.DataRow"></xref> objects to be merged into the `DataSet`.
    - id: preserveChanges
      type: System.Boolean
      description: '`true` to preserve changes in the `DataSet`; otherwise `false`.'
    - id: missingSchemaAction
      type: System.Data.MissingSchemaAction
      description: One of the <xref href="System.Data.MissingSchemaAction"></xref> values.
  overload: System.Data.DataSet.Merge*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)
  id: Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataSet, Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataSet, Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataSet, Boolean, MissingSchemaAction)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges a specified <xref href="System.Data.DataSet"></xref> and its schema with the current `DataSet`, preserving or discarding changes in the current `DataSet` and handling an incompatible schema according to the given arguments.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n To facilitate explanation of the <xref:System.Data.DataSet.Merge%2A> method, we use \"target\" to signify the current <xref:System.Data.DataSet>, and \"source\" to name the second (parameter) <xref:System.Data.DataSet>. The target <xref:System.Data.DataSet> is so named because it is the object upon which an action (the merge) occurs. The second <xref:System.Data.DataSet> is called a \"source\" because the information it contains does not change, but instead is merged into the current <xref:System.Data.DataSet>.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  example:
  - "The following example creates a simple <xref:System.Data.DataSet> with one table, two columns, and ten rows. Two values are changed, and one row is added. A subset of the changed data is created using the <xref:System.Data.DataSet.GetChanges%2A> method. After reconciling errors, a new column is added to the subset, changing the schema. When the <xref:System.Data.DataSet.Merge%2A> method is called with the `missingSchemaAction` set to `MissingSchemaAction.Add`, the new column is added to the original <xref:System.Data.DataSet> object's schema.  \n  \n [!code-csharp[Classic WebData DataSet.Merge2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Merge2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge2 Example/VB/source.vb#1)]"
  syntax:
    content: public void Merge (System.Data.DataSet dataSet, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: The `DataSet` whose data and schema will be merged.
    - id: preserveChanges
      type: System.Boolean
      description: '`true` to preserve changes in the current `DataSet`; otherwise `false`.'
    - id: missingSchemaAction
      type: System.Data.MissingSchemaAction
      description: One of the <xref href="System.Data.MissingSchemaAction"></xref> values.
  overload: System.Data.DataSet.Merge*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>dataSet</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)
  commentId: M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)
  id: Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Merge(DataTable, Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataTable, Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataTable, Boolean, MissingSchemaAction)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Merges a specified <xref href="System.Data.DataTable"></xref> and its schema into the current `DataSet`, preserving or discarding changes in the `DataSet` and handling an incompatible schema according to the given arguments.
  remarks: "The <xref:System.Data.DataSet.Merge%2A> method is used to merge two <xref:System.Data.DataSet> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataSet>. This allows the client application to have a refreshed <xref:System.Data.DataSet> with the latest data from the data source.  \n  \n The <xref:System.Data.DataSet.Merge%2A> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataSet>.  \n  \n iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <xref:System.Data.DataSet.GetChanges%2A> method is first invoked. That method returns a second <xref:System.Data.DataSet> optimized for validating and merging. This second <xref:System.Data.DataSet> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataSet>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <xref:System.Data.DataSet> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataSet> can be merged back into the client application's original <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.Merge%2A> method.  \n  \n When the <xref:System.Data.DataSet.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataSet> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <xref:System.Data.DataSet> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`. In that case, the merged <xref:System.Data.DataSet> contains the added schema and data.  \n  \n After merging schemas, the data is merged.  \n  \n When merging a new source <xref:System.Data.DataSet> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values. Source rows with a `DataRowState` value of `Added` are matched to new target rows with the same primary key values as the new source rows.  \n  \n During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <xref:System.Data.ConstraintException> is generated and the merged data is retained while the constraints are disabled. In this case, the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `false`, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`."
  example:
  - "The following example creates a simple <xref:System.Data.DataSet> with one table, two columns, and ten rows. A second <xref:System.Data.DataTable> is created that is nearly identical to the first except that a new `DataColumn` is added to the table. Two rows are added to the second table, which is then merged into the <xref:System.Data.DataSet> with the `preserveChanges` argument set to `false`, and the `missingSchemaAction` argument set to `MissingSchemaAction.Add`.  \n  \n [!code-csharp[Classic WebData DataSet.Merge4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge4 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Merge4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Merge4 Example/VB/source.vb#1)]"
  syntax:
    content: public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: The `DataTable` whose data and schema will be merged.
    - id: preserveChanges
      type: System.Boolean
      description: One of the <xref href="System.Data.MissingSchemaAction"></xref> values.
    - id: missingSchemaAction
      type: System.Data.MissingSchemaAction
      description: '`true` to preserve changes in the `DataSet`; otherwise `false`.'
  overload: System.Data.DataSet.Merge*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>dataSet</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.MergeFailed
  commentId: E:System.Data.DataSet.MergeFailed
  id: MergeFailed
  parent: System.Data.DataSet
  langs:
  - csharp
  name: MergeFailed
  nameWithType: DataSet.MergeFailed
  fullName: DataSet.MergeFailed
  type: Event
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Occurs when a target and source <xref href="System.Data.DataRow"></xref> have the same primary key value, and <xref href="System.Data.DataSet.EnforceConstraints"></xref> is set to true.
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates the use of the <xref:System.Data.DataSet.MergeFailed> event.  \n  \n [!code-csharp[Classic WebData DataSet.MergeFailed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.MergeFailed Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.MergeFailed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.MergeFailed Example/VB/source.vb#1)]"
  syntax:
    content: public event System.Data.MergeFailedEventHandler MergeFailed;
    return:
      type: System.Data.MergeFailedEventHandler
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Namespace
  commentId: P:System.Data.DataSet.Namespace
  id: Namespace
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Namespace
  nameWithType: DataSet.Namespace
  fullName: DataSet.Namespace
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the namespace of the <xref href="System.Data.DataSet"></xref>.
  remarks: "The <xref:System.Data.DataSet.Namespace%2A> property is used when reading and writing an XML document into the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.  \n  \n The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>. For example, if a <xref:System.Data.DataSet> contains a schema that was read from a document with the namespace \"myCompany,\" and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored."
  example:
  - "The following example sets the <xref:System.Data.DataSet.Prefix%2A> before calling the <xref:System.Data.DataSet.ReadXml%2A> method.  \n  \n [!code-csharp[Classic WebData DataSet.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Namespace Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Namespace Example/VB/source.vb#1)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: The namespace of the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.Namespace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The namespace already has data.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataSet.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: DataSet.OnPropertyChanging(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Raises the <xref href="System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)"></xref> event.
  remarks: 'Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);
    parameters:
    - id: pcevent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: A <xref href="System.ComponentModel.PropertyChangedEventArgs"></xref> that contains the event data.
  overload: System.Data.DataSet.OnPropertyChanging*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)
  commentId: M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)
  id: OnRemoveRelation(System.Data.DataRelation)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: OnRemoveRelation(DataRelation)
  nameWithType: DataSet.OnRemoveRelation(DataRelation)
  fullName: DataSet.OnRemoveRelation(DataRelation)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Occurs when a <xref href="System.Data.DataRelation"></xref> object is removed from a <xref href="System.Data.DataTable"></xref>.
  remarks: This method should be overridden by subclasses to restrict tables being removed
  syntax:
    content: protected virtual void OnRemoveRelation (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> being removed.
  overload: System.Data.DataSet.OnRemoveRelation*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.OnRemoveTable(System.Data.DataTable)
  commentId: M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)
  id: OnRemoveTable(System.Data.DataTable)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: OnRemoveTable(DataTable)
  nameWithType: DataSet.OnRemoveTable(DataTable)
  fullName: DataSet.OnRemoveTable(DataTable)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Occurs when a <xref href="System.Data.DataTable"></xref> is removed from a <xref href="System.Data.DataSet"></xref>.
  remarks: This method can be overridden by subclasses to restrict tables from being removed.
  example:
  - "The following example shows a class derived from the <xref:System.Data.DataSet> with the <xref:System.Data.DataSet.OnRemoveTable%2A> method overridden.  \n  \n [!code-csharp[Classic WebData DataSet.OnRemoveTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.OnRemoveTable Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.OnRemoveTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.OnRemoveTable Example/VB/source.vb#1)]"
  syntax:
    content: protected virtual void OnRemoveTable (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: The <xref href="System.Data.DataTable"></xref> being removed.
  overload: System.Data.DataSet.OnRemoveTable*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Prefix
  commentId: P:System.Data.DataSet.Prefix
  id: Prefix
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Prefix
  nameWithType: DataSet.Prefix
  fullName: DataSet.Prefix
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets an XML prefix that aliases the namespace of the <xref href="System.Data.DataSet"></xref>.
  remarks: The <xref:System.Data.DataSet.Prefix%2A> property is used throughout an XML document to identify elements which belong to the namespace of the <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).
  example:
  - "The following example sets the <xref:System.Data.DataSet.Prefix%2A> before calling the <xref:System.Data.DataSet.ReadXml%2A> method.  \n  \n [!code-csharp[Classic WebData DataSet.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Namespace Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Namespace Example/VB/source.vb#1)]"
  syntax:
    content: public string Prefix { get; set; }
    return:
      type: System.String
      description: The XML prefix for the <xref href="System.Data.DataSet"></xref> namespace.
  overload: System.Data.DataSet.Prefix*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.RaisePropertyChanging(System.String)
  commentId: M:System.Data.DataSet.RaisePropertyChanging(System.String)
  id: RaisePropertyChanging(System.String)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: RaisePropertyChanging(String)
  nameWithType: DataSet.RaisePropertyChanging(String)
  fullName: DataSet.RaisePropertyChanging(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sends a notification that the specified <xref href="System.Data.DataSet"></xref> property is about to change.
  syntax:
    content: protected void RaisePropertyChanging (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the property that is about to change.
  overload: System.Data.DataSet.RaisePropertyChanging*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)
  commentId: M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)
  id: ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(XmlReader, XmlReadMode)
  nameWithType: DataSet.ReadXml(XmlReader, XmlReadMode)
  fullName: DataSet.ReadXml(XmlReader, XmlReadMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.Xml.XmlReader"></xref> and <xref href="System.Data.XmlReadMode"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes a `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader, System.Data.XmlReadMode mode);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> from which to read.
    - id: mode
      type: System.Data.XmlReadMode
      description: One of the <xref href="System.Data.XmlReadMode"></xref> values.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)
  commentId: M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)
  id: ReadXml(System.String,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(String, XmlReadMode)
  nameWithType: DataSet.ReadXml(String, XmlReadMode)
  fullName: DataSet.ReadXml(String, XmlReadMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified file and <xref href="System.Data.XmlReadMode"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes a `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  syntax:
    content: public System.Data.XmlReadMode ReadXml (string fileName, System.Data.XmlReadMode mode);
    parameters:
    - id: fileName
      type: System.String
      description: The filename (including the path) from which to read.
    - id: mode
      type: System.Data.XmlReadMode
      description: One of the <xref href="System.Data.XmlReadMode"></xref> values.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)
  commentId: M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)
  id: ReadXml(System.IO.Stream,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(Stream, XmlReadMode)
  nameWithType: DataSet.ReadXml(Stream, XmlReadMode)
  fullName: DataSet.ReadXml(Stream, XmlReadMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.Stream"></xref> and <xref href="System.Data.XmlReadMode"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n The same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  When you use <xref:System.Data.DataSet.ReadXml%2A> and you set <xref:System.Data.XmlReadMode> to `Diffgram`, the content of the target `DataSet` and the original `DataSet` may differ because of how the diffgram is generated and processed. For more information on diffgrams, see [DiffGrams](~/docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md).  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.IO.Stream stream, System.Data.XmlReadMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream"></xref> from which to read.
    - id: mode
      type: System.Data.XmlReadMode
      description: One of the <xref href="System.Data.XmlReadMode"></xref> values.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)
  commentId: M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)
  id: ReadXml(System.IO.TextReader,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(TextReader, XmlReadMode)
  nameWithType: DataSet.ReadXml(TextReader, XmlReadMode)
  fullName: DataSet.ReadXml(TextReader, XmlReadMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.TextReader"></xref> and <xref href="System.Data.XmlReadMode"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader, System.Data.XmlReadMode mode);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: The <xref href="System.IO.TextReader"></xref> from which to read.
    - id: mode
      type: System.Data.XmlReadMode
      description: One of the <xref href="System.Data.XmlReadMode"></xref> values.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.String)
  commentId: M:System.Data.DataSet.ReadXml(System.String)
  id: ReadXml(System.String)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(String)
  nameWithType: DataSet.ReadXml(String)
  fullName: DataSet.ReadXml(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified file.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes a `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example first creates a simple <xref:System.Data.DataSet> with one <xref:System.Data.DataTable>, two columns, and ten rows. The <xref:System.Data.DataSet> schema and data are written to disk by invoking the <xref:System.Data.DataSet.WriteXml%2A> method. A second <xref:System.Data.DataSet> is created and the <xref:System.Data.DataSet.ReadXml%2A> method is used to fill it with schema and data.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXml3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml3 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXml3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml3 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.XmlReadMode ReadXml (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The filename (including the path) from which to read.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.IO.TextReader)
  commentId: M:System.Data.DataSet.ReadXml(System.IO.TextReader)
  id: ReadXml(System.IO.TextReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(TextReader)
  nameWithType: DataSet.ReadXml(TextReader)
  fullName: DataSet.ReadXml(TextReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.TextReader"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n Classes that inherit from the <xref:System.IO.TextReader> class include the <xref:System.IO.StreamReader> and <xref:System.IO.StringReader> classes.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example first creates a simple <xref:System.Data.DataSet> with one <xref:System.Data.DataTable>, two columns, and ten rows. The <xref:System.Data.DataSet> schema and data are written to disk by invoking the <xref:System.Data.DataSet.WriteXml%2A> method. A second <xref:System.Data.DataSet> is created and the <xref:System.Data.DataSet.ReadXml%2A> method is used to fill it with schema and data.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXml2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXml2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml2 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: The `TextReader` from which to read the schema and data.
    return:
      type: System.Data.XmlReadMode
      description: The <xref href="System.Data.XmlReadMode"></xref> used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.IO.Stream)
  commentId: M:System.Data.DataSet.ReadXml(System.IO.Stream)
  id: ReadXml(System.IO.Stream)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(Stream)
  nameWithType: DataSet.ReadXml(Stream)
  fullName: DataSet.ReadXml(Stream)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.Stream"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema, as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example first creates a simple <xref:System.Data.DataSet> with one <xref:System.Data.DataTable>, two columns, and ten rows. The <xref:System.Data.DataSet> schema and data are written to disk by invoking the <xref:System.Data.DataSet.WriteXml%2A> method. A second <xref:System.Data.DataSet> is created and the <xref:System.Data.DataSet.ReadXml%2A> method is used to fill it with schema and data.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXml1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXml1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml1 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: An object that derives from <xref href="System.IO.Stream"></xref>.
    return:
      type: System.Data.XmlReadMode
      description: The <xref href="System.Data.XmlReadMode"></xref> used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXml(XmlReader)
  nameWithType: DataSet.ReadXml(XmlReader)
  fullName: DataSet.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads XML schema and data into the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.Xml.XmlReader"></xref>.
  remarks: "The <xref:System.Data.DataSet.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataSet> from an XML document, whereas the <xref:System.Data.DataSet.ReadXmlSchema%2A> method reads only the schema. To read both data and schema, use one of the `ReadXML` overloads that includes the `mode` parameter, and set its value to `ReadSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.WriteXml%2A> and <xref:System.Data.DataSet.WriteXmlSchema%2A> methods, respectively. To write XML data, or both schema and data from the `DataSet`, use the `WriteXml` method. To write just the schema, use the `WriteXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  \n  \n If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  \n  \n> [!NOTE]\n>  The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like (\"_\") are escaped in the serialized XML. The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  \n  \n If the XML Schema for a <xref:System.Data.DataSet> includes a `targetNamespace`, data may not be read, and you may encounter exceptions when calling <xref:System.Data.DataSet.ReadXml%2A> to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements, set `elementFormDefault` equal to \"qualified\" in your XML Schema as the following example demonstrates.  \n  \n```  \n<xsd:schema id=\"MyDataSet\"   \n   elementFormDefault=\"qualified\"   \n   targetNamespace=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns=\"http://www.tempuri.org/MyDataSet.xsd\"   \n   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n   xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n <xref:System.Xml.XmlTextReader?displayProperty=fullName> inherits from <xref:System.Xml.XmlReader>.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXml%2A> by specifying `XmlReadMode.ReadSchema`. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example first creates a simple <xref:System.Data.DataSet> with one <xref:System.Data.DataTable>, two columns, and ten rows. The <xref:System.Data.DataSet> schema and data are written to disk by invoking the <xref:System.Data.DataSet.WriteXml%2A> method. A second <xref:System.Data.DataSet> is created and the <xref:System.Data.DataSet.ReadXml%2A> method is used to fill it with schema and data.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXml Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> from which to read.
    return:
      type: System.Data.XmlReadMode
      description: The `XmlReadMode` used to read the data.
  overload: System.Data.DataSet.ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXmlSchema(System.IO.Stream)
  commentId: M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)
  id: ReadXmlSchema(System.IO.Stream)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXmlSchema(Stream)
  nameWithType: DataSet.ReadXmlSchema(Stream)
  fullName: DataSet.ReadXmlSchema(Stream)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads the XML schema from the specified <xref href="System.IO.Stream"></xref> into the <xref href="System.Data.DataSet"></xref>.
  remarks: "Use the <xref:System.Data.DataSet.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataSet>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n> [!NOTE]\n>  Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  \n  \n The <xref:System.Data.DataSet.ReadXmlSchema%2A> method is generally invoked before invoking the <xref:System.Data.DataSet.ReadXml%2A> method which is used to fill the <xref:System.Data.DataSet>.  \n  \n Classes that derive from the <xref:System.IO.Stream> class include <xref:System.IO.BufferedStream>, <xref:System.IO.FileStream>, <xref:System.IO.MemoryStream>, and <xref:System.Net.Sockets.NetworkStream>.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXmlSchema%2A>. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example creates a <xref:System.IO.FileStream> object to read an XML schema with, and invokes the <xref:System.Data.DataSet.ReadXmlSchema%2A> method with the object.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXmlSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXmlSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema1 Example/VB/source.vb#1)]"
  syntax:
    content: public void ReadXmlSchema (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream"></xref> from which to read.
  overload: System.Data.DataSet.ReadXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)
  commentId: M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)
  id: ReadXmlSchema(System.IO.TextReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXmlSchema(TextReader)
  nameWithType: DataSet.ReadXmlSchema(TextReader)
  fullName: DataSet.ReadXmlSchema(TextReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads the XML schema from the specified <xref href="System.IO.TextReader"></xref> into the <xref href="System.Data.DataSet"></xref>.
  remarks: "Use the <xref:System.Data.DataSet.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataSet>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n> [!NOTE]\n>  Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  \n  \n The <xref:System.Data.DataSet.ReadXmlSchema%2A> method is generally invoked before invoking the <xref:System.Data.DataSet.ReadXml%2A> method which is used to fill the <xref:System.Data.DataSet>.  \n  \n Classes that inherit from the <xref:System.IO.TextReader> class include the <xref:System.IO.StreamReader> and <xref:System.IO.StringReader> classes.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXmlSchema%2A>. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example creates a <xref:System.IO.StreamReader> object to read a schema with, and invokes the <xref:System.Data.DataSet.ReadXmlSchema%2A> method with the object.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXmlSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXmlSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema2 Example/VB/source.vb#1)]"
  syntax:
    content: public void ReadXmlSchema (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: The <xref href="System.IO.TextReader"></xref> from which to read.
  overload: System.Data.DataSet.ReadXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXmlSchema(System.String)
  commentId: M:System.Data.DataSet.ReadXmlSchema(System.String)
  id: ReadXmlSchema(System.String)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXmlSchema(String)
  nameWithType: DataSet.ReadXmlSchema(String)
  fullName: DataSet.ReadXmlSchema(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads the XML schema from the specified file into the <xref href="System.Data.DataSet"></xref>.
  remarks: "Use the <xref:System.Data.DataSet.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataSet>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n> [!NOTE]\n>  Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  \n  \n The <xref:System.Data.DataSet.ReadXmlSchema%2A> method is generally invoked before invoking the <xref:System.Data.DataSet.ReadXml%2A> method which is used to fill the <xref:System.Data.DataSet>.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXmlSchema%2A>. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - >-
    [!code-csharp[Classic WebData DataSet.ReadXmlSchema3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema3 Example/CS/source.cs#1)]
     [!code-vb[Classic WebData DataSet.ReadXmlSchema3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema3 Example/VB/source.vb#1)]
  syntax:
    content: public void ReadXmlSchema (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The file name (including the path) from which to read.
  overload: System.Data.DataSet.ReadXmlSchema*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)
  commentId: M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)
  id: ReadXmlSchema(System.Xml.XmlReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXmlSchema(XmlReader)
  nameWithType: DataSet.ReadXmlSchema(XmlReader)
  fullName: DataSet.ReadXmlSchema(XmlReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Reads the XML schema from the specified <xref href="System.Xml.XmlReader"></xref> into the <xref href="System.Data.DataSet"></xref>.
  remarks: "Use the <xref:System.Data.DataSet.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataSet>. The schema includes table, relation, and constraint definitions.  \n  \n The XML schema is written using the XSD standard.  \n  \n> [!NOTE]\n>  Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  \n  \n The <xref:System.Data.DataSet.ReadXmlSchema%2A> method is generally invoked before invoking the <xref:System.Data.DataSet.ReadXml%2A> method which is used to fill the <xref:System.Data.DataSet>.  \n  \n The <xref:System.Xml.XmlReader?displayProperty=fullName> class is abstract. A class that inherits from the `XmlReader` is the <xref:System.Xml.XmlTextReader?displayProperty=fullName> class.  \n  \n> [!NOTE]\n>  If the schema for your <xref:System.Data.DataSet> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <xref:System.Data.DataSet> with <xref:System.Data.DataSet.ReadXmlSchema%2A>. This exception does not occur if you are using .NET Framework version 1.0."
  example:
  - "The following example creates a new <xref:System.Data.DataSet> and <xref:System.IO.FileStream?displayProperty=fullName> object. The <xref:System.IO.FileStream> object, created with a file path and file name, is used to create an <xref:System.Xml.XmlTextReader?displayProperty=fullName> that is passed as an argument to the <xref:System.Data.DataSet.ReadXmlSchema%2A> method.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXmlSchema Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXmlSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXmlSchema Example/VB/source.vb#1)]"
  syntax:
    content: public void ReadXmlSchema (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> from which to read.
  overload: System.Data.DataSet.ReadXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)
  commentId: M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)
  id: ReadXmlSerializable(System.Xml.XmlReader)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ReadXmlSerializable(XmlReader)
  nameWithType: DataSet.ReadXmlSerializable(XmlReader)
  fullName: DataSet.ReadXmlSerializable(XmlReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Ignores attributes and returns an empty DataSet.
  syntax:
    content: protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The specified XML reader.
  overload: System.Data.DataSet.ReadXmlSerializable*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.RejectChanges
  commentId: M:System.Data.DataSet.RejectChanges
  id: RejectChanges
  parent: System.Data.DataSet
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataSet.RejectChanges()
  fullName: DataSet.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Rolls back all the changes made to the <xref href="System.Data.DataSet"></xref> since it was created, or since the last time <xref href="System.Data.DataSet.AcceptChanges"></xref> was called.
  remarks: "Invoke the <xref:System.Data.DataSet.RejectChanges%2A?displayProperty=fullName> to call the <xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName> method on all <xref:System.Data.DataTable> objects contained by the <xref:System.Data.DataSet>.  \n  \n <xref:System.Data.DataRow> objects contained by the <xref:System.Data.DataSet> can each be set into edit mode by invoking the <xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName> method. After invoking the <xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName> method, changes can be rejected by calling the <xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName> on the <xref:System.Data.DataTable> to which the <xref:System.Data.DataRow> objects belong.  \n  \n When the <xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName> method is called, any rows still in edit-mode cancel their edits. New rows are removed. Modified and deleted rows return back to their original state (`DataRowState.Unchanged`).  \n  \n AcceptChanges and RejectChanges only apply to <xref:System.Data.DataRow> related changes (that is, `Add`, `Remove`, `Delete`, and `Modify`). They are not applicable to schema or structural changes."
  example:
  - "The following example shows a class derived from the <xref:System.Data.DataSet> class. The <xref:System.Data.DataSet.RejectChanges%2A> event is invoked from within a function.  \n  \n [!code-csharp[Classic WebData DataSet.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.RejectChanges Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.RejectChanges Example/VB/source.vb#1)]"
  syntax:
    content: public virtual void RejectChanges ();
    parameters: []
  overload: System.Data.DataSet.RejectChanges*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Relations
  commentId: P:System.Data.DataSet.Relations
  id: Relations
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Relations
  nameWithType: DataSet.Relations
  fullName: DataSet.Relations
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Get the collection of relations that link tables and allow navigation from parent tables to child tables.
  remarks: ''
  example:
  - "The following example prints the column name of all child tables through the <xref:System.Data.DataSet.Relations%2A> property.  \n  \n [!code-vb[Classic WebData DataSet.Relations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Relations Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRelationCollection Relations { get; }
    return:
      type: System.Data.DataRelationCollection
      description: A <xref href="System.Data.DataRelationCollection"></xref> that contains a collection of <xref href="System.Data.DataRelation"></xref> objects. An empty collection is returned if no <xref href="System.Data.DataRelation"></xref> objects exist.
  overload: System.Data.DataSet.Relations*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.RemotingFormat
  commentId: P:System.Data.DataSet.RemotingFormat
  id: RemotingFormat
  parent: System.Data.DataSet
  langs:
  - csharp
  name: RemotingFormat
  nameWithType: DataSet.RemotingFormat
  fullName: DataSet.RemotingFormat
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets a <xref href="System.Data.SerializationFormat"></xref> for the <xref href="System.Data.DataSet"></xref> used during remoting.
  syntax:
    content: public System.Data.SerializationFormat RemotingFormat { get; set; }
    return:
      type: System.Data.SerializationFormat
      description: A <xref href="System.Data.SerializationFormat"></xref> object.
  overload: System.Data.DataSet.RemotingFormat*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Reset
  commentId: M:System.Data.DataSet.Reset
  id: Reset
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Reset()
  nameWithType: DataSet.Reset()
  fullName: DataSet.Reset()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Clears all tables and removes all relations, foreign constraints, and tables from the <xref href="System.Data.DataSet"></xref>. Subclasses should override <xref href="System.Data.DataSet.Reset"></xref> to restore a <xref href="System.Data.DataSet"></xref> to its original state.
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Data.DataSet.Reset*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.SchemaSerializationMode
  commentId: P:System.Data.DataSet.SchemaSerializationMode
  id: SchemaSerializationMode
  parent: System.Data.DataSet
  langs:
  - csharp
  name: SchemaSerializationMode
  nameWithType: DataSet.SchemaSerializationMode
  fullName: DataSet.SchemaSerializationMode
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets a <xref href="System.Data.SchemaSerializationMode"></xref> for a <xref href="System.Data.DataSet"></xref>.
  remarks: "A <xref:System.Data.DataSet> serializes its schema and instance data by default in Web services and remoting scenarios. Setting the <xref:System.Data.DataSet.SchemaSerializationMode%2A> property of a typed `DataSet` to <xref:System.Data.SchemaSerializationMode.ExcludeSchema> causes schema information to be excluded from the serialization payload.  \n  \n <xref:System.Data.SchemaSerializationMode.ExcludeSchema> is supported only for a typed `DataSet`. For an un-typed `DataSet` this property can only be set to <xref:System.Data.SchemaSerializationMode.IncludeSchema>.  \n  \n <xref:System.Data.SchemaSerializationMode.ExcludeSchema> should only be used in cases where the schema information of the underlying typed `DataTables`, `DataRelations` and `Constraints` has not been modified. If modifications have occurred, complete schema information should be serialized with <xref:System.Data.SchemaSerializationMode.IncludeSchema>.  \n  \n <xref:System.Data.SchemaSerializationMode.ExcludeSchema> is supported in version 2.0 of the .NET Framework or later.  \n  \n When <xref:System.Data.SchemaSerializationMode.ExcludeSchema> is set, only the top level runtime properties present on the <xref:System.Data.DataSet> are serialized. In addition, they are serialized only if they happen to be different from the default values. None of the `Tables`, `Relations` or `Constraints` are serialized. The serialized runtime properties include <xref:System.Data.DataSet.DataSetName%2A>, <xref:System.Data.DataSet.Namespace%2A>, <xref:System.Data.DataSet.Prefix%2A>, <xref:System.Data.DataSet.Locale%2A>, <xref:System.Data.DataSet.EnforceConstraints%2A>, and <xref:System.Data.DataSet.CaseSensitive%2A>. These properties are serialized to make sure that overall runtime data integrity is preserved."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public virtual System.Data.SchemaSerializationMode SchemaSerializationMode { get; set; }
    return:
      type: System.Data.SchemaSerializationMode
      description: Gets or sets a <xref href="System.Data.SchemaSerializationMode"></xref> for a <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.SchemaSerializationMode*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ShouldSerializeRelations
  commentId: M:System.Data.DataSet.ShouldSerializeRelations
  id: ShouldSerializeRelations
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ShouldSerializeRelations()
  nameWithType: DataSet.ShouldSerializeRelations()
  fullName: DataSet.ShouldSerializeRelations()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value indicating whether <xref href="System.Data.DataSet.Relations"></xref> property should be persisted.
  remarks: You typically use this method if you are either creating a designer for the <xref:System.Data.DataSet>, or creating your own control incorporating the <xref:System.Data.DataSet>.
  example:
  - "The following examples show a class derived from the <xref:System.Data.DataSet> class. The <xref:System.Data.DataSet.Reset%2A> and <xref:System.Data.DataSet.ShouldSerializeRelations%2A> methods are invoked from within functions in the derived class.  \n  \n [!code-csharp[Classic WebData DataSet.ShouldSerializeRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ShouldSerializeRelations Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ShouldSerializeRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ShouldSerializeRelations Example/VB/source.vb#1)]"
  syntax:
    content: protected virtual bool ShouldSerializeRelations ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the property value has been changed from its default; otherwise `false`.'
  overload: System.Data.DataSet.ShouldSerializeRelations*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.ShouldSerializeTables
  commentId: M:System.Data.DataSet.ShouldSerializeTables
  id: ShouldSerializeTables
  parent: System.Data.DataSet
  langs:
  - csharp
  name: ShouldSerializeTables()
  nameWithType: DataSet.ShouldSerializeTables()
  fullName: DataSet.ShouldSerializeTables()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value indicating whether <xref href="System.Data.DataSet.Tables"></xref> property should be persisted.
  remarks: You typically use this method only if you are either creating a designer for the <xref:System.Data.DataSet>, or creating your own control incorporating the <xref:System.Data.DataSet>.
  example:
  - "The following example shows a class derived from the <xref:System.Data.DataSet> class. The <xref:System.Data.DataSet.ShouldSerializeTables%2A> method is called from within functions in the derived class.  \n  \n [!code-csharp[Classic WebData DataSet.ShouldSerializeTables Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ShouldSerializeTables Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ShouldSerializeTables Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ShouldSerializeTables Example/VB/source.vb#1)]"
  syntax:
    content: protected virtual bool ShouldSerializeTables ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the property value has been changed from its default; otherwise `false`.'
  overload: System.Data.DataSet.ShouldSerializeTables*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Site
  commentId: P:System.Data.DataSet.Site
  id: Site
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Site
  nameWithType: DataSet.Site
  fullName: DataSet.Site
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets an <xref href="System.ComponentModel.ISite"></xref> for the <xref href="System.Data.DataSet"></xref>.
  remarks: Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public override System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: An <xref href="System.ComponentModel.ISite"></xref> for the <xref href="System.Data.DataSet"></xref>.
  overload: System.Data.DataSet.Site*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.Tables
  commentId: P:System.Data.DataSet.Tables
  id: Tables
  parent: System.Data.DataSet
  langs:
  - csharp
  name: Tables
  nameWithType: DataSet.Tables
  fullName: DataSet.Tables
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the collection of tables contained in the <xref href="System.Data.DataSet"></xref>.
  remarks: To add tables to the collection, use <xref:System.Data.DataTableCollection.Add%2A> method of the <xref:System.Data.DataTableCollection>. To remove tables, use the <xref:System.Data.DataTableCollection.Remove%2A> method.
  example:
  - "The following example returns the <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection>, and prints the columns and rows in each table.  \n  \n [!code-csharp[Classic WebData DataSet.Tables Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.Tables Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.Tables Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.Tables Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataTableCollection Tables { get; }
    return:
      type: System.Data.DataTableCollection
      description: The <xref href="System.Data.DataTableCollection"></xref> contained by this <xref href="System.Data.DataSet"></xref>. An empty collection is returned if no <xref href="System.Data.DataTable"></xref> objects exist.
  overload: System.Data.DataSet.Tables*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)
  commentId: M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)
  id: WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(XmlWriter, XmlWriteMode)
  nameWithType: DataSet.WriteXml(XmlWriter, XmlWriteMode)
  fullName: DataSet.WriteXml(XmlWriter, XmlWriteMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data, and optionally the schema, for the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.Xml.XmlWriter"></xref> and <xref href="System.Data.XmlWriteMode"></xref>. To write the schema, set the value for the <code>mode</code> parameter to `WriteSchema`.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, set the `mode` parameter to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  example:
  - "The following example creates a <xref:System.IO.FileStream?displayProperty=fullName> object that is used to create a new <xref:System.Xml.XmlTextWriter?displayProperty=fullName>. The <xref:System.Xml.XmlTextWriter> object is used with the <xref:System.Data.DataSet.WriteXml%2A> method to write an XML document.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXml6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml6 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXml6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml6 Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter"></xref> with which to write.
    - id: mode
      type: System.Data.XmlWriteMode
      description: One of the <xref href="System.Data.XmlWriteMode"></xref> values.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)
  commentId: M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)
  id: WriteXml(System.String,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(String, XmlWriteMode)
  nameWithType: DataSet.WriteXml(String, XmlWriteMode)
  fullName: DataSet.WriteXml(String, XmlWriteMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data, and optionally the schema, for the <xref href="System.Data.DataSet"></xref> to the specified file using the specified <xref href="System.Data.XmlWriteMode"></xref>. To write the schema, set the value for the <code>mode</code> parameter to `WriteSchema`.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, set the `mode` parameter to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  example:
  - "The following example uses the <xref:System.Data.DataSet.WriteXml%2A> method to write an XML document.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXml7 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml7 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXml7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml7 Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXml (string fileName, System.Data.XmlWriteMode mode);
    parameters:
    - id: fileName
      type: System.String
      description: The file name (including the path) to which to write.
    - id: mode
      type: System.Data.XmlWriteMode
      description: One of the <xref href="System.Data.XmlWriteMode"></xref> values.
  overload: System.Data.DataSet.WriteXml*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)
  commentId: M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)
  id: WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(TextWriter, XmlWriteMode)
  nameWithType: DataSet.WriteXml(TextWriter, XmlWriteMode)
  fullName: DataSet.WriteXml(TextWriter, XmlWriteMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data, and optionally the schema, for the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.TextWriter"></xref> and <xref href="System.Data.XmlWriteMode"></xref>. To write the schema, set the value for the <code>mode</code> parameter to `WriteSchema`.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, set the `mode` parameter to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  example:
  - "The following example first creates a simple <xref:System.Data.DataSet> with one <xref:System.Data.DataTable>, two columns, and ten rows. The <xref:System.Data.DataSet> schema and data are written to disk by invoking the <xref:System.Data.DataSet.WriteXml%2A> method. A second <xref:System.Data.DataSet> is created and the <xref:System.Data.DataSet.ReadXml%2A> method is used to fill it with schema and data.  \n  \n [!code-csharp[Classic WebData DataSet.ReadXml2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.ReadXml2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.ReadXml2 Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: A <xref href="System.IO.TextWriter"></xref> object used to write the document.
    - id: mode
      type: System.Data.XmlWriteMode
      description: One of the <xref href="System.Data.XmlWriteMode"></xref> values.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)
  commentId: M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)
  id: WriteXml(System.IO.Stream,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(Stream, XmlWriteMode)
  nameWithType: DataSet.WriteXml(Stream, XmlWriteMode)
  fullName: DataSet.WriteXml(Stream, XmlWriteMode)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data, and optionally the schema, for the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.Stream"></xref> and <xref href="System.Data.XmlWriteMode"></xref>. To write the schema, set the value for the <code>mode</code> parameter to `WriteSchema`.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, set the `mode` parameter to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  syntax:
    content: public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> object used to write to a file.
    - id: mode
      type: System.Data.XmlWriteMode
      description: One of the <xref href="System.Data.XmlWriteMode"></xref> values.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.String)
  commentId: M:System.Data.DataSet.WriteXml(System.String)
  id: WriteXml(System.String)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(String)
  nameWithType: DataSet.WriteXml(String)
  fullName: DataSet.WriteXml(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data for the <xref href="System.Data.DataSet"></xref> to the specified file.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, use one of the overloads that includes the `mode` parameter, and set its value to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  syntax:
    content: public void WriteXml (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The file name (including the path) to which to write.
  overload: System.Data.DataSet.WriteXml*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.IO.TextWriter)
  commentId: M:System.Data.DataSet.WriteXml(System.IO.TextWriter)
  id: WriteXml(System.IO.TextWriter)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(TextWriter)
  nameWithType: DataSet.WriteXml(TextWriter)
  fullName: DataSet.WriteXml(TextWriter)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data for the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.TextWriter"></xref>.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, use one of the overloads that includes the `mode` parameter, and set its value to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  syntax:
    content: public void WriteXml (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter"></xref> object with which to write.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(XmlWriter)
  nameWithType: DataSet.WriteXml(XmlWriter)
  fullName: DataSet.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data for the <xref href="System.Data.DataSet"></xref> to the specified <xref href="System.Xml.XmlWriter"></xref>.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, use one of the overloads that includes the `mode` parameter, and set its value to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  syntax:
    content: public void WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter"></xref> with which to write.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXml(System.IO.Stream)
  commentId: M:System.Data.DataSet.WriteXml(System.IO.Stream)
  id: WriteXml(System.IO.Stream)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXml(Stream)
  nameWithType: DataSet.WriteXml(Stream)
  fullName: DataSet.WriteXml(Stream)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the current data for the <xref href="System.Data.DataSet"></xref> using the specified <xref href="System.IO.Stream"></xref>.
  remarks: "The `WriteXml` method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataSet> into an XML document, whereas the <xref:System.Data.DataSet.WriteXmlSchema%2A> method writes only the schema. To write both data and schema, use one of the overloads that includes the `mode` parameter, and set its value to `WriteSchema`.  \n  \n Note that the same is true for the <xref:System.Data.DataSet.ReadXml%2A> and <xref:System.Data.DataSet.ReadXmlSchema%2A> methods, respectively. To read XML data, or both schema and data into the `DataSet`, use the `ReadXml` method. To read just the schema, use the `ReadXmlSchema` method.  \n  \n> [!NOTE]\n>  An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>."
  example:
  - "The following example creates a <xref:System.IO.FileStream?displayProperty=fullName> object. The object is then used with the <xref:System.Data.DataSet.WriteXml%2A> method to write an XML document.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXml Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXml Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXml (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> object used to write to a file.
  overload: System.Data.DataSet.WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})
  id: WriteXmlSchema(System.String,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(String, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(String, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(String, Converter<Type,String>)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to a file.
  syntax:
    content: public void WriteXmlSchema (string fileName, Converter<Type,string> multipleTargetConverter);
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to write to.
    - id: multipleTargetConverter
      type: System.Converter{System.Type,System.String}
      description: A delegate used to convert <xref href="System.Type"></xref> to string.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.Stream)
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)
  id: WriteXmlSchema(System.IO.Stream)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(Stream)
  nameWithType: DataSet.WriteXmlSchema(Stream)
  fullName: DataSet.WriteXmlSchema(Stream)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to the specified <xref href="System.IO.Stream"></xref> object.
  remarks: "Use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataSet> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n To write the data to an XML document, use the <xref:System.Data.DataSet.WriteXml%2A> method.  \n  \n Classes that derive from the <xref:System.IO.Stream> class include <xref:System.IO.BufferedStream>, <xref:System.IO.FileStream>, <xref:System.IO.MemoryStream>, and <xref:System.Net.Sockets.NetworkStream>."
  example:
  - "The following example creates a new <xref:System.IO.FileStream> object that is passed to the <xref:System.Data.DataSet.WriteXmlSchema%2A> method to write the schema to disk.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXmlSchema Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXmlSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXmlSchema (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> object used to write to a file.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)
  id: WriteXmlSchema(System.IO.TextWriter)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(TextWriter)
  nameWithType: DataSet.WriteXmlSchema(TextWriter)
  fullName: DataSet.WriteXmlSchema(TextWriter)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to the specified <xref href="System.IO.TextWriter"></xref> object.
  remarks: "Use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataSet> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n To write the data to an XML document, use the <xref:System.Data.DataSet.WriteXml%2A> method.  \n  \n Classes the derive from the <xref:System.IO.TextWriter?displayProperty=fullName> class include the <xref:System.Web.HttpWriter?displayProperty=fullName>, <xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName>, <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>, <xref:System.IO.StreamWriter?displayProperty=fullName>, and <xref:System.IO.StringWriter?displayProperty=fullName>."
  example:
  - "The following example creates a <xref:System.Text.StringBuilder?displayProperty=fullName> object to that is used to create a new <xref:System.IO.StringWriter?displayProperty=fullName>. The <xref:System.IO.StringWriter> is passed to the <xref:System.Data.DataSet.WriteXmlSchema%2A> method, and the resulting string is printed to the console window.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXmlSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXmlSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema1 Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXmlSchema (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter"></xref> object with which to write.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.String)
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.String)
  id: WriteXmlSchema(System.String)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(String)
  nameWithType: DataSet.WriteXmlSchema(String)
  fullName: DataSet.WriteXmlSchema(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to a file.
  remarks: "Use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataSet> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n To write the data to an XML document, use the <xref:System.Data.DataSet.WriteXml%2A> method."
  example:
  - >-
    [!code-csharp[Classic WebData DataSet.WriteXmlSchema3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema3 Example/CS/source.cs#1)]
     [!code-vb[Classic WebData DataSet.WriteXmlSchema3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema3 Example/VB/source.vb#1)]
  syntax:
    content: public void WriteXmlSchema (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The file name (including the path) to which to write.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: <xref href="System.Security.Permissions.FileIOPermission"></xref> is not set to <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)
  id: WriteXmlSchema(System.Xml.XmlWriter)
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(XmlWriter)
  nameWithType: DataSet.WriteXmlSchema(XmlWriter)
  fullName: DataSet.WriteXmlSchema(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to an <xref href="System.Xml.XmlWriter"></xref> object.
  remarks: "Use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataSet> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <xref:System.Data.DataSet.WriteXmlSchema%2A> method.  \n  \n The XML schema is written using the XSD standard.  \n  \n To write the data to an XML document, use the <xref:System.Data.DataSet.WriteXml%2A> method.  \n  \n One class that inherits from the <xref:System.Xml.XmlWriter?displayProperty=fullName> class is the <xref:System.Xml.XmlTextWriter?displayProperty=fullName> class."
  example:
  - "The following example creates a new <xref:System.IO.FileStream?displayProperty=fullName> object with the specified path. The <xref:System.IO.FileStream> object is used to create an <xref:System.Xml.XMLTextWriter?displayProperty=fullName> object. The <xref:System.Data.DataSet.WriteXmlSchema%2A> method is then invoked with the <xref:System.Xml.XmlTextWriter> object to write the schema to the disk.  \n  \n [!code-csharp[Classic WebData DataSet.WriteXmlSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataSet.WriteXmlSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataSet.WriteXmlSchema2 Example/VB/source.vb#1)]"
  syntax:
    content: public void WriteXmlSchema (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter"></xref> to write to.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})
  id: WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(Stream, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(Stream, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(Stream, Converter<Type,String>)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to the specified <xref href="System.IO.Stream"></xref> object.
  syntax:
    content: public void WriteXmlSchema (System.IO.Stream stream, Converter<Type,string> multipleTargetConverter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> object to write to.
    - id: multipleTargetConverter
      type: System.Converter{System.Type,System.String}
      description: A delegate used to convert <xref href="System.Type"></xref> to string.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})
  id: WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(TextWriter, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(TextWriter, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(TextWriter, Converter<Type,String>)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to the specified <xref href="System.IO.TextWriter"></xref>.
  syntax:
    content: public void WriteXmlSchema (System.IO.TextWriter writer, Converter<Type,string> multipleTargetConverter);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: A <xref href="System.IO.TextWriter"></xref> object to write to.
    - id: multipleTargetConverter
      type: System.Converter{System.Type,System.String}
      description: A delegate used to convert <xref href="System.Type"></xref> to string.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})
  commentId: M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})
  id: WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  langs:
  - csharp
  name: WriteXmlSchema(XmlWriter, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(XmlWriter, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(XmlWriter, Converter<Type,String>)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Writes the <xref href="System.Data.DataSet"></xref> structure as an XML schema to the specified <xref href="System.Xml.XmlWriter"></xref>.
  syntax:
    content: public void WriteXmlSchema (System.Xml.XmlWriter writer, Converter<Type,string> multipleTargetConverter);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: A <xref href="System.Xml.XmlWriter"></xref> object to write to.
    - id: multipleTargetConverter
      type: System.Converter{System.Type,System.String}
      description: A delegate used to convert <xref href="System.Type"></xref> to string.
  overload: System.Data.DataSet.WriteXmlSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection
  commentId: P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IListSource.ContainsListCollection
  nameWithType: DataSet.IListSource.ContainsListCollection
  fullName: DataSet.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: For a description of this member, see <xref href="System.ComponentModel.IListSource.ContainsListCollection"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.ComponentModel.IListSource> interface.
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: For a description of this member, see <xref href="System.ComponentModel.IListSource.ContainsListCollection"></xref>.
  overload: System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.System#ComponentModel#IListSource#GetList
  commentId: M:System.Data.DataSet.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IListSource.GetList()
  nameWithType: DataSet.IListSource.GetList()
  fullName: DataSet.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: For a description of this member, see <xref href="System.ComponentModel.IListSource.GetList"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.ComponentModel.IListSource> interface.
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: For a description of this member, see <xref href="System.ComponentModel.IListSource.GetList"></xref>.
  overload: System.Data.DataSet.System#ComponentModel#IListSource#GetList*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IXmlSerializable.GetSchema()
  nameWithType: DataSet.IXmlSerializable.GetSchema()
  fullName: DataSet.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: For a description of this member, see <xref href="System.Xml.Serialization.IXmlSerializable.GetSchema"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: For a description of this member, see <xref href="System.Xml.Serialization.IXmlSerializable.GetSchema"></xref>.
  overload: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: DataSet.IXmlSerializable.ReadXml(XmlReader)
  fullName: DataSet.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: For a description of this member, see <xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: A <xref href="System.Xml.XmlReader"></xref>.
  overload: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.DataSet
  langs:
  - csharp
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: DataSet.IXmlSerializable.WriteXml(XmlWriter)
  fullName: DataSet.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: For a description of this member, see <xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: A <xref href="System.Xml.XmlWriter"></xref>.
  overload: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.ComponentModel.MarshalByValueComponent
  parent: System.ComponentModel
  isExternal: false
  name: MarshalByValueComponent
  nameWithType: MarshalByValueComponent
  fullName: System.ComponentModel.MarshalByValueComponent
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Data.DataSet.#ctor
  parent: System.Data.DataSet
  isExternal: false
  name: DataSet()
  nameWithType: DataSet.DataSet()
  fullName: DataSet.DataSet()
- uid: System.Data.DataSet.#ctor(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: DataSet(String)
  nameWithType: DataSet.DataSet(String)
  fullName: DataSet.DataSet(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  isExternal: false
  name: DataSet(SerializationInfo, StreamingContext)
  nameWithType: DataSet.DataSet(SerializationInfo, StreamingContext)
  fullName: DataSet.DataSet(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)
  parent: System.Data.DataSet
  isExternal: false
  name: DataSet(SerializationInfo, StreamingContext, Boolean)
  nameWithType: DataSet.DataSet(SerializationInfo, StreamingContext, Boolean)
  fullName: DataSet.DataSet(SerializationInfo, StreamingContext, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataSet.AcceptChanges
  parent: System.Data.DataSet
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataSet.AcceptChanges()
  fullName: DataSet.AcceptChanges()
- uid: System.Data.DataSet.BeginInit
  parent: System.Data.DataSet
  isExternal: false
  name: BeginInit()
  nameWithType: DataSet.BeginInit()
  fullName: DataSet.BeginInit()
- uid: System.Data.DataSet.CaseSensitive
  parent: System.Data.DataSet
  isExternal: false
  name: CaseSensitive
  nameWithType: DataSet.CaseSensitive
  fullName: DataSet.CaseSensitive
- uid: System.Data.DataSet.Clear
  parent: System.Data.DataSet
  isExternal: false
  name: Clear()
  nameWithType: DataSet.Clear()
  fullName: DataSet.Clear()
- uid: System.Data.DataSet.Clone
  parent: System.Data.DataSet
  isExternal: false
  name: Clone()
  nameWithType: DataSet.Clone()
  fullName: DataSet.Clone()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataSet.Copy
  parent: System.Data.DataSet
  isExternal: false
  name: Copy()
  nameWithType: DataSet.Copy()
  fullName: DataSet.Copy()
- uid: System.Data.DataSet.CreateDataReader(System.Data.DataTable[])
  parent: System.Data.DataSet
  isExternal: false
  name: CreateDataReader(DataTable[])
  nameWithType: DataSet.CreateDataReader(DataTable[])
  fullName: DataSet.CreateDataReader(DataTable[])
- uid: System.Data.DataTableReader
  parent: System.Data
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
- uid: System.Data.DataTable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable[]
  nameWithType: DataTable[]
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataSet.CreateDataReader
  parent: System.Data.DataSet
  isExternal: false
  name: CreateDataReader()
  nameWithType: DataSet.CreateDataReader()
  fullName: DataSet.CreateDataReader()
- uid: System.Data.DataSet.DataSetName
  parent: System.Data.DataSet
  isExternal: false
  name: DataSetName
  nameWithType: DataSet.DataSetName
  fullName: DataSet.DataSetName
- uid: System.Data.DataSet.DefaultViewManager
  parent: System.Data.DataSet
  isExternal: false
  name: DefaultViewManager
  nameWithType: DataSet.DefaultViewManager
  fullName: DataSet.DefaultViewManager
- uid: System.Data.DataViewManager
  parent: System.Data
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewManager
  fullName: System.Data.DataViewManager
- uid: System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)
  parent: System.Data.DataSet
  isExternal: false
  name: DetermineSchemaSerializationMode(XmlReader)
  nameWithType: DataSet.DetermineSchemaSerializationMode(XmlReader)
  fullName: DataSet.DetermineSchemaSerializationMode(XmlReader)
- uid: System.Data.SchemaSerializationMode
  parent: System.Data
  isExternal: false
  name: SchemaSerializationMode
  nameWithType: SchemaSerializationMode
  fullName: System.Data.SchemaSerializationMode
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  isExternal: false
  name: DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
  nameWithType: DataSet.DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
  fullName: DataSet.DetermineSchemaSerializationMode(SerializationInfo, StreamingContext)
- uid: System.Data.DataSet.EndInit
  parent: System.Data.DataSet
  isExternal: false
  name: EndInit()
  nameWithType: DataSet.EndInit()
  fullName: DataSet.EndInit()
- uid: System.Data.DataSet.EnforceConstraints
  parent: System.Data.DataSet
  isExternal: false
  name: EnforceConstraints
  nameWithType: DataSet.EnforceConstraints
  fullName: DataSet.EnforceConstraints
- uid: System.Data.DataSet.ExtendedProperties
  parent: System.Data.DataSet
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataSet.ExtendedProperties
  fullName: DataSet.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.DataSet.GetChanges
  parent: System.Data.DataSet
  isExternal: false
  name: GetChanges()
  nameWithType: DataSet.GetChanges()
  fullName: DataSet.GetChanges()
- uid: System.Data.DataSet.GetChanges(System.Data.DataRowState)
  parent: System.Data.DataSet
  isExternal: false
  name: GetChanges(DataRowState)
  nameWithType: DataSet.GetChanges(DataRowState)
  fullName: DataSet.GetChanges(DataRowState)
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.DataSet
  isExternal: false
  name: GetDataSetSchema(XmlSchemaSet)
  nameWithType: DataSet.GetDataSetSchema(XmlSchemaSet)
  fullName: DataSet.GetDataSetSchema(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaComplexType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType
  fullName: System.Xml.Schema.XmlSchemaComplexType
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: DataSet.GetObjectData(SerializationInfo, StreamingContext)
  fullName: DataSet.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Data.DataSet.GetSchemaSerializable
  parent: System.Data.DataSet
  isExternal: false
  name: GetSchemaSerializable()
  nameWithType: DataSet.GetSchemaSerializable()
  fullName: DataSet.GetSchemaSerializable()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  isExternal: false
  name: GetSerializationData(SerializationInfo, StreamingContext)
  nameWithType: DataSet.GetSerializationData(SerializationInfo, StreamingContext)
  fullName: DataSet.GetSerializationData(SerializationInfo, StreamingContext)
- uid: System.Data.DataSet.GetXml
  parent: System.Data.DataSet
  isExternal: false
  name: GetXml()
  nameWithType: DataSet.GetXml()
  fullName: DataSet.GetXml()
- uid: System.Data.DataSet.GetXmlSchema
  parent: System.Data.DataSet
  isExternal: false
  name: GetXmlSchema()
  nameWithType: DataSet.GetXmlSchema()
  fullName: DataSet.GetXmlSchema()
- uid: System.Data.DataSet.HasChanges
  parent: System.Data.DataSet
  isExternal: false
  name: HasChanges()
  nameWithType: DataSet.HasChanges()
  fullName: DataSet.HasChanges()
- uid: System.Data.DataSet.HasChanges(System.Data.DataRowState)
  parent: System.Data.DataSet
  isExternal: false
  name: HasChanges(DataRowState)
  nameWithType: DataSet.HasChanges(DataRowState)
  fullName: DataSet.HasChanges(DataRowState)
- uid: System.Data.DataSet.HasErrors
  parent: System.Data.DataSet
  isExternal: false
  name: HasErrors
  nameWithType: DataSet.HasErrors
  fullName: DataSet.HasErrors
- uid: System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])
  parent: System.Data.DataSet
  isExternal: false
  name: InferXmlSchema(Stream, String[])
  nameWithType: DataSet.InferXmlSchema(Stream, String[])
  fullName: DataSet.InferXmlSchema(Stream, String[])
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])
  parent: System.Data.DataSet
  isExternal: false
  name: InferXmlSchema(TextReader, String[])
  nameWithType: DataSet.InferXmlSchema(TextReader, String[])
  fullName: DataSet.InferXmlSchema(TextReader, String[])
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.DataSet.InferXmlSchema(System.String,System.String[])
  parent: System.Data.DataSet
  isExternal: false
  name: InferXmlSchema(String, String[])
  nameWithType: DataSet.InferXmlSchema(String, String[])
  fullName: DataSet.InferXmlSchema(String, String[])
- uid: System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])
  parent: System.Data.DataSet
  isExternal: false
  name: InferXmlSchema(XmlReader, String[])
  nameWithType: DataSet.InferXmlSchema(XmlReader, String[])
  fullName: DataSet.InferXmlSchema(XmlReader, String[])
- uid: System.Data.DataSet.Initialized
  parent: System.Data.DataSet
  isExternal: false
  name: Initialized
  nameWithType: DataSet.Initialized
  fullName: DataSet.Initialized
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Data.DataSet.InitializeDerivedDataSet
  parent: System.Data.DataSet
  isExternal: false
  name: InitializeDerivedDataSet()
  nameWithType: DataSet.InitializeDerivedDataSet()
  fullName: DataSet.InitializeDerivedDataSet()
- uid: System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DataSet
  isExternal: false
  name: IsBinarySerialized(SerializationInfo, StreamingContext)
  nameWithType: DataSet.IsBinarySerialized(SerializationInfo, StreamingContext)
  fullName: DataSet.IsBinarySerialized(SerializationInfo, StreamingContext)
- uid: System.Data.DataSet.IsInitialized
  parent: System.Data.DataSet
  isExternal: false
  name: IsInitialized
  nameWithType: DataSet.IsInitialized
  fullName: DataSet.IsInitialized
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])
  parent: System.Data.DataSet
  isExternal: false
  name: Load(IDataReader, LoadOption, DataTable[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, DataTable[])
  fullName: DataSet.Load(IDataReader, LoadOption, DataTable[])
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])
  parent: System.Data.DataSet
  isExternal: false
  name: Load(IDataReader, LoadOption, String[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, String[])
  fullName: DataSet.Load(IDataReader, LoadOption, String[])
- uid: System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])
  parent: System.Data.DataSet
  isExternal: false
  name: Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
  nameWithType: DataSet.Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
  fullName: DataSet.Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[])
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.DataSet.Locale
  parent: System.Data.DataSet
  isExternal: false
  name: Locale
  nameWithType: DataSet.Locale
  fullName: DataSet.Locale
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.DataSet.Merge(System.Data.DataRow[])
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataRow[])
  nameWithType: DataSet.Merge(DataRow[])
  fullName: DataSet.Merge(DataRow[])
- uid: System.Data.DataRow
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow[]
  nameWithType: DataRow[]
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataSet.Merge(System.Data.DataSet)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataSet)
  nameWithType: DataSet.Merge(DataSet)
  fullName: DataSet.Merge(DataSet)
- uid: System.Data.DataSet.Merge(System.Data.DataTable)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataTable)
  nameWithType: DataSet.Merge(DataTable)
  fullName: DataSet.Merge(DataTable)
- uid: System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataSet, Boolean)
  nameWithType: DataSet.Merge(DataSet, Boolean)
  fullName: DataSet.Merge(DataSet, Boolean)
- uid: System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataRow[], Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataRow[], Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataRow[], Boolean, MissingSchemaAction)
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataSet, Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataSet, Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataSet, Boolean, MissingSchemaAction)
- uid: System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)
  parent: System.Data.DataSet
  isExternal: false
  name: Merge(DataTable, Boolean, MissingSchemaAction)
  nameWithType: DataSet.Merge(DataTable, Boolean, MissingSchemaAction)
  fullName: DataSet.Merge(DataTable, Boolean, MissingSchemaAction)
- uid: System.Data.DataSet.MergeFailed
  parent: System.Data.DataSet
  isExternal: false
  name: MergeFailed
  nameWithType: DataSet.MergeFailed
  fullName: DataSet.MergeFailed
- uid: System.Data.MergeFailedEventHandler
  parent: System.Data
  isExternal: false
  name: MergeFailedEventHandler
  nameWithType: MergeFailedEventHandler
  fullName: System.Data.MergeFailedEventHandler
- uid: System.Data.DataSet.Namespace
  parent: System.Data.DataSet
  isExternal: false
  name: Namespace
  nameWithType: DataSet.Namespace
  fullName: DataSet.Namespace
- uid: System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataSet
  isExternal: false
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataSet.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: DataSet.OnPropertyChanging(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)
  parent: System.Data.DataSet
  isExternal: false
  name: OnRemoveRelation(DataRelation)
  nameWithType: DataSet.OnRemoveRelation(DataRelation)
  fullName: DataSet.OnRemoveRelation(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataSet.OnRemoveTable(System.Data.DataTable)
  parent: System.Data.DataSet
  isExternal: false
  name: OnRemoveTable(DataTable)
  nameWithType: DataSet.OnRemoveTable(DataTable)
  fullName: DataSet.OnRemoveTable(DataTable)
- uid: System.Data.DataSet.Prefix
  parent: System.Data.DataSet
  isExternal: false
  name: Prefix
  nameWithType: DataSet.Prefix
  fullName: DataSet.Prefix
- uid: System.Data.DataSet.RaisePropertyChanging(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: RaisePropertyChanging(String)
  nameWithType: DataSet.RaisePropertyChanging(String)
  fullName: DataSet.RaisePropertyChanging(String)
- uid: System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(XmlReader, XmlReadMode)
  nameWithType: DataSet.ReadXml(XmlReader, XmlReadMode)
  fullName: DataSet.ReadXml(XmlReader, XmlReadMode)
- uid: System.Data.XmlReadMode
  parent: System.Data
  isExternal: false
  name: XmlReadMode
  nameWithType: XmlReadMode
  fullName: System.Data.XmlReadMode
- uid: System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(String, XmlReadMode)
  nameWithType: DataSet.ReadXml(String, XmlReadMode)
  fullName: DataSet.ReadXml(String, XmlReadMode)
- uid: System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(Stream, XmlReadMode)
  nameWithType: DataSet.ReadXml(Stream, XmlReadMode)
  fullName: DataSet.ReadXml(Stream, XmlReadMode)
- uid: System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(TextReader, XmlReadMode)
  nameWithType: DataSet.ReadXml(TextReader, XmlReadMode)
  fullName: DataSet.ReadXml(TextReader, XmlReadMode)
- uid: System.Data.DataSet.ReadXml(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(String)
  nameWithType: DataSet.ReadXml(String)
  fullName: DataSet.ReadXml(String)
- uid: System.Data.DataSet.ReadXml(System.IO.TextReader)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(TextReader)
  nameWithType: DataSet.ReadXml(TextReader)
  fullName: DataSet.ReadXml(TextReader)
- uid: System.Data.DataSet.ReadXml(System.IO.Stream)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(Stream)
  nameWithType: DataSet.ReadXml(Stream)
  fullName: DataSet.ReadXml(Stream)
- uid: System.Data.DataSet.ReadXml(System.Xml.XmlReader)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml(XmlReader)
  nameWithType: DataSet.ReadXml(XmlReader)
  fullName: DataSet.ReadXml(XmlReader)
- uid: System.Data.DataSet.ReadXmlSchema(System.IO.Stream)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSchema(Stream)
  nameWithType: DataSet.ReadXmlSchema(Stream)
  fullName: DataSet.ReadXmlSchema(Stream)
- uid: System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSchema(TextReader)
  nameWithType: DataSet.ReadXmlSchema(TextReader)
  fullName: DataSet.ReadXmlSchema(TextReader)
- uid: System.Data.DataSet.ReadXmlSchema(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSchema(String)
  nameWithType: DataSet.ReadXmlSchema(String)
  fullName: DataSet.ReadXmlSchema(String)
- uid: System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSchema(XmlReader)
  nameWithType: DataSet.ReadXmlSchema(XmlReader)
  fullName: DataSet.ReadXmlSchema(XmlReader)
- uid: System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSerializable(XmlReader)
  nameWithType: DataSet.ReadXmlSerializable(XmlReader)
  fullName: DataSet.ReadXmlSerializable(XmlReader)
- uid: System.Data.DataSet.RejectChanges
  parent: System.Data.DataSet
  isExternal: false
  name: RejectChanges()
  nameWithType: DataSet.RejectChanges()
  fullName: DataSet.RejectChanges()
- uid: System.Data.DataSet.Relations
  parent: System.Data.DataSet
  isExternal: false
  name: Relations
  nameWithType: DataSet.Relations
  fullName: DataSet.Relations
- uid: System.Data.DataRelationCollection
  parent: System.Data
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
- uid: System.Data.DataSet.RemotingFormat
  parent: System.Data.DataSet
  isExternal: false
  name: RemotingFormat
  nameWithType: DataSet.RemotingFormat
  fullName: DataSet.RemotingFormat
- uid: System.Data.SerializationFormat
  parent: System.Data
  isExternal: false
  name: SerializationFormat
  nameWithType: SerializationFormat
  fullName: System.Data.SerializationFormat
- uid: System.Data.DataSet.Reset
  parent: System.Data.DataSet
  isExternal: false
  name: Reset()
  nameWithType: DataSet.Reset()
  fullName: DataSet.Reset()
- uid: System.Data.DataSet.SchemaSerializationMode
  parent: System.Data.DataSet
  isExternal: false
  name: SchemaSerializationMode
  nameWithType: DataSet.SchemaSerializationMode
  fullName: DataSet.SchemaSerializationMode
- uid: System.Data.DataSet.ShouldSerializeRelations
  parent: System.Data.DataSet
  isExternal: false
  name: ShouldSerializeRelations()
  nameWithType: DataSet.ShouldSerializeRelations()
  fullName: DataSet.ShouldSerializeRelations()
- uid: System.Data.DataSet.ShouldSerializeTables
  parent: System.Data.DataSet
  isExternal: false
  name: ShouldSerializeTables()
  nameWithType: DataSet.ShouldSerializeTables()
  fullName: DataSet.ShouldSerializeTables()
- uid: System.Data.DataSet.Site
  parent: System.Data.DataSet
  isExternal: false
  name: Site
  nameWithType: DataSet.Site
  fullName: DataSet.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Data.DataSet.Tables
  parent: System.Data.DataSet
  isExternal: false
  name: Tables
  nameWithType: DataSet.Tables
  fullName: DataSet.Tables
- uid: System.Data.DataTableCollection
  parent: System.Data
  isExternal: false
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
- uid: System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(XmlWriter, XmlWriteMode)
  nameWithType: DataSet.WriteXml(XmlWriter, XmlWriteMode)
  fullName: DataSet.WriteXml(XmlWriter, XmlWriteMode)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.XmlWriteMode
  parent: System.Data
  isExternal: false
  name: XmlWriteMode
  nameWithType: XmlWriteMode
  fullName: System.Data.XmlWriteMode
- uid: System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(String, XmlWriteMode)
  nameWithType: DataSet.WriteXml(String, XmlWriteMode)
  fullName: DataSet.WriteXml(String, XmlWriteMode)
- uid: System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(TextWriter, XmlWriteMode)
  nameWithType: DataSet.WriteXml(TextWriter, XmlWriteMode)
  fullName: DataSet.WriteXml(TextWriter, XmlWriteMode)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(Stream, XmlWriteMode)
  nameWithType: DataSet.WriteXml(Stream, XmlWriteMode)
  fullName: DataSet.WriteXml(Stream, XmlWriteMode)
- uid: System.Data.DataSet.WriteXml(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(String)
  nameWithType: DataSet.WriteXml(String)
  fullName: DataSet.WriteXml(String)
- uid: System.Data.DataSet.WriteXml(System.IO.TextWriter)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(TextWriter)
  nameWithType: DataSet.WriteXml(TextWriter)
  fullName: DataSet.WriteXml(TextWriter)
- uid: System.Data.DataSet.WriteXml(System.Xml.XmlWriter)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(XmlWriter)
  nameWithType: DataSet.WriteXml(XmlWriter)
  fullName: DataSet.WriteXml(XmlWriter)
- uid: System.Data.DataSet.WriteXml(System.IO.Stream)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml(Stream)
  nameWithType: DataSet.WriteXml(Stream)
  fullName: DataSet.WriteXml(Stream)
- uid: System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(String, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(String, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(String, Converter<Type,String>)
- uid: System.Converter`2
  name: Converter<TInput,TOutput>
  nameWithType: Converter<TInput,TOutput>
  fullName: System.Converter<TInput,TOutput>
- uid: System.Type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Converter{System.Type,System.String}
  parent: System
  isExternal: false
  name: Converter<Type,String>
  nameWithType: Converter<Type,String>
  fullName: System.Converter<System.Type,System.String>
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.Stream)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(Stream)
  nameWithType: DataSet.WriteXmlSchema(Stream)
  fullName: DataSet.WriteXmlSchema(Stream)
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(TextWriter)
  nameWithType: DataSet.WriteXmlSchema(TextWriter)
  fullName: DataSet.WriteXmlSchema(TextWriter)
- uid: System.Data.DataSet.WriteXmlSchema(System.String)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(String)
  nameWithType: DataSet.WriteXmlSchema(String)
  fullName: DataSet.WriteXmlSchema(String)
- uid: System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(XmlWriter)
  nameWithType: DataSet.WriteXmlSchema(XmlWriter)
  fullName: DataSet.WriteXmlSchema(XmlWriter)
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(Stream, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(Stream, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(Stream, Converter<Type,String>)
- uid: System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(TextWriter, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(TextWriter, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(TextWriter, Converter<Type,String>)
- uid: System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema(XmlWriter, Converter<Type,String>)
  nameWithType: DataSet.WriteXmlSchema(XmlWriter, Converter<Type,String>)
  fullName: DataSet.WriteXmlSchema(XmlWriter, Converter<Type,String>)
- uid: System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.DataSet
  isExternal: false
  name: IListSource.ContainsListCollection
  nameWithType: DataSet.IListSource.ContainsListCollection
  fullName: DataSet.IListSource.ContainsListCollection
- uid: System.Data.DataSet.System#ComponentModel#IListSource#GetList
  parent: System.Data.DataSet
  isExternal: false
  name: IListSource.GetList()
  nameWithType: DataSet.IListSource.GetList()
  fullName: DataSet.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.DataSet
  isExternal: false
  name: IXmlSerializable.GetSchema()
  nameWithType: DataSet.IXmlSerializable.GetSchema()
  fullName: DataSet.IXmlSerializable.GetSchema()
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.DataSet
  isExternal: false
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: DataSet.IXmlSerializable.ReadXml(XmlReader)
  fullName: DataSet.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.DataSet
  isExternal: false
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: DataSet.IXmlSerializable.WriteXml(XmlWriter)
  fullName: DataSet.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Data.DataSet.CreateDataReader*
  parent: System.Data.DataSet
  isExternal: false
  name: CreateDataReader
  nameWithType: DataSet.CreateDataReader
  fullName: DataSet.CreateDataReader
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.DetermineSchemaSerializationMode*
  parent: System.Data.DataSet
  isExternal: false
  name: DetermineSchemaSerializationMode
  nameWithType: DataSet.DetermineSchemaSerializationMode
  fullName: DataSet.DetermineSchemaSerializationMode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Load*
  parent: System.Data.DataSet
  isExternal: false
  name: Load
  nameWithType: DataSet.Load
  fullName: DataSet.Load
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.#ctor*
  parent: System.Data.DataSet
  isExternal: false
  name: DataSet
  nameWithType: DataSet.DataSet
  fullName: DataSet.DataSet
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.AcceptChanges*
  parent: System.Data.DataSet
  isExternal: false
  name: AcceptChanges
  nameWithType: DataSet.AcceptChanges
  fullName: DataSet.AcceptChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.BeginInit*
  parent: System.Data.DataSet
  isExternal: false
  name: BeginInit
  nameWithType: DataSet.BeginInit
  fullName: DataSet.BeginInit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.CaseSensitive*
  parent: System.Data.DataSet
  isExternal: false
  name: CaseSensitive
  nameWithType: DataSet.CaseSensitive
  fullName: DataSet.CaseSensitive
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Clear*
  parent: System.Data.DataSet
  isExternal: false
  name: Clear
  nameWithType: DataSet.Clear
  fullName: DataSet.Clear
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Clone*
  parent: System.Data.DataSet
  isExternal: false
  name: Clone
  nameWithType: DataSet.Clone
  fullName: DataSet.Clone
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Copy*
  parent: System.Data.DataSet
  isExternal: false
  name: Copy
  nameWithType: DataSet.Copy
  fullName: DataSet.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.DataSetName*
  parent: System.Data.DataSet
  isExternal: false
  name: DataSetName
  nameWithType: DataSet.DataSetName
  fullName: DataSet.DataSetName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.DefaultViewManager*
  parent: System.Data.DataSet
  isExternal: false
  name: DefaultViewManager
  nameWithType: DataSet.DefaultViewManager
  fullName: DataSet.DefaultViewManager
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.EndInit*
  parent: System.Data.DataSet
  isExternal: false
  name: EndInit
  nameWithType: DataSet.EndInit
  fullName: DataSet.EndInit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.EnforceConstraints*
  parent: System.Data.DataSet
  isExternal: false
  name: EnforceConstraints
  nameWithType: DataSet.EnforceConstraints
  fullName: DataSet.EnforceConstraints
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ExtendedProperties*
  parent: System.Data.DataSet
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataSet.ExtendedProperties
  fullName: DataSet.ExtendedProperties
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetChanges*
  parent: System.Data.DataSet
  isExternal: false
  name: GetChanges
  nameWithType: DataSet.GetChanges
  fullName: DataSet.GetChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetDataSetSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: GetDataSetSchema
  nameWithType: DataSet.GetDataSetSchema
  fullName: DataSet.GetDataSetSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetObjectData*
  parent: System.Data.DataSet
  isExternal: false
  name: GetObjectData
  nameWithType: DataSet.GetObjectData
  fullName: DataSet.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetSchemaSerializable*
  parent: System.Data.DataSet
  isExternal: false
  name: GetSchemaSerializable
  nameWithType: DataSet.GetSchemaSerializable
  fullName: DataSet.GetSchemaSerializable
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetSerializationData*
  parent: System.Data.DataSet
  isExternal: false
  name: GetSerializationData
  nameWithType: DataSet.GetSerializationData
  fullName: DataSet.GetSerializationData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetXml*
  parent: System.Data.DataSet
  isExternal: false
  name: GetXml
  nameWithType: DataSet.GetXml
  fullName: DataSet.GetXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.GetXmlSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: GetXmlSchema
  nameWithType: DataSet.GetXmlSchema
  fullName: DataSet.GetXmlSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.HasChanges*
  parent: System.Data.DataSet
  isExternal: false
  name: HasChanges
  nameWithType: DataSet.HasChanges
  fullName: DataSet.HasChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.HasErrors*
  parent: System.Data.DataSet
  isExternal: false
  name: HasErrors
  nameWithType: DataSet.HasErrors
  fullName: DataSet.HasErrors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.InferXmlSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: InferXmlSchema
  nameWithType: DataSet.InferXmlSchema
  fullName: DataSet.InferXmlSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.InitializeDerivedDataSet*
  parent: System.Data.DataSet
  isExternal: false
  name: InitializeDerivedDataSet
  nameWithType: DataSet.InitializeDerivedDataSet
  fullName: DataSet.InitializeDerivedDataSet
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.IsBinarySerialized*
  parent: System.Data.DataSet
  isExternal: false
  name: IsBinarySerialized
  nameWithType: DataSet.IsBinarySerialized
  fullName: DataSet.IsBinarySerialized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.IsInitialized*
  parent: System.Data.DataSet
  isExternal: false
  name: IsInitialized
  nameWithType: DataSet.IsInitialized
  fullName: DataSet.IsInitialized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Locale*
  parent: System.Data.DataSet
  isExternal: false
  name: Locale
  nameWithType: DataSet.Locale
  fullName: DataSet.Locale
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Merge*
  parent: System.Data.DataSet
  isExternal: false
  name: Merge
  nameWithType: DataSet.Merge
  fullName: DataSet.Merge
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Namespace*
  parent: System.Data.DataSet
  isExternal: false
  name: Namespace
  nameWithType: DataSet.Namespace
  fullName: DataSet.Namespace
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.OnPropertyChanging*
  parent: System.Data.DataSet
  isExternal: false
  name: OnPropertyChanging
  nameWithType: DataSet.OnPropertyChanging
  fullName: DataSet.OnPropertyChanging
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.OnRemoveRelation*
  parent: System.Data.DataSet
  isExternal: false
  name: OnRemoveRelation
  nameWithType: DataSet.OnRemoveRelation
  fullName: DataSet.OnRemoveRelation
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.OnRemoveTable*
  parent: System.Data.DataSet
  isExternal: false
  name: OnRemoveTable
  nameWithType: DataSet.OnRemoveTable
  fullName: DataSet.OnRemoveTable
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Prefix*
  parent: System.Data.DataSet
  isExternal: false
  name: Prefix
  nameWithType: DataSet.Prefix
  fullName: DataSet.Prefix
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.RaisePropertyChanging*
  parent: System.Data.DataSet
  isExternal: false
  name: RaisePropertyChanging
  nameWithType: DataSet.RaisePropertyChanging
  fullName: DataSet.RaisePropertyChanging
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ReadXml*
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXml
  nameWithType: DataSet.ReadXml
  fullName: DataSet.ReadXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ReadXmlSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSchema
  nameWithType: DataSet.ReadXmlSchema
  fullName: DataSet.ReadXmlSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ReadXmlSerializable*
  parent: System.Data.DataSet
  isExternal: false
  name: ReadXmlSerializable
  nameWithType: DataSet.ReadXmlSerializable
  fullName: DataSet.ReadXmlSerializable
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.RejectChanges*
  parent: System.Data.DataSet
  isExternal: false
  name: RejectChanges
  nameWithType: DataSet.RejectChanges
  fullName: DataSet.RejectChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Relations*
  parent: System.Data.DataSet
  isExternal: false
  name: Relations
  nameWithType: DataSet.Relations
  fullName: DataSet.Relations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.RemotingFormat*
  parent: System.Data.DataSet
  isExternal: false
  name: RemotingFormat
  nameWithType: DataSet.RemotingFormat
  fullName: DataSet.RemotingFormat
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Reset*
  parent: System.Data.DataSet
  isExternal: false
  name: Reset
  nameWithType: DataSet.Reset
  fullName: DataSet.Reset
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.SchemaSerializationMode*
  parent: System.Data.DataSet
  isExternal: false
  name: SchemaSerializationMode
  nameWithType: DataSet.SchemaSerializationMode
  fullName: DataSet.SchemaSerializationMode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ShouldSerializeRelations*
  parent: System.Data.DataSet
  isExternal: false
  name: ShouldSerializeRelations
  nameWithType: DataSet.ShouldSerializeRelations
  fullName: DataSet.ShouldSerializeRelations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.ShouldSerializeTables*
  parent: System.Data.DataSet
  isExternal: false
  name: ShouldSerializeTables
  nameWithType: DataSet.ShouldSerializeTables
  fullName: DataSet.ShouldSerializeTables
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Site*
  parent: System.Data.DataSet
  isExternal: false
  name: Site
  nameWithType: DataSet.Site
  fullName: DataSet.Site
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.Tables*
  parent: System.Data.DataSet
  isExternal: false
  name: Tables
  nameWithType: DataSet.Tables
  fullName: DataSet.Tables
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.WriteXml*
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXml
  nameWithType: DataSet.WriteXml
  fullName: DataSet.WriteXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.WriteXmlSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: WriteXmlSchema
  nameWithType: DataSet.WriteXmlSchema
  fullName: DataSet.WriteXmlSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.DataSet
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: DataSet.System.ComponentModel.IListSource.ContainsListCollection
  fullName: DataSet.System.ComponentModel.IListSource.ContainsListCollection
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.System#ComponentModel#IListSource#GetList*
  parent: System.Data.DataSet
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: DataSet.System.ComponentModel.IListSource.GetList
  fullName: DataSet.System.ComponentModel.IListSource.GetList
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.DataSet
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: DataSet.System.Xml.Serialization.IXmlSerializable.GetSchema
  fullName: DataSet.System.Xml.Serialization.IXmlSerializable.GetSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.DataSet
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: DataSet.System.Xml.Serialization.IXmlSerializable.ReadXml
  fullName: DataSet.System.Xml.Serialization.IXmlSerializable.ReadXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.DataSet
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: DataSet.System.Xml.Serialization.IXmlSerializable.WriteXml
  fullName: DataSet.System.Xml.Serialization.IXmlSerializable.WriteXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataSet.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.ComponentModel.MarshalByValueComponent.ToString
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: ToString()
  nameWithType: MarshalByValueComponent.ToString()
  fullName: MarshalByValueComponent.ToString()
- uid: System.ComponentModel.MarshalByValueComponent.Container
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Container
  nameWithType: MarshalByValueComponent.Container
  fullName: MarshalByValueComponent.Container
- uid: System.ComponentModel.MarshalByValueComponent.DesignMode
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: DesignMode
  nameWithType: MarshalByValueComponent.DesignMode
  fullName: MarshalByValueComponent.DesignMode
- uid: System.ComponentModel.MarshalByValueComponent.Dispose
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Dispose()
  nameWithType: MarshalByValueComponent.Dispose()
  fullName: MarshalByValueComponent.Dispose()
- uid: System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MarshalByValueComponent.Dispose(Boolean)
  fullName: MarshalByValueComponent.Dispose(Boolean)
- uid: System.ComponentModel.MarshalByValueComponent.Disposed
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Disposed
  nameWithType: MarshalByValueComponent.Disposed
  fullName: MarshalByValueComponent.Disposed
- uid: System.ComponentModel.MarshalByValueComponent.Events
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Events
  nameWithType: MarshalByValueComponent.Events
  fullName: MarshalByValueComponent.Events
- uid: System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: GetService(Type)
  nameWithType: MarshalByValueComponent.GetService(Type)
  fullName: MarshalByValueComponent.GetService(Type)
- uid: System.ComponentModel.IListSource
  parent: System.ComponentModel
  isExternal: false
  name: IListSource
  nameWithType: IListSource
  fullName: System.ComponentModel.IListSource
- uid: System.ComponentModel.ISupportInitializeNotification
  parent: System.ComponentModel
  isExternal: false
  name: ISupportInitializeNotification
  nameWithType: ISupportInitializeNotification
  fullName: System.ComponentModel.ISupportInitializeNotification
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: false
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
