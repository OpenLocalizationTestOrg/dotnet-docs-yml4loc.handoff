<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5671b46f3fd6d5bc179917acda18493f6cbd799d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecd21f9ce18b67cc6f6f4a9acc78b642a766258c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ce19590d2bd6506381fa7e60adcf0c795002504</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a way to expose a custom <ph id="ph1">&lt;xref href="System.Runtime.Caching.FileChangeMonitor"&gt;&lt;/xref&gt;</ph> object to a cache implementation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In ASP.NET, the <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface provides access to internal file-change notification management.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface is used internally by the <ph id="ph2">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface through the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In non-ASP.NET applications, there is no host environment that implements a custom <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> class of the CLR.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Registers a file path to monitor with the host environment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used by custom cache objects and custom change monitors that implement the host environment's <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface in order to register file paths for monitoring with the host environment.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A&gt;</ph> method is called by implementers of the <ph id="ph2">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface in order to register a file or directory for change monitoring.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The fully qualified physical path of a directory or file to monitor for changes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A reference to a method that implements the <ph id="ph1">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;&lt;/xref&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the monitored file or directory changes, the host environment's implementation of the <ph id="ph1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem"&gt;&lt;/xref&gt;</ph> interface raises an event by calling the <ph id="ph2">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The state that is supplied by the host environment.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Cache implementations and custom change monitors should treat the state value as opaque.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <ph id="ph1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the last date and time that a write operation occurred on <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This parameter is returned from the host environment.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the total size of the monitored <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This parameter is returned from the host environment.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Ends change monitoring.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A&gt;</ph> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The path of the file or folder to stop monitoring.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This should match a file path value that was passed in an earlier call to the <ph id="ph1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The state information that was originally supplied by the host environment during an earlier call to the <ph id="ph1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>