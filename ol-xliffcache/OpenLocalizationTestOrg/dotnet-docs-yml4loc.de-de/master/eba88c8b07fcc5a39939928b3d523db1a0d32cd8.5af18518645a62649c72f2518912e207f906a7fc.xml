{"nodes":[{"content":"Encapsulates a recycle limit monitor.","nodes":[{"pos":[0,37],"content":"Encapsulates a recycle limit monitor.","nodes":[{"content":"Encapsulates a recycle limit monitor.","pos":[0,37]}]}],"pos":[515,553],"yaml":true},{"content":"Releases all resources used by the recycle limit monitor.","nodes":[{"pos":[0,57],"content":"Releases all resources used by the recycle limit monitor.","nodes":[{"content":"Releases all resources used by the recycle limit monitor.","pos":[0,57]}]}],"pos":[1863,1921],"yaml":true},{"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","nodes":[{"pos":[0,83],"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","nodes":[{"content":"Obtains a lifetime service object to control the lifetime policy for this instance.","pos":[0,83]}]}],"pos":[2862,2946],"yaml":true},{"content":"Returns nulls.","nodes":[{"pos":[0,14],"content":"Returns nulls.","nodes":[{"content":"Returns nulls.","pos":[0,14]}]}],"pos":[3098,3113],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.RecycleLimitMonitor\n  commentId: T:System.Web.Hosting.RecycleLimitMonitor\n  id: RecycleLimitMonitor\n  children:\n  - System.Web.Hosting.RecycleLimitMonitor.Dispose\n  - System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService\n  langs:\n  - csharp\n  name: RecycleLimitMonitor\n  nameWithType: RecycleLimitMonitor\n  fullName: System.Web.Hosting.RecycleLimitMonitor\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Encapsulates a recycle limit monitor.\n  syntax:\n    content: 'public class RecycleLimitMonitor : MarshalByRefObject'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitMonitor.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitMonitor.Dispose\n  commentId: M:System.Web.Hosting.RecycleLimitMonitor.Dispose\n  id: Dispose\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: RecycleLimitMonitor.Dispose()\n  fullName: RecycleLimitMonitor.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Releases all resources used by the recycle limit monitor.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Hosting.RecycleLimitMonitor.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitMonitor.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService\n  commentId: M:System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: RecycleLimitMonitor.InitializeLifetimeService()\n  fullName: RecycleLimitMonitor.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Obtains a lifetime service object to control the lifetime policy for this instance.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Returns nulls.\n  overload: System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitMonitor.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Web.Hosting.RecycleLimitMonitor.Dispose\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  isExternal: false\n  name: Dispose()\n  nameWithType: RecycleLimitMonitor.Dispose()\n  fullName: RecycleLimitMonitor.Dispose()\n- uid: System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: RecycleLimitMonitor.InitializeLifetimeService()\n  fullName: RecycleLimitMonitor.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.RecycleLimitMonitor.Dispose*\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  isExternal: false\n  name: Dispose\n  nameWithType: RecycleLimitMonitor.Dispose\n  fullName: RecycleLimitMonitor.Dispose\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitMonitor.xml\n- uid: System.Web.Hosting.RecycleLimitMonitor.InitializeLifetimeService*\n  parent: System.Web.Hosting.RecycleLimitMonitor\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: RecycleLimitMonitor.InitializeLifetimeService\n  fullName: RecycleLimitMonitor.InitializeLifetimeService\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitMonitor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n"}