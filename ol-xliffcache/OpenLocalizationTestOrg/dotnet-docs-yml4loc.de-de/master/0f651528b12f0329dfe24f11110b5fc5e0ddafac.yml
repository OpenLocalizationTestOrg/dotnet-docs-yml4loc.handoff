### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlWriterSettings
  commentId: T:System.Xml.XmlWriterSettings
  id: XmlWriterSettings
  children:
  - System.Xml.XmlWriterSettings.#ctor
  - System.Xml.XmlWriterSettings.Async
  - System.Xml.XmlWriterSettings.CheckCharacters
  - System.Xml.XmlWriterSettings.Clone
  - System.Xml.XmlWriterSettings.CloseOutput
  - System.Xml.XmlWriterSettings.ConformanceLevel
  - System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes
  - System.Xml.XmlWriterSettings.Encoding
  - System.Xml.XmlWriterSettings.Indent
  - System.Xml.XmlWriterSettings.IndentChars
  - System.Xml.XmlWriterSettings.NamespaceHandling
  - System.Xml.XmlWriterSettings.NewLineChars
  - System.Xml.XmlWriterSettings.NewLineHandling
  - System.Xml.XmlWriterSettings.NewLineOnAttributes
  - System.Xml.XmlWriterSettings.OmitXmlDeclaration
  - System.Xml.XmlWriterSettings.OutputMethod
  - System.Xml.XmlWriterSettings.Reset
  - System.Xml.XmlWriterSettings.WriteEndDocumentOnClose
  langs:
  - csharp
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings
  fullName: System.Xml.XmlWriterSettings
  type: Class
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Specifies a set of features to support on the <xref href="System.Xml.XmlWriter"></xref> object created by the <xref href="System.Xml.XmlWriter.Create*"></xref> method.
  remarks: "The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances. The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.  \n  \n> [!NOTE]\n>  If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings. This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.  \n  \n The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.  \n  \n For data conformance checks and auto-corrections, use these properties:  \n  \n|Property|Specifies|Value|Default|  \n|--------------|---------------|-----------|-------------|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Whether to check that characters are in the legal XML character set, as defined by W3C.|`true` or `false`|`true`|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Whether to check that output is a well-formed XML 1.0 document or fragment.|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level conformance)|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.|`true` or `false`|`true`|  \n  \n To specify output format, use these properties:  \n  \n|Property|Specifies|Value|Default|  \n|--------------|---------------|-----------|-------------|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Text encoding to use.|<xref:System.Text.Encoding?displayProperty=fullName> value|<xref:System.Text.Encoding.UTF8?displayProperty=fullName>|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Whether to indent elements|`true` or `false`|`false` (no indentation)|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).|String|Two spaces|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Character string to use for line breaks.|String|`\\r\\n` (carriage return, line feed)|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|How to handle newline characters.|<xref:System.Xml.NewLineHandling?displayProperty=fullName> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)|<xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).|`true` or `false`|`false`|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Whether to write an XML declaration.|`true` or `false`|`false`|"
  example:
  - "The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.  \n  \n [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]\n [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  \n  \n The sample produces the following output:  \n  \n```  \n<order  \n  orderID=\"367A54\"  \n  date=\"2001-05-03\">  \n  <price>19.95</price>  \n</order>  \n```"
  syntax:
    content: public sealed class XmlWriterSettings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.#ctor
  commentId: M:System.Xml.XmlWriterSettings.#ctor
  id: '#ctor'
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: XmlWriterSettings()
  nameWithType: XmlWriterSettings.XmlWriterSettings()
  fullName: XmlWriterSettings.XmlWriterSettings()
  type: Constructor
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlWriterSettings"></xref> class.
  remarks: "The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\r\\n` (carriage return, new line).|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|"
  example:
  - "The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \n  \n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]"
  syntax:
    content: public XmlWriterSettings ();
    parameters: []
  overload: System.Xml.XmlWriterSettings.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.Async
  commentId: P:System.Xml.XmlWriterSettings.Async
  id: Async
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: Async
  nameWithType: XmlWriterSettings.Async
  fullName: XmlWriterSettings.Async
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value that indicates whether asynchronous <xref href="System.Xml.XmlWriter"></xref> methods can be used on a particular <xref href="System.Xml.XmlWriter"></xref> instance.
  remarks: "You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance. After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only. The default value of this property is `false`.  \n  \n This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload. This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior."
  syntax:
    content: public bool Async { get; set; }
    return:
      type: System.Boolean
      description: '`true` if asynchronous methods can be used; otherwise, `false`.'
  overload: System.Xml.XmlWriterSettings.Async*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.CheckCharacters
  commentId: P:System.Xml.XmlWriterSettings.CheckCharacters
  id: CheckCharacters
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: CheckCharacters
  nameWithType: XmlWriterSettings.CheckCharacters
  fullName: XmlWriterSettings.CheckCharacters
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).
  remarks: "If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).  \n  \n Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid. These checks are part of conformance checking and are always performed."
  syntax:
    content: public bool CheckCharacters { get; set; }
    return:
      type: System.Boolean
      description: '`true` to do character checking; otherwise, `false`. The default is `true`.'
  overload: System.Xml.XmlWriterSettings.CheckCharacters*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.Clone
  commentId: M:System.Xml.XmlWriterSettings.Clone
  id: Clone
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: Clone()
  nameWithType: XmlWriterSettings.Clone()
  fullName: XmlWriterSettings.Clone()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a copy of the <xref href="System.Xml.XmlWriterSettings"></xref> instance.
  remarks: The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.
  syntax:
    content: public System.Xml.XmlWriterSettings Clone ();
    parameters: []
    return:
      type: System.Xml.XmlWriterSettings
      description: The cloned <xref href="System.Xml.XmlWriterSettings"></xref> object.
  overload: System.Xml.XmlWriterSettings.Clone*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.CloseOutput
  commentId: P:System.Xml.XmlWriterSettings.CloseOutput
  id: CloseOutput
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: CloseOutput
  nameWithType: XmlWriterSettings.CloseOutput
  fullName: XmlWriterSettings.CloseOutput
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value indicating whether the <xref href="System.Xml.XmlWriter"></xref> should also close the underlying stream or <xref href="System.IO.TextWriter"></xref> when the <xref href="System.Xml.XmlWriter.Close"></xref> method is called.
  remarks: "This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.  \n  \n This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored."
  example:
  - "The following example writes an XML fragment to a memory stream.  \n  \n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]"
  syntax:
    content: public bool CloseOutput { get; set; }
    return:
      type: System.Boolean
      description: '`true` to also close the underlying stream or <xref href="System.IO.TextWriter"></xref>; otherwise, `false`. The default is `false`.'
  overload: System.Xml.XmlWriterSettings.CloseOutput*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.ConformanceLevel
  commentId: P:System.Xml.XmlWriterSettings.ConformanceLevel
  id: ConformanceLevel
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: ConformanceLevel
  nameWithType: XmlWriterSettings.ConformanceLevel
  fullName: XmlWriterSettings.ConformanceLevel
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets the level of conformance that the XML writer checks the XML output for.
  remarks: "The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules. The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment. The following table describes the three settings. The default is document-level conformance.  \n  \n|Setting|Description|  \n|-------------|-----------------|  \n|<xref:System.Xml.ConformanceLevel.Document>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.<br /><br /> The document conformance checks include most of the fragment-level checks and also ensure the following:<br /><br /> -   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.<br />-   The XML data has one and only one top-level element node.<br /><br /> The XML writer doesn't parse DTD information that is written. The user is responsible for ensuring that the DTD is well-formed.|  \n|<xref:System.Xml.ConformanceLevel.Fragment>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> This setting accepts XML data that has multiple root elements or text nodes at the top level. This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.<br /><br /> DTD information isn't allowed in document fragments.|  \n|<xref:System.Xml.ConformanceLevel.Auto>|Specifies that the XML writer should determine the level of conformance checking based on the incoming data. This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.<br /><br /> Document conformance checking is applied in the following cases:<br /><br /> -   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.<br />-   If DTD information is written.<br /><br /> Fragment conformance checking is applied if the XML data contains one of these:<br /><br /> -   Text, CDATA, or EntityReference node at the root level.<br />-   More than one element at the root level.<br />-   No element at the root level.<br /><br /> An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.<br /><br /> If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.|  \n  \n If the XML writer detects any information that would violate the specified level of conformance, it throws an exception. In some cases, the XML writer automatically corrects the conformance error. For example, the writer closes an unclosed attribute without throwing an exception. The following table shows how various conformance violations are handled in each setting.  \n  \n|Condition|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  \n|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  \n|DTD information is found.|Not a violation for this setting. However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.|Not considered a violation for this setting.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|A text value appears at the top level (not below an element or attribute node).|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \n|Multiple elements or no elements appear at the top level.|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \n|Top-level item is white space.|Not considered a violation.|Not considered a violation.|Not considered a violation.|  \n|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.|Fixed by XML writer.|Fixed by XML writer.|Fixed by XML writer.|  \n|The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|Top-level item is an attribute.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|Multiple, contiguous text nodes are found.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|  \n|The same namespace prefix is declared twice in an element.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|  \n|<xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|  \n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|  \n|The `xml:space` attribute doesn't contain a valid value.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|An invalid name is encountered.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|The `xml` prefix isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \n|The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|The `xmlns` prefix or local name isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \n|The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|"
  example:
  - "The following example writes an XML fragment to a memory stream.  \n  \n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]"
  syntax:
    content: public System.Xml.ConformanceLevel ConformanceLevel { get; set; }
    return:
      type: System.Xml.ConformanceLevel
      description: One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is <xref href="System.Xml.ConformanceLevel.Document"></xref>.
  overload: System.Xml.XmlWriterSettings.ConformanceLevel*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes
  commentId: P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes
  id: DoNotEscapeUriAttributes
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: DoNotEscapeUriAttributes
  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes
  fullName: XmlWriterSettings.DoNotEscapeUriAttributes
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value that indicates whether the <xref href="System.Xml.XmlWriter"></xref> does not escape URI attributes.
  syntax:
    content: public bool DoNotEscapeUriAttributes { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Xml.XmlWriter"></xref> do not escape URI attributes; otherwise, `false`.'
  overload: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.Encoding
  commentId: P:System.Xml.XmlWriterSettings.Encoding
  id: Encoding
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: Encoding
  nameWithType: XmlWriterSettings.Encoding
  fullName: XmlWriterSettings.Encoding
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets the type of text encoding to use.
  remarks: "The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character. An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.  \n  \n The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name. If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>. For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.  \n  \n If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.  \n  \n In the following example:  \n  \n-   The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.  \n  \n-   The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.  \n  \n-   The output will be `Encoding.Unicode`.  \n  \n```csharp  \nusing (StreamWriter output =  \n    new StreamWriter(new FileStream(\"Xml01.xml\", FileMode.Create), Encoding.Unicode))  \n{  \n    using (XmlWriter xmlWriter =  \n        XmlWriter.Create(output, new XmlWriterSettings()))  \n    {  \n        xmlWriter.WriteStartDocument();  \n        xmlWriter.WriteStartElement(\"Root\");  \n        xmlWriter.WriteEndElement();  \n        xmlWriter.WriteEndDocument();  \n    }  \n}  \n```  \n  \n> [!IMPORTANT]\n>  Do not accept an <xref:System.Text.Encoding> object from an untrusted source."
  example:
  - "The following example writes an XML fragment to a memory stream.  \n  \n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]"
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: The text encoding to use. The default is `Encoding.UTF8`.
  overload: System.Xml.XmlWriterSettings.Encoding*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.Indent
  commentId: P:System.Xml.XmlWriterSettings.Indent
  id: Indent
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: Indent
  nameWithType: XmlWriterSettings.Indent
  fullName: XmlWriterSettings.Indent
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to indent elements.
  remarks: "This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \n  \n The elements are indented as long as the element does not contain mixed content. Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting. The indenting resumes once the mixed content element is closed."
  example:
  - "The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \n  \n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]"
  syntax:
    content: public bool Indent { get; set; }
    return:
      type: System.Boolean
      description: '`true` to write individual elements on new lines and indent; otherwise, `false`. The default is `false`.'
  overload: System.Xml.XmlWriterSettings.Indent*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.IndentChars
  commentId: P:System.Xml.XmlWriterSettings.IndentChars
  id: IndentChars
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: IndentChars
  nameWithType: XmlWriterSettings.IndentChars
  fullName: XmlWriterSettings.IndentChars
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets the character string to use when indenting. This setting is used when the <xref href="System.Xml.XmlWriterSettings.Indent"></xref> property is set to `true`.
  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.
  example:
  - "The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \n  \n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]"
  syntax:
    content: public string IndentChars { get; set; }
    return:
      type: System.String
      description: The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.
  overload: System.Xml.XmlWriterSettings.IndentChars*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value assigned to the <xref href="System.Xml.XmlWriterSettings.IndentChars"></xref> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.NamespaceHandling
  commentId: P:System.Xml.XmlWriterSettings.NamespaceHandling
  id: NamespaceHandling
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: NamespaceHandling
  nameWithType: XmlWriterSettings.NamespaceHandling
  fullName: XmlWriterSettings.NamespaceHandling
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value that indicates whether the <xref href="System.Xml.XmlWriter"></xref> should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.
  syntax:
    content: public System.Xml.NamespaceHandling NamespaceHandling { get; set; }
    return:
      type: System.Xml.NamespaceHandling
      description: The <xref href="System.Xml.NamespaceHandling"></xref> enumeration used to specify whether to remove duplicate namespace declarations in the <xref href="System.Xml.XmlWriter"></xref>.
  overload: System.Xml.XmlWriterSettings.NamespaceHandling*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.NewLineChars
  commentId: P:System.Xml.XmlWriterSettings.NewLineChars
  id: NewLineChars
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: NewLineChars
  nameWithType: XmlWriterSettings.NewLineChars
  fullName: XmlWriterSettings.NewLineChars
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets the character string to use for line breaks.
  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.
  syntax:
    content: public string NewLineChars { get; set; }
    return:
      type: System.String
      description: The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is <code>\r\n</code> (carriage return, new line).
  overload: System.Xml.XmlWriterSettings.NewLineChars*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value assigned to the <xref href="System.Xml.XmlWriterSettings.NewLineChars"></xref> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.NewLineHandling
  commentId: P:System.Xml.XmlWriterSettings.NewLineHandling
  id: NewLineHandling
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: NewLineHandling
  nameWithType: XmlWriterSettings.NewLineHandling
  fullName: XmlWriterSettings.NewLineHandling
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to normalize line breaks in the output.
  remarks: "This setting applies when writing text content or attribute values. Each of the <xref:System.Xml.NewLineHandling> values is described below:  \n  \n-   The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities. This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>. Additional normalization rules apply for attribute values when round tripping since `\\t`, `\\n` and `\\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.  \n  \n-   The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\\r\\n`, which is the new line format used by the Microsoft Windows operating system. This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications. This setting also replaces new lines in attributes with character entities to preserve the characters. This is the default value.  \n  \n-   The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged. This setting is used when you not want any new-line processing. This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)  \n  \n The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting. The tables show the output when writing text content and also when writing an attribute value.  \n  \n `Text Node Value:`  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Entitize|&#D;\\n|\\n|&#D;|\\t|  \n|Replace|\\r\\n|\\r\\n|\\r\\n|\\t|  \n|None|\\r\\n|\\n|\\r|\\t|  \n  \n `Attribute Value:`  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Entitize|&#D;&#A;|&#A;|&#D;|&\\#9;|  \n|Replace|&#D;&#A;|&#A;|&#D;|&\\#9;|  \n|None|\\r\\n|\\n|\\r|\\t|  \n  \n> [!NOTE]\n>  The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction. New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>. This is because character entities are not recognized in CDATA sections, comments or processing instructions. If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.  \n  \n The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input. For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).  \n  \n> [!NOTE]\n>  A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method. These objects always perform line break normalization and full normalization of attributes. The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Text Node Value|\\n|\\n|\\n|\\t|  \n|Attribute Value|single space|single space|single space|single space|"
  syntax:
    content: public System.Xml.NewLineHandling NewLineHandling { get; set; }
    return:
      type: System.Xml.NewLineHandling
      description: One of the <xref href="System.Xml.NewLineHandling"></xref> values. The default is <xref href="System.Xml.NewLineHandling.Replace"></xref>.
  overload: System.Xml.XmlWriterSettings.NewLineHandling*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes
  commentId: P:System.Xml.XmlWriterSettings.NewLineOnAttributes
  id: NewLineOnAttributes
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: NewLineOnAttributes
  nameWithType: XmlWriterSettings.NewLineOnAttributes
  fullName: XmlWriterSettings.NewLineOnAttributes
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to write attributes on a new line.
  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.
  example:
  - "The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.  \n  \n [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]\n [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  \n  \n The sample produces the following output:  \n  \n```  \n<order  \n  orderID=\"367A54\"  \n  date=\"2001-05-03\">  \n  <price>19.95</price>  \n</order>  \n```"
  syntax:
    content: public bool NewLineOnAttributes { get; set; }
    return:
      type: System.Boolean
      description: "`true` to write attributes on individual lines; otherwise, `false`. The default is `false`.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n This setting has no effect when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property value is `false`.  \n  \n</p></block>  \n  \n When <xref href=\"System.Xml.XmlWriterSettings.NewLineOnAttributes\"></xref> is set to `true`, each attribute is pre-pended with a new line and one extra level of indentation."
  overload: System.Xml.XmlWriterSettings.NewLineOnAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration
  commentId: P:System.Xml.XmlWriterSettings.OmitXmlDeclaration
  id: OmitXmlDeclaration
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: OmitXmlDeclaration
  nameWithType: XmlWriterSettings.OmitXmlDeclaration
  fullName: XmlWriterSettings.OmitXmlDeclaration
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to omit an XML declaration.
  remarks: "This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \n  \n If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically  \n  \n The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.  \n  \n The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>. You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration."
  example:
  - "The following example writes an XML fragment to a memory stream.  \n  \n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]"
  syntax:
    content: public bool OmitXmlDeclaration { get; set; }
    return:
      type: System.Boolean
      description: '`true` to omit the XML declaration; otherwise, `false`. The default is `false`, an XML declaration is written.'
  overload: System.Xml.XmlWriterSettings.OmitXmlDeclaration*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.OutputMethod
  commentId: P:System.Xml.XmlWriterSettings.OutputMethod
  id: OutputMethod
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: OutputMethod
  nameWithType: XmlWriterSettings.OutputMethod
  fullName: XmlWriterSettings.OutputMethod
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the method used to serialize the <xref href="System.Xml.XmlWriter"></xref> output.
  remarks: This property specifies the method used to serialize the output. The output can be serialized using the HTML rules, the XML 1.0 rules, and so on. This setting is set by the XSLT processor and is used internally by Visual Studio.
  syntax:
    content: public System.Xml.XmlOutputMethod OutputMethod { get; }
    return:
      type: System.Xml.XmlOutputMethod
      description: One of the <xref href="System.Xml.XmlOutputMethod"></xref> values. The default is <xref href="System.Xml.XmlOutputMethod.Xml"></xref>.
  overload: System.Xml.XmlWriterSettings.OutputMethod*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.Reset
  commentId: M:System.Xml.XmlWriterSettings.Reset
  id: Reset
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: Reset()
  nameWithType: XmlWriterSettings.Reset()
  fullName: XmlWriterSettings.Reset()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Resets the members of the settings class to their default values.
  remarks: "The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\r\\n`.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Xml.XmlWriterSettings.Reset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose
  commentId: P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose
  id: WriteEndDocumentOnClose
  parent: System.Xml.XmlWriterSettings
  langs:
  - csharp
  name: WriteEndDocumentOnClose
  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose
  fullName: XmlWriterSettings.WriteEndDocumentOnClose
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets or sets a value that indicates whether the <xref href="System.Xml.XmlWriter"></xref> will add closing tags to all unclosed element tags when the <xref href="System.Xml.XmlWriter.Close"></xref> method is called.
  remarks: If you set this flag to `false`, the output XML file may not be well-formed.
  syntax:
    content: public bool WriteEndDocumentOnClose { get; set; }
    return:
      type: System.Boolean
      description: '`true` if all unclosed element tags will be closed out; otherwise, `false`. The default value is `true`.'
  overload: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Xml.XmlWriterSettings.#ctor
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: XmlWriterSettings()
  nameWithType: XmlWriterSettings.XmlWriterSettings()
  fullName: XmlWriterSettings.XmlWriterSettings()
- uid: System.Xml.XmlWriterSettings.Async
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Async
  nameWithType: XmlWriterSettings.Async
  fullName: XmlWriterSettings.Async
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlWriterSettings.CheckCharacters
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: CheckCharacters
  nameWithType: XmlWriterSettings.CheckCharacters
  fullName: XmlWriterSettings.CheckCharacters
- uid: System.Xml.XmlWriterSettings.Clone
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Clone()
  nameWithType: XmlWriterSettings.Clone()
  fullName: XmlWriterSettings.Clone()
- uid: System.Xml.XmlWriterSettings
  parent: System.Xml
  isExternal: false
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings
  fullName: System.Xml.XmlWriterSettings
- uid: System.Xml.XmlWriterSettings.CloseOutput
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: CloseOutput
  nameWithType: XmlWriterSettings.CloseOutput
  fullName: XmlWriterSettings.CloseOutput
- uid: System.Xml.XmlWriterSettings.ConformanceLevel
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: ConformanceLevel
  nameWithType: XmlWriterSettings.ConformanceLevel
  fullName: XmlWriterSettings.ConformanceLevel
- uid: System.Xml.ConformanceLevel
  parent: System.Xml
  isExternal: false
  name: ConformanceLevel
  nameWithType: ConformanceLevel
  fullName: System.Xml.ConformanceLevel
- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: DoNotEscapeUriAttributes
  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes
  fullName: XmlWriterSettings.DoNotEscapeUriAttributes
- uid: System.Xml.XmlWriterSettings.Encoding
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Encoding
  nameWithType: XmlWriterSettings.Encoding
  fullName: XmlWriterSettings.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Xml.XmlWriterSettings.Indent
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Indent
  nameWithType: XmlWriterSettings.Indent
  fullName: XmlWriterSettings.Indent
- uid: System.Xml.XmlWriterSettings.IndentChars
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: IndentChars
  nameWithType: XmlWriterSettings.IndentChars
  fullName: XmlWriterSettings.IndentChars
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlWriterSettings.NamespaceHandling
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NamespaceHandling
  nameWithType: XmlWriterSettings.NamespaceHandling
  fullName: XmlWriterSettings.NamespaceHandling
- uid: System.Xml.NamespaceHandling
  parent: System.Xml
  isExternal: false
  name: NamespaceHandling
  nameWithType: NamespaceHandling
  fullName: System.Xml.NamespaceHandling
- uid: System.Xml.XmlWriterSettings.NewLineChars
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineChars
  nameWithType: XmlWriterSettings.NewLineChars
  fullName: XmlWriterSettings.NewLineChars
- uid: System.Xml.XmlWriterSettings.NewLineHandling
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineHandling
  nameWithType: XmlWriterSettings.NewLineHandling
  fullName: XmlWriterSettings.NewLineHandling
- uid: System.Xml.NewLineHandling
  parent: System.Xml
  isExternal: false
  name: NewLineHandling
  nameWithType: NewLineHandling
  fullName: System.Xml.NewLineHandling
- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineOnAttributes
  nameWithType: XmlWriterSettings.NewLineOnAttributes
  fullName: XmlWriterSettings.NewLineOnAttributes
- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: OmitXmlDeclaration
  nameWithType: XmlWriterSettings.OmitXmlDeclaration
  fullName: XmlWriterSettings.OmitXmlDeclaration
- uid: System.Xml.XmlWriterSettings.OutputMethod
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: OutputMethod
  nameWithType: XmlWriterSettings.OutputMethod
  fullName: XmlWriterSettings.OutputMethod
- uid: System.Xml.XmlOutputMethod
  parent: System.Xml
  isExternal: false
  name: XmlOutputMethod
  nameWithType: XmlOutputMethod
  fullName: System.Xml.XmlOutputMethod
- uid: System.Xml.XmlWriterSettings.Reset
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Reset()
  nameWithType: XmlWriterSettings.Reset()
  fullName: XmlWriterSettings.Reset()
- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: WriteEndDocumentOnClose
  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose
  fullName: XmlWriterSettings.WriteEndDocumentOnClose
- uid: System.Xml.XmlWriterSettings.#ctor*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings.XmlWriterSettings
  fullName: XmlWriterSettings.XmlWriterSettings
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.Async*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Async
  nameWithType: XmlWriterSettings.Async
  fullName: XmlWriterSettings.Async
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.CheckCharacters*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: CheckCharacters
  nameWithType: XmlWriterSettings.CheckCharacters
  fullName: XmlWriterSettings.CheckCharacters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.Clone*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Clone
  nameWithType: XmlWriterSettings.Clone
  fullName: XmlWriterSettings.Clone
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.CloseOutput*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: CloseOutput
  nameWithType: XmlWriterSettings.CloseOutput
  fullName: XmlWriterSettings.CloseOutput
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.ConformanceLevel*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: ConformanceLevel
  nameWithType: XmlWriterSettings.ConformanceLevel
  fullName: XmlWriterSettings.ConformanceLevel
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: DoNotEscapeUriAttributes
  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes
  fullName: XmlWriterSettings.DoNotEscapeUriAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.Encoding*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Encoding
  nameWithType: XmlWriterSettings.Encoding
  fullName: XmlWriterSettings.Encoding
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.Indent*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Indent
  nameWithType: XmlWriterSettings.Indent
  fullName: XmlWriterSettings.Indent
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.IndentChars*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: IndentChars
  nameWithType: XmlWriterSettings.IndentChars
  fullName: XmlWriterSettings.IndentChars
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.NamespaceHandling*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NamespaceHandling
  nameWithType: XmlWriterSettings.NamespaceHandling
  fullName: XmlWriterSettings.NamespaceHandling
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.NewLineChars*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineChars
  nameWithType: XmlWriterSettings.NewLineChars
  fullName: XmlWriterSettings.NewLineChars
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.NewLineHandling*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineHandling
  nameWithType: XmlWriterSettings.NewLineHandling
  fullName: XmlWriterSettings.NewLineHandling
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: NewLineOnAttributes
  nameWithType: XmlWriterSettings.NewLineOnAttributes
  fullName: XmlWriterSettings.NewLineOnAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: OmitXmlDeclaration
  nameWithType: XmlWriterSettings.OmitXmlDeclaration
  fullName: XmlWriterSettings.OmitXmlDeclaration
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.OutputMethod*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: OutputMethod
  nameWithType: XmlWriterSettings.OutputMethod
  fullName: XmlWriterSettings.OutputMethod
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.Reset*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: Reset
  nameWithType: XmlWriterSettings.Reset
  fullName: XmlWriterSettings.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose*
  parent: System.Xml.XmlWriterSettings
  isExternal: false
  name: WriteEndDocumentOnClose
  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose
  fullName: XmlWriterSettings.WriteEndDocumentOnClose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
