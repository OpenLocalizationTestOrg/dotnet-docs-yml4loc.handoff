{"nodes":[{"content":"Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemInserted\"></xref> event.","nodes":[{"pos":[0,97],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView.ItemInserted\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemInserted\"></xref> event."}],"pos":[896,994],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event when an Insert button (a button with its `CommandName` property set to \"Insert\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.FormView> control inserts the record. This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an insert operation, whenever this event occurs.  \n  \n A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property. If you need to access the values of the inserted record, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property.  \n  \n By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property after an insert operation. If an exception occurs during the insert operation, you can keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to `true`.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> constructor.","nodes":[{"pos":[0,486],"content":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event when an Insert button (a button with its `CommandName` property set to \"Insert\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.FormView> control inserts the record. This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an insert operation, whenever this event occurs.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control raises the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.ItemInserted&gt;</ph> event when an Insert button (a button with its <ph id=\"ph3\">`CommandName`</ph> property set to \"Insert\") within the control is clicked, but after the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control inserts the record.","pos":[0,321],"source":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event when an Insert button (a button with its `CommandName` property set to \"Insert\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.FormView> control inserts the record."},{"content":"This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an insert operation, whenever this event occurs.","pos":[322,486]}]},{"pos":[493,1336],"content":"A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property. If you need to access the values of the inserted record, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property.","nodes":[{"content":"A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property. If you need to access the values of the inserted record, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property.","pos":[0,843],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs&gt;</ph> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred.","pos":[0,213],"source":"A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred."},{"content":"To determine the number of records affected by the insert operation, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A&gt;</ph> property.","pos":[214,375],"source":" To determine the number of records affected by the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A&gt;</ph> property to determine whether any exceptions occurred.","pos":[376,510],"source":" Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether any exceptions occurred."},{"content":"You can also indicate whether the exception was handled in the event-handling method by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A&gt;</ph> property.","pos":[511,699],"source":" You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property."},{"content":"If you need to access the values of the inserted record, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A&gt;</ph> property.","pos":[700,843],"source":" If you need to access the values of the inserted record, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property."}]}]},{"pos":[1343,1786],"content":"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property after an insert operation. If an exception occurs during the insert operation, you can keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to `true`.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control returns to the mode specified by the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.DefaultMode%2A&gt;</ph> property after an insert operation.","pos":[0,195],"source":"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property after an insert operation."},{"content":"If an exception occurs during the insert operation, you can keep the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control in insert mode by setting the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A&gt;</ph> property to <ph id=\"ph3\">`true`</ph>.","pos":[196,443],"source":" If an exception occurs during the insert operation, you can keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to `true`."}]},{"pos":[1793,1935],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[1942,2158],"content":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> constructor.","nodes":[{"content":"For a list of initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewDeletedEventArgs&gt;</ph> class, see the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A&gt;</ph> constructor.","pos":[0,216],"source":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> constructor."}]}],"pos":[1005,3176],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewInsertedEventArgs\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormViewInsertedEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewInsertedEventArgs\"></xref> class."}],"pos":[5877,5991],"yaml":true},{"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> class.  \n  \n The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|  \n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter.|  \n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|  \n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Initialized to `false`.|  \n  \n> [!NOTE]\n>  This constructor is used primarily by control developers when raising events.","nodes":[{"pos":[0,122],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> class.","nodes":[{"content":"Use this constructor to initialize a new instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs&gt;</ph> class.","pos":[0,122],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> class."}]},{"pos":[129,261],"content":"The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs&gt;</ph>.","pos":[0,132],"source":"The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>."}]},{"pos":[268,276],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[277,290],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[334,408],"content":"<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>","nodes":[]},{"pos":[409,451],"content":"The value of the <ph id=\"ph1\">`affectedRows`</ph> parameter.","source":"The value of the `affectedRows` parameter."},{"pos":[456,527],"content":"<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>","nodes":[]},{"pos":[528,619],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph> object contained in the <ph id=\"ph2\">`e`</ph> parameter.","source":"The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter."},{"pos":[624,702],"content":"<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>","nodes":[]},{"pos":[703,726],"content":"Initialized to <ph id=\"ph1\">`false`</ph>.","source":"Initialized to `false`."},{"pos":[731,809],"content":"<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>","nodes":[]},{"pos":[810,833],"content":"Initialized to <ph id=\"ph1\">`false`</ph>.","source":"Initialized to `false`."},{"pos":[842,930],"content":"[!NOTE]\n This constructor is used primarily by control developers when raising events.","leadings":["","> "],"nodes":[{"content":"This constructor is used primarily by control developers when raising events.","pos":[9,86]}]}],"pos":[6002,6947],"yaml":true,"extradata":"MT"},{"content":"The number of rows affected by the insert operation.","nodes":[{"pos":[0,52],"content":"The number of rows affected by the insert operation.","nodes":[{"content":"The number of rows affected by the insert operation.","pos":[0,52]}]}],"pos":[7119,7172],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> that represents the exception raised when the insert operation was performed. If no exception was raised, use `null` for this parameter.","nodes":[{"pos":[0,177],"content":"An <xref href=\"System.Exception\"></xref> that represents the exception raised when the insert operation was performed. If no exception was raised, use `null` for this parameter.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the exception raised when the insert operation was performed.","pos":[0,118],"source":"An <xref href=\"System.Exception\"></xref> that represents the exception raised when the insert operation was performed."},{"content":"If no exception was raised, use <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[119,177],"source":" If no exception was raised, use `null` for this parameter."}]}],"pos":[7232,7410],"yaml":true},{"content":"Gets the number of rows affected by the insert operation.","nodes":[{"pos":[0,57],"content":"Gets the number of rows affected by the insert operation.","nodes":[{"content":"Gets the number of rows affected by the insert operation.","pos":[0,57]}]}],"pos":[8506,8564],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to determine the number of records affected by the insert operation. This property is commonly used to verify that the correct number of records was inserted in the following situations:  \n  \n-   Verify that only a single record was inserted. Sometimes an improperly written insert statement can insert multiple records.  \n  \n-   Verify that a record was inserted when an error occurs during the insert operation that does not raise an exception.  \n  \n-   Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, has its <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property set to the `ConflictOptions.CompareAllValues` enumeration value. Under this setting, a record that has the same key value as a record by another user concurrently might not be inserted.","nodes":[{"pos":[0,278],"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to determine the number of records affected by the insert operation. This property is commonly used to verify that the correct number of records was inserted in the following situations:","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to determine the number of records affected by the insert operation. This property is commonly used to verify that the correct number of records was inserted in the following situations:","pos":[0,278],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A&gt;</ph> property to determine the number of records affected by the insert operation.","pos":[0,160],"source":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to determine the number of records affected by the insert operation."},{"content":"This property is commonly used to verify that the correct number of records was inserted in the following situations:","pos":[161,278]}]}]},{"pos":[288,412],"content":"Verify that only a single record was inserted. Sometimes an improperly written insert statement can insert multiple records.","nodes":[{"content":"Verify that only a single record was inserted. Sometimes an improperly written insert statement can insert multiple records.","pos":[0,124],"nodes":[{"content":"Verify that only a single record was inserted.","pos":[0,46]},{"content":"Sometimes an improperly written insert statement can insert multiple records.","pos":[47,124]}]}]},{"pos":[422,538],"content":"Verify that a record was inserted when an error occurs during the insert operation that does not raise an exception.","nodes":[{"content":"Verify that a record was inserted when an error occurs during the insert operation that does not raise an exception.","pos":[0,116]}]},{"pos":[548,1061],"content":"Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, has its <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property set to the `ConflictOptions.CompareAllValues` enumeration value. Under this setting, a record that has the same key value as a record by another user concurrently might not be inserted.","nodes":[{"content":"Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, has its <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property set to the <ph id=\"ph4\">`ConflictOptions.CompareAllValues`</ph> enumeration value.","pos":[0,392],"source":"Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, has its <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property set to the `ConflictOptions.CompareAllValues` enumeration value."},{"content":"Under this setting, a record that has the same key value as a record by another user concurrently might not be inserted.","pos":[393,513]}]}],"pos":[8575,9645],"yaml":true,"extradata":"MT"},{"content":"The number of rows affected by the insert operation.","nodes":[{"pos":[0,52],"content":"The number of rows affected by the insert operation.","nodes":[{"content":"The number of rows affected by the insert operation.","pos":[0,52]}]}],"pos":[10375,10428],"yaml":true},{"content":"Gets the exception (if any) that was raised during the insert operation.","nodes":[{"pos":[0,72],"content":"Gets the exception (if any) that was raised during the insert operation.","nodes":[{"content":"Gets the exception (if any) that was raised during the insert operation.","pos":[0,72]}]}],"pos":[11513,11586],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine the exception (if any) that was raised during the insert operation. If no exceptions were raised, this property returns `null`.  \n  \n> [!NOTE]\n>  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception.","nodes":[{"pos":[0,229],"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine the exception (if any) that was raised during the insert operation. If no exceptions were raised, this property returns `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A&gt;</ph> property to determine the exception (if any) that was raised during the insert operation.","pos":[0,169],"source":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine the exception (if any) that was raised during the insert operation."},{"content":"If no exceptions were raised, this property returns <ph id=\"ph1\">`null`</ph>.","pos":[170,229],"source":" If no exceptions were raised, this property returns `null`."}]},{"pos":[237,543],"content":"[!NOTE]\n If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception.","leadings":["","> "],"nodes":[{"content":"If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>; otherwise, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control re-throws the exception.","pos":[9,304],"source":" If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception."}]}],"pos":[11597,12146],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Exception\"></xref> that represents the exception that was raised during the insert operation.","nodes":[{"pos":[0,115],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the exception that was raised during the insert operation.","source":"An <xref href=\"System.Exception\"></xref> that represents the exception that was raised during the insert operation."}],"pos":[12887,13003],"yaml":true},{"content":"Gets or sets a value indicating whether an exception that was raised during the insert operation was handled in the event handler.","nodes":[{"pos":[0,130],"content":"Gets or sets a value indicating whether an exception that was raised during the insert operation was handled in the event handler.","nodes":[{"content":"Gets or sets a value indicating whether an exception that was raised during the insert operation was handled in the event handler.","pos":[0,130]}]}],"pos":[14127,14258],"yaml":true},{"content":"When an exception is raised during the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to indicate whether the exception was handled in the event handler. When this property is set to `true`, the exception is considered handled and is not re-thrown. If this property is set to `false`, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property.","nodes":[{"pos":[0,561],"content":"When an exception is raised during the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to indicate whether the exception was handled in the event handler. When this property is set to `true`, the exception is considered handled and is not re-thrown. If this property is set to `false`, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property.","nodes":[{"content":"When an exception is raised during the insert operation, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A&gt;</ph> property to indicate whether the exception was handled in the event handler.","pos":[0,220],"source":"When an exception is raised during the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to indicate whether the exception was handled in the event handler."},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the exception is considered handled and is not re-thrown.","pos":[221,315],"source":" When this property is set to `true`, the exception is considered handled and is not re-thrown."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control re-throws the exception.","pos":[316,430],"source":" If this property is set to `false`, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception."},{"content":"To determine which exception was raised, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A&gt;</ph> property.","pos":[431,561],"source":" To determine which exception was raised, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property."}]}],"pos":[14269,14831],"yaml":true,"extradata":"MT"},{"content":"`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,101],"content":"`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the exception was handled in the event handler; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,77],"source":"`true` if the exception was handled in the event handler; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[78,101],"source":" The default is `false`."}]}],"pos":[15576,15680],"yaml":true},{"content":"Gets or sets a value indicating whether the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control should remain in insert mode after an insert operation.","nodes":[{"pos":[0,163],"content":"Gets or sets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView\"&gt;&lt;/xref&gt;</ph> control should remain in insert mode after an insert operation.","source":"Gets or sets a value indicating whether the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control should remain in insert mode after an insert operation."}],"pos":[16811,16975],"yaml":true},{"content":"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to specify whether the <xref:System.Web.UI.WebControls.FormView> control should remain in insert mode after an insert operation. To keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode, set this property to `true`.  \n  \n> [!NOTE]\n>  This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would. If the <xref:System.Web.UI.WebControls.FormView> control needs to remain in insert mode by default, set the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property instead.","nodes":[{"pos":[0,501],"content":"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to specify whether the <xref:System.Web.UI.WebControls.FormView> control should remain in insert mode after an insert operation. To keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode, set this property to `true`.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control returns to the mode specified by the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.DefaultMode%2A&gt;</ph> property.","pos":[0,169],"source":"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A&gt;</ph> property to specify whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control should remain in insert mode after an insert operation.","pos":[170,394],"source":" Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to specify whether the <xref:System.Web.UI.WebControls.FormView> control should remain in insert mode after an insert operation."},{"content":"To keep the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control in insert mode, set this property to <ph id=\"ph2\">`true`</ph>.","pos":[395,501],"source":" To keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode, set this property to `true`."}]},{"pos":[509,868],"content":"[!NOTE]\n This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would. If the <xref:System.Web.UI.WebControls.FormView> control needs to remain in insert mode by default, set the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property instead.","leadings":["","> "],"nodes":[{"content":" This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would. If the <xref:System.Web.UI.WebControls.FormView> control needs to remain in insert mode by default, set the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property instead.","pos":[8,357],"nodes":[{"content":"This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would.","pos":[1,166]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control needs to remain in insert mode by default, set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.DefaultMode%2A&gt;</ph> property instead.","pos":[167,349],"source":" If the <xref:System.Web.UI.WebControls.FormView> control needs to remain in insert mode by default, set the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property instead."}]}]}],"pos":[16986,17860],"yaml":true,"extradata":"MT"},{"content":"`true` to remain in insert mode after an insert operation; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,102],"content":"`true` to remain in insert mode after an insert operation; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to remain in insert mode after an insert operation; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,78],"source":"`true` to remain in insert mode after an insert operation; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[79,102],"source":" The default is `false`."}]}],"pos":[18670,18775],"yaml":true},{"content":"Gets a dictionary that contains the field name/value pairs for the inserted record.","nodes":[{"pos":[0,83],"content":"Gets a dictionary that contains the field name/value pairs for the inserted record.","nodes":[{"content":"Gets a dictionary that contains the field name/value pairs for the inserted record.","pos":[0,83]}]}],"pos":[19846,19930],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property to access the values of the fields for the inserted record. For example, you can use these values to keep a log of inserted records.  \n  \n The <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the inserted record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. The advantage in using the indexer is that it returns field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","nodes":[{"pos":[0,218],"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property to access the values of the fields for the inserted record. For example, you can use these values to keep a log of inserted records.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property to access the values of the fields for the inserted record. For example, you can use these values to keep a log of inserted records.","pos":[0,218],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A&gt;</ph> property to access the values of the fields for the inserted record.","pos":[0,145],"source":"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property to access the values of the fields for the inserted record."},{"content":"For example, you can use these values to keep a log of inserted records.","pos":[146,218]}]}]},{"pos":[225,1005],"content":"The <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the inserted record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the inserted record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","pos":[0,780],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A&gt;</ph> property returns an <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object that implements the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,268],"source":"The <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object contains <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the inserted record.","pos":[269,469],"source":" The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the inserted record."},{"content":"To access the field names, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object.","pos":[470,648],"source":" To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object."},{"content":"Similarly, you can access the field values by using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt;</ph> property.","pos":[649,780],"source":" Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property."}]}]},{"pos":[1013,1400],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. The advantage in using the indexer is that it returns field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","leadings":["","> "],"nodes":[{"content":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. The advantage in using the indexer is that it returns field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","pos":[8,385],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object to access the field values directly.","pos":[1,151],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly."},{"content":"The advantage in using the indexer is that it returns field values directly.","pos":[152,228]},{"content":"Data source controls that rely on the field order (such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>) can access field values only by index.","pos":[229,377],"source":" Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index."}]}]}],"pos":[19941,21349],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> object that contains a dictionary of key field name/value pairs for the inserted record.","nodes":[{"pos":[0,162],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;&lt;/xref&gt;</ph> object that contains a dictionary of key field name/value pairs for the inserted record.","source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> object that contains a dictionary of key field name/value pairs for the inserted record."}],"pos":[22148,22311],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  commentId: T:System.Web.UI.WebControls.FormViewInsertedEventArgs\n  id: FormViewInsertedEventArgs\n  children:\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode\n  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values\n  langs:\n  - csharp\n  name: FormViewInsertedEventArgs\n  nameWithType: FormViewInsertedEventArgs\n  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemInserted\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event when an Insert button (a button with its `CommandName` property set to \\\"Insert\\\") within the control is clicked, but after the <xref:System.Web.UI.WebControls.FormView> control inserts the record. This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an insert operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property. If you need to access the values of the inserted record, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property.  \\n  \\n By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property after an insert operation. If an exception occurs during the insert operation, you can keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode by setting the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> constructor.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: 'public class FormViewInsertedEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)\n  commentId: M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)\n  id: '#ctor(System.Int32,System.Exception)'\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: FormViewInsertedEventArgs(Int32, Exception)\n  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32, Exception)\n  fullName: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32, Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewInsertedEventArgs\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> class.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|  \\n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object contained in the `e` parameter.|  \\n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|  \\n|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Initialized to `false`.|  \\n  \\n> [!NOTE]\\n>  This constructor is used primarily by control developers when raising events.\"\n  syntax:\n    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);\n    parameters:\n    - id: affectedRows\n      type: System.Int32\n      description: The number of rows affected by the insert operation.\n    - id: e\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the exception raised when the insert operation was performed. If no exception was raised, use `null` for this parameter.\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows\n  commentId: P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows\n  id: AffectedRows\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: AffectedRows\n  nameWithType: FormViewInsertedEventArgs.AffectedRows\n  fullName: FormViewInsertedEventArgs.AffectedRows\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the number of rows affected by the insert operation.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to determine the number of records affected by the insert operation. This property is commonly used to verify that the correct number of records was inserted in the following situations:  \\n  \\n-   Verify that only a single record was inserted. Sometimes an improperly written insert statement can insert multiple records.  \\n  \\n-   Verify that a record was inserted when an error occurs during the insert operation that does not raise an exception.  \\n  \\n-   Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, has its <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property set to the `ConflictOptions.CompareAllValues` enumeration value. Under this setting, a record that has the same key value as a record by another user concurrently might not be inserted.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> property to verify that a record was inserted during the insert operation.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public int AffectedRows { get; }\n    return:\n      type: System.Int32\n      description: The number of rows affected by the insert operation.\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception\n  commentId: P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception\n  id: Exception\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: FormViewInsertedEventArgs.Exception\n  fullName: FormViewInsertedEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the exception (if any) that was raised during the insert operation.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine the exception (if any) that was raised during the insert operation. If no exceptions were raised, this property returns `null`.  \\n  \\n> [!NOTE]\\n>  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property to determine whether an exception was raised during an insert operation.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the exception that was raised during the insert operation.\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled\n  commentId: P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled\n  id: ExceptionHandled\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: ExceptionHandled\n  nameWithType: FormViewInsertedEventArgs.ExceptionHandled\n  fullName: FormViewInsertedEventArgs.ExceptionHandled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether an exception that was raised during the insert operation was handled in the event handler.\n  remarks: When an exception is raised during the insert operation, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to indicate whether the exception was handled in the event handler. When this property is set to `true`, the exception is considered handled and is not re-thrown. If this property is set to `false`, the <xref:System.Web.UI.WebControls.FormView> control re-throws the exception. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> property.\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> property to indicate that the exception was handled in the event handler.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public bool ExceptionHandled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode\n  commentId: P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode\n  id: KeepInInsertMode\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: KeepInInsertMode\n  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode\n  fullName: FormViewInsertedEventArgs.KeepInInsertMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control should remain in insert mode after an insert operation.\n  remarks: \"By default, the <xref:System.Web.UI.WebControls.FormView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property. Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to specify whether the <xref:System.Web.UI.WebControls.FormView> control should remain in insert mode after an insert operation. To keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode, set this property to `true`.  \\n  \\n> [!NOTE]\\n>  This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would. If the <xref:System.Web.UI.WebControls.FormView> control needs to remain in insert mode by default, set the <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> property instead.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public bool KeepInInsertMode { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to remain in insert mode after an insert operation; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values\n  commentId: P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values\n  id: Values\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  langs:\n  - csharp\n  name: Values\n  nameWithType: FormViewInsertedEventArgs.Values\n  fullName: FormViewInsertedEventArgs.Values\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the field name/value pairs for the inserted record.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property to access the values of the fields for the inserted record. For example, you can use these values to keep a log of inserted records.  \\n  \\n The <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the inserted record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. The advantage in using the indexer is that it returns field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.\"\n  example:\n  - \"The following example demonstrates how to iterate through the items in the <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> collection.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> object that contains a dictionary of key field name/value pairs for the inserted record.\n  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: FormViewInsertedEventArgs(Int32, Exception)\n  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32, Exception)\n  fullName: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32, Exception)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: FormViewInsertedEventArgs.AffectedRows\n  fullName: FormViewInsertedEventArgs.AffectedRows\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: FormViewInsertedEventArgs.Exception\n  fullName: FormViewInsertedEventArgs.Exception\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: FormViewInsertedEventArgs.ExceptionHandled\n  fullName: FormViewInsertedEventArgs.ExceptionHandled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: KeepInInsertMode\n  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode\n  fullName: FormViewInsertedEventArgs.KeepInInsertMode\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: Values\n  nameWithType: FormViewInsertedEventArgs.Values\n  fullName: FormViewInsertedEventArgs.Values\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: FormViewInsertedEventArgs\n  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs\n  fullName: FormViewInsertedEventArgs.FormViewInsertedEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: FormViewInsertedEventArgs.AffectedRows\n  fullName: FormViewInsertedEventArgs.AffectedRows\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: FormViewInsertedEventArgs.Exception\n  fullName: FormViewInsertedEventArgs.Exception\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: FormViewInsertedEventArgs.ExceptionHandled\n  fullName: FormViewInsertedEventArgs.ExceptionHandled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: KeepInInsertMode\n  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode\n  fullName: FormViewInsertedEventArgs.KeepInInsertMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*\n  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs\n  isExternal: false\n  name: Values\n  nameWithType: FormViewInsertedEventArgs.Values\n  fullName: FormViewInsertedEventArgs.Values\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewInsertedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}