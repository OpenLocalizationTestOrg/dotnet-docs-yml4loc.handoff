{"nodes":[{"content":"Provides additional functionalities regarding activity arguments.","nodes":[{"pos":[0,65],"content":"Provides additional functionalities regarding activity arguments.","nodes":[{"content":"Provides additional functionalities regarding activity arguments.","pos":[0,65]}]}],"pos":[752,818],"yaml":true},{"content":"Registers with an activity type a function to generate a list of ArgumentAccessors.","nodes":[{"pos":[0,83],"content":"Registers with an activity type a function to generate a list of ArgumentAccessors.","nodes":[{"content":"Registers with an activity type a function to generate a list of ArgumentAccessors.","pos":[0,83]}]}],"pos":[2984,3068],"yaml":true},{"content":"The activity type.","nodes":[{"pos":[0,18],"content":"The activity type.","nodes":[{"content":"The activity type.","pos":[0,18]}]}],"pos":[3389,3408],"yaml":true},{"content":"A function which takes in an activity instance (of type activityType) and returns a list of ArgumentAccessors.","nodes":[{"pos":[0,110],"content":"A function which takes in an activity instance (of type activityType) and returns a list of ArgumentAccessors.","nodes":[{"content":"A function which takes in an activity instance (of type activityType) and returns a list of ArgumentAccessors.","pos":[0,110]}]}],"pos":[3604,3715],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  commentId: T:System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  id: ActivityArgumentHelper\n  children:\n  - System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator(System.Type,System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}})\n  langs:\n  - csharp\n  name: ActivityArgumentHelper\n  nameWithType: ActivityArgumentHelper\n  fullName: System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Provides additional functionalities regarding activity arguments.\n  syntax:\n    content: public static class ActivityArgumentHelper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/ActivityArgumentHelper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator(System.Type,System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}})\n  commentId: M:System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator(System.Type,System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}})\n  id: RegisterAccessorsGenerator(System.Type,System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}})\n  parent: System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  langs:\n  - csharp\n  name: RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n  nameWithType: ActivityArgumentHelper.RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n  fullName: ActivityArgumentHelper.RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Registers with an activity type a function to generate a list of ArgumentAccessors.\n  syntax:\n    content: public static void RegisterAccessorsGenerator (Type activityType, Func<System.Activities.Activity,System.Collections.Generic.IEnumerable<System.Activities.Presentation.ArgumentAccessor>> argumentAccessorsGenerator);\n    parameters:\n    - id: activityType\n      type: System.Type\n      description: The activity type.\n    - id: argumentAccessorsGenerator\n      type: System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}}\n      description: A function which takes in an activity instance (of type activityType) and returns a list of ArgumentAccessors.\n  overload: System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/ActivityArgumentHelper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator(System.Type,System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}})\n  parent: System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  isExternal: false\n  name: RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n  nameWithType: ActivityArgumentHelper.RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n  fullName: ActivityArgumentHelper.RegisterAccessorsGenerator(Type, Func<Activity,IEnumerable<ArgumentAccessor>>)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.Activity\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Activities.Presentation.ArgumentAccessor\n  name: ArgumentAccessor\n  nameWithType: ArgumentAccessor\n  fullName: System.Activities.Presentation.ArgumentAccessor\n- uid: System.Func{System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Presentation.ArgumentAccessor}}\n  parent: System\n  isExternal: false\n  name: Func<Activity,IEnumerable<ArgumentAccessor>>\n  nameWithType: Func<Activity,IEnumerable<ArgumentAccessor>>\n  fullName: System.Func<System.Activities.Activity,System.Collections.Generic.IEnumerable<System.Activities.Presentation.ArgumentAccessor>>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.ArgumentAccessor\n    name: ArgumentAccessor\n    nameWithType: ArgumentAccessor\n    fullName: System.Activities.Presentation.ArgumentAccessor\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Metadata.ActivityArgumentHelper.RegisterAccessorsGenerator*\n  parent: System.Activities.Presentation.Metadata.ActivityArgumentHelper\n  isExternal: false\n  name: RegisterAccessorsGenerator\n  nameWithType: ActivityArgumentHelper.RegisterAccessorsGenerator\n  fullName: ActivityArgumentHelper.RegisterAccessorsGenerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/ActivityArgumentHelper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}