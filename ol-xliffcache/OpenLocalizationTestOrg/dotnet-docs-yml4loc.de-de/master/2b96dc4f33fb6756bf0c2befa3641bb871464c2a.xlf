<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b96dc4f33fb6756bf0c2befa3641bb871464c2a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.FileDialog.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">216a0569b7289a8d559a8b1c8368f9ca8db982a6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1062d550a715d0adf4bd42c75d5a088779412708</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays a dialog box from which the user can select a file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> is an abstract class that contains common behavior for the <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not intended to be used directly but contains common behavior for those two classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a dialog box to select or save a file, use <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use classes derived from <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>, avoid using string literals containing absolute paths.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, dynamically obtain the path using one or more of the techniques described in the following table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable users to select a folder instead of a file, use the <ph id="ph1">&lt;xref:System.Windows.Forms.FolderBrowserDialog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the techniques for creating paths dynamically.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Path or program category</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Class and members to use</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Environment?displayProperty=fullName&gt;</ph> class is the most complete source for these, either through its static methods, such as <ph id="ph2">&lt;xref:System.Environment.SystemDirectory%2A&gt;</ph>, or through the <ph id="ph3">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method, using one of the <ph id="ph4">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumerated values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Paths related to the current application</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has static members to obtain certain paths, such as <ph id="ph2">&lt;xref:System.Windows.Forms.Application.StartupPath%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Application.ExecutablePath%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Path.GetTempPath%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.IO.Path?displayProperty=fullName&gt;</ph> returns the path of the temporary folder.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.IO.Directory?displayProperty=fullName&gt;</ph> class returns the application's current executing directory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.DriveInfo.RootDirectory%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IO.DriveInfo&gt;</ph> class represents the specified drive's root directory.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Paths stored as application settings</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access the corresponding applications settings property of the wrapper class derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Application Settings for Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registry storage</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some applications store directory information in the registry.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> properties that resolve to a <ph id="ph4">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>ClickOnce applications</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For ClickOnce applications, use <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class members such as <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>, which will return a pointer to the ClickOnce data directory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>International applications</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For international applications, retrieve the relative path portion from a string resource in your application by using the <ph id="ph1">&lt;xref:System.Resources.ResourceReader?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about globalization and localization, see the topic <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that a full path may be built up using one or more of the described techniques.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Path?displayProperty=fullName&gt;</ph> class contains static members to assist in manipulating absolute and relative path strings, whereas the <ph id="ph2">&lt;xref:System.IO.File?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Directory?displayProperty=fullName&gt;</ph> classes have static members that actually manipulate files and directories, respectively.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user of your application changes the folder in the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>, then the current working directory for your application is set to the location specified in the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this, set the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The extension added to a file name depends on the currently selected file filter and the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the dialog box adds the first extension from the current file filter that matches an existing file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no files match the current file filter, the dialog box adds the extension specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the dialog box adds the first valid file name extension from the current file filter.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box adds an extension to a file name if the user omits the extension; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph> instance should automatically upgrade appearance and behavior when running on <ph id="ph2">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class will have a <ph id="ph3">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>-style appearance and behavior on <ph id="ph4">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>, this property does not have any effect.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph> instance should automatically upgrade appearance and behavior when running on <ph id="ph3">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`true`</ph> for an inheriting <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id="ph3">`false`</ph> for an inheriting <ph id="ph4">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the custom places collection for this <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>, this property does not have any effect.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The custom places collection for this <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets the default file name extension.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user of your application specifies a file name without an extension, the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> appends an extension to the file name.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The extension that is used is determined by the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a filter is selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> and the filter specifies an extension, then that extension is used.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the filter selected uses a wildcard in place of the extension, then the extension specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property is used.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default file name extension.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The returned string does not include the period.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box returns the location of the file referenced by the shortcut; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Owns the <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog.FileOk"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets a string containing the file name selected in the file dialog box.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name includes both the file path and the extension.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no files are selected, this method returns an empty string ("").</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used from the <ph id="ph1">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> class, this property represents the file being saved; when used from the <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> class, it represents the file being opened.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be the name of one selected file.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FileNames%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The file name selected in the file dialog box.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets the file names of all selected files in the dialog box.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each file name includes both the file path and the extension.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no files are selected, this method returns an empty array.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, containing the file names of all selected files in the dialog box.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks on the <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Save<ept id="p2">**</ept> button on a file dialog box.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets or sets the current file name filter string, which determines the choices that appear in the "Save as file type" or "Files of type" box in the dialog box.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&amp;#124;) and the filter pattern.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The strings for different filtering options are separated by the vertical bar.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following is an example of a filter string:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add several filter patterns to a filter by separating the file types with semicolons, for example:</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> property to set which filtering option is shown first to the user.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The file filtering options available in the dialog box.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Filter&lt;/code&gt;</ph> format is invalid.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets the index of the filter currently selected in the file dialog box.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> property to set which filtering option is shown first to the user.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the value of <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> after showing the file dialog to perform special file operations depending upon the filter chosen.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index value of the first filter entry is 1.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A value containing the index of the filter currently selected in the file dialog box.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The handle to the dialog box window.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The message received by the dialog box.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Additional information about the message.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Additional information about the message.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets or sets the initial directory displayed by the file dialog box.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A&gt;</ph> property is typically set using one of the following sources:</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>A path that was previously used in the program, perhaps retained from the last directory or file operation.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>A path read from a persistent source, such as an application setting, a <ph id="ph1">&lt;xref:Microsoft.Win32.Registry&gt;</ph> or a string resource in the application.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method)</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>A path related to the current application, such as its startup directory (which you can obtain using properties on the <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating dynamic paths, see the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>, if <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A&gt;</ph> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The initial directory displayed by the file dialog box.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the Win32 instance handle for the application.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A Win32 instance handle for the application.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog.FileOk"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.CancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets values to initialize the <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.Options%2A&gt;</ph> property corresponds to the flags used to initialize a file dialog box using Win32.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class to get and set the options.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A bitwise combination of internal values that initializes the <ph id="ph1">&lt;xref href="System.Windows.Forms.FileDialog"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Resets all properties to their default values.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies a common dialog box.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides an implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph>, and is invoked when the user of a file dialog invokes <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the derived classes <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> an invalid file name <ph id="ph3">&lt;xref:System.Exception&gt;</ph> can be raised.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A value that represents the window handle of the owner window for the common dialog box.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the file could be opened; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is displayed in the file dialog box.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is raised when the user clicks the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box includes a help button; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sometimes users must open and save files that use multiple file name extensions.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the application manifest files used by the <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> deployment technology end in the complex file name extension ".exe.manifest".</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`true`</ph> enables you to set the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph> property to a multi-dotted extension.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A&gt;</ph> is <ph id="ph2">`false`</ph>, and you assign a multi-dotted extension to <ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph>, derived controls such as <ph id="ph4">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> will only use the last extension in the string.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, ".manifest" will be used instead of ".exe.manifest".</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box supports multiple file name extensions; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets or sets the file dialog box title.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is placed in the title bar of the dialog box.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the title is an empty string, the system uses a default title, which is either "Save As" or "Open".</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The file dialog box title.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Provides a string version of this object.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A string version of this object.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the edit control contains anything but spaces when the user clicks <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, the dialog box returns the file name, whether it is valid or not.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>No default extension is added to the text.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box accepts only valid Win32 file names; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>