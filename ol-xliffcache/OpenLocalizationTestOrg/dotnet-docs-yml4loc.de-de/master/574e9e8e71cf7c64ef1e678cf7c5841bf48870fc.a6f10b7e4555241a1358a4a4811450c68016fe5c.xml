{"nodes":[{"content":"Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.","nodes":[{"pos":[0,165],"content":"Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.","nodes":[{"content":"Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.","pos":[0,165]}]}],"pos":[2266,2432],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol. The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements. A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.  \n  \n The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.  \n  \n> [!NOTE]\n>  If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.  \n  \n When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present. If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:  \n  \n \"Context channel received a message with context which does not match the current context cached at the channel. Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\"","nodes":[{"pos":[0,996],"content":"The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol. The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements. A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.","nodes":[{"content":"The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol. The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements. A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.","pos":[0,996],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> allows the user to add an element to the binding of a service for managing its context exchange protocol.","pos":[0,167],"source":"The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> is typically stacked on top of reliability, security, and transport binding elements.","pos":[168,315],"source":" The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements."},{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> does not require any configuration options and can create channel factories for <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IRequestSessionChannel&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph>.","pos":[316,631],"source":" A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>."},{"content":"It can also create channel listeners for <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IReplySessionChannel&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph>.","pos":[632,844],"source":" It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>."},{"content":"A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.","pos":[845,996]}]}]},{"pos":[1003,1139],"content":"The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.","nodes":[{"content":"The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.","pos":[0,136]}]},{"pos":[1147,1831],"content":"[!NOTE]\n If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.","leadings":["","> "],"nodes":[{"content":" If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.","pos":[8,682],"nodes":[{"content":"If a session-based binding is created with a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> and used with a contract that specifies <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph><ph id=\"ph3\"> = </ph><ph id=\"ph4\">&lt;xref:System.ServiceModel.SessionMode.NotAllowed&gt;</ph>, an <ph id=\"ph5\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\"","pos":[1,457],"source":" If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\""},{"content":"You must set <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> or not use a session-based channel.","pos":[458,674],"source":" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel."}]}]},{"pos":[1838,2238],"content":"When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present. If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:","nodes":[{"content":"When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present. If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:","pos":[0,400],"nodes":[{"content":"When creating a custom binding, it is recommended that you add the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> of the custom binding before adding any reliability and security binding elements, if present.","pos":[0,287],"source":"When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present."},{"content":"If you do not, your service may throw a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> with the following message:","pos":[288,400],"source":" If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:"}]}]},{"pos":[2245,2519],"content":"\"Context channel received a message with context which does not match the current context cached at the channel. Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\"","nodes":[{"content":"\"Context channel received a message with context which does not match the current context cached at the channel. Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\"","pos":[0,274],"nodes":[{"content":"\"Context channel received a message with context which does not match the current context cached at the channel.","pos":[0,112]},{"content":"Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\"","pos":[113,274]}]}]}],"pos":[2443,4978],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class."}],"pos":[6754,6867],"yaml":true},{"content":"Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.","nodes":[{"pos":[0,270],"content":"Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.","nodes":[{"content":"Sets the default values of <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel.Sign&gt;</ph> for <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader&gt;</ph> for <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism&gt;</ph>.","pos":[0,270],"source":"Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>."}]}],"pos":[6878,7149],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> class with a specified level of protection.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection."}],"pos":[8507,8657],"yaml":true},{"content":"Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.","nodes":[{"pos":[0,170],"content":"Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.","nodes":[{"content":"Sets the default value of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader&gt;</ph> for <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism&gt;</ph>.","pos":[0,170],"source":"Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>."}]}],"pos":[8668,8839],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> for the binding element.","source":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element."}],"pos":[9055,9141],"yaml":true},{"content":"The <code>protectionLevel</code> is not valid.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">protectionLevel</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","source":"The <code>protectionLevel</code> is not valid."}],"pos":[9339,9386],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection and exchange mechanism.","nodes":[{"pos":[0,172],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> class with a specified level of protection and exchange mechanism.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection and exchange mechanism."}],"pos":[10822,10995],"yaml":true},{"content":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> for the binding element.","source":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element."}],"pos":[11291,11377],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"&gt;&lt;/xref&gt;</ph> that specifies the mechanism used to exchange context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element."}],"pos":[11497,11655],"yaml":true},{"content":"<code>protectionLevel</code> or <code>contextExchangeMechanism</code> is not valid.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;protectionLevel&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;contextExchangeMechanism&lt;/code&gt;</ph> is not valid.","source":"<code>protectionLevel</code> or <code>contextExchangeMechanism</code> is not valid."}],"pos":[11853,11937],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, and client callback address.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> class with the specified protection level, context exchange mechanism, and client callback address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, and client callback address."}],"pos":[13421,13627],"yaml":true},{"content":"The protection level form the binding element.","nodes":[{"pos":[0,46],"content":"The protection level form the binding element.","nodes":[{"content":"The protection level form the binding element.","pos":[0,46]}]}],"pos":[13950,13997],"yaml":true},{"content":"The mechanism used to exchange context for the binding element.","nodes":[{"pos":[0,63],"content":"The mechanism used to exchange context for the binding element.","nodes":[{"content":"The mechanism used to exchange context for the binding element.","pos":[0,63]}]}],"pos":[14117,14181],"yaml":true},{"content":"The client callback address.","nodes":[{"pos":[0,28],"content":"The client callback address.","nodes":[{"content":"The client callback address.","pos":[0,28]}]}],"pos":[14255,14284],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled.","nodes":[{"pos":[0,267],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled."}],"pos":[15927,16195],"yaml":true},{"content":"The protection level for the binding element.","nodes":[{"pos":[0,45],"content":"The protection level for the binding element.","nodes":[{"content":"The protection level for the binding element.","pos":[0,45]}]}],"pos":[16549,16595],"yaml":true},{"content":"The mechanism used to exchange context for the binding element.","nodes":[{"pos":[0,63],"content":"The mechanism used to exchange context for the binding element.","nodes":[{"content":"The mechanism used to exchange context for the binding element.","pos":[0,63]}]}],"pos":[16715,16779],"yaml":true},{"content":"The client callback address.","nodes":[{"pos":[0,28],"content":"The client callback address.","nodes":[{"content":"The client callback address.","pos":[0,28]}]}],"pos":[16853,16882],"yaml":true},{"content":"`true` if the context management is enabled; otherwise `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the context management is enabled; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the context management is enabled; otherwise `false`."}],"pos":[16963,17029],"yaml":true},{"content":"Builds the channel factory stack on the client that creates a specified type of channel for a specified context.","nodes":[{"pos":[0,112],"content":"Builds the channel factory stack on the client that creates a specified type of channel for a specified context.","nodes":[{"content":"Builds the channel factory stack on the client that creates a specified type of channel for a specified context.","pos":[0,112]}]}],"pos":[18401,18514],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the channel.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the channel.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the channel."}],"pos":[18802,18888],"yaml":true},{"content":"The type of channel the channel factory produces.","nodes":[{"pos":[0,49],"content":"The type of channel the channel factory produces.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]}]}],"pos":[18946,18996],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> for the specified context.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the specified context.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> for the specified context."}],"pos":[19086,19214],"yaml":true},{"content":"<code>context</code> set is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> set is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> set is `null`."}],"pos":[19417,19453],"yaml":true},{"content":"Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.","nodes":[{"pos":[0,113],"content":"Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.","nodes":[{"content":"Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.","pos":[0,113]}]}],"pos":[20744,20858],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the listener.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener."}],"pos":[21212,21299],"yaml":true},{"content":"The type of channel the channel listener accepts.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listener accepts.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]}]}],"pos":[21357,21407],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> for the specified context.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the specified context.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> for the specified context."}],"pos":[21498,21627],"yaml":true},{"content":"<code>context</code> set is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> set is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> set is `null`."}],"pos":[21831,21867],"yaml":true},{"content":"Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.","nodes":[{"pos":[0,131],"content":"Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.","nodes":[{"content":"Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.","pos":[0,131]}]}],"pos":[23170,23302],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the factory.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the factory.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the factory."}],"pos":[23543,23629],"yaml":true},{"content":"The type of channel the channel factory produces. Only <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IRequestSessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.","nodes":[{"pos":[0,295],"content":"The type of channel the channel factory produces. Only <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IRequestSessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]},{"content":"Only <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IRequestChannel\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IRequestSessionChannel\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"&gt;&lt;/xref&gt;</ph> are allowed by default.","pos":[50,295],"source":" Only <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IRequestSessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default."}]}],"pos":[23687,23983],"yaml":true},{"content":"`true` if the specified channel factory stack can be built on the client; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel factory stack can be built on the client; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel factory stack can be built on the client; otherwise, `false`."}],"pos":[24041,24137],"yaml":true},{"content":"Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.","nodes":[{"pos":[0,124],"content":"Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.","nodes":[{"content":"Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.","pos":[0,124]}]}],"pos":[25553,25678],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the listener.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener."}],"pos":[25984,26071],"yaml":true},{"content":"The type of channel the channel listener accepts. Only <xref href=\"System.ServiceModel.Channels.IReplyChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IReplySessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.","nodes":[{"pos":[0,291],"content":"The type of channel the channel listener accepts. Only <xref href=\"System.ServiceModel.Channels.IReplyChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IReplySessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.","nodes":[{"content":"The type of channel the channel listener accepts.","pos":[0,49]},{"content":"Only <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IReplyChannel\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IReplySessionChannel\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"&gt;&lt;/xref&gt;</ph> are allowed by default.","pos":[50,291],"source":" Only <xref href=\"System.ServiceModel.Channels.IReplyChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IReplySessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default."}]}],"pos":[26129,26421],"yaml":true},{"content":"`true` if the specified channel listener stack can be built on the service; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the specified channel listener stack can be built on the service; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified channel listener stack can be built on the service; otherwise, `false`."}],"pos":[26479,26577],"yaml":true},{"content":"Gets or sets the client callback address for the binding element.","nodes":[{"pos":[0,65],"content":"Gets or sets the client callback address for the binding element.","nodes":[{"content":"Gets or sets the client callback address for the binding element.","pos":[0,65]}]}],"pos":[27762,27828],"yaml":true},{"content":"The client callback address.","nodes":[{"pos":[0,28],"content":"The client callback address.","nodes":[{"content":"The client callback address.","pos":[0,28]}]}],"pos":[27952,27981],"yaml":true},{"content":"Creates a new <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one.","nodes":[{"pos":[0,126],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> object initialized from the current one.","source":"Creates a new <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one."}],"pos":[29086,29213],"yaml":true},{"content":"The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object.  \n  \n This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This is called copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined. A shallow clone of an object is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","nodes":[{"pos":[0,318],"content":"The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object.","nodes":[{"content":"The cloned <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> object has the same <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism&gt;</ph> values of the current <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.ContextBindingElement&gt;</ph> object.","pos":[0,318],"source":"The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object."}]},{"pos":[325,1039],"content":"This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This is called copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined. A shallow clone of an object is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","nodes":[{"content":"This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This is called copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined. A shallow clone of an object is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[0,714],"nodes":[{"content":"This creates a complete copy of the current binding element object tree, also called a deep clone.","pos":[0,98]},{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.","pos":[99,228]},{"content":"This is called copying the entire object graph.","pos":[229,276]},{"content":"Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.","pos":[277,405]},{"content":"If a deep clone is not returned, the run-time behavior is undefined.","pos":[406,474]},{"content":"A shallow clone of an object is a copy of the object only.","pos":[475,533]},{"content":"If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[534,714]}]}]}],"pos":[29224,30268],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextBindingElement\"&gt;&lt;/xref&gt;</ph> object initialized from the current one.","source":"A <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one."}],"pos":[30467,30582],"yaml":true},{"content":"Gets or sets the exchange mechanism used to communicate context for the binding element.","nodes":[{"pos":[0,88],"content":"Gets or sets the exchange mechanism used to communicate context for the binding element.","nodes":[{"content":"Gets or sets the exchange mechanism used to communicate context for the binding element.","pos":[0,88]}]}],"pos":[31764,31853],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"&gt;&lt;/xref&gt;</ph> that specifies the mechanism used to exchange context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element."}],"pos":[32073,32231],"yaml":true},{"content":"The value set is not valid.","nodes":[{"pos":[0,27],"content":"The value set is not valid.","nodes":[{"content":"The value set is not valid.","pos":[0,27]}]}],"pos":[32448,32476],"yaml":true},{"content":"Gets or sets a value that specifies whether context management is enabled.","nodes":[{"pos":[0,74],"content":"Gets or sets a value that specifies whether context management is enabled.","nodes":[{"content":"Gets or sets a value that specifies whether context management is enabled.","pos":[0,74]}]}],"pos":[33588,33663],"yaml":true},{"content":"`true` if context management is enabled; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if context management is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if context management is enabled; otherwise, `false`."}],"pos":[33795,33858],"yaml":true},{"content":"Writes custom policy assertions into the context of the binding element.","nodes":[{"pos":[0,72],"content":"Writes custom policy assertions into the context of the binding element.","nodes":[{"content":"Writes custom policy assertions into the context of the binding element.","pos":[0,72]}]}],"pos":[35449,35522],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the metadata information.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;&lt;/xref&gt;</ph> that exports the metadata information.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the metadata information."}],"pos":[35819,35932],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Description.WsdlContractConversionContext\"></xref> object that provides mappings from exported WSDL elements to the contract description.","nodes":[{"pos":[0,171],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.WsdlContractConversionContext\"&gt;&lt;/xref&gt;</ph> object that provides mappings from exported WSDL elements to the contract description.","source":"A <xref href=\"System.ServiceModel.Description.WsdlContractConversionContext\"></xref> object that provides mappings from exported WSDL elements to the contract description."}],"pos":[36037,36209],"yaml":true},{"content":"<code>context</code> is `null` or the policy assertion in the binding is `null`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or the policy assertion in the binding is <ph id=\"ph3\">`null`</ph>.","source":"<code>context</code> is `null` or the policy assertion in the binding is `null`."}],"pos":[36402,36483],"yaml":true},{"content":"Returns the typed object with the specified context from the appropriate layer in the channel stack.","nodes":[{"pos":[0,100],"content":"Returns the typed object with the specified context from the appropriate layer in the channel stack.","nodes":[{"content":"Returns the typed object with the specified context from the appropriate layer in the channel stack.","pos":[0,100]}]}],"pos":[37699,37800],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> specified.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> specified.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> specified."}],"pos":[38038,38118],"yaml":true},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[38169,38220],"yaml":true},{"content":"The typed object <code>T</code> requested if it is present.","nodes":[{"pos":[0,59],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested if it is present.","source":"The typed object <code>T</code> requested if it is present."}],"pos":[38265,38325],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[38520,38552],"yaml":true},{"content":"Gets or sets the level of protection for the binding element from the context.","nodes":[{"pos":[0,78],"content":"Gets or sets the level of protection for the binding element from the context.","nodes":[{"content":"Gets or sets the level of protection for the binding element from the context.","pos":[0,78]}]}],"pos":[39593,39672],"yaml":true},{"content":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> for the binding element.","source":"The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element."}],"pos":[39847,39933],"yaml":true},{"content":"The value set is not valid.","nodes":[{"pos":[0,27],"content":"The value set is not valid.","nodes":[{"content":"The value set is not valid.","pos":[0,27]}]}],"pos":[40141,40169],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ContextBindingElement\n  commentId: T:System.ServiceModel.Channels.ContextBindingElement\n  id: ContextBindingElement\n  children:\n  - System.ServiceModel.Channels.ContextBindingElement.#ctor\n  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)\n  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)\n  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)\n  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)\n  - System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress\n  - System.ServiceModel.Channels.ContextBindingElement.Clone\n  - System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism\n  - System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled\n  - System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  - System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel\n  langs:\n  - csharp\n  name: ContextBindingElement\n  nameWithType: ContextBindingElement\n  fullName: System.ServiceModel.Channels.ContextBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.\n  remarks: \"The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol. The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements. A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.  \\n  \\n The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.  \\n  \\n> [!NOTE]\\n>  If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \\\"Channel context management cannot be enabled or disabled after the channel is opened.\\\" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.  \\n  \\n When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present. If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:  \\n  \\n \\\"Context channel received a message with context which does not match the current context cached at the channel. Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\\\"\"\n  syntax:\n    content: 'public class ContextBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.IContextBindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Channels.IContextBindingElement\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextBindingElement()\n  nameWithType: ContextBindingElement.ContextBindingElement()\n  fullName: ContextBindingElement.ContextBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class.\n  remarks: Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.\n  syntax:\n    content: public ContextBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)\n  id: '#ctor(System.Net.Security.ProtectionLevel)'\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextBindingElement(ProtectionLevel)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection.\n  remarks: Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.\n  syntax:\n    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel);\n    parameters:\n    - id: protectionLevel\n      type: System.Net.Security.ProtectionLevel\n      description: The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.\n  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>protectionLevel</code> is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)\n  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)'\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with a specified level of protection and exchange mechanism.\n  syntax:\n    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism);\n    parameters:\n    - id: protectionLevel\n      type: System.Net.Security.ProtectionLevel\n      description: The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.\n    - id: contextExchangeMechanism\n      type: System.ServiceModel.Channels.ContextExchangeMechanism\n      description: The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element.\n  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>protectionLevel</code> or <code>contextExchangeMechanism</code> is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)\n  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)'\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, and client callback address.\n  syntax:\n    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress);\n    parameters:\n    - id: protectionLevel\n      type: System.Net.Security.ProtectionLevel\n      description: The protection level form the binding element.\n    - id: contextExchangeMechanism\n      type: System.ServiceModel.Channels.ContextExchangeMechanism\n      description: The mechanism used to exchange context for the binding element.\n    - id: clientCallbackAddress\n      type: System.Uri\n      description: The client callback address.\n  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)\n  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)'\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled.\n  syntax:\n    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress, bool contextManagementEnabled);\n    parameters:\n    - id: protectionLevel\n      type: System.Net.Security.ProtectionLevel\n      description: The protection level for the binding element.\n    - id: contextExchangeMechanism\n      type: System.ServiceModel.Channels.ContextExchangeMechanism\n      description: The mechanism used to exchange context for the binding element.\n    - id: clientCallbackAddress\n      type: System.Uri\n      description: The client callback address.\n    - id: contextManagementEnabled\n      type: System.Boolean\n      description: '`true` if the context management is enabled; otherwise `false`.'\n  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel factory stack on the client that creates a specified type of channel for a specified context.\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the channel.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> for the specified context.\n  overload: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> set is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <code>TChannel</code> for the specified context.\n  overload: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> set is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the factory.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces. Only <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IRequestSessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel factory stack can be built on the client; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the listener.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listener accepts. Only <xref href=\"System.ServiceModel.Channels.IReplyChannel\"></xref>, <xref href=\"System.ServiceModel.Channels.IReplySessionChannel\"></xref>, and <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> are allowed by default.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified channel listener stack can be built on the service; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress\n  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress\n  id: ClientCallbackAddress\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ClientCallbackAddress\n  nameWithType: ContextBindingElement.ClientCallbackAddress\n  fullName: ContextBindingElement.ClientCallbackAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the client callback address for the binding element.\n  syntax:\n    content: public Uri ClientCallbackAddress { get; set; }\n    return:\n      type: System.Uri\n      description: The client callback address.\n  overload: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ContextBindingElement.Clone()\n  fullName: ContextBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a new <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one.\n  remarks: \"The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object.  \\n  \\n This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This is called copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined. A shallow clone of an object is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.\"\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.ContextBindingElement\"></xref> object initialized from the current one.\n  overload: System.ServiceModel.Channels.ContextBindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism\n  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism\n  id: ContextExchangeMechanism\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextExchangeMechanism\n  nameWithType: ContextBindingElement.ContextExchangeMechanism\n  fullName: ContextBindingElement.ContextExchangeMechanism\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the exchange mechanism used to communicate context for the binding element.\n  syntax:\n    content: public System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism { get; set; }\n    return:\n      type: System.ServiceModel.Channels.ContextExchangeMechanism\n      description: The <xref href=\"System.ServiceModel.Channels.ContextExchangeMechanism\"></xref> that specifies the mechanism used to exchange context for the binding element.\n  overload: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is not valid.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled\n  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled\n  id: ContextManagementEnabled\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ContextManagementEnabled\n  nameWithType: ContextBindingElement.ContextManagementEnabled\n  fullName: ContextBindingElement.ContextManagementEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that specifies whether context management is enabled.\n  syntax:\n    content: public bool ContextManagementEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if context management is enabled; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Writes custom policy assertions into the context of the binding element.\n  syntax:\n    content: public virtual void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the metadata information.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: A <xref href=\"System.ServiceModel.Description.WsdlContractConversionContext\"></xref> object that provides mappings from exported WSDL elements to the contract description.\n  overload: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null` or the policy assertion in the binding is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: ContextBindingElement.GetProperty<T>(BindingContext)\n  fullName: ContextBindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns the typed object with the specified context from the appropriate layer in the channel stack.\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> specified.\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested if it is present.\n  overload: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel\n  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: ContextBindingElement.ProtectionLevel\n  fullName: ContextBindingElement.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the level of protection for the binding element from the context.\n  syntax:\n    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: The <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the binding element.\n  overload: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is not valid.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement()\n  nameWithType: ContextBindingElement.ContextBindingElement()\n  fullName: ContextBindingElement.ContextBindingElement()\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement(ProtectionLevel)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel)\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)\n- uid: System.ServiceModel.Channels.ContextExchangeMechanism\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ContextExchangeMechanism\n  nameWithType: ContextExchangeMechanism\n  fullName: System.ServiceModel.Channels.ContextExchangeMechanism\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ClientCallbackAddress\n  nameWithType: ContextBindingElement.ClientCallbackAddress\n  fullName: ContextBindingElement.ClientCallbackAddress\n- uid: System.ServiceModel.Channels.ContextBindingElement.Clone\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: ContextBindingElement.Clone()\n  fullName: ContextBindingElement.Clone()\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextExchangeMechanism\n  nameWithType: ContextBindingElement.ContextExchangeMechanism\n  fullName: ContextBindingElement.ContextExchangeMechanism\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextManagementEnabled\n  nameWithType: ContextBindingElement.ContextManagementEnabled\n  fullName: ContextBindingElement.ContextManagementEnabled\n- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: ContextBindingElement.GetProperty<T>(BindingContext)\n  fullName: ContextBindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ContextBindingElement.ProtectionLevel\n  fullName: ContextBindingElement.ProtectionLevel\n- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextBindingElement\n  nameWithType: ContextBindingElement.ContextBindingElement\n  fullName: ContextBindingElement.ContextBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>\n  fullName: ContextBindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>\n  fullName: ContextBindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>\n  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>\n  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ClientCallbackAddress\n  nameWithType: ContextBindingElement.ClientCallbackAddress\n  fullName: ContextBindingElement.ClientCallbackAddress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.Clone*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: ContextBindingElement.Clone\n  fullName: ContextBindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextExchangeMechanism\n  nameWithType: ContextBindingElement.ContextExchangeMechanism\n  fullName: ContextBindingElement.ContextExchangeMechanism\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ContextManagementEnabled\n  nameWithType: ContextBindingElement.ContextManagementEnabled\n  fullName: ContextBindingElement.ContextManagementEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ExportPolicy\n  nameWithType: ContextBindingElement.ExportPolicy\n  fullName: ContextBindingElement.ExportPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: ContextBindingElement.GetProperty<T>\n  fullName: ContextBindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel*\n  parent: System.ServiceModel.Channels.ContextBindingElement\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ContextBindingElement.ProtectionLevel\n  fullName: ContextBindingElement.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.IContextBindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IContextBindingElement\n  nameWithType: IContextBindingElement\n  fullName: System.ServiceModel.Channels.IContextBindingElement\n- uid: System.ServiceModel.Description.IPolicyExportExtension\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: IPolicyExportExtension\n  nameWithType: IPolicyExportExtension\n  fullName: System.ServiceModel.Description.IPolicyExportExtension\n"}