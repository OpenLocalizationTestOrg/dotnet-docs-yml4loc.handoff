### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  commentId: T:System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies how the operating system should open a file.
  remarks: "For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \n  \n A `FileMode` parameter is specified in many of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.  \n  \n `FileMode` parameters control whether a file is overwritten, created, opened, or some combination thereof. Use `Open` to open an existing file. To append to a file, use `Append`. To truncate a file or create a file if it doesn't exist, use `Create`."
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]\n [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]\n [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileMode.Append
  commentId: F:System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: FileMode.Append
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Opens the file if it exists and seeks to the end of the file, or creates a new file. This requires <xref href="System.Security.Permissions.FileIOPermissionAccess.Append"></xref> permission. `FileMode.Append` can be used only in conjunction with `FileAccess.Write`. Trying to seek to a position before the end of the file throws an <xref href="System.IO.IOException"></xref> exception, and any attempt to read fails and throws a <xref href="System.NotSupportedException"></xref> exception.
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
- uid: System.IO.FileMode.Create
  commentId: F:System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: FileMode.Create
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies that the operating system should create a new file. If the file already exists, it will be overwritten. This requires <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref> permission. `FileMode.Create` is equivalent to requesting that if the file does not exist, use <xref href="System.IO.FileMode.CreateNew"></xref>; otherwise, use <xref href="System.IO.FileMode.Truncate"></xref>. If the file already exists but is a hidden file, an <xref href="System.UnauthorizedAccessException"></xref> exception is thrown.
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
- uid: System.IO.FileMode.CreateNew
  commentId: F:System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: FileMode.CreateNew
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies that the operating system should create a new file. This requires <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref> permission. If the file already exists, an <xref href="System.IO.IOException"></xref> exception is thrown.
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
- uid: System.IO.FileMode.Open
  commentId: F:System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: FileMode.Open
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies that the operating system should open an existing file. The ability to open the file is dependent on the value specified by the <xref href="System.IO.FileAccess"></xref> enumeration. A <xref href="System.IO.FileNotFoundException"></xref> exception is thrown if the file does not exist.
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
- uid: System.IO.FileMode.OpenOrCreate
  commentId: F:System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: FileMode.OpenOrCreate
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies that the operating system should open a file if it exists; otherwise, a new file should be created. If the file is opened with `FileAccess.Read`, <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref> permission is required. If the file access is `FileAccess.Write`, <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref> permission is required. If the file is opened with `FileAccess.ReadWrite`, both <xref href="System.Security.Permissions.FileIOPermissionAccess.Read"></xref> and <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref> permissions are required.
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
- uid: System.IO.FileMode.Truncate
  commentId: F:System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: FileMode.Truncate
  type: Field
  assemblies:
  - System.IO.FileSystem.Primitives
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Specifies that the operating system should open an existing file. When the file is opened, it should be truncated so that its size is zero bytes. This requires <xref href="System.Security.Permissions.FileIOPermissionAccess.Write"></xref> permission. Attempts to read from a file opened with `FileMode.Truncate` cause an <xref href="System.ArgumentException"></xref> exception.
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileMode.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: FileMode.Truncate
