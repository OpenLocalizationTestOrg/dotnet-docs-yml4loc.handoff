{"nodes":[{"content":"An activity which scopes the lifetime of a transaction which is initiated by a received message. The transaction may be flowed into the workflow on the initiating message, or be created by the dispatcher when the message is received.","nodes":[{"pos":[0,233],"content":"An activity which scopes the lifetime of a transaction which is initiated by a received message. The transaction may be flowed into the workflow on the initiating message, or be created by the dispatcher when the message is received.","nodes":[{"content":"An activity which scopes the lifetime of a transaction which is initiated by a received message. The transaction may be flowed into the workflow on the initiating message, or be created by the dispatcher when the message is received.","pos":[0,233],"nodes":[{"content":"An activity which scopes the lifetime of a transaction which is initiated by a received message.","pos":[0,96]},{"content":"The transaction may be flowed into the workflow on the initiating message, or be created by the dispatcher when the message is received.","pos":[97,233]}]}]}],"pos":[963,1197],"yaml":true},{"content":"The <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity enables you to control the lifetime of the flowed transaction.  \n  \n> [!WARNING]\n>  For an initiating <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity (a <xref:System.ServiceModel.Activities.TransactedReceiveScope> that contains a <xref:System.ServiceModel.Activities.Receive> activity with <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> set to `true`), the transaction is created before the runtime starts to execute the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity. This transaction is not ambient at the workflow activity layer, but it is ambient in the underlying persistence layers. If execution of the workflow encounters a <xref:System.Activities.Statements.Persist> activity before the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity, the runtime tries to persist under the ambient transaction. This behavior causes a block until the transaction is completed. Because the workflow execution has not reached the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> section, the transaction cannot finish. This deadlock causes the workflow to stop responding until the transaction times out. When the transaction times out, the newly created instance is aborted.  \n  \n> [!IMPORTANT]\n>  Whenever you use a <xref:System.ServiceModel.Activities.TransactedReceiveScope> it is recommended to place all Receives in the workflow within <xref:System.ServiceModel.Activities.TransactedReceiveScope> activities.  \n  \n> [!IMPORTANT]\n>  When using <xref:System.ServiceModel.Activities.TransactedReceiveScope> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message. You must make sure your workflow is always at a consistent stopping point when the workflow idles. This will allow you to restart the workflow from a previous persistence point should the workflow be aborted.","nodes":[{"pos":[0,136],"content":"The <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity enables you to control the lifetime of the flowed transaction.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> activity enables you to control the lifetime of the flowed transaction.","pos":[0,136],"source":"The <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity enables you to control the lifetime of the flowed transaction."}]},{"pos":[144,1346],"content":"[!WARNING]\n For an initiating <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity (a <xref:System.ServiceModel.Activities.TransactedReceiveScope> that contains a <xref:System.ServiceModel.Activities.Receive> activity with <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> set to `true`), the transaction is created before the runtime starts to execute the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity. This transaction is not ambient at the workflow activity layer, but it is ambient in the underlying persistence layers. If execution of the workflow encounters a <xref:System.Activities.Statements.Persist> activity before the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity, the runtime tries to persist under the ambient transaction. This behavior causes a block until the transaction is completed. Because the workflow execution has not reached the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> section, the transaction cannot finish. This deadlock causes the workflow to stop responding until the transaction times out. When the transaction times out, the newly created instance is aborted.","leadings":["","> "],"nodes":[{"content":" For an initiating <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity (a <xref:System.ServiceModel.Activities.TransactedReceiveScope> that contains a <xref:System.ServiceModel.Activities.Receive> activity with <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> set to `true`), the transaction is created before the runtime starts to execute the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity. This transaction is not ambient at the workflow activity layer, but it is ambient in the underlying persistence layers. If execution of the workflow encounters a <xref:System.Activities.Statements.Persist> activity before the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity, the runtime tries to persist under the ambient transaction. This behavior causes a block until the transaction is completed. Because the workflow execution has not reached the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> section, the transaction cannot finish. This deadlock causes the workflow to stop responding until the transaction times out. When the transaction times out, the newly created instance is aborted.","pos":[11,1200],"nodes":[{"content":"For an initiating <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> activity (a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> that contains a <ph id=\"ph3\">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity with <ph id=\"ph4\">&lt;xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A&gt;</ph> set to <ph id=\"ph5\">`true`</ph>), the transaction is created before the runtime starts to execute the <ph id=\"ph6\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> activity.","pos":[1,450],"source":" For an initiating <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity (a <xref:System.ServiceModel.Activities.TransactedReceiveScope> that contains a <xref:System.ServiceModel.Activities.Receive> activity with <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> set to `true`), the transaction is created before the runtime starts to execute the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity."},{"content":"This transaction is not ambient at the workflow activity layer, but it is ambient in the underlying persistence layers.","pos":[451,570]},{"content":"If execution of the workflow encounters a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Persist&gt;</ph> activity before the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> activity, the runtime tries to persist under the ambient transaction.","pos":[571,807],"source":" If execution of the workflow encounters a <xref:System.Activities.Statements.Persist> activity before the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity, the runtime tries to persist under the ambient transaction."},{"content":"This behavior causes a block until the transaction is completed.","pos":[808,872]},{"content":"Because the workflow execution has not reached the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A&gt;</ph> section, the transaction cannot finish.","pos":[873,1032],"source":" Because the workflow execution has not reached the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> section, the transaction cannot finish."},{"content":"This deadlock causes the workflow to stop responding until the transaction times out.","pos":[1033,1118]},{"content":"When the transaction times out, the newly created instance is aborted.","pos":[1119,1189]}]}]},{"pos":[1354,1585],"content":"[!IMPORTANT]\n Whenever you use a <xref:System.ServiceModel.Activities.TransactedReceiveScope> it is recommended to place all Receives in the workflow within <xref:System.ServiceModel.Activities.TransactedReceiveScope> activities.","leadings":["","> "],"nodes":[{"content":"Whenever you use a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> it is recommended to place all Receives in the workflow within <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> activities.","pos":[14,229],"source":" Whenever you use a <xref:System.ServiceModel.Activities.TransactedReceiveScope> it is recommended to place all Receives in the workflow within <xref:System.ServiceModel.Activities.TransactedReceiveScope> activities."}]},{"pos":[1593,2017],"content":"[!IMPORTANT]\n When using <xref:System.ServiceModel.Activities.TransactedReceiveScope> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message. You must make sure your workflow is always at a consistent stopping point when the workflow idles. This will allow you to restart the workflow from a previous persistence point should the workflow be aborted.","leadings":["","> "],"nodes":[{"content":" When using <xref:System.ServiceModel.Activities.TransactedReceiveScope> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message. You must make sure your workflow is always at a consistent stopping point when the workflow idles. This will allow you to restart the workflow from a previous persistence point should the workflow be aborted.","pos":[13,422],"nodes":[{"content":"When using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Activities.TransactedReceiveScope&gt;</ph> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message.","pos":[1,200],"source":" When using <xref:System.ServiceModel.Activities.TransactedReceiveScope> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message."},{"content":"You must make sure your workflow is always at a consistent stopping point when the workflow idles.","pos":[201,299]},{"content":"This will allow you to restart the workflow from a previous persistence point should the workflow be aborted.","pos":[300,409]}]}]}],"pos":[1208,3237],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> class."}],"pos":[6352,6468],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Activities.Activity\"></xref> that makes up the body of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity.","nodes":[{"pos":[0,179],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity\"&gt;&lt;/xref&gt;</ph> that makes up the body of the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"&gt;&lt;/xref&gt;</ph> activity.","source":"Gets or sets the <xref href=\"System.Activities.Activity\"></xref> that makes up the body of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity."}],"pos":[7636,7816],"yaml":true},{"content":"The transaction is ambient for the entire duration of the body.","nodes":[{"pos":[0,63],"content":"The transaction is ambient for the entire duration of the body.","nodes":[{"content":"The transaction is ambient for the entire duration of the body.","pos":[0,63]}]}],"pos":[7827,7891],"yaml":true,"extradata":"MT"},{"content":"The body of the transacted receive scope.","nodes":[{"pos":[0,41],"content":"The body of the transacted receive scope.","nodes":[{"content":"The body of the transacted receive scope.","pos":[0,41]}]}],"pos":[8326,8368],"yaml":true},{"content":"Gets or sets the <xref href=\"System.ServiceModel.Activities.Receive\"></xref> activity associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity.","nodes":[{"pos":[0,191],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activities.Receive\"&gt;&lt;/xref&gt;</ph> activity associated with this <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"&gt;&lt;/xref&gt;</ph> activity.","source":"Gets or sets the <xref href=\"System.ServiceModel.Activities.Receive\"></xref> activity associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity."}],"pos":[12378,12570],"yaml":true},{"content":"The receive activity associated with the transacted receive scope.","nodes":[{"pos":[0,66],"content":"The receive activity associated with the transacted receive scope.","nodes":[{"content":"The receive activity associated with the transacted receive scope.","pos":[0,66]}]}],"pos":[13049,13116],"yaml":true},{"content":"Gets the collection of <xref href=\"System.Activities.Variable\"></xref> associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref>.","nodes":[{"pos":[0,167],"content":"Gets the collection of <ph id=\"ph1\">&lt;xref href=\"System.Activities.Variable\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the collection of <xref href=\"System.Activities.Variable\"></xref> associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref>."}],"pos":[14257,14425],"yaml":true},{"content":"The variables associated with the transacted receive scope.","nodes":[{"pos":[0,59],"content":"The variables associated with the transacted receive scope.","nodes":[{"content":"The variables associated with the transacted receive scope.","pos":[0,59]}]}],"pos":[14965,15025],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activities.TransactedReceiveScope\n  commentId: T:System.ServiceModel.Activities.TransactedReceiveScope\n  id: TransactedReceiveScope\n  children:\n  - System.ServiceModel.Activities.TransactedReceiveScope.#ctor\n  - System.ServiceModel.Activities.TransactedReceiveScope.Body\n  - System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)\n  - System.ServiceModel.Activities.TransactedReceiveScope.Request\n  - System.ServiceModel.Activities.TransactedReceiveScope.Variables\n  langs:\n  - csharp\n  name: TransactedReceiveScope\n  nameWithType: TransactedReceiveScope\n  fullName: System.ServiceModel.Activities.TransactedReceiveScope\n  type: Class\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: An activity which scopes the lifetime of a transaction which is initiated by a received message. The transaction may be flowed into the workflow on the initiating message, or be created by the dispatcher when the message is received.\n  remarks: \"The <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity enables you to control the lifetime of the flowed transaction.  \\n  \\n> [!WARNING]\\n>  For an initiating <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity (a <xref:System.ServiceModel.Activities.TransactedReceiveScope> that contains a <xref:System.ServiceModel.Activities.Receive> activity with <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> set to `true`), the transaction is created before the runtime starts to execute the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity. This transaction is not ambient at the workflow activity layer, but it is ambient in the underlying persistence layers. If execution of the workflow encounters a <xref:System.Activities.Statements.Persist> activity before the <xref:System.ServiceModel.Activities.TransactedReceiveScope> activity, the runtime tries to persist under the ambient transaction. This behavior causes a block until the transaction is completed. Because the workflow execution has not reached the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> section, the transaction cannot finish. This deadlock causes the workflow to stop responding until the transaction times out. When the transaction times out, the newly created instance is aborted.  \\n  \\n> [!IMPORTANT]\\n>  Whenever you use a <xref:System.ServiceModel.Activities.TransactedReceiveScope> it is recommended to place all Receives in the workflow within <xref:System.ServiceModel.Activities.TransactedReceiveScope> activities.  \\n  \\n> [!IMPORTANT]\\n>  When using <xref:System.ServiceModel.Activities.TransactedReceiveScope> and messages arrive in the incorrect order, the workflow will be aborted when trying to deliver the first out of order message. You must make sure your workflow is always at a consistent stopping point when the workflow idles. This will allow you to restart the workflow from a previous persistence point should the workflow be aborted.\"\n  example:\n  - \"The following example shows how to use the <xref:System.ServiceModel.Activities.TransactedReceiveScope> class in a <xref:System.Activities.Statements.Sequence> activity.  \\n  \\n [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class TransactedReceiveScope : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor\n  commentId: M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: TransactedReceiveScope()\n  nameWithType: TransactedReceiveScope.TransactedReceiveScope()\n  fullName: TransactedReceiveScope.TransactedReceiveScope()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> class.\n  syntax:\n    content: public TransactedReceiveScope ();\n    parameters: []\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body\n  commentId: P:System.ServiceModel.Activities.TransactedReceiveScope.Body\n  id: Body\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: Body\n  nameWithType: TransactedReceiveScope.Body\n  fullName: TransactedReceiveScope.Body\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the <xref href=\"System.Activities.Activity\"></xref> that makes up the body of the <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity.\n  remarks: The transaction is ambient for the entire duration of the body.\n  example:\n  - \"The following example shows how to set the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> property.  \\n  \\n [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]\"\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The body of the transacted receive scope.\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.Body*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)\n  fullName: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)\n  fullName: TransactedReceiveScope.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request\n  commentId: P:System.ServiceModel.Activities.TransactedReceiveScope.Request\n  id: Request\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: Request\n  nameWithType: TransactedReceiveScope.Request\n  fullName: TransactedReceiveScope.Request\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the <xref href=\"System.ServiceModel.Activities.Receive\"></xref> activity associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref> activity.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Request%2A> property.  \\n  \\n [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]\"\n  syntax:\n    content: public System.ServiceModel.Activities.Receive Request { get; set; }\n    return:\n      type: System.ServiceModel.Activities.Receive\n      description: The receive activity associated with the transacted receive scope.\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.Request*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables\n  commentId: P:System.ServiceModel.Activities.TransactedReceiveScope.Variables\n  id: Variables\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: TransactedReceiveScope.Variables\n  fullName: TransactedReceiveScope.Variables\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets the collection of <xref href=\"System.Activities.Variable\"></xref> associated with this <xref href=\"System.ServiceModel.Activities.TransactedReceiveScope\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the <xref:System.ServiceModel.Activities.TransactedReceiveScope.Variables%2A> property.  \\n  \\n [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The variables associated with the transacted receive scope.\n  overload: System.ServiceModel.Activities.TransactedReceiveScope.Variables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: TransactedReceiveScope()\n  nameWithType: TransactedReceiveScope.TransactedReceiveScope()\n  fullName: TransactedReceiveScope.TransactedReceiveScope()\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactedReceiveScope.Body\n  fullName: TransactedReceiveScope.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)\n  fullName: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)\n  fullName: TransactedReceiveScope.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Request\n  nameWithType: TransactedReceiveScope.Request\n  fullName: TransactedReceiveScope.Request\n- uid: System.ServiceModel.Activities.Receive\n  parent: System.ServiceModel.Activities\n  isExternal: false\n  name: Receive\n  nameWithType: Receive\n  fullName: System.ServiceModel.Activities.Receive\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Variables\n  nameWithType: TransactedReceiveScope.Variables\n  fullName: TransactedReceiveScope.Variables\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: TransactedReceiveScope\n  nameWithType: TransactedReceiveScope.TransactedReceiveScope\n  fullName: TransactedReceiveScope.TransactedReceiveScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactedReceiveScope.Body\n  fullName: TransactedReceiveScope.Body\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TransactedReceiveScope.CacheMetadata\n  fullName: TransactedReceiveScope.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Execute\n  nameWithType: TransactedReceiveScope.Execute\n  fullName: TransactedReceiveScope.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Request\n  nameWithType: TransactedReceiveScope.Request\n  fullName: TransactedReceiveScope.Request\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables*\n  parent: System.ServiceModel.Activities.TransactedReceiveScope\n  isExternal: false\n  name: Variables\n  nameWithType: TransactedReceiveScope.Variables\n  fullName: TransactedReceiveScope.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activities/TransactedReceiveScope.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}