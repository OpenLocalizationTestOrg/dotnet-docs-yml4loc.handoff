{"nodes":[{"content":"Contains information required to perform schema importation using the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> and <xref href=\"System.Web.Services.Description.ServiceDescriptionImporter\"></xref> infrastructure.","nodes":[{"pos":[0,229],"content":"Contains information required to perform schema importation using the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlSerializer\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Web.Services.Description.ServiceDescriptionImporter\"&gt;&lt;/xref&gt;</ph> infrastructure.","source":"Contains information required to perform schema importation using the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> and <xref href=\"System.Web.Services.Description.ServiceDescriptionImporter\"></xref> infrastructure."}],"pos":[528,758],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.WrappedOptions> is used by the <xref:System.ServiceModel.Description.XmlSerializerMessageContractImporter> and the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). The <xref:System.ServiceModel.Channels.WrappedOptions> class controls whether special-casing is used for document-literal styled documents with wrapped parameters. Use the **/wrapped** switch with the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing.","nodes":[{"pos":[0,632],"content":"The <xref:System.ServiceModel.Channels.WrappedOptions> is used by the <xref:System.ServiceModel.Description.XmlSerializerMessageContractImporter> and the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). The <xref:System.ServiceModel.Channels.WrappedOptions> class controls whether special-casing is used for document-literal styled documents with wrapped parameters. Use the **/wrapped** switch with the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WrappedOptions&gt;</ph> is used by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.XmlSerializerMessageContractImporter&gt;</ph> and the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.","pos":[0,277],"source":"The <xref:System.ServiceModel.Channels.WrappedOptions> is used by the <xref:System.ServiceModel.Description.XmlSerializerMessageContractImporter> and the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WrappedOptions&gt;</ph> class controls whether special-casing is used for document-literal styled documents with wrapped parameters.","pos":[278,441],"source":" The <xref:System.ServiceModel.Channels.WrappedOptions> class controls whether special-casing is used for document-literal styled documents with wrapped parameters."},{"content":"Use the <bpt id=\"p1\">**</bpt>/wrapped<ept id=\"p1\">**</ept> switch with the <bpt id=\"p2\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p2\">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool to specify normal casing.","pos":[442,632],"source":" Use the **/wrapped** switch with the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing."}]}],"pos":[769,1402],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WrappedOptions\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.WrappedOptions\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WrappedOptions\"></xref> class."}],"pos":[2774,2880],"yaml":true},{"content":"Gets or sets a value that indicates whether special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped.","nodes":[{"pos":[0,143],"content":"Gets or sets a value that indicates whether special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped.","nodes":[{"content":"Gets or sets a value that indicates whether special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped.","pos":[0,143]}]}],"pos":[4003,4147],"yaml":true},{"content":"`true` if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,159],"content":"`true` if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,129],"source":"`true` if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[130,159],"source":" The default value is `false`."}]}],"pos":[4266,4428],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.WrappedOptions\n  commentId: T:System.ServiceModel.Channels.WrappedOptions\n  id: WrappedOptions\n  children:\n  - System.ServiceModel.Channels.WrappedOptions.#ctor\n  - System.ServiceModel.Channels.WrappedOptions.WrappedFlag\n  langs:\n  - csharp\n  name: WrappedOptions\n  nameWithType: WrappedOptions\n  fullName: System.ServiceModel.Channels.WrappedOptions\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Contains information required to perform schema importation using the <xref href=\"System.Xml.Serialization.XmlSerializer\"></xref> and <xref href=\"System.Web.Services.Description.ServiceDescriptionImporter\"></xref> infrastructure.\n  remarks: The <xref:System.ServiceModel.Channels.WrappedOptions> is used by the <xref:System.ServiceModel.Description.XmlSerializerMessageContractImporter> and the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). The <xref:System.ServiceModel.Channels.WrappedOptions> class controls whether special-casing is used for document-literal styled documents with wrapped parameters. Use the **/wrapped** switch with the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing.\n  syntax:\n    content: public class WrappedOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WrappedOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.WrappedOptions.#ctor\n  commentId: M:System.ServiceModel.Channels.WrappedOptions.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.WrappedOptions\n  langs:\n  - csharp\n  name: WrappedOptions()\n  nameWithType: WrappedOptions.WrappedOptions()\n  fullName: WrappedOptions.WrappedOptions()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WrappedOptions\"></xref> class.\n  syntax:\n    content: public WrappedOptions ();\n    parameters: []\n  overload: System.ServiceModel.Channels.WrappedOptions.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WrappedOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.WrappedOptions.WrappedFlag\n  commentId: P:System.ServiceModel.Channels.WrappedOptions.WrappedFlag\n  id: WrappedFlag\n  parent: System.ServiceModel.Channels.WrappedOptions\n  langs:\n  - csharp\n  name: WrappedFlag\n  nameWithType: WrappedOptions.WrappedFlag\n  fullName: WrappedOptions.WrappedFlag\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped.\n  syntax:\n    content: public bool WrappedFlag { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, `false`. The default value is `false`.'\n  overload: System.ServiceModel.Channels.WrappedOptions.WrappedFlag*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WrappedOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.WrappedOptions.#ctor\n  parent: System.ServiceModel.Channels.WrappedOptions\n  isExternal: false\n  name: WrappedOptions()\n  nameWithType: WrappedOptions.WrappedOptions()\n  fullName: WrappedOptions.WrappedOptions()\n- uid: System.ServiceModel.Channels.WrappedOptions.WrappedFlag\n  parent: System.ServiceModel.Channels.WrappedOptions\n  isExternal: false\n  name: WrappedFlag\n  nameWithType: WrappedOptions.WrappedFlag\n  fullName: WrappedOptions.WrappedFlag\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.WrappedOptions.#ctor*\n  parent: System.ServiceModel.Channels.WrappedOptions\n  isExternal: false\n  name: WrappedOptions\n  nameWithType: WrappedOptions.WrappedOptions\n  fullName: WrappedOptions.WrappedOptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WrappedOptions.xml\n- uid: System.ServiceModel.Channels.WrappedOptions.WrappedFlag*\n  parent: System.ServiceModel.Channels.WrappedOptions\n  isExternal: false\n  name: WrappedFlag\n  nameWithType: WrappedOptions.WrappedFlag\n  fullName: WrappedOptions.WrappedFlag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WrappedOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}