{"nodes":[{"content":"Provides information and event data that is associated with the <xref href=\"System.Windows.Data.CollectionViewSource.Filter\"></xref> event.","nodes":[{"pos":[0,139],"content":"Provides information and event data that is associated with the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.CollectionViewSource.Filter\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides information and event data that is associated with the <xref href=\"System.Windows.Data.CollectionViewSource.Filter\"></xref> event."}],"pos":[480,620],"yaml":true},{"content":"Gets or sets a value that indicates whether the item passes the filter.","nodes":[{"pos":[0,71],"content":"Gets or sets a value that indicates whether the item passes the filter.","nodes":[{"content":"Gets or sets a value that indicates whether the item passes the filter.","pos":[0,71]}]}],"pos":[3218,3290],"yaml":true},{"content":"`true` if the item passes the filter; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,81],"content":"`true` if the item passes the filter; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the item passes the filter; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,57],"source":"`true` if the item passes the filter; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[58,81],"source":" The default is `false`."}]}],"pos":[4627,4711],"yaml":true},{"content":"Gets the object that the filter should test.","nodes":[{"pos":[0,44],"content":"Gets the object that the filter should test.","nodes":[{"content":"Gets the object that the filter should test.","pos":[0,44]}]}],"pos":[5659,5704],"yaml":true},{"content":"The object that the filter should test. The default is `null`.","nodes":[{"pos":[0,62],"content":"The object that the filter should test. The default is `null`.","nodes":[{"content":"The object that the filter should test.","pos":[0,39]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[40,62],"source":" The default is `null`."}]}],"pos":[7033,7096],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Data.FilterEventArgs\n  commentId: T:System.Windows.Data.FilterEventArgs\n  id: FilterEventArgs\n  children:\n  - System.Windows.Data.FilterEventArgs.Accepted\n  - System.Windows.Data.FilterEventArgs.Item\n  langs:\n  - csharp\n  name: FilterEventArgs\n  nameWithType: FilterEventArgs\n  fullName: System.Windows.Data.FilterEventArgs\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Provides information and event data that is associated with the <xref href=\"System.Windows.Data.CollectionViewSource.Filter\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \\n  \\n [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]\\n [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  \\n  \\n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=fullName> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \\n  \\n [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]\\n [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  \\n  \\n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).\"\n  syntax:\n    content: 'public class FilterEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/FilterEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.FilterEventArgs.Accepted\n  commentId: P:System.Windows.Data.FilterEventArgs.Accepted\n  id: Accepted\n  parent: System.Windows.Data.FilterEventArgs\n  langs:\n  - csharp\n  name: Accepted\n  nameWithType: FilterEventArgs.Accepted\n  fullName: FilterEventArgs.Accepted\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether the item passes the filter.\n  remarks: ''\n  example:\n  - \"The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \\n  \\n [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]\\n [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  \\n  \\n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=fullName> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \\n  \\n [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]\\n [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  \\n  \\n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).\"\n  syntax:\n    content: public bool Accepted { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the item passes the filter; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Data.FilterEventArgs.Accepted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/FilterEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.FilterEventArgs.Item\n  commentId: P:System.Windows.Data.FilterEventArgs.Item\n  id: Item\n  parent: System.Windows.Data.FilterEventArgs\n  langs:\n  - csharp\n  name: Item\n  nameWithType: FilterEventArgs.Item\n  fullName: FilterEventArgs.Item\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the object that the filter should test.\n  remarks: ''\n  example:\n  - \"The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \\n  \\n [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]\\n [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  \\n  \\n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=fullName> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \\n  \\n [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]\\n [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  \\n  \\n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).\"\n  syntax:\n    content: public object Item { get; }\n    return:\n      type: System.Object\n      description: The object that the filter should test. The default is `null`.\n  overload: System.Windows.Data.FilterEventArgs.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/FilterEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Data.FilterEventArgs.Accepted\n  parent: System.Windows.Data.FilterEventArgs\n  isExternal: false\n  name: Accepted\n  nameWithType: FilterEventArgs.Accepted\n  fullName: FilterEventArgs.Accepted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Data.FilterEventArgs.Item\n  parent: System.Windows.Data.FilterEventArgs\n  isExternal: false\n  name: Item\n  nameWithType: FilterEventArgs.Item\n  fullName: FilterEventArgs.Item\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Data.FilterEventArgs.Accepted*\n  parent: System.Windows.Data.FilterEventArgs\n  isExternal: false\n  name: Accepted\n  nameWithType: FilterEventArgs.Accepted\n  fullName: FilterEventArgs.Accepted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/FilterEventArgs.xml\n- uid: System.Windows.Data.FilterEventArgs.Item*\n  parent: System.Windows.Data.FilterEventArgs\n  isExternal: false\n  name: Item\n  nameWithType: FilterEventArgs.Item\n  fullName: FilterEventArgs.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/FilterEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}