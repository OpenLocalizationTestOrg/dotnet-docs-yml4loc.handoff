### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.TypeBinaryExpression
  commentId: T:System.Linq.Expressions.TypeBinaryExpression
  id: TypeBinaryExpression
  children:
  - System.Linq.Expressions.TypeBinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.TypeBinaryExpression.Expression
  - System.Linq.Expressions.TypeBinaryExpression.NodeType
  - System.Linq.Expressions.TypeBinaryExpression.Type
  - System.Linq.Expressions.TypeBinaryExpression.TypeOperand
  - System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)
  langs:
  - csharp
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
  type: Class
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Represents an operation between an expression and a type.
  remarks: "A type test is an example of an operation between an expression and a type.  \n  \n Use the <xref:System.Linq.Expressions.Expression.TypeIs%2A> factory method to create a <xref:System.Linq.Expressions.TypeBinaryExpression>.  \n  \n The value of the <xref:System.Linq.Expressions.Expression.NodeType%2A> property of a <xref:System.Linq.Expressions.TypeBinaryExpression> object is <xref:System.Linq.Expressions.ExpressionType.TypeIs>."
  example:
  - "The following example creates a <xref:System.Linq.Expressions.TypeBinaryExpression> object that represents a type test of a string value against the <xref:System.Int32> type.  \n  \n [!code-csharp[System.Linq.Expressions.Expression#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#12)]\n [!code-vb[System.Linq.Expressions.Expression#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#12)]"
  syntax:
    content: 'public sealed class TypeBinaryExpression : System.Linq.Expressions.Expression'
  inheritance:
  - System.Object
  - System.Linq.Expressions.Expression
  implements: []
  inheritedMembers:
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.TypeBinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  commentId: M:System.Linq.Expressions.TypeBinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: Accept(ExpressionVisitor)
  nameWithType: TypeBinaryExpression.Accept(ExpressionVisitor)
  fullName: TypeBinaryExpression.Accept(ExpressionVisitor)
  type: Method
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  syntax:
    content: protected override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: ''
    return:
      type: System.Linq.Expressions.Expression
      description: ''
  overload: System.Linq.Expressions.TypeBinaryExpression.Accept*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.Expression
  commentId: P:System.Linq.Expressions.TypeBinaryExpression.Expression
  id: Expression
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: Expression
  nameWithType: TypeBinaryExpression.Expression
  fullName: TypeBinaryExpression.Expression
  type: Property
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the expression operand of a type test operation.
  syntax:
    content: public System.Linq.Expressions.Expression Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: An <xref href="System.Linq.Expressions.Expression"></xref> that represents the expression operand of a type test operation.
  overload: System.Linq.Expressions.TypeBinaryExpression.Expression*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.TypeBinaryExpression.NodeType
  commentId: P:System.Linq.Expressions.TypeBinaryExpression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: NodeType
  nameWithType: TypeBinaryExpression.NodeType
  fullName: TypeBinaryExpression.NodeType
  type: Property
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Returns the node type of this Expression. Extension nodes should return <xref href="System.Linq.Expressions.ExpressionType.Extension"></xref> when overriding this method.
  syntax:
    content: public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }
    return:
      type: System.Linq.Expressions.ExpressionType
      description: The <xref href="System.Linq.Expressions.ExpressionType"></xref> of the expression.
  overload: System.Linq.Expressions.TypeBinaryExpression.NodeType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.TypeBinaryExpression.Type
  commentId: P:System.Linq.Expressions.TypeBinaryExpression.Type
  id: Type
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: Type
  nameWithType: TypeBinaryExpression.Type
  fullName: TypeBinaryExpression.Type
  type: Property
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the static type of the expression that this <xref href="System.Linq.Expressions.TypeBinaryExpression.Expression"></xref> represents.
  syntax:
    content: public override sealed Type Type { get; }
    return:
      type: System.Type
      description: The <xref href="System.Linq.Expressions.TypeBinaryExpression.Type"></xref> that represents the static type of the expression.
  overload: System.Linq.Expressions.TypeBinaryExpression.Type*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.TypeBinaryExpression.TypeOperand
  commentId: P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand
  id: TypeOperand
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: TypeOperand
  nameWithType: TypeBinaryExpression.TypeOperand
  fullName: TypeBinaryExpression.TypeOperand
  type: Property
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the type operand of a type test operation.
  syntax:
    content: public Type TypeOperand { get; }
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type operand of a type test operation.
  overload: System.Linq.Expressions.TypeBinaryExpression.TypeOperand*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.TypeBinaryExpression
  langs:
  - csharp
  name: Update(Expression)
  nameWithType: TypeBinaryExpression.Update(Expression)
  fullName: TypeBinaryExpression.Update(Expression)
  type: Method
  assemblies:
  - System.Linq.Expressions
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.
  syntax:
    content: public System.Linq.Expressions.TypeBinaryExpression Update (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.TypeBinaryExpression.Expression"></xref> property of the result.
    return:
      type: System.Linq.Expressions.TypeBinaryExpression
      description: This expression if no children are changed or an expression with the updated children.
  overload: System.Linq.Expressions.TypeBinaryExpression.Update*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
  ms.technology:
  - dotnet-standard
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
references:
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.TypeBinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Accept(ExpressionVisitor)
  nameWithType: TypeBinaryExpression.Accept(ExpressionVisitor)
  fullName: TypeBinaryExpression.Accept(ExpressionVisitor)
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.TypeBinaryExpression.Expression
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Expression
  nameWithType: TypeBinaryExpression.Expression
  fullName: TypeBinaryExpression.Expression
- uid: System.Linq.Expressions.TypeBinaryExpression.NodeType
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: NodeType
  nameWithType: TypeBinaryExpression.NodeType
  fullName: TypeBinaryExpression.NodeType
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.TypeBinaryExpression.Type
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Type
  nameWithType: TypeBinaryExpression.Type
  fullName: TypeBinaryExpression.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.TypeBinaryExpression.TypeOperand
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: TypeOperand
  nameWithType: TypeBinaryExpression.TypeOperand
  fullName: TypeBinaryExpression.TypeOperand
- uid: System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Update(Expression)
  nameWithType: TypeBinaryExpression.Update(Expression)
  fullName: TypeBinaryExpression.Update(Expression)
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.TypeBinaryExpression.Accept*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Accept
  nameWithType: TypeBinaryExpression.Accept
  fullName: TypeBinaryExpression.Accept
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.Expression*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Expression
  nameWithType: TypeBinaryExpression.Expression
  fullName: TypeBinaryExpression.Expression
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.NodeType*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: NodeType
  nameWithType: TypeBinaryExpression.NodeType
  fullName: TypeBinaryExpression.NodeType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.Type*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Type
  nameWithType: TypeBinaryExpression.Type
  fullName: TypeBinaryExpression.Type
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.TypeOperand*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: TypeOperand
  nameWithType: TypeBinaryExpression.TypeOperand
  fullName: TypeBinaryExpression.TypeOperand
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Linq.Expressions.TypeBinaryExpression.Update*
  parent: System.Linq.Expressions.TypeBinaryExpression
  isExternal: false
  name: Update
  nameWithType: TypeBinaryExpression.Update
  fullName: TypeBinaryExpression.Update
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/TypeBinaryExpression.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Linq.Expressions.Expression.ToString
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ToString()
  nameWithType: Expression.ToString()
  fullName: Expression.ToString()
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add(Expression, Expression)
  nameWithType: Expression.Add(Expression, Expression)
  fullName: Expression.Add(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add(Expression, Expression, MethodInfo)
  nameWithType: Expression.Add(Expression, Expression, MethodInfo)
  fullName: Expression.Add(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression, Expression)
  nameWithType: Expression.AddAssign(Expression, Expression)
  fullName: Expression.AddAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)
  fullName: Expression.AddAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression, Expression)
  nameWithType: Expression.AddAssignChecked(Expression, Expression)
  fullName: Expression.AddAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)
  fullName: Expression.AddAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked(Expression, Expression)
  nameWithType: Expression.AddChecked(Expression, Expression)
  fullName: Expression.AddChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)
  fullName: Expression.AddChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And(Expression, Expression)
  nameWithType: Expression.And(Expression, Expression)
  fullName: Expression.And(Expression, Expression)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And(Expression, Expression, MethodInfo)
  nameWithType: Expression.And(Expression, Expression, MethodInfo)
  fullName: Expression.And(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso(Expression, Expression, MethodInfo)
  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)
  fullName: Expression.AndAlso(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso(Expression, Expression)
  nameWithType: Expression.AndAlso(Expression, Expression)
  fullName: Expression.AndAlso(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression, Expression)
  nameWithType: Expression.AndAssign(Expression, Expression)
  fullName: Expression.AndAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)
  fullName: Expression.AndAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess(Expression, IEnumerable<Expression>)
  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)
  fullName: Expression.ArrayAccess(Expression, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess(Expression, Expression[])
  nameWithType: Expression.ArrayAccess(Expression, Expression[])
  fullName: Expression.ArrayAccess(Expression, Expression[])
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression, Expression[])
  nameWithType: Expression.ArrayIndex(Expression, Expression[])
  fullName: Expression.ArrayIndex(Expression, Expression[])
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression, IEnumerable<Expression>)
  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)
  fullName: Expression.ArrayIndex(Expression, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression, Expression)
  nameWithType: Expression.ArrayIndex(Expression, Expression)
  fullName: Expression.ArrayIndex(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayLength(Expression)
  nameWithType: Expression.ArrayLength(Expression)
  fullName: Expression.ArrayLength(Expression)
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Assign(Expression, Expression)
  nameWithType: Expression.Assign(Expression, Expression)
  fullName: Expression.Assign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind(MemberInfo, Expression)
  nameWithType: Expression.Bind(MemberInfo, Expression)
  fullName: Expression.Bind(MemberInfo, Expression)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind(MethodInfo, Expression)
  nameWithType: Expression.Bind(MethodInfo, Expression)
  fullName: Expression.Bind(MethodInfo, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression)
  fullName: Expression.Block(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression, Expression, Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)
  fullName: Expression.Block(Expression, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])
  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])
  fullName: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type, Expression[])
  nameWithType: Expression.Block(Type, Expression[])
  fullName: Expression.Block(Type, Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression, Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)
  fullName: Expression.Block(Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression)
  nameWithType: Expression.Block(Expression, Expression)
  fullName: Expression.Block(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<ParameterExpression>, Expression[])
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])
  fullName: Expression.Block(IEnumerable<ParameterExpression>, Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression[])
  nameWithType: Expression.Block(Expression[])
  fullName: Expression.Block(Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<Expression>)
  fullName: Expression.Block(IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type, IEnumerable<Expression>)
  nameWithType: Expression.Block(Type, IEnumerable<Expression>)
  fullName: Expression.Block(Type, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget)
  nameWithType: Expression.Break(LabelTarget)
  fullName: Expression.Break(LabelTarget)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget, Expression)
  nameWithType: Expression.Break(LabelTarget, Expression)
  fullName: Expression.Break(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget, Type)
  nameWithType: Expression.Break(LabelTarget, Type)
  fullName: Expression.Break(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget, Expression, Type)
  nameWithType: Expression.Break(LabelTarget, Expression, Type)
  fullName: Expression.Break(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
  fullName: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, MethodInfo, Expression, Expression, Expression)
  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)
  fullName: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Type, String, Type[], Expression[])
  nameWithType: Expression.Call(Type, String, Type[], Expression[])
  fullName: Expression.Call(Type, String, Type[], Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression, Expression, Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)
  fullName: Expression.Call(MethodInfo, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, String, Type[], Expression[])
  nameWithType: Expression.Call(Expression, String, Type[], Expression[])
  fullName: Expression.Call(Expression, String, Type[], Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, MethodInfo, Expression, Expression)
  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)
  fullName: Expression.Call(Expression, MethodInfo, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression, Expression, Expression, Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)
  fullName: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, MethodInfo, Expression[])
  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])
  fullName: Expression.Call(Expression, MethodInfo, Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, MethodInfo, IEnumerable<Expression>)
  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)
  fullName: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression[])
  nameWithType: Expression.Call(MethodInfo, Expression[])
  fullName: Expression.Call(MethodInfo, Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression)
  nameWithType: Expression.Call(MethodInfo, Expression)
  fullName: Expression.Call(MethodInfo, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, IEnumerable<Expression>)
  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)
  fullName: Expression.Call(MethodInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression, MethodInfo)
  nameWithType: Expression.Call(Expression, MethodInfo)
  fullName: Expression.Call(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo, Expression, Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression)
  fullName: Expression.Call(MethodInfo, Expression, Expression)
- uid: System.Linq.Expressions.Expression.CanReduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: CanReduce
  nameWithType: Expression.CanReduce
  fullName: Expression.CanReduce
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression, Expression)
  nameWithType: Expression.Catch(ParameterExpression, Expression)
  fullName: Expression.Catch(ParameterExpression, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(Type, Expression)
  nameWithType: Expression.Catch(Type, Expression)
  fullName: Expression.Catch(Type, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression, Expression, Expression)
  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)
  fullName: Expression.Catch(ParameterExpression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(Type, Expression, Expression)
  nameWithType: Expression.Catch(Type, Expression, Expression)
  fullName: Expression.Catch(Type, Expression, Expression)
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ClearDebugInfo(SymbolDocumentInfo)
  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)
  fullName: Expression.ClearDebugInfo(SymbolDocumentInfo)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression, Expression, LambdaExpression)
  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)
  fullName: Expression.Coalesce(Expression, Expression, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression, Expression)
  nameWithType: Expression.Coalesce(Expression, Expression)
  fullName: Expression.Coalesce(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition(Expression, Expression, Expression)
  nameWithType: Expression.Condition(Expression, Expression, Expression)
  fullName: Expression.Condition(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition(Expression, Expression, Expression, Type)
  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)
  fullName: Expression.Condition(Expression, Expression, Expression, Type)
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant(Object)
  nameWithType: Expression.Constant(Object)
  fullName: Expression.Constant(Object)
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant(Object, Type)
  nameWithType: Expression.Constant(Object, Type)
  fullName: Expression.Constant(Object, Type)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue(LabelTarget)
  nameWithType: Expression.Continue(LabelTarget)
  fullName: Expression.Continue(LabelTarget)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue(LabelTarget, Type)
  nameWithType: Expression.Continue(LabelTarget, Type)
  fullName: Expression.Continue(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert(Expression, Type)
  nameWithType: Expression.Convert(Expression, Type)
  fullName: Expression.Convert(Expression, Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert(Expression, Type, MethodInfo)
  nameWithType: Expression.Convert(Expression, Type, MethodInfo)
  fullName: Expression.Convert(Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked(Expression, Type)
  nameWithType: Expression.ConvertChecked(Expression, Type)
  fullName: Expression.ConvertChecked(Expression, Type)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked(Expression, Type, MethodInfo)
  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)
  fullName: Expression.ConvertChecked(Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)
  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)
  fullName: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement(Expression)
  nameWithType: Expression.Decrement(Expression)
  fullName: Expression.Decrement(Expression)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement(Expression, MethodInfo)
  nameWithType: Expression.Decrement(Expression, MethodInfo)
  fullName: Expression.Decrement(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Default(Type)
  nameWithType: Expression.Default(Type)
  fullName: Expression.Default(Type)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide(Expression, Expression)
  nameWithType: Expression.Divide(Expression, Expression)
  fullName: Expression.Divide(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide(Expression, Expression, MethodInfo)
  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)
  fullName: Expression.Divide(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression, Expression)
  nameWithType: Expression.DivideAssign(Expression, Expression)
  fullName: Expression.DivideAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)
  fullName: Expression.DivideAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  fullName: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression)
  fullName: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  fullName: Expression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, Expression)
  fullName: Expression.Dynamic(CallSiteBinder, Type, Expression)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  fullName: Expression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression[])
  nameWithType: Expression.Dynamic(CallSiteBinder, Type, Expression[])
  fullName: Expression.Dynamic(CallSiteBinder, Type, Expression[])
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit(MethodInfo, IEnumerable<Expression>)
  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)
  fullName: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit(MethodInfo, Expression[])
  nameWithType: Expression.ElementInit(MethodInfo, Expression[])
  fullName: Expression.ElementInit(MethodInfo, Expression[])
- uid: System.Linq.Expressions.Expression.Empty
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Empty()
  nameWithType: Expression.Empty()
  fullName: Expression.Empty()
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal(Expression, Expression)
  nameWithType: Expression.Equal(Expression, Expression)
  fullName: Expression.Equal(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.Equal(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr(Expression, Expression, MethodInfo)
  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)
  fullName: Expression.ExclusiveOr(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr(Expression, Expression)
  nameWithType: Expression.ExclusiveOr(Expression, Expression)
  fullName: Expression.ExclusiveOr(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)
  fullName: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression, Expression)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)
  fullName: Expression.ExclusiveOrAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression, FieldInfo)
  nameWithType: Expression.Field(Expression, FieldInfo)
  fullName: Expression.Field(Expression, FieldInfo)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression, String)
  nameWithType: Expression.Field(Expression, String)
  fullName: Expression.Field(Expression, String)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression, Type, String)
  nameWithType: Expression.Field(Expression, Type, String)
  fullName: Expression.Field(Expression, Type, String)
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetActionType(Type[])
  nameWithType: Expression.GetActionType(Type[])
  fullName: Expression.GetActionType(Type[])
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetDelegateType(Type[])
  nameWithType: Expression.GetDelegateType(Type[])
  fullName: Expression.GetDelegateType(Type[])
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetFuncType(Type[])
  nameWithType: Expression.GetFuncType(Type[])
  fullName: Expression.GetFuncType(Type[])
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget, Expression, Type)
  nameWithType: Expression.Goto(LabelTarget, Expression, Type)
  fullName: Expression.Goto(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget, Type)
  nameWithType: Expression.Goto(LabelTarget, Type)
  fullName: Expression.Goto(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget)
  nameWithType: Expression.Goto(LabelTarget)
  fullName: Expression.Goto(LabelTarget)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget, Expression)
  nameWithType: Expression.Goto(LabelTarget, Expression)
  fullName: Expression.Goto(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan(Expression, Expression)
  nameWithType: Expression.GreaterThan(Expression, Expression)
  fullName: Expression.GreaterThan(Expression, Expression)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual(Expression, Expression)
  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)
  fullName: Expression.GreaterThanOrEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThen(Expression, Expression)
  nameWithType: Expression.IfThen(Expression, Expression)
  fullName: Expression.IfThen(Expression, Expression)
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThenElse(Expression, Expression, Expression)
  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)
  fullName: Expression.IfThenElse(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment(Expression, MethodInfo)
  nameWithType: Expression.Increment(Expression, MethodInfo)
  fullName: Expression.Increment(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment(Expression)
  nameWithType: Expression.Increment(Expression)
  fullName: Expression.Increment(Expression)
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke(Expression, Expression[])
  nameWithType: Expression.Invoke(Expression, Expression[])
  fullName: Expression.Invoke(Expression, Expression[])
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke(Expression, IEnumerable<Expression>)
  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)
  fullName: Expression.Invoke(Expression, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse(Expression)
  nameWithType: Expression.IsFalse(Expression)
  fullName: Expression.IsFalse(Expression)
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse(Expression, MethodInfo)
  nameWithType: Expression.IsFalse(Expression, MethodInfo)
  fullName: Expression.IsFalse(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue(Expression)
  nameWithType: Expression.IsTrue(Expression)
  fullName: Expression.IsTrue(Expression)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue(Expression, MethodInfo)
  nameWithType: Expression.IsTrue(Expression, MethodInfo)
  fullName: Expression.IsTrue(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label()
  nameWithType: Expression.Label()
  fullName: Expression.Label()
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget)
  nameWithType: Expression.Label(LabelTarget)
  fullName: Expression.Label(LabelTarget)
- uid: System.Linq.Expressions.Expression.Label(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(String)
  nameWithType: Expression.Label(String)
  fullName: Expression.Label(String)
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(Type)
  nameWithType: Expression.Label(Type)
  fullName: Expression.Label(Type)
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget, Expression)
  nameWithType: Expression.Label(LabelTarget, Expression)
  fullName: Expression.Label(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(Type, String)
  nameWithType: Expression.Label(Type, String)
  fullName: Expression.Label(Type, String)
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, ParameterExpression[])
  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])
  fullName: Expression.Lambda(Type, Expression, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, Boolean, ParameterExpression[])
  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])
  fullName: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, Boolean, ParameterExpression[])
  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])
  fullName: Expression.Lambda(Expression, Boolean, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, ParameterExpression[])
  nameWithType: Expression.Lambda(Expression, ParameterExpression[])
  fullName: Expression.Lambda(Expression, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])
  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])
  fullName: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, ParameterExpression[])
  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])
  fullName: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift(Expression, Expression)
  nameWithType: Expression.LeftShift(Expression, Expression)
  fullName: Expression.LeftShift(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift(Expression, Expression, MethodInfo)
  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)
  fullName: Expression.LeftShift(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression, Expression)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression)
  fullName: Expression.LeftShiftAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)
  fullName: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan(Expression, Expression)
  nameWithType: Expression.LessThan(Expression, Expression)
  fullName: Expression.LessThan(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual(Expression, Expression)
  nameWithType: Expression.LessThanOrEqual(Expression, Expression)
  fullName: Expression.LessThanOrEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MethodInfo, ElementInit[])
  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])
  fullName: Expression.ListBind(MethodInfo, ElementInit[])
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MethodInfo, IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)
  fullName: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MemberInfo, IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)
  fullName: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MemberInfo, ElementInit[])
  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])
  fullName: Expression.ListBind(MemberInfo, ElementInit[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, IEnumerable<ElementInit>)
  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)
  fullName: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)
  fullName: Expression.ListInit(NewExpression, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, ElementInit[])
  nameWithType: Expression.ListInit(NewExpression, ElementInit[])
  fullName: Expression.ListInit(NewExpression, ElementInit[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, Expression[])
  nameWithType: Expression.ListInit(NewExpression, Expression[])
  fullName: Expression.ListInit(NewExpression, Expression[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
  fullName: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, MethodInfo, Expression[])
  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])
  fullName: Expression.ListInit(NewExpression, MethodInfo, Expression[])
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression)
  nameWithType: Expression.Loop(Expression)
  fullName: Expression.Loop(Expression)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression, LabelTarget)
  nameWithType: Expression.Loop(Expression, LabelTarget)
  fullName: Expression.Loop(Expression, LabelTarget)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression, LabelTarget, LabelTarget)
  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)
  fullName: Expression.Loop(Expression, LabelTarget, LabelTarget)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType, Expression, Expression)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)
  fullName: Expression.MakeBinary(ExpressionType, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)
  fullName: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
  fullName: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression)
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, Expression)
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, Expression)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression[])
  nameWithType: Expression.MakeDynamic(Type, CallSiteBinder, Expression[])
  fullName: Expression.MakeDynamic(Type, CallSiteBinder, Expression[])
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
  fullName: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeMemberAccess(Expression, MemberInfo)
  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)
  fullName: Expression.MakeMemberAccess(Expression, MemberInfo)
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
  fullName: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary(ExpressionType, Expression, Type)
  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)
  fullName: Expression.MakeUnary(ExpressionType, Expression, Type)
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)
  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)
  fullName: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MethodInfo, MemberBinding[])
  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])
  fullName: Expression.MemberBind(MethodInfo, MemberBinding[])
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)
  fullName: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)
  fullName: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MemberInfo, MemberBinding[])
  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])
  fullName: Expression.MemberBind(MemberInfo, MemberBinding[])
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)
  fullName: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit(NewExpression, MemberBinding[])
  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])
  fullName: Expression.MemberInit(NewExpression, MemberBinding[])
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo(Expression, Expression)
  nameWithType: Expression.Modulo(Expression, Expression)
  fullName: Expression.Modulo(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo(Expression, Expression, MethodInfo)
  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)
  fullName: Expression.Modulo(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)
  fullName: Expression.ModuloAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression, Expression)
  nameWithType: Expression.ModuloAssign(Expression, Expression)
  fullName: Expression.ModuloAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply(Expression, Expression, MethodInfo)
  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)
  fullName: Expression.Multiply(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply(Expression, Expression)
  nameWithType: Expression.Multiply(Expression, Expression)
  fullName: Expression.Multiply(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression, Expression)
  nameWithType: Expression.MultiplyAssign(Expression, Expression)
  fullName: Expression.MultiplyAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)
  fullName: Expression.MultiplyAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression, Expression)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)
  fullName: Expression.MultiplyAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)
  fullName: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked(Expression, Expression)
  nameWithType: Expression.MultiplyChecked(Expression, Expression)
  fullName: Expression.MultiplyChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)
  fullName: Expression.MultiplyChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate(Expression, MethodInfo)
  nameWithType: Expression.Negate(Expression, MethodInfo)
  fullName: Expression.Negate(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate(Expression)
  nameWithType: Expression.Negate(Expression)
  fullName: Expression.Negate(Expression)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked(Expression)
  nameWithType: Expression.NegateChecked(Expression)
  fullName: Expression.NegateChecked(Expression)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked(Expression, MethodInfo)
  nameWithType: Expression.NegateChecked(Expression, MethodInfo)
  fullName: Expression.NegateChecked(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo)
  nameWithType: Expression.New(ConstructorInfo)
  fullName: Expression.New(ConstructorInfo)
- uid: System.Linq.Expressions.Expression.New(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(Type)
  nameWithType: Expression.New(Type)
  fullName: Expression.New(Type)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo, IEnumerable<Expression>)
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)
  fullName: Expression.New(ConstructorInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo, Expression[])
  nameWithType: Expression.New(ConstructorInfo, Expression[])
  fullName: Expression.New(ConstructorInfo, Expression[])
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
  fullName: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])
  fullName: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds(Type, Expression[])
  nameWithType: Expression.NewArrayBounds(Type, Expression[])
  fullName: Expression.NewArrayBounds(Type, Expression[])
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds(Type, IEnumerable<Expression>)
  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)
  fullName: Expression.NewArrayBounds(Type, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit(Type, IEnumerable<Expression>)
  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)
  fullName: Expression.NewArrayInit(Type, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit(Type, Expression[])
  nameWithType: Expression.NewArrayInit(Type, Expression[])
  fullName: Expression.NewArrayInit(Type, Expression[])
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not(Expression)
  nameWithType: Expression.Not(Expression)
  fullName: Expression.Not(Expression)
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not(Expression, MethodInfo)
  nameWithType: Expression.Not(Expression, MethodInfo)
  fullName: Expression.Not(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual(Expression, Expression)
  nameWithType: Expression.NotEqual(Expression, Expression)
  fullName: Expression.NotEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual(Expression, Expression, Boolean, MethodInfo)
  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement(Expression)
  nameWithType: Expression.OnesComplement(Expression)
  fullName: Expression.OnesComplement(Expression)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement(Expression, MethodInfo)
  nameWithType: Expression.OnesComplement(Expression, MethodInfo)
  fullName: Expression.OnesComplement(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or(Expression, Expression)
  nameWithType: Expression.Or(Expression, Expression)
  fullName: Expression.Or(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or(Expression, Expression, MethodInfo)
  nameWithType: Expression.Or(Expression, Expression, MethodInfo)
  fullName: Expression.Or(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression, Expression)
  nameWithType: Expression.OrAssign(Expression, Expression)
  fullName: Expression.OrAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)
  fullName: Expression.OrAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse(Expression, Expression)
  nameWithType: Expression.OrElse(Expression, Expression)
  fullName: Expression.OrElse(Expression, Expression)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse(Expression, Expression, MethodInfo)
  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)
  fullName: Expression.OrElse(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter(Type, String)
  nameWithType: Expression.Parameter(Type, String)
  fullName: Expression.Parameter(Type, String)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter(Type)
  nameWithType: Expression.Parameter(Type)
  fullName: Expression.Parameter(Type)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign(Expression, MethodInfo)
  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)
  fullName: Expression.PostDecrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign(Expression)
  nameWithType: Expression.PostDecrementAssign(Expression)
  fullName: Expression.PostDecrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign(Expression)
  nameWithType: Expression.PostIncrementAssign(Expression)
  fullName: Expression.PostIncrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign(Expression, MethodInfo)
  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)
  fullName: Expression.PostIncrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power(Expression, Expression)
  nameWithType: Expression.Power(Expression, Expression)
  fullName: Expression.Power(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power(Expression, Expression, MethodInfo)
  nameWithType: Expression.Power(Expression, Expression, MethodInfo)
  fullName: Expression.Power(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression, Expression)
  nameWithType: Expression.PowerAssign(Expression, Expression)
  fullName: Expression.PowerAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)
  fullName: Expression.PowerAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign(Expression)
  nameWithType: Expression.PreDecrementAssign(Expression)
  fullName: Expression.PreDecrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign(Expression, MethodInfo)
  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)
  fullName: Expression.PreDecrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign(Expression)
  nameWithType: Expression.PreIncrementAssign(Expression)
  fullName: Expression.PreIncrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign(Expression, MethodInfo)
  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)
  fullName: Expression.PreIncrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, String, Expression[])
  nameWithType: Expression.Property(Expression, String, Expression[])
  fullName: Expression.Property(Expression, String, Expression[])
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, PropertyInfo, Expression[])
  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])
  fullName: Expression.Property(Expression, PropertyInfo, Expression[])
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)
  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, Type, String)
  nameWithType: Expression.Property(Expression, Type, String)
  fullName: Expression.Property(Expression, Type, String)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, PropertyInfo)
  nameWithType: Expression.Property(Expression, PropertyInfo)
  fullName: Expression.Property(Expression, PropertyInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, MethodInfo)
  nameWithType: Expression.Property(Expression, MethodInfo)
  fullName: Expression.Property(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression, String)
  nameWithType: Expression.Property(Expression, String)
  fullName: Expression.Property(Expression, String)
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PropertyOrField(Expression, String)
  nameWithType: Expression.PropertyOrField(Expression, String)
  fullName: Expression.PropertyOrField(Expression, String)
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Quote(Expression)
  nameWithType: Expression.Quote(Expression)
  fullName: Expression.Quote(Expression)
- uid: System.Linq.Expressions.Expression.Reduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Reduce()
  nameWithType: Expression.Reduce()
  fullName: Expression.Reduce()
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceAndCheck()
  nameWithType: Expression.ReduceAndCheck()
  fullName: Expression.ReduceAndCheck()
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceExtensions()
  nameWithType: Expression.ReduceExtensions()
  fullName: Expression.ReduceExtensions()
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceEqual(Expression, Expression)
  nameWithType: Expression.ReferenceEqual(Expression, Expression)
  fullName: Expression.ReferenceEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceNotEqual(Expression, Expression)
  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)
  fullName: Expression.ReferenceNotEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow(Type)
  nameWithType: Expression.Rethrow(Type)
  fullName: Expression.Rethrow(Type)
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow()
  nameWithType: Expression.Rethrow()
  fullName: Expression.Rethrow()
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget)
  nameWithType: Expression.Return(LabelTarget)
  fullName: Expression.Return(LabelTarget)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget, Expression)
  nameWithType: Expression.Return(LabelTarget, Expression)
  fullName: Expression.Return(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget, Type)
  nameWithType: Expression.Return(LabelTarget, Type)
  fullName: Expression.Return(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget, Expression, Type)
  nameWithType: Expression.Return(LabelTarget, Expression, Type)
  fullName: Expression.Return(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift(Expression, Expression)
  nameWithType: Expression.RightShift(Expression, Expression)
  fullName: Expression.RightShift(Expression, Expression)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift(Expression, Expression, MethodInfo)
  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)
  fullName: Expression.RightShift(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression, Expression)
  nameWithType: Expression.RightShiftAssign(Expression, Expression)
  fullName: Expression.RightShiftAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)
  fullName: Expression.RightShiftAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables(ParameterExpression[])
  nameWithType: Expression.RuntimeVariables(ParameterExpression[])
  fullName: Expression.RuntimeVariables(ParameterExpression[])
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables(IEnumerable<ParameterExpression>)
  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
  fullName: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract(Expression, Expression)
  nameWithType: Expression.Subtract(Expression, Expression)
  fullName: Expression.Subtract(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract(Expression, Expression, MethodInfo)
  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)
  fullName: Expression.Subtract(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression, Expression)
  nameWithType: Expression.SubtractAssign(Expression, Expression)
  fullName: Expression.SubtractAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression, Expression, MethodInfo)
  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)
  fullName: Expression.SubtractAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression, Expression)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)
  fullName: Expression.SubtractAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)
  fullName: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked(Expression, Expression, MethodInfo)
  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)
  fullName: Expression.SubtractChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked(Expression, Expression)
  nameWithType: Expression.SubtractChecked(Expression, Expression)
  fullName: Expression.SubtractChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])
  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])
  fullName: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, SwitchCase[])
  nameWithType: Expression.Switch(Expression, SwitchCase[])
  fullName: Expression.Switch(Expression, SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, Expression, SwitchCase[])
  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])
  fullName: Expression.Switch(Expression, Expression, SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])
  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])
  fullName: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase(Expression, Expression[])
  nameWithType: Expression.SwitchCase(Expression, Expression[])
  fullName: Expression.SwitchCase(Expression, Expression[])
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase(Expression, IEnumerable<Expression>)
  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)
  fullName: Expression.SwitchCase(Expression, IEnumerable<Expression>)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String, Guid, Guid, Guid)
  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)
  fullName: Expression.SymbolDocument(String, Guid, Guid, Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String, Guid, Guid)
  nameWithType: Expression.SymbolDocument(String, Guid, Guid)
  fullName: Expression.SymbolDocument(String, Guid, Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String)
  nameWithType: Expression.SymbolDocument(String)
  fullName: Expression.SymbolDocument(String)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String, Guid)
  nameWithType: Expression.SymbolDocument(String, Guid)
  fullName: Expression.SymbolDocument(String, Guid)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw(Expression)
  nameWithType: Expression.Throw(Expression)
  fullName: Expression.Throw(Expression)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw(Expression, Type)
  nameWithType: Expression.Throw(Expression, Type)
  fullName: Expression.Throw(Expression, Type)
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatch(Expression, CatchBlock[])
  nameWithType: Expression.TryCatch(Expression, CatchBlock[])
  fullName: Expression.TryCatch(Expression, CatchBlock[])
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatchFinally(Expression, Expression, CatchBlock[])
  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])
  fullName: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFault(Expression, Expression)
  nameWithType: Expression.TryFault(Expression, Expression)
  fullName: Expression.TryFault(Expression, Expression)
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFinally(Expression, Expression)
  nameWithType: Expression.TryFinally(Expression, Expression)
  fullName: Expression.TryFinally(Expression, Expression)
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetActionType(Type[], Type)
  nameWithType: Expression.TryGetActionType(Type[], Type)
  fullName: Expression.TryGetActionType(Type[], Type)
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetFuncType(Type[], Type)
  nameWithType: Expression.TryGetFuncType(Type[], Type)
  fullName: Expression.TryGetFuncType(Type[], Type)
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeAs(Expression, Type)
  nameWithType: Expression.TypeAs(Expression, Type)
  fullName: Expression.TypeAs(Expression, Type)
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeEqual(Expression, Type)
  nameWithType: Expression.TypeEqual(Expression, Type)
  fullName: Expression.TypeEqual(Expression, Type)
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeIs(Expression, Type)
  nameWithType: Expression.TypeIs(Expression, Type)
  fullName: Expression.TypeIs(Expression, Type)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus(Expression, MethodInfo)
  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)
  fullName: Expression.UnaryPlus(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus(Expression)
  nameWithType: Expression.UnaryPlus(Expression)
  fullName: Expression.UnaryPlus(Expression)
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Unbox(Expression, Type)
  nameWithType: Expression.Unbox(Expression, Type)
  fullName: Expression.Unbox(Expression, Type)
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable(Type, String)
  nameWithType: Expression.Variable(Type, String)
  fullName: Expression.Variable(Type, String)
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable(Type)
  nameWithType: Expression.Variable(Type)
  fullName: Expression.Variable(Type)
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: VisitChildren(ExpressionVisitor)
  nameWithType: Expression.VisitChildren(ExpressionVisitor)
  fullName: Expression.VisitChildren(ExpressionVisitor)
