{"nodes":[{"content":"Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.","nodes":[{"pos":[0,137],"content":"Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.","nodes":[{"content":"Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.","pos":[0,137],"nodes":[{"content":"Represents a link between an event provider and an event log that the provider publishes events into.","pos":[0,101]},{"content":"This object cannot be instantiated.","pos":[102,137]}]}]}],"pos":[605,743],"yaml":true},{"content":"Gets the localized name of the event log.","nodes":[{"pos":[0,41],"content":"Gets the localized name of the event log.","nodes":[{"content":"Gets the localized name of the event log.","pos":[0,41]}]}],"pos":[2113,2155],"yaml":true},{"content":"Returns a string that contains the localized name of the event log.","nodes":[{"pos":[0,67],"content":"Returns a string that contains the localized name of the event log.","nodes":[{"content":"Returns a string that contains the localized name of the event log.","pos":[0,67]}]}],"pos":[2270,2338],"yaml":true},{"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.","nodes":[{"pos":[0,172],"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.","nodes":[{"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.","pos":[0,172],"nodes":[{"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider.","pos":[0,114]},{"content":"An imported event log is defined in a different provider.","pos":[115,172]}]}]}],"pos":[3392,3565],"yaml":true},{"content":"Returns `true` if the event log is imported by the event provider, and returns `false` if the event log is not imported by the event provider.","nodes":[{"pos":[0,142],"content":"Returns <ph id=\"ph1\">`true`</ph> if the event log is imported by the event provider, and returns <ph id=\"ph2\">`false`</ph> if the event log is not imported by the event provider.","source":"Returns `true` if the event log is imported by the event provider, and returns `false` if the event log is not imported by the event provider."}],"pos":[3678,3821],"yaml":true},{"content":"Gets the non-localized name of the event log associated with this object.","nodes":[{"pos":[0,73],"content":"Gets the non-localized name of the event log associated with this object.","nodes":[{"content":"Gets the non-localized name of the event log associated with this object.","pos":[0,73]}]}],"pos":[4856,4930],"yaml":true},{"content":"Returns a string that contains the non-localized name of the event log associated with this object.","nodes":[{"pos":[0,99],"content":"Returns a string that contains the non-localized name of the event log associated with this object.","nodes":[{"content":"Returns a string that contains the non-localized name of the event log associated with this object.","pos":[0,99]}]}],"pos":[5041,5141],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink\n  commentId: T:System.Diagnostics.Eventing.Reader.EventLogLink\n  id: EventLogLink\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  - System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  - System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  langs:\n  - csharp\n  name: EventLogLink\n  nameWithType: EventLogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.\n  syntax:\n    content: public sealed class EventLogLink\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  id: DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: EventLogLink.DisplayName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the localized name of the event log.\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: Returns a string that contains the localized name of the event log.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  id: IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: EventLogLink.IsImported\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.\n  syntax:\n    content: public bool IsImported { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if the event log is imported by the event provider, and returns `false` if the event log is not imported by the event provider.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  id: LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: EventLogLink.LogName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the non-localized name of the event log associated with this object.\n  syntax:\n    content: public string LogName { get; }\n    return:\n      type: System.String\n      description: Returns a string that contains the non-localized name of the event log associated with this object.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.LogName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: EventLogLink.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: EventLogLink.IsImported\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: EventLogLink.LogName\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: EventLogLink.DisplayName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: EventLogLink.IsImported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: EventLogLink.LogName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogLink.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}