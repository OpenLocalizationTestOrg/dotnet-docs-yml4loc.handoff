### YamlMime:ManagedReference
items:
- uid: System.Web.Routing.IRouteConstraint
  commentId: T:System.Web.Routing.IRouteConstraint
  id: IRouteConstraint
  children:
  - System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  langs:
  - csharp
  name: IRouteConstraint
  nameWithType: IRouteConstraint
  fullName: System.Web.Routing.IRouteConstraint
  type: Interface
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.
  remarks: When you include a constraint for a URL parameter in a route definition, you must represent the constraint as either string or as an object that implements the <xref:System.Web.Routing.IRouteConstraint> interface. If the constraint is a string, it is treated as a regular expression. You create a class that implements <xref:System.Web.Routing.IRouteConstraint> when you cannot represent the validation logic easily as a regular expression. You add the validation logic in the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.
  syntax:
    content: public interface IRouteConstraint
  derivedClasses:
  - System.Web.Routing.HttpMethodConstraint
  implements: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  commentId: M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  id: Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  parent: System.Web.Routing.IRouteConstraint
  langs:
  - csharp
  name: Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
  nameWithType: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
  fullName: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: Determines whether the URL parameter contains a valid value for this constraint.
  remarks: "You use the <xref:System.Web.Routing.IRouteConstraint.Match%2A> method to add validation logic for the constraint. This method is called by the routing framework when an incoming request is processed and when a URL is constructed. You can determine the current scenario by examining the `routeDirection` parameter.  \n  \n When a request is processed, the routing framework determines whether the pattern and values of the incoming request match the pattern and constraints of the route. When a URL is constructed, the routing framework determines whether the values supplied when the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method is called match the pattern and constraints of the route."
  syntax:
    content: public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);
    parameters:
    - id: httpContext
      type: System.Web.HttpContextBase
      description: An object that encapsulates information about the HTTP request.
    - id: route
      type: System.Web.Routing.Route
      description: The object that this constraint belongs to.
    - id: parameterName
      type: System.String
      description: The name of the parameter that is being checked.
    - id: values
      type: System.Web.Routing.RouteValueDictionary
      description: An object that contains the parameters for the URL.
    - id: routeDirection
      type: System.Web.Routing.RouteDirection
      description: An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.
    return:
      type: System.Boolean
      description: '`true` if the URL parameter contains a valid value; otherwise, `false`.'
  overload: System.Web.Routing.IRouteConstraint.Match*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  parent: System.Web.Routing.IRouteConstraint
  isExternal: false
  name: Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
  nameWithType: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
  fullName: IRouteConstraint.Match(HttpContextBase, Route, String, RouteValueDictionary, RouteDirection)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContextBase
  parent: System.Web
  isExternal: false
  name: HttpContextBase
  nameWithType: HttpContextBase
  fullName: System.Web.HttpContextBase
- uid: System.Web.Routing.Route
  parent: System.Web.Routing
  isExternal: false
  name: Route
  nameWithType: Route
  fullName: System.Web.Routing.Route
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Routing.RouteDirection
  parent: System.Web.Routing
  isExternal: false
  name: RouteDirection
  nameWithType: RouteDirection
  fullName: System.Web.Routing.RouteDirection
- uid: System.Web.Routing.IRouteConstraint.Match*
  parent: System.Web.Routing.IRouteConstraint
  isExternal: false
  name: Match
  nameWithType: IRouteConstraint.Match
  fullName: IRouteConstraint.Match
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/IRouteConstraint.xml
