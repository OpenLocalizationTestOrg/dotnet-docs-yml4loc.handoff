{"nodes":[{"content":"Presents a user interface for designing components.","nodes":[{"pos":[0,51],"content":"Presents a user interface for designing components.","nodes":[{"content":"Presents a user interface for designing components.","pos":[0,51]}]}],"pos":[2766,2818],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer. <xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features. <xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.  \n  \n The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.  \n  \n The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.  \n  \n The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically. The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.ComponentModel.Design.IExtenderProviderService>|Enables objects that are not part of the container’s components collection to provide their own extender providers.|  \n|<xref:System.ComponentModel.Design.IExtenderListService>|Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.|  \n|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Provides designer metadata hooks. This is the primary interface for metadata filtering.|  \n|<xref:System.ComponentModel.Design.ISelectionService>|Provides a way to select components in the designer.|  \n|<xref:System.ComponentModel.Design.IReferenceService>|Provides a way to get a name for objects, even when those objects are not sited.|  \n|<xref:System.ComponentModel.Design.DesignSurface>|Offers the design surface itself as a service.|  \n|<xref:System.ComponentModel.Design.DesignerOptionService>|Provides a base class for getting and setting option values for a designer.|  \n  \n The following table shows the non-replaceable services provided by default.  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.ComponentModel.Design.IComponentChangeService>|Raises events as changes are made to components.|  \n|<xref:System.ComponentModel.Design.IDesignerHost>|Controls access to types, services, and transactions. Master interface for designers.|  \n|<xref:System.ComponentModel.IContainer>|Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.|  \n|<xref:System.ComponentModel.Design.IServiceContainer>|Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.|  \n  \n In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.ComponentModel.Design.IDictionaryService>|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|  \n|<xref:System.ComponentModel.INestedContainer>|A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|  \n  \n In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.  \n  \n> [!CAUTION]\n>  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.ComponentModel.Design.IServiceContainer>|Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.|","nodes":[{"pos":[0,337],"content":"The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer. <xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features. <xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer. <xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features. <xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.","pos":[0,337],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class implements what the user perceives as a designer.","pos":[0,109],"source":"The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is the user interface the user manipulates to change design-time features.","pos":[110,234],"source":" <xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> provides a completely self-contained design surface.","pos":[235,337],"source":" <xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface."}]}]},{"pos":[344,668],"content":"The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class may be used as a stand-alone designer, or it may be coupled with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class to provide a common implementation for an application that hosts multiple <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.","pos":[0,324],"source":"The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects."}]},{"pos":[675,826],"content":"The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class can be used by itself, or the user can derive a new class from it and augment the behavior.","pos":[0,151],"source":"The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior."}]},{"pos":[833,1683],"content":"The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically. The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically. The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.","pos":[0,850],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides several design-time services automatically.","pos":[0,112],"source":"The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class adds all of its services in its constructor.","pos":[113,217],"source":" The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor."},{"content":"Most of these services can be overridden by replacing them in the protected <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.","pos":[218,373],"source":" Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property."},{"content":"To replace a service, override the constructor, call base, and make any changes through the protected <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.","pos":[374,555],"source":" To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property."},{"content":"All services that are added to the service container and that implement <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> are disposed when the design surface is disposed.","pos":[556,703],"source":" All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed."},{"content":"The default set of replaceable services that the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides is shown in the following table.","pos":[704,850],"source":" The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table."}]}]},{"pos":[1690,1697],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[1698,1709],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1750,1810],"content":"<xref:System.ComponentModel.Design.IExtenderProviderService>","nodes":[]},{"pos":[1811,1926],"content":"Enables objects that are not part of the container’s components collection to provide their own extender providers.","nodes":[{"content":"Enables objects that are not part of the container’s components collection to provide their own extender providers.","pos":[0,115]}]},{"pos":[1931,1987],"content":"<xref:System.ComponentModel.Design.IExtenderListService>","nodes":[]},{"pos":[1988,2149],"content":"Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.","nodes":[{"content":"Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.","pos":[0,161],"nodes":[{"content":"Used by <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to get a list of extender providers.","pos":[0,88],"source":"Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers."},{"content":"With this service, extender providers can live outside of the container.","pos":[89,161]}]}]},{"pos":[2154,2218],"content":"<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>","nodes":[]},{"pos":[2219,2306],"content":"Provides designer metadata hooks. This is the primary interface for metadata filtering.","nodes":[{"content":"Provides designer metadata hooks. This is the primary interface for metadata filtering.","pos":[0,87],"nodes":[{"content":"Provides designer metadata hooks.","pos":[0,33]},{"content":"This is the primary interface for metadata filtering.","pos":[34,87]}]}]},{"pos":[2311,2364],"content":"<xref:System.ComponentModel.Design.ISelectionService>","nodes":[]},{"pos":[2365,2417],"content":"Provides a way to select components in the designer.","nodes":[{"content":"Provides a way to select components in the designer.","pos":[0,52]}]},{"pos":[2422,2475],"content":"<xref:System.ComponentModel.Design.IReferenceService>","nodes":[]},{"pos":[2476,2556],"content":"Provides a way to get a name for objects, even when those objects are not sited.","nodes":[{"content":"Provides a way to get a name for objects, even when those objects are not sited.","pos":[0,80]}]},{"pos":[2561,2610],"content":"<xref:System.ComponentModel.Design.DesignSurface>","nodes":[]},{"pos":[2611,2657],"content":"Offers the design surface itself as a service.","nodes":[{"content":"Offers the design surface itself as a service.","pos":[0,46]}]},{"pos":[2662,2719],"content":"<xref:System.ComponentModel.Design.DesignerOptionService>","nodes":[]},{"pos":[2720,2795],"content":"Provides a base class for getting and setting option values for a designer.","nodes":[{"content":"Provides a base class for getting and setting option values for a designer.","pos":[0,75]}]},{"pos":[2803,2878],"content":"The following table shows the non-replaceable services provided by default.","nodes":[{"content":"The following table shows the non-replaceable services provided by default.","pos":[0,75]}]},{"pos":[2885,2892],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[2893,2904],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[2945,3004],"content":"<xref:System.ComponentModel.Design.IComponentChangeService>","nodes":[]},{"pos":[3005,3053],"content":"Raises events as changes are made to components.","nodes":[{"content":"Raises events as changes are made to components.","pos":[0,48]}]},{"pos":[3058,3107],"content":"<xref:System.ComponentModel.Design.IDesignerHost>","nodes":[]},{"pos":[3108,3193],"content":"Controls access to types, services, and transactions. Master interface for designers.","nodes":[{"content":"Controls access to types, services, and transactions. Master interface for designers.","pos":[0,85],"nodes":[{"content":"Controls access to types, services, and transactions.","pos":[0,53]},{"content":"Master interface for designers.","pos":[54,85]}]}]},{"pos":[3198,3237],"content":"<xref:System.ComponentModel.IContainer>","nodes":[]},{"pos":[3238,3376],"content":"Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.","nodes":[{"content":"Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.","pos":[0,138],"nodes":[{"content":"Owns the set of components that are being designed.","pos":[0,51]},{"content":"Each designer has an <ph id=\"ph1\">&lt;xref:System.ComponentModel.IContainer&gt;</ph> that owns the components.","pos":[52,138],"source":" Each designer has an <xref:System.ComponentModel.IContainer> that owns the components."}]}]},{"pos":[3381,3434],"content":"<xref:System.ComponentModel.Design.IServiceContainer>","nodes":[]},{"pos":[3435,3543],"content":"Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.","nodes":[{"content":"Derives from <ph id=\"ph1\">&lt;xref:System.IServiceProvider&gt;</ph> and provides a way to add and remove services from the designer.","pos":[0,108],"source":"Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer."}]},{"pos":[3551,3825],"content":"In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.","nodes":[{"content":"In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.","pos":[0,274],"nodes":[{"content":"In addition to these services, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class also provides a single service that is available through a component’s site.","pos":[0,167],"source":"In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site."},{"content":"This service is unique for each component.","pos":[168,210]},{"content":"The following table shows the services that cannot be replaced.","pos":[211,274]}]}]},{"pos":[3832,3839],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[3840,3851],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[3892,3946],"content":"<xref:System.ComponentModel.Design.IDictionaryService>","nodes":[]},{"pos":[3947,4046],"content":"A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.","nodes":[{"content":"A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.","pos":[0,99]}]},{"pos":[4051,4096],"content":"<xref:System.ComponentModel.INestedContainer>","nodes":[]},{"pos":[4097,4456],"content":"A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.","nodes":[{"content":"A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.","pos":[0,359],"nodes":[{"content":"A container that enables a component to add additional child components to the designer.","pos":[0,88]},{"content":"These components will be part of the design surface, but will not participate in serialization.","pos":[89,184]},{"content":"This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.","pos":[185,359]}]}]},{"pos":[4464,4565],"content":"In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.","nodes":[{"content":"In addition to <ph id=\"ph1\">&lt;xref:System.ComponentModel.ISite&gt;</ph>, the site also implements the following interfaces.","pos":[0,101],"source":"In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces."}]},{"pos":[4573,4730],"content":"[!CAUTION]\n Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.","leadings":["","> "],"nodes":[{"content":"Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.","pos":[12,155]}]},{"pos":[4737,4744],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[4745,4756],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[4797,4850],"content":"<xref:System.ComponentModel.Design.IServiceContainer>","nodes":[]},{"pos":[4851,5078],"content":"Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.","nodes":[{"content":"Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.","pos":[0,227],"nodes":[{"content":"Provides a way to get to the container of site-specific services.","pos":[0,65]},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> is a site-specific service.","pos":[66,161],"source":" For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service."},{"content":"With this service, you can add additional site-specific services.","pos":[162,227]}]}]}],"pos":[2829,7952],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."}],"pos":[9509,9614],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[9863,10030],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."}],"pos":[11119,11224],"yaml":true},{"content":"When `parentProvide` is present, designers contained within the surface can retrieve services from the application.","nodes":[{"pos":[0,115],"content":"When <ph id=\"ph1\">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.","source":"When `parentProvide` is present, designers contained within the surface can retrieve services from the application."}],"pos":[11235,11351],"yaml":true,"extradata":"MT"},{"content":"The parent service provider, or `null` if there is no parent used to resolve services.","nodes":[{"pos":[0,86],"content":"The parent service provider, or <ph id=\"ph1\">`null`</ph> if there is no parent used to resolve services.","source":"The parent service provider, or `null` if there is no parent used to resolve services."}],"pos":[11526,11613],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[11795,11962],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."}],"pos":[12979,13084],"yaml":true},{"content":"When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.  \n  \n> [!NOTE]\n>  The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.","nodes":[{"pos":[0,459],"content":"When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","nodes":[{"content":"When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","pos":[0,459],"nodes":[{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.","pos":[0,214],"source":"When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process."},{"content":"This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.","pos":[215,337]},{"content":"Internally, this calls <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.","pos":[338,459],"source":" Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type."}]}]},{"pos":[467,1079],"content":"[!NOTE]\n The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.","pos":[8,610],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> overload is not affected by <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>.","pos":[1,145],"source":" The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> must be in the service container before the design surface loads.","pos":[146,266],"source":" The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads."},{"content":"If you need access to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>, call the empty constructor, add the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> to the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> and call <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> with <ph id=\"ph5\">`rootComponentType`</ph>.","pos":[267,602],"source":" If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`."}]}]}],"pos":[13095,14180],"yaml":true,"extradata":"MT"},{"content":"The type of root component to create.","nodes":[{"pos":[0,37],"content":"The type of root component to create.","nodes":[{"content":"The type of root component to create.","pos":[0,37]}]}],"pos":[14337,14375],"yaml":true},{"content":"<code>rootComponent</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rootComponent</code> is `null`."}],"pos":[14553,14591],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[14697,14864],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."}],"pos":[16007,16112],"yaml":true},{"content":"Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","nodes":[{"pos":[0,438],"content":"Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","nodes":[{"content":"Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","pos":[0,438],"nodes":[{"content":"Using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.","pos":[0,193],"source":"Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process."},{"content":"This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.","pos":[194,316]},{"content":"Internally, this calls <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.","pos":[317,438],"source":" Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type."}]}]}],"pos":[16123,16562],"yaml":true,"extradata":"MT"},{"content":"The parent service provider, or `null` if there is no parent used to resolve services.","nodes":[{"pos":[0,86],"content":"The parent service provider, or <ph id=\"ph1\">`null`</ph> if there is no parent used to resolve services.","source":"The parent service provider, or `null` if there is no parent used to resolve services."}],"pos":[16761,16848],"yaml":true},{"content":"The type of root component to create.","nodes":[{"pos":[0,37],"content":"The type of root component to create.","nodes":[{"content":"The type of root component to create.","pos":[0,37]}]}],"pos":[16919,16957],"yaml":true},{"content":"<code>rootComponent</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rootComponent</code> is `null`."}],"pos":[17135,17173],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[17279,17446],"yaml":true},{"content":"Begins the loading process with the given designer loader.","nodes":[{"pos":[0,58],"content":"Begins the loading process with the given designer loader.","nodes":[{"content":"Begins the loading process with the given designer loader.","pos":[0,58]}]}],"pos":[18624,18683],"yaml":true},{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \n  \n After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","nodes":[{"pos":[0,269],"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.","nodes":[{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.","pos":[0,269],"nodes":[{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.","pos":[0,107]},{"content":"Attach an event handler to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.","pos":[108,269],"source":" Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading."}]}]},{"pos":[276,504],"content":"After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","nodes":[{"content":"After <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","pos":[0,228],"source":"After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously."}]}],"pos":[18694,19203],"yaml":true,"extradata":"MT"},{"content":"The designer loader to use for loading the designer.","nodes":[{"pos":[0,52],"content":"The designer loader to use for loading the designer.","nodes":[{"content":"The designer loader to use for loading the designer.","pos":[0,52]}]}],"pos":[19438,19491],"yaml":true},{"content":"<code>loader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;loader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>loader</code> is `null`."}],"pos":[19673,19704],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[19810,19977],"yaml":true},{"content":"Begins the loading process.","nodes":[{"pos":[0,27],"content":"Begins the loading process.","nodes":[{"content":"Begins the loading process.","pos":[0,27]}]}],"pos":[20987,21015],"yaml":true},{"content":"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used. Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \n  \n After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.  \n  \n> [!NOTE]\n>  The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.","nodes":[{"pos":[0,403],"content":"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used. Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.","nodes":[{"content":"When <ph id=\"ph1\">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id=\"ph2\">`rootComponentType`</ph> will be used.","pos":[0,133],"source":"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used."},{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.","pos":[134,241]},{"content":"Attach an event handler to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.","pos":[242,403],"source":" Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading."}]},{"pos":[410,638],"content":"After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","nodes":[{"content":"After <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","pos":[0,228],"source":"After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously."}]},{"pos":[646,923],"content":"[!NOTE]\n The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.","pos":[8,275],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method creates an instance of the component type and initializes a designer for this instance.","pos":[1,162],"source":" The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised before this method returns.","pos":[163,267],"source":" The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns."}]}]}],"pos":[21026,21957],"yaml":true,"extradata":"MT"},{"content":"The type of component to create in design mode.","nodes":[{"pos":[0,47],"content":"The type of component to create in design mode.","nodes":[{"content":"The type of component to create in design mode.","pos":[0,47]}]}],"pos":[22115,22163],"yaml":true},{"content":"<code>rootComponentType</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponentType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rootComponentType</code> is `null`."}],"pos":[22345,22387],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[22493,22660],"yaml":true},{"content":"Gets the <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.","nodes":[{"pos":[0,104],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;&lt;/xref&gt;</ph> implementation within the design surface.","source":"Gets the <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface."}],"pos":[23669,23774],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode. When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.","nodes":[{"pos":[0,358],"content":"The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode. When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode. When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.","pos":[0,358],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph> property holds all objects that are currently in design mode.","pos":[0,137],"source":"The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode."},{"content":"When components are added to <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>, their designer, if any, is loaded.","pos":[138,274],"source":" When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded."},{"content":"The component is sited with a site that provides full access to the design surface.","pos":[275,358]}]}]}],"pos":[23785,24144],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;&lt;/xref&gt;</ph> implementation within the design surface.","source":"The <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface."}],"pos":[24311,24411],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[24606,24773],"yaml":true},{"content":"Creates an instance of a component.","nodes":[{"pos":[0,35],"content":"Creates an instance of a component.","nodes":[{"content":"Creates an instance of a component.","pos":[0,35]}]}],"pos":[25819,25855],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.","nodes":[{"pos":[0,316],"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.","pos":[0,316],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph> method is called by the design surface’s <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph> method to create an instance of a component.","pos":[0,227],"source":"The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component."},{"content":"The component should be created and added to the public container on the design surface.","pos":[228,316]}]}]}],"pos":[25866,26183],"yaml":true,"extradata":"MT"},{"content":"The type of component to create.","nodes":[{"pos":[0,32],"content":"The type of component to create.","nodes":[{"content":"The type of component to create.","pos":[0,32]}]}],"pos":[26499,26532],"yaml":true},{"content":"The newly created component.","nodes":[{"pos":[0,28],"content":"The newly created component.","nodes":[{"content":"The newly created component.","pos":[0,28]}]}],"pos":[26608,26637],"yaml":true},{"content":"<code>componentType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;componentType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>componentType</code> is `null`."}],"pos":[26825,26863],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[26969,27136],"yaml":true},{"content":"Creates a designer when a component is added to the container.","nodes":[{"pos":[0,62],"content":"Creates a designer when a component is added to the container.","nodes":[{"content":"Creates a designer when a component is added to the container.","pos":[0,62]}]}],"pos":[28378,28441],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.  \n  \n <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.  \n  \n The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.","nodes":[{"pos":[0,319],"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.","pos":[0,319],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> method is called by the design surface’s <ph id=\"ph2\">&lt;xref:System.ComponentModel.IContainer&gt;</ph> when a component is added to the container.","pos":[0,196],"source":"The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container."},{"content":"This method creates a designer, but does not initialize it.","pos":[197,256]},{"content":"When it returns, the designer is initialized by the container.","pos":[257,319]}]}]},{"pos":[326,855],"content":"<xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.","nodes":[{"content":"<xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.","pos":[0,529],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> can create two different types of designers: root designers and normal designers.","pos":[0,149],"source":"<xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers."},{"content":"A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.","pos":[150,292]},{"content":"Root designers differ from normal designers because they are responsible for the user interface presented to the end user.","pos":[293,415]},{"content":"Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.","pos":[416,529]}]}]},{"pos":[862,1203],"content":"The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.","nodes":[{"content":"The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.","pos":[0,341],"nodes":[{"content":"The default implementation of this method delegates to <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, passing in <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> as the designer type for root designers, or <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> for normal designers.","pos":[0,272],"source":"The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers."},{"content":"You can override this method to request a specific type of designer.","pos":[273,341]}]}]}],"pos":[28452,29662],"yaml":true,"extradata":"MT"},{"content":"The component for which the designer should be created.","nodes":[{"pos":[0,55],"content":"The component for which the designer should be created.","nodes":[{"content":"The component for which the designer should be created.","pos":[0,55]}]}],"pos":[29922,29978],"yaml":true},{"content":"`true` to create a root designer; `false` to create a normal designer.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to create a root designer; <ph id=\"ph2\">`false`</ph> to create a normal designer.","source":"`true` to create a root designer; `false` to create a normal designer."}],"pos":[30047,30120],"yaml":true},{"content":"An instance of the requested designer, or `null` if no matching designer could be found.","nodes":[{"pos":[0,88],"content":"An instance of the requested designer, or <ph id=\"ph1\">`null`</ph> if no matching designer could be found.","source":"An instance of the requested designer, or `null` if no matching designer could be found."}],"pos":[30202,30291],"yaml":true},{"content":"<code>component</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>component</code> is `null`."}],"pos":[30478,30512],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[30618,30785],"yaml":true},{"content":"Creates an instance of the given type.","nodes":[{"pos":[0,38],"content":"Creates an instance of the given type.","nodes":[{"content":"Creates an instance of the given type.","pos":[0,38]}]}],"pos":[31825,31864],"yaml":true},{"content":"If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.","nodes":[{"pos":[0,240],"content":"If <ph id=\"ph1\">`type`</ph> is an <ph id=\"ph2\">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph> searches for a constructor of type <ph id=\"ph4\">&lt;xref:System.ComponentModel.IContainer&gt;</ph> first, followed by an empty constructor.","source":"If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor."}],"pos":[31875,32116],"yaml":true,"extradata":"MT"},{"content":"The type to create.","nodes":[{"pos":[0,19],"content":"The type to create.","nodes":[{"content":"The type to create.","pos":[0,19]}]}],"pos":[32266,32286],"yaml":true},{"content":"The newly created object.","nodes":[{"pos":[0,25],"content":"The newly created object.","nodes":[{"content":"The newly created object.","pos":[0,25]}]}],"pos":[32343,32369],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[32556,32585],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[32691,32858],"yaml":true},{"content":"Creates a container suitable for nesting controls or components.","nodes":[{"pos":[0,64],"content":"Creates a container suitable for nesting controls or components.","nodes":[{"content":"Creates a container suitable for nesting controls or components.","pos":[0,64]}]}],"pos":[34021,34086],"yaml":true},{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","nodes":[{"pos":[0,210],"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","pos":[0,210],"nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.","pos":[0,135]},{"content":"Components added to nested containers do not participate in serialization.","pos":[136,210]}]}]}],"pos":[34097,34308],"yaml":true,"extradata":"MT"},{"content":"The component that manages the nested container.","nodes":[{"pos":[0,48],"content":"The component that manages the nested container.","nodes":[{"content":"The component that manages the nested container.","pos":[0,48]}]}],"pos":[34557,34606],"yaml":true},{"content":"The nested container.","nodes":[{"pos":[0,21],"content":"The nested container.","nodes":[{"content":"The nested container.","pos":[0,21]}]}],"pos":[34688,34710],"yaml":true},{"content":"<code>owningComponent</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>owningComponent</code> is `null`."}],"pos":[34904,34944],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[35050,35217],"yaml":true},{"content":"Creates a container suitable for nesting controls or components.","nodes":[{"pos":[0,64],"content":"Creates a container suitable for nesting controls or components.","nodes":[{"content":"Creates a container suitable for nesting controls or components.","pos":[0,64]}]}],"pos":[36446,36511],"yaml":true},{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.  \n  \n You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.","nodes":[{"pos":[0,210],"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","pos":[0,210],"nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.","pos":[0,135]},{"content":"Components added to nested containers do not participate in serialization.","pos":[136,210]}]}]},{"pos":[217,382],"content":"You can provide an additional name for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph> method by passing a value into <ph id=\"ph2\">`containerName`</ph>.","source":"You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`."}],"pos":[36522,36909],"yaml":true,"extradata":"MT"},{"content":"The component that manages the nested container.","nodes":[{"pos":[0,48],"content":"The component that manages the nested container.","nodes":[{"content":"The component that manages the nested container.","pos":[0,48]}]}],"pos":[37180,37229],"yaml":true},{"content":"An additional name for the nested container.","nodes":[{"pos":[0,44],"content":"An additional name for the nested container.","nodes":[{"content":"An additional name for the nested container.","pos":[0,44]}]}],"pos":[37298,37343],"yaml":true},{"content":"The nested container.","nodes":[{"pos":[0,21],"content":"The nested container.","nodes":[{"content":"The nested container.","pos":[0,21]}]}],"pos":[37425,37447],"yaml":true},{"content":"<code>owningComponent</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>owningComponent</code> is `null`."}],"pos":[37641,37681],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[37787,37954],"yaml":true},{"content":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.","nodes":[{"pos":[0,99],"content":"Releases the resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."}],"pos":[38901,39001],"yaml":true},{"content":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \n  \n> [!NOTE]\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.  \n  \n Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>. The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.","nodes":[{"pos":[0,291],"content":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.","nodes":[{"content":"The public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method follows the standard <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[0,134],"source":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface.","pos":[135,183]},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[184,291],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."}]},{"pos":[299,663],"content":"[!NOTE]\n Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.","leadings":["","> "],"nodes":[{"content":" Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.","pos":[8,362],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>.","pos":[1,220],"source":" Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>."},{"content":"If you need to call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>, you must add a finalizer yourself.","pos":[221,354],"source":" If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself."}]}]},{"pos":[670,1466],"content":"Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>. The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.","pos":[0,148],"source":"Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> in an unusable state.","pos":[149,303],"source":" The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> was occupying.","pos":[304,590],"source":" After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[591,796],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[1474,1825],"content":"[!NOTE]\n Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.","pos":[8,349],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.","pos":[1,170],"source":" Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[171,341],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method."}]}]}],"pos":[39012,40848],"yaml":true,"extradata":"MT"},{"content":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.","nodes":[{"pos":[0,99],"content":"Releases the resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."}],"pos":[42011,42111],"yaml":true},{"content":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \n  \n> [!NOTE]\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.  \n  \n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,288],"content":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.","nodes":[{"content":"The public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph> method follows the standard <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[0,131],"source":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface.","pos":[132,180]},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[181,288],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."}]},{"pos":[296,626],"content":"[!NOTE]\n Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.","leadings":["","> "],"nodes":[{"content":" Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.","pos":[8,328],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>.","pos":[1,203],"source":" Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>."},{"content":"If you need to call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must add a finalizer yourself.","pos":[204,320],"source":" If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself."}]}]},{"pos":[633,926],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[933,1177],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> references.","pos":[0,174],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[175,244],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[42122,43309],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[43463,43566],"yaml":true},{"content":"Occurs when the design surface is disposed.","nodes":[{"pos":[0,43],"content":"Occurs when the design surface is disposed.","nodes":[{"content":"Occurs when the design surface is disposed.","pos":[0,43]}]}],"pos":[44593,44637],"yaml":true},{"content":"The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.","nodes":[{"pos":[0,176],"content":"The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.","nodes":[{"content":"The surface is only disposed when the public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method on <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is called.","pos":[0,176],"source":"The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called."}]}],"pos":[44648,44825],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the **Design-time Error List** is loading.","nodes":[{"pos":[0,74],"content":"Gets a value indicating whether the <bpt id=\"p1\">**</bpt>Design-time Error List<ept id=\"p1\">**</ept> is loading.","source":"Gets a value indicating whether the **Design-time Error List** is loading."}],"pos":[45934,46009],"yaml":true},{"content":"`true` if the **Design-time Error List** is loading; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">**</bpt>Design-time Error List<ept id=\"p1\">**</ept> is loading; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the **Design-time Error List** is loading; otherwise, `false`."}],"pos":[46128,46203],"yaml":true},{"content":"Serializes changes to the design surface.","nodes":[{"pos":[0,41],"content":"Serializes changes to the design surface.","nodes":[{"content":"Serializes changes to the design surface.","pos":[0,41]}]}],"pos":[47223,47265],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes. The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","nodes":[{"pos":[0,754],"content":"The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes. The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes. The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","pos":[0,754],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method can be called to push changes made to the design surface down to the serializer.","pos":[0,150],"source":"The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer."},{"content":"This ensures that the design surface and its serialized state are synchronized.","pos":[151,230]},{"content":"The actual implementation of this method is forwarded to the designer loader associated with design surface.","pos":[231,339]},{"content":"The designer loader may choose to defer changes until <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> is called, or it may choose to keep the serialized data up to date with all user changes.","pos":[340,542],"source":" The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","pos":[543,754],"source":" The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface."}]}]}],"pos":[47276,48031],"yaml":true,"extradata":"MT"},{"content":"Occurs when a call is made to the <xref href=\"System.ComponentModel.Design.DesignSurface.Flush\"></xref> method of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.","nodes":[{"pos":[0,178],"content":"Occurs when a call is made to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Flush\"&gt;&lt;/xref&gt;</ph> method of <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when a call is made to the <xref href=\"System.ComponentModel.Design.DesignSurface.Flush\"></xref> method of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."}],"pos":[49114,49293],"yaml":true},{"content":"The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.","nodes":[{"pos":[0,125],"content":"The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.","nodes":[{"content":"The designer loader is flushed first, and then the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph> event is raised.","pos":[0,125],"source":"The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised."}]}],"pos":[49304,49430],"yaml":true,"extradata":"MT"},{"content":"Gets a service from the service container.","nodes":[{"pos":[0,42],"content":"Gets a service from the service container.","nodes":[{"content":"Gets a service from the service container.","pos":[0,42]}]}],"pos":[50587,50630],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.","nodes":[{"pos":[0,251],"content":"The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.","pos":[0,251],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph> method retrieves a service in the design surface’s service container.","pos":[0,137],"source":"The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container."},{"content":"In addition, this will forward to any service provider that was given to the design surface at construction time.","pos":[138,251]}]}]}],"pos":[50641,50893],"yaml":true,"extradata":"MT"},{"content":"The type of service to retrieve.","nodes":[{"pos":[0,32],"content":"The type of service to retrieve.","nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]}],"pos":[51042,51075],"yaml":true},{"content":"An object that implements, or is a derived class of, <code>serviceType</code>, or `null` if the service does not exist in the service container.","nodes":[{"pos":[0,144],"content":"An object that implements, or is a derived class of, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph2\">`null`</ph> if the service does not exist in the service container.","source":"An object that implements, or is a derived class of, <code>serviceType</code>, or `null` if the service does not exist in the service container."}],"pos":[51132,51277],"yaml":true},{"content":"Gets a value indicating whether the design surface is currently loaded.","nodes":[{"pos":[0,71],"content":"Gets a value indicating whether the design surface is currently loaded.","nodes":[{"content":"Gets a value indicating whether the design surface is currently loaded.","pos":[0,71]}]}],"pos":[52310,52382],"yaml":true},{"content":"`true` if the design surface is currently loaded; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the design surface is currently loaded; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the design surface is currently loaded; otherwise, `false`."}],"pos":[52493,52565],"yaml":true},{"content":"Occurs when the designer load has completed.","nodes":[{"pos":[0,44],"content":"Occurs when the designer load has completed.","nodes":[{"content":"Occurs when the designer load has completed.","pos":[0,44]}]}],"pos":[53581,53626],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.  \n  \n The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.  \n  \n> [!NOTE]\n>  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.","nodes":[{"pos":[0,204],"content":"The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.","pos":[0,204],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised for successful loads as well as unsuccessful ones.","pos":[0,127],"source":"The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones."},{"content":"If code in this event handler throws an exception, the designer is unloaded.","pos":[128,204]}]}]},{"pos":[211,392],"content":"The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.","pos":[0,181],"source":"The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load."}]},{"pos":[400,517],"content":"[!NOTE]\n Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.","leadings":["","> "],"nodes":[{"content":"Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.","pos":[9,115]}]}],"pos":[53637,54162],"yaml":true,"extradata":"MT"},{"content":"Returns a collection of loading errors or a void collection.","nodes":[{"pos":[0,60],"content":"Returns a collection of loading errors or a void collection.","nodes":[{"content":"Returns a collection of loading errors or a void collection.","pos":[0,60]}]}],"pos":[55326,55387],"yaml":true},{"content":"A <xref href=\"System.Collections.ICollection\"></xref> of loading errors.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> of loading errors.","source":"A <xref href=\"System.Collections.ICollection\"></xref> of loading errors."}],"pos":[55542,55615],"yaml":true},{"content":"Occurs when the designer is about to be loaded.","nodes":[{"pos":[0,47],"content":"Occurs when the designer is about to be loaded.","nodes":[{"content":"Occurs when the designer is about to be loaded.","pos":[0,47]}]}],"pos":[56639,56687],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"></xref> event.","nodes":[{"pos":[0,88],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"></xref> event."}],"pos":[57964,58053],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.Design.LoadedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.LoadedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.Design.LoadedEventArgs\"></xref> that contains the event data."}],"pos":[58262,58360],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"></xref> event."}],"pos":[59482,59572],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[59719,59790],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"></xref> event.","nodes":[{"pos":[0,90],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"></xref> event."}],"pos":[60919,61010],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[61158,61229],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"></xref> event.","nodes":[{"pos":[0,91],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"></xref> event."}],"pos":[62365,62457],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[62606,62677],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"></xref> event.","nodes":[{"pos":[0,95],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"></xref> event."}],"pos":[63832,63928],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[64080,64151],"yaml":true},{"content":"Gets the service container.","nodes":[{"pos":[0,27],"content":"Gets the service container.","nodes":[{"content":"Gets the service container.","pos":[0,27]}]}],"pos":[65236,65264],"yaml":true},{"content":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.","nodes":[{"pos":[0,354],"content":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.","nodes":[{"content":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.","pos":[0,354],"nodes":[{"content":"At construction time, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> adds default services into this service container.","pos":[0,122],"source":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container."},{"content":"You can leave the default services in their present state, or you can remove them and replace them with your own.","pos":[123,236]},{"content":"The default services are all demand-created, so there is no loss in performance for adding them at construction time.","pos":[237,354]}]}]}],"pos":[65275,65630],"yaml":true,"extradata":"MT"},{"content":"The service container that provides all services to designers contained within the design surface.","nodes":[{"pos":[0,98],"content":"The service container that provides all services to designers contained within the design surface.","nodes":[{"content":"The service container that provides all services to designers contained within the design surface.","pos":[0,98]}]}],"pos":[65824,65923],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[66116,66283],"yaml":true},{"content":"Occurs when a designer has finished unloading.","nodes":[{"pos":[0,46],"content":"Occurs when a designer has finished unloading.","nodes":[{"content":"Occurs when a designer has finished unloading.","pos":[0,46]}]}],"pos":[67229,67276],"yaml":true},{"content":"Occurs when a designer is about to unload.","nodes":[{"pos":[0,42],"content":"Occurs when a designer is about to unload.","nodes":[{"content":"Occurs when a designer is about to unload.","pos":[0,42]}]}],"pos":[68370,68413],"yaml":true},{"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.","nodes":[{"pos":[0,148],"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.","nodes":[{"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.","pos":[0,148],"nodes":[{"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.","pos":[0,104]},{"content":"The view should be unparented at this time.","pos":[105,148]}]}]}],"pos":[68424,68573],"yaml":true,"extradata":"MT"},{"content":"Gets the view for the root designer.","nodes":[{"pos":[0,36],"content":"Gets the view for the root designer.","nodes":[{"content":"Gets the view for the root designer.","pos":[0,36]}]}],"pos":[69641,69678],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.  \n  \n The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.","nodes":[{"pos":[0,419],"content":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.","pos":[0,419],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method must be called beforehand to start the loading process.","pos":[0,129],"source":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process."},{"content":"It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.","pos":[130,309]},{"content":"If a view is unavailable, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> raises an exception.","pos":[310,419],"source":" If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception."}]}]},{"pos":[426,808],"content":"The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.","nodes":[{"content":"The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.","pos":[0,382],"nodes":[{"content":"The notion of a view technology is obsolete.","pos":[0,44]},{"content":"But, it remains in the interfaces for root designers for backward compatibility.","pos":[45,125]},{"content":"Its use is hidden from anyone using <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.","pos":[126,220],"source":" Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> property hides view technologies by passing the supported technologies back into the root designer.","pos":[221,382],"source":" The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer."}]}]}],"pos":[69689,70502],"yaml":true,"extradata":"MT"},{"content":"The view for the root designer.","nodes":[{"pos":[0,31],"content":"The view for the root designer.","nodes":[{"content":"The view for the root designer.","pos":[0,31]}]}],"pos":[70893,70925],"yaml":true},{"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref href=\"System.Exception.InnerException\"></xref>.","nodes":[{"pos":[0,236],"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref href=\"System.Exception.InnerException\"></xref>.","nodes":[{"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.","pos":[0,144]},{"content":"More information may available in the <ph id=\"ph1\">&lt;xref href=\"System.Exception.InnerException\"&gt;&lt;/xref&gt;</ph>.","pos":[145,236],"source":" More information may available in the <xref href=\"System.Exception.InnerException\"></xref>."}]}],"pos":[71110,71347],"yaml":true},{"content":"The designer loaded, but it does not offer a view compatible with this design surface.","nodes":[{"pos":[0,86],"content":"The designer loaded, but it does not offer a view compatible with this design surface.","nodes":[{"content":"The designer loaded, but it does not offer a view compatible with this design surface.","pos":[0,86]}]}],"pos":[71449,71536],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> attached to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."}],"pos":[71642,71809],"yaml":true},{"content":"Occurs when the <xref href=\"System.ComponentModel.Design.IDesignerHost.Activate\"></xref> method has been called on <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref>.","nodes":[{"pos":[0,179],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost.Activate\"&gt;&lt;/xref&gt;</ph> method has been called on <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when the <xref href=\"System.ComponentModel.Design.IDesignerHost.Activate\"></xref> method has been called on <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref>."}],"pos":[72785,72965],"yaml":true},{"content":"If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.","nodes":[{"pos":[0,167],"content":"If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.","nodes":[{"content":"If you want to support the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph> method, your event handler should activate the window for this design surface.","pos":[0,167],"source":"If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface."}]}],"pos":[72976,73144],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesignSurface\n  commentId: T:System.ComponentModel.Design.DesignSurface\n  id: DesignSurface\n  children:\n  - System.ComponentModel.Design.DesignSurface.#ctor\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  - System.ComponentModel.Design.DesignSurface.ComponentContainer\n  - System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  - System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  - System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  - System.ComponentModel.Design.DesignSurface.Dispose\n  - System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  - System.ComponentModel.Design.DesignSurface.Disposed\n  - System.ComponentModel.Design.DesignSurface.DtelLoading\n  - System.ComponentModel.Design.DesignSurface.Flush\n  - System.ComponentModel.Design.DesignSurface.Flushed\n  - System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  - System.ComponentModel.Design.DesignSurface.IsLoaded\n  - System.ComponentModel.Design.DesignSurface.Loaded\n  - System.ComponentModel.Design.DesignSurface.LoadErrors\n  - System.ComponentModel.Design.DesignSurface.Loading\n  - System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.ServiceContainer\n  - System.ComponentModel.Design.DesignSurface.Unloaded\n  - System.ComponentModel.Design.DesignSurface.Unloading\n  - System.ComponentModel.Design.DesignSurface.View\n  - System.ComponentModel.Design.DesignSurface.ViewActivated\n  langs:\n  - csharp\n  name: DesignSurface\n  nameWithType: DesignSurface\n  fullName: System.ComponentModel.Design.DesignSurface\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Presents a user interface for designing components.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer. <xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features. <xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.  \\n  \\n The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.  \\n  \\n The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.  \\n  \\n The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically. The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IExtenderProviderService>|Enables objects that are not part of the container’s components collection to provide their own extender providers.|  \\n|<xref:System.ComponentModel.Design.IExtenderListService>|Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.|  \\n|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Provides designer metadata hooks. This is the primary interface for metadata filtering.|  \\n|<xref:System.ComponentModel.Design.ISelectionService>|Provides a way to select components in the designer.|  \\n|<xref:System.ComponentModel.Design.IReferenceService>|Provides a way to get a name for objects, even when those objects are not sited.|  \\n|<xref:System.ComponentModel.Design.DesignSurface>|Offers the design surface itself as a service.|  \\n|<xref:System.ComponentModel.Design.DesignerOptionService>|Provides a base class for getting and setting option values for a designer.|  \\n  \\n The following table shows the non-replaceable services provided by default.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IComponentChangeService>|Raises events as changes are made to components.|  \\n|<xref:System.ComponentModel.Design.IDesignerHost>|Controls access to types, services, and transactions. Master interface for designers.|  \\n|<xref:System.ComponentModel.IContainer>|Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.|  \\n|<xref:System.ComponentModel.Design.IServiceContainer>|Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.|  \\n  \\n In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IDictionaryService>|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|  \\n|<xref:System.ComponentModel.INestedContainer>|A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|  \\n  \\n In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.  \\n  \\n> [!CAUTION]\\n>  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IServiceContainer>|Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.|\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public class DesignSurface : IDisposable, IServiceProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.IServiceProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.#ctor\n  commentId: M:System.ComponentModel.Design.DesignSurface.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface()\n  nameWithType: DesignSurface.DesignSurface()\n  fullName: DesignSurface.DesignSurface()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  syntax:\n    content: public DesignSurface ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(IServiceProvider)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider)\n  fullName: DesignSurface.DesignSurface(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: When `parentProvide` is present, designers contained within the surface can retrieve services from the application.\n  syntax:\n    content: public DesignSurface (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: The parent service provider, or `null` if there is no parent used to resolve services.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(Type)\n  nameWithType: DesignSurface.DesignSurface(Type)\n  fullName: DesignSurface.DesignSurface(Type)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: \"When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.\"\n  syntax:\n    content: public DesignSurface (Type rootComponentType);\n    parameters:\n    - id: rootComponentType\n      type: System.Type\n      description: The type of root component to create.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponent</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  id: '#ctor(System.IServiceProvider,System.Type)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(IServiceProvider, Type)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider, Type)\n  fullName: DesignSurface.DesignSurface(IServiceProvider, Type)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.\n  syntax:\n    content: public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: The parent service provider, or `null` if there is no parent used to resolve services.\n    - id: rootComponentType\n      type: System.Type\n      description: The type of root component to create.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponent</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  commentId: M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  id: BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: BeginLoad(DesignerLoader)\n  nameWithType: DesignSurface.BeginLoad(DesignerLoader)\n  fullName: DesignSurface.BeginLoad(DesignerLoader)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Begins the loading process with the given designer loader.\n  remarks: \"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \\n  \\n After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.\"\n  syntax:\n    content: public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);\n    parameters:\n    - id: loader\n      type: System.ComponentModel.Design.Serialization.DesignerLoader\n      description: The designer loader to use for loading the designer.\n  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>loader</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  id: BeginLoad(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: BeginLoad(Type)\n  nameWithType: DesignSurface.BeginLoad(Type)\n  fullName: DesignSurface.BeginLoad(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Begins the loading process.\n  remarks: \"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used. Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \\n  \\n After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.\"\n  syntax:\n    content: public void BeginLoad (Type rootComponentType);\n    parameters:\n    - id: rootComponentType\n      type: System.Type\n      description: The type of component to create in design mode.\n  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponentType</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer\n  commentId: P:System.ComponentModel.Design.DesignSurface.ComponentContainer\n  id: ComponentContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n  fullName: DesignSurface.ComponentContainer\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode. When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.\n  syntax:\n    content: public System.ComponentModel.IContainer ComponentContainer { get; }\n    return:\n      type: System.ComponentModel.IContainer\n      description: The <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.\n  overload: System.ComponentModel.Design.DesignSurface.ComponentContainer*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  id: CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateComponent(Type)\n  nameWithType: DesignSurface.CreateComponent(Type)\n  fullName: DesignSurface.CreateComponent(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of a component.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.\n  syntax:\n    content: >-\n      [System.Obsolete(\"CreateComponent has been replaced by CreateInstance and will be removed after Beta2\")]\n\n      protected virtual System.ComponentModel.IComponent CreateComponent (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The type of component to create.\n    return:\n      type: System.ComponentModel.IComponent\n      description: The newly created component.\n  overload: System.ComponentModel.Design.DesignSurface.CreateComponent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>componentType</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  commentId: M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  id: CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateDesigner(IComponent, Boolean)\n  nameWithType: DesignSurface.CreateDesigner(IComponent, Boolean)\n  fullName: DesignSurface.CreateDesigner(IComponent, Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a designer when a component is added to the container.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.  \\n  \\n <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.  \\n  \\n The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.\"\n  syntax:\n    content: protected virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component for which the designer should be created.\n    - id: rootDesigner\n      type: System.Boolean\n      description: '`true` to create a root designer; `false` to create a normal designer.'\n    return:\n      type: System.ComponentModel.Design.IDesigner\n      description: An instance of the requested designer, or `null` if no matching designer could be found.\n  overload: System.ComponentModel.Design.DesignSurface.CreateDesigner*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  id: CreateInstance(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateInstance(Type)\n  nameWithType: DesignSurface.CreateInstance(Type)\n  fullName: DesignSurface.CreateInstance(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of the given type.\n  remarks: If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.\n  syntax:\n    content: protected virtual object CreateInstance (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to create.\n    return:\n      type: System.Object\n      description: The newly created object.\n  overload: System.ComponentModel.Design.DesignSurface.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  id: CreateNestedContainer(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateNestedContainer(IComponent)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent)\n  fullName: DesignSurface.CreateNestedContainer(IComponent)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a container suitable for nesting controls or components.\n  remarks: Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.\n  syntax:\n    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);\n    parameters:\n    - id: owningComponent\n      type: System.ComponentModel.IComponent\n      description: The component that manages the nested container.\n    return:\n      type: System.ComponentModel.INestedContainer\n      description: The nested container.\n  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>owningComponent</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  commentId: M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  id: CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateNestedContainer(IComponent, String)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent, String)\n  fullName: DesignSurface.CreateNestedContainer(IComponent, String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a container suitable for nesting controls or components.\n  remarks: \"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.  \\n  \\n You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.\"\n  syntax:\n    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);\n    parameters:\n    - id: owningComponent\n      type: System.ComponentModel.IComponent\n      description: The component that manages the nested container.\n    - id: containerName\n      type: System.String\n      description: An additional name for the nested container.\n    return:\n      type: System.ComponentModel.INestedContainer\n      description: The nested container.\n  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>owningComponent</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Dispose\n  commentId: M:System.ComponentModel.Design.DesignSurface.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DesignSurface.Dispose()\n  fullName: DesignSurface.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: \"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.  \\n  \\n Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>. The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DesignSurface.Dispose(Boolean)\n  fullName: DesignSurface.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: \"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.  \\n  \\n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Design.DesignSurface.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Disposed\n  commentId: E:System.ComponentModel.Design.DesignSurface.Disposed\n  id: Disposed\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Disposed\n  nameWithType: DesignSurface.Disposed\n  fullName: DesignSurface.Disposed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the design surface is disposed.\n  remarks: The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.\n  syntax:\n    content: public event EventHandler Disposed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading\n  commentId: P:System.ComponentModel.Design.DesignSurface.DtelLoading\n  id: DtelLoading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n  fullName: DesignSurface.DtelLoading\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the **Design-time Error List** is loading.\n  syntax:\n    content: public bool DtelLoading { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the **Design-time Error List** is loading; otherwise, `false`.'\n  overload: System.ComponentModel.Design.DesignSurface.DtelLoading*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Flush\n  commentId: M:System.ComponentModel.Design.DesignSurface.Flush\n  id: Flush\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: DesignSurface.Flush()\n  fullName: DesignSurface.Flush()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Serializes changes to the design surface.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes. The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.\n  syntax:\n    content: public void Flush ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.Flush*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Flushed\n  commentId: E:System.ComponentModel.Design.DesignSurface.Flushed\n  id: Flushed\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Flushed\n  nameWithType: DesignSurface.Flushed\n  fullName: DesignSurface.Flushed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a call is made to the <xref href=\"System.ComponentModel.Design.DesignSurface.Flush\"></xref> method of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.\n  syntax:\n    content: public event EventHandler Flushed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: DesignSurface.GetService(Type)\n  fullName: DesignSurface.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a service from the service container.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.\n  syntax:\n    content: public object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: An object that implements, or is a derived class of, <code>serviceType</code>, or `null` if the service does not exist in the service container.\n  overload: System.ComponentModel.Design.DesignSurface.GetService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded\n  commentId: P:System.ComponentModel.Design.DesignSurface.IsLoaded\n  id: IsLoaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n  fullName: DesignSurface.IsLoaded\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the design surface is currently loaded.\n  syntax:\n    content: public bool IsLoaded { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the design surface is currently loaded; otherwise, `false`.'\n  overload: System.ComponentModel.Design.DesignSurface.IsLoaded*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Loaded\n  commentId: E:System.ComponentModel.Design.DesignSurface.Loaded\n  id: Loaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Loaded\n  nameWithType: DesignSurface.Loaded\n  fullName: DesignSurface.Loaded\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the designer load has completed.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.  \\n  \\n The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.  \\n  \\n> [!NOTE]\\n>  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.\"\n  syntax:\n    content: public event System.ComponentModel.Design.LoadedEventHandler Loaded;\n    return:\n      type: System.ComponentModel.Design.LoadedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors\n  commentId: P:System.ComponentModel.Design.DesignSurface.LoadErrors\n  id: LoadErrors\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n  fullName: DesignSurface.LoadErrors\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Returns a collection of loading errors or a void collection.\n  syntax:\n    content: public System.Collections.ICollection LoadErrors { get; }\n    return:\n      type: System.Collections.ICollection\n      description: A <xref href=\"System.Collections.ICollection\"></xref> of loading errors.\n  overload: System.ComponentModel.Design.DesignSurface.LoadErrors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Loading\n  commentId: E:System.ComponentModel.Design.DesignSurface.Loading\n  id: Loading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Loading\n  nameWithType: DesignSurface.Loading\n  fullName: DesignSurface.Loading\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the designer is about to be loaded.\n  syntax:\n    content: public event EventHandler Loading;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  commentId: M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  id: OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnLoaded(LoadedEventArgs)\n  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)\n  fullName: DesignSurface.OnLoaded(LoadedEventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"></xref> event.\n  syntax:\n    content: protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Design.LoadedEventArgs\n      description: A <xref href=\"System.ComponentModel.Design.LoadedEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnLoaded*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  id: OnLoading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnLoading(EventArgs)\n  nameWithType: DesignSurface.OnLoading(EventArgs)\n  fullName: DesignSurface.OnLoading(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"></xref> event.\n  syntax:\n    content: protected virtual void OnLoading (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnLoading*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  id: OnUnloaded(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnUnloaded(EventArgs)\n  nameWithType: DesignSurface.OnUnloaded(EventArgs)\n  fullName: DesignSurface.OnUnloaded(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"></xref> event.\n  syntax:\n    content: protected virtual void OnUnloaded (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnUnloaded*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  id: OnUnloading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnUnloading(EventArgs)\n  nameWithType: DesignSurface.OnUnloading(EventArgs)\n  fullName: DesignSurface.OnUnloading(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"></xref> event.\n  syntax:\n    content: protected virtual void OnUnloading (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnUnloading*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  id: OnViewActivate(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnViewActivate(EventArgs)\n  nameWithType: DesignSurface.OnViewActivate(EventArgs)\n  fullName: DesignSurface.OnViewActivate(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"></xref> event.\n  syntax:\n    content: protected virtual void OnViewActivate (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnViewActivate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer\n  commentId: P:System.ComponentModel.Design.DesignSurface.ServiceContainer\n  id: ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n  fullName: DesignSurface.ServiceContainer\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the service container.\n  remarks: At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.\n  syntax:\n    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }\n    return:\n      type: System.ComponentModel.Design.ServiceContainer\n      description: The service container that provides all services to designers contained within the design surface.\n  overload: System.ComponentModel.Design.DesignSurface.ServiceContainer*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Unloaded\n  commentId: E:System.ComponentModel.Design.DesignSurface.Unloaded\n  id: Unloaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Unloaded\n  nameWithType: DesignSurface.Unloaded\n  fullName: DesignSurface.Unloaded\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer has finished unloading.\n  syntax:\n    content: public event EventHandler Unloaded;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.Unloading\n  commentId: E:System.ComponentModel.Design.DesignSurface.Unloading\n  id: Unloading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Unloading\n  nameWithType: DesignSurface.Unloading\n  fullName: DesignSurface.Unloading\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer is about to unload.\n  remarks: When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.\n  syntax:\n    content: public event EventHandler Unloading;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.View\n  commentId: P:System.ComponentModel.Design.DesignSurface.View\n  id: View\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: View\n  nameWithType: DesignSurface.View\n  fullName: DesignSurface.View\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the view for the root designer.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.  \\n  \\n The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.\"\n  example:\n  - \"The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.  \\n  \\n ```csharp \\n IRootDesigner d;  \\n  \\n ViewTechnology[] supported = d.SupportedTechnologies;  \\n  \\n return d.GetView(supported[0]);\\n ```\"\n  syntax:\n    content: public object View { get; }\n    return:\n      type: System.Object\n      description: The view for the root designer.\n  overload: System.ComponentModel.Design.DesignSurface.View*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref href=\"System.Exception.InnerException\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The designer loaded, but it does not offer a view compatible with this design surface.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurface.ViewActivated\n  commentId: E:System.ComponentModel.Design.DesignSurface.ViewActivated\n  id: ViewActivated\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ViewActivated\n  nameWithType: DesignSurface.ViewActivated\n  fullName: DesignSurface.ViewActivated\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the <xref href=\"System.ComponentModel.Design.IDesignerHost.Activate\"></xref> method has been called on <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref>.\n  remarks: If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.\n  syntax:\n    content: public event EventHandler ViewActivated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ComponentModel.Design.DesignSurface.#ctor\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface()\n  nameWithType: DesignSurface.DesignSurface()\n  fullName: DesignSurface.DesignSurface()\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(IServiceProvider)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider)\n  fullName: DesignSurface.DesignSurface(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(Type)\n  nameWithType: DesignSurface.DesignSurface(Type)\n  fullName: DesignSurface.DesignSurface(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(IServiceProvider, Type)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider, Type)\n  fullName: DesignSurface.DesignSurface(IServiceProvider, Type)\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad(DesignerLoader)\n  nameWithType: DesignSurface.BeginLoad(DesignerLoader)\n  fullName: DesignSurface.BeginLoad(DesignerLoader)\n- uid: System.ComponentModel.Design.Serialization.DesignerLoader\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: DesignerLoader\n  nameWithType: DesignerLoader\n  fullName: System.ComponentModel.Design.Serialization.DesignerLoader\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad(Type)\n  nameWithType: DesignSurface.BeginLoad(Type)\n  fullName: DesignSurface.BeginLoad(Type)\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n  fullName: DesignSurface.ComponentContainer\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateComponent(Type)\n  nameWithType: DesignSurface.CreateComponent(Type)\n  fullName: DesignSurface.CreateComponent(Type)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateDesigner(IComponent, Boolean)\n  nameWithType: DesignSurface.CreateDesigner(IComponent, Boolean)\n  fullName: DesignSurface.CreateDesigner(IComponent, Boolean)\n- uid: System.ComponentModel.Design.IDesigner\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesigner\n  nameWithType: IDesigner\n  fullName: System.ComponentModel.Design.IDesigner\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateInstance(Type)\n  nameWithType: DesignSurface.CreateInstance(Type)\n  fullName: DesignSurface.CreateInstance(Type)\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer(IComponent)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent)\n  fullName: DesignSurface.CreateNestedContainer(IComponent)\n- uid: System.ComponentModel.INestedContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: INestedContainer\n  nameWithType: INestedContainer\n  fullName: System.ComponentModel.INestedContainer\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer(IComponent, String)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent, String)\n  fullName: DesignSurface.CreateNestedContainer(IComponent, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.DesignSurface.Dispose\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose()\n  nameWithType: DesignSurface.Dispose()\n  fullName: DesignSurface.Dispose()\n- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DesignSurface.Dispose(Boolean)\n  fullName: DesignSurface.Dispose(Boolean)\n- uid: System.ComponentModel.Design.DesignSurface.Disposed\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Disposed\n  nameWithType: DesignSurface.Disposed\n  fullName: DesignSurface.Disposed\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n  fullName: DesignSurface.DtelLoading\n- uid: System.ComponentModel.Design.DesignSurface.Flush\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flush()\n  nameWithType: DesignSurface.Flush()\n  fullName: DesignSurface.Flush()\n- uid: System.ComponentModel.Design.DesignSurface.Flushed\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flushed\n  nameWithType: DesignSurface.Flushed\n  fullName: DesignSurface.Flushed\n- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: DesignSurface.GetService(Type)\n  fullName: DesignSurface.GetService(Type)\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n  fullName: DesignSurface.IsLoaded\n- uid: System.ComponentModel.Design.DesignSurface.Loaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Loaded\n  nameWithType: DesignSurface.Loaded\n  fullName: DesignSurface.Loaded\n- uid: System.ComponentModel.Design.LoadedEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: LoadedEventHandler\n  nameWithType: LoadedEventHandler\n  fullName: System.ComponentModel.Design.LoadedEventHandler\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n  fullName: DesignSurface.LoadErrors\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.DesignSurface.Loading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Loading\n  nameWithType: DesignSurface.Loading\n  fullName: DesignSurface.Loading\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoaded(LoadedEventArgs)\n  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)\n  fullName: DesignSurface.OnLoaded(LoadedEventArgs)\n- uid: System.ComponentModel.Design.LoadedEventArgs\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: LoadedEventArgs\n  nameWithType: LoadedEventArgs\n  fullName: System.ComponentModel.Design.LoadedEventArgs\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoading(EventArgs)\n  nameWithType: DesignSurface.OnLoading(EventArgs)\n  fullName: DesignSurface.OnLoading(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloaded(EventArgs)\n  nameWithType: DesignSurface.OnUnloaded(EventArgs)\n  fullName: DesignSurface.OnUnloaded(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloading(EventArgs)\n  nameWithType: DesignSurface.OnUnloading(EventArgs)\n  fullName: DesignSurface.OnUnloading(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnViewActivate(EventArgs)\n  nameWithType: DesignSurface.OnViewActivate(EventArgs)\n  fullName: DesignSurface.OnViewActivate(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n  fullName: DesignSurface.ServiceContainer\n- uid: System.ComponentModel.Design.ServiceContainer\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: ServiceContainer\n  fullName: System.ComponentModel.Design.ServiceContainer\n- uid: System.ComponentModel.Design.DesignSurface.Unloaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Unloaded\n  nameWithType: DesignSurface.Unloaded\n  fullName: DesignSurface.Unloaded\n- uid: System.ComponentModel.Design.DesignSurface.Unloading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Unloading\n  nameWithType: DesignSurface.Unloading\n  fullName: DesignSurface.Unloading\n- uid: System.ComponentModel.Design.DesignSurface.View\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: View\n  nameWithType: DesignSurface.View\n  fullName: DesignSurface.View\n- uid: System.ComponentModel.Design.DesignSurface.ViewActivated\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ViewActivated\n  nameWithType: DesignSurface.ViewActivated\n  fullName: DesignSurface.ViewActivated\n- uid: System.ComponentModel.Design.DesignSurface.#ctor*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface\n  nameWithType: DesignSurface.DesignSurface\n  fullName: DesignSurface.DesignSurface\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad\n  nameWithType: DesignSurface.BeginLoad\n  fullName: DesignSurface.BeginLoad\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n  fullName: DesignSurface.ComponentContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateComponent\n  nameWithType: DesignSurface.CreateComponent\n  fullName: DesignSurface.CreateComponent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateDesigner\n  nameWithType: DesignSurface.CreateDesigner\n  fullName: DesignSurface.CreateDesigner\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DesignSurface.CreateInstance\n  fullName: DesignSurface.CreateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer\n  nameWithType: DesignSurface.CreateNestedContainer\n  fullName: DesignSurface.CreateNestedContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.Dispose*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose\n  nameWithType: DesignSurface.Dispose\n  fullName: DesignSurface.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n  fullName: DesignSurface.DtelLoading\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.Flush*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flush\n  nameWithType: DesignSurface.Flush\n  fullName: DesignSurface.Flush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.GetService*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: GetService\n  nameWithType: DesignSurface.GetService\n  fullName: DesignSurface.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n  fullName: DesignSurface.IsLoaded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n  fullName: DesignSurface.LoadErrors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoaded\n  nameWithType: DesignSurface.OnLoaded\n  fullName: DesignSurface.OnLoaded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoading\n  nameWithType: DesignSurface.OnLoading\n  fullName: DesignSurface.OnLoading\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloaded\n  nameWithType: DesignSurface.OnUnloaded\n  fullName: DesignSurface.OnUnloaded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloading\n  nameWithType: DesignSurface.OnUnloading\n  fullName: DesignSurface.OnUnloading\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnViewActivate\n  nameWithType: DesignSurface.OnViewActivate\n  fullName: DesignSurface.OnViewActivate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n  fullName: DesignSurface.ServiceContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.ComponentModel.Design.DesignSurface.View*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: View\n  nameWithType: DesignSurface.View\n  fullName: DesignSurface.View\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurface.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}