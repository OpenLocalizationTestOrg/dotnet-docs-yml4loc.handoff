{"nodes":[{"content":"Specifies types that should be recognized by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref> when serializing or deserializing a given type.","nodes":[{"pos":[0,169],"content":"Specifies types that should be recognized by the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.DataContractSerializer\"&gt;&lt;/xref&gt;</ph> when serializing or deserializing a given type.","source":"Specifies types that should be recognized by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref> when serializing or deserializing a given type."}],"pos":[771,941],"yaml":true},{"content":"Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.  \n  \n> [!NOTE]\n>  In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.  \n  \n You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.","nodes":[{"pos":[0,380],"content":"Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.","nodes":[{"content":"Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.","pos":[0,380],"nodes":[{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> attribute to a type to indicate to the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.","pos":[0,287],"source":"Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied."},{"content":"This attribute could also be recognized by other serializers that understand data contracts.","pos":[288,380]}]}]},{"pos":[388,489],"content":"[!NOTE]\n In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.","leadings":["","> "],"nodes":[{"content":"In your code, you can use the word <ph id=\"ph1\">`KnownType`</ph> instead of the longer <ph id=\"ph2\">`KnownTypeAttribute`</ph>.","pos":[9,99],"source":" In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`."}]},{"pos":[496,850],"content":"You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.","nodes":[{"content":"You can either apply exactly one <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instance with the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A&gt;</ph> property set, or one or more <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instances with the <ph id=\"ph4\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A&gt;</ph> property set.","pos":[0,354],"source":"You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set."}]}],"pos":[952,1810],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the name of a method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of known types.","nodes":[{"pos":[0,218],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"&gt;&lt;/xref&gt;</ph> class with the name of a method that returns an <ph id=\"ph2\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> of known types.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the name of a method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of known types."}],"pos":[7617,7836],"yaml":true},{"content":"This constructor uses a method name that matches a method of the class.  The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.","nodes":[{"pos":[0,317],"content":"This constructor uses a method name that matches a method of the class.  The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.","nodes":[{"content":"This constructor uses a method name that matches a method of the class.  The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.","pos":[0,317],"nodes":[{"content":"This constructor uses a method name that matches a method of the class.","pos":[0,71]},{"content":"The method returns a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> objects.","pos":[73,174],"source":"  The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects."},{"content":"During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.","pos":[175,317]}]}]}],"pos":[7847,8165],"yaml":true,"extradata":"MT"},{"content":"The name of the method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of types used when serializing or deserializing data.","nodes":[{"pos":[0,144],"content":"The name of the method that returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> of types used when serializing or deserializing data.","source":"The name of the method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of types used when serializing or deserializing data."}],"pos":[8789,8934],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the specified type.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified type.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the specified type."}],"pos":[10411,10545],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that is included as a known type when serializing or deserializing data.","nodes":[{"pos":[0,109],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that is included as a known type when serializing or deserializing data.","source":"The <xref href=\"System.Type\"></xref> that is included as a known type when serializing or deserializing data."}],"pos":[11085,11195],"yaml":true},{"content":"Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.","nodes":[{"pos":[0,125],"content":"Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.","nodes":[{"content":"Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.","pos":[0,125]}]}],"pos":[12601,12727],"yaml":true},{"content":"The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.  \n  \n The method is called once per application domain when the data contract is loaded for the type.","nodes":[{"pos":[0,413],"content":"The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.","nodes":[{"content":"The method must exist on the class or structure that the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, such as the <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class, or an array of <ph id=\"ph4\">&lt;xref:System.Type&gt;</ph> objects.","pos":[0,413],"source":"The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects."}]},{"pos":[420,515],"content":"The method is called once per application domain when the data contract is loaded for the type.","nodes":[{"content":"The method is called once per application domain when the data contract is loaded for the type.","pos":[0,95]}]}],"pos":[12738,13258],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the name of the method on the type defined by the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class.","nodes":[{"pos":[0,176],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the name of the method on the type defined by the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"A <xref href=\"System.String\"></xref> that contains the name of the method on the type defined by the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class."}],"pos":[13844,14021],"yaml":true},{"content":"Gets the type that should be recognized during serialization or deserialization by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref>.","nodes":[{"pos":[0,160],"content":"Gets the type that should be recognized during serialization or deserialization by the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.DataContractSerializer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the type that should be recognized during serialization or deserialization by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref>."}],"pos":[15396,15557],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that is used during serialization or deserialization.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that is used during serialization or deserialization.","source":"The <xref href=\"System.Type\"></xref> that is used during serialization or deserialization."}],"pos":[15661,15752],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.KnownTypeAttribute\n  commentId: T:System.Runtime.Serialization.KnownTypeAttribute\n  id: KnownTypeAttribute\n  children:\n  - System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)\n  - System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)\n  - System.Runtime.Serialization.KnownTypeAttribute.MethodName\n  - System.Runtime.Serialization.KnownTypeAttribute.Type\n  langs:\n  - csharp\n  name: KnownTypeAttribute\n  nameWithType: KnownTypeAttribute\n  fullName: System.Runtime.Serialization.KnownTypeAttribute\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Runtime.Serialization\n  summary: Specifies types that should be recognized by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref> when serializing or deserializing a given type.\n  remarks: \"Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.  \\n  \\n> [!NOTE]\\n>  In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.  \\n  \\n You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.\"\n  example:\n  - \"The following example shows a type named `Person` and a type named `IDInformation` that should be recognized when serializing or deserializing the `Person` type.  \\n  \\n [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]\\n [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)]\n\n      public sealed class KnownTypeAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)\n  commentId: M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  langs:\n  - csharp\n  name: KnownTypeAttribute(String)\n  nameWithType: KnownTypeAttribute.KnownTypeAttribute(String)\n  fullName: KnownTypeAttribute.KnownTypeAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the name of a method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of known types.\n  remarks: This constructor uses a method name that matches a method of the class.  The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.\n  example:\n  - \"The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.  \\n  \\n [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]\\n [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]\"\n  syntax:\n    content: public KnownTypeAttribute (string methodName);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the method that returns an <xref href=\"System.Collections.IEnumerable\"></xref> of types used when serializing or deserializing data.\n  overload: System.Runtime.Serialization.KnownTypeAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)\n  commentId: M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  langs:\n  - csharp\n  name: KnownTypeAttribute(Type)\n  nameWithType: KnownTypeAttribute.KnownTypeAttribute(Type)\n  fullName: KnownTypeAttribute.KnownTypeAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class with the specified type.\n  remarks: ''\n  example:\n  - \"The following example shows a type named `Person` and a type named `IDInformation` that should be included when or deserializing.  \\n  \\n [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]\\n [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]\"\n  syntax:\n    content: public KnownTypeAttribute (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that is included as a known type when serializing or deserializing data.\n  overload: System.Runtime.Serialization.KnownTypeAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.KnownTypeAttribute.MethodName\n  commentId: P:System.Runtime.Serialization.KnownTypeAttribute.MethodName\n  id: MethodName\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: KnownTypeAttribute.MethodName\n  fullName: KnownTypeAttribute.MethodName\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Runtime.Serialization\n  summary: Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.\n  remarks: \"The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.  \\n  \\n The method is called once per application domain when the data contract is loaded for the type.\"\n  example:\n  - \"The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.  \\n  \\n [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]\\n [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]\"\n  syntax:\n    content: public string MethodName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the name of the method on the type defined by the <xref href=\"System.Runtime.Serialization.KnownTypeAttribute\"></xref> class.\n  overload: System.Runtime.Serialization.KnownTypeAttribute.MethodName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.KnownTypeAttribute.Type\n  commentId: P:System.Runtime.Serialization.KnownTypeAttribute.Type\n  id: Type\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  langs:\n  - csharp\n  name: Type\n  nameWithType: KnownTypeAttribute.Type\n  fullName: KnownTypeAttribute.Type\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Runtime.Serialization\n  summary: Gets the type that should be recognized during serialization or deserialization by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\"></xref>.\n  syntax:\n    content: public Type Type { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that is used during serialization or deserialization.\n  overload: System.Runtime.Serialization.KnownTypeAttribute.Type*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: KnownTypeAttribute(String)\n  nameWithType: KnownTypeAttribute.KnownTypeAttribute(String)\n  fullName: KnownTypeAttribute.KnownTypeAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: KnownTypeAttribute(Type)\n  nameWithType: KnownTypeAttribute.KnownTypeAttribute(Type)\n  fullName: KnownTypeAttribute.KnownTypeAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.Serialization.KnownTypeAttribute.MethodName\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: MethodName\n  nameWithType: KnownTypeAttribute.MethodName\n  fullName: KnownTypeAttribute.MethodName\n- uid: System.Runtime.Serialization.KnownTypeAttribute.Type\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: Type\n  nameWithType: KnownTypeAttribute.Type\n  fullName: KnownTypeAttribute.Type\n- uid: System.Runtime.Serialization.KnownTypeAttribute.#ctor*\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: KnownTypeAttribute\n  nameWithType: KnownTypeAttribute.KnownTypeAttribute\n  fullName: KnownTypeAttribute.KnownTypeAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n- uid: System.Runtime.Serialization.KnownTypeAttribute.MethodName*\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: MethodName\n  nameWithType: KnownTypeAttribute.MethodName\n  fullName: KnownTypeAttribute.MethodName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n- uid: System.Runtime.Serialization.KnownTypeAttribute.Type*\n  parent: System.Runtime.Serialization.KnownTypeAttribute\n  isExternal: false\n  name: Type\n  nameWithType: KnownTypeAttribute.Type\n  fullName: KnownTypeAttribute.Type\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/KnownTypeAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}