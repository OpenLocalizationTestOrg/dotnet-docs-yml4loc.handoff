{"nodes":[{"content":"Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.","nodes":[{"pos":[0,369],"content":"Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.","nodes":[{"content":"Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.","pos":[0,369],"nodes":[{"content":"Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator.","pos":[0,185]},{"content":"The element that the iterator points to can be both written to and read from any number of times.","pos":[186,283]},{"content":"Bidirectional iterators can be used anywhere an input or output iterator is required.","pos":[284,369]}]}]}],"pos":[584,954],"yaml":true},{"content":"[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]","nodes":[],"pos":[1143,1201],"yaml":true},{"content":"Positions the iterator to the element immediately before the current element.","nodes":[{"pos":[0,77],"content":"Positions the iterator to the element immediately before the current element.","nodes":[{"content":"Positions the iterator to the element immediately before the current element.","pos":[0,77]}]}],"pos":[2622,2700],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  commentId: T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  id: IBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev\n  langs:\n  - csharp\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.\n  syntax:\n    content: 'public interface IBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IForwardIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'\n  derivedClasses:\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IForwardIterator{TValue}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: IBidirectionalIterator<TValue>.prev()\n  fullName: IBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Positions the iterator to the element immediately before the current element.\n  syntax:\n    content: public void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: IBidirectionalIterator<TValue>.prev()\n  fullName: IBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: IBidirectionalIterator<TValue>.prev\n  fullName: IBidirectionalIterator<TValue>.prev\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.IForwardIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IForwardIterator<TValue>\n  nameWithType: IForwardIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IForwardIterator<TValue>\n"}