<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5d8121f1e04e723dc1e616b8abe747869ca3567</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.ToolStrip.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b91f4a8202b2d95f2d484791327cce5cd002932</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3b7cb2b637df80019b7800346acce88377f09d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a container for Windows toolbar objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> is the base class for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and its associated classes in new Windows Forms applications to create toolbars that can have a Windows XP, Office, Internet Explorer, or custom appearance and behavior, all with or without themes, and with support for overflow and run-time item reordering.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls also offer a rich design-time experience that includes in-place activation and editing, custom layout, and sharing of horizontal or vertical space within a specified <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripContainer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> class provides many members that manage painting, mouse and keyboard input, and drag-and-drop functionality.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripRenderer&gt;</ph> class with the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripManager&gt;</ph> class to gain even more control and customizability over the painting and layout style of all <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls on a Windows Form.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following items are specifically designed to work seamlessly with both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripSystemRenderer&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripProfessionalRenderer&gt;</ph> in all orientations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are available by default at design time for the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can join <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls within a specified <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripContainer&gt;</ph> and merge <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls with each other.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripContainer&gt;</ph> for Multiple Document Interface (MDI) applications.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not participate in the tab order unless it is absolutely positioned rather than being docked or in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripControlHost&gt;</ph> class to host any other Windows Forms control in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> is double buffered, taking advantage of the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> replaces and adds functionality to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control of previous versions, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> is retained for both backward compatibility and future use if you choose.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> class with the specified array of <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>s.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether drag-and-drop and item reordering are handled through events that you implement.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> property to <ph id="ph4">`false`</ph> to respond to drag-and-drop behavior you have defined in the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragEnter?displayProperty=fullName&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.DragLeave?displayProperty=fullName&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> to <ph id="ph2">`false`</ph> and set <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph4">`true`</ph> to cause the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> class to handle drag-and-drop and item reordering automatically.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph2">`true`</ph> for two <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> objects to allow dragging of items from one <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> to the other.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the default drag-and-drop, the ALT key must be pressed during the drag operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph3">`true`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to control drag-and-drop and item reordering through events that you implement; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.AllowDrop"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip.AllowItemReorder"&gt;&lt;/xref&gt;</ph> are both set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether drag-and-drop and item reordering are handled privately by the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> property to <ph id="ph4">`false`</ph> to respond to drag-and-drop behavior you have defined in the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragEnter?displayProperty=fullName&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.DragLeave?displayProperty=fullName&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> to <ph id="ph2">`false`</ph> and set <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph4">`true`</ph> to cause the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> class to handle drag-and-drop and item reordering automatically.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph2">`true`</ph> for two <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> objects to allow dragging of items from one <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> to the other.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the default drag-and-drop, the ALT key must be pressed during the drag operation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowDrop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> to <ph id="ph3">`true`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> class to handle drag-and-drop and item reordering automatically; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.AllowDrop"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip.AllowItemReorder"&gt;&lt;/xref&gt;</ph> are both set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether multiple <ph id="ph1">&lt;xref href="System.Windows.Forms.MenuStrip"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripDropDownMenu"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripMenuItem"&gt;&lt;/xref&gt;</ph>, and other types can be combined.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AllowMerge%2A&gt;</ph> property to enable multiple-document interface (MDI) children to combine their respective menus in the MDI parent.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if combining of types is allowed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the edges of the container to which a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is bound and determines how a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is resized with its parent.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Anchor%2A&gt;</ph> property to define how a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> is automatically resized as its parent control is resized.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AnchorStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to automatically scroll; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Automatic scrolling is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the control is automatically resized to display its entire contents.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> is embedded in a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripContainer&gt;</ph> panel, the bounds of the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> are not translated when you move the <ph id="ph6">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> to a different panel of the <ph id="ph7">&lt;xref:System.Windows.Forms.ToolStripContainer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To translate the bounds properly, synchronize the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.LayoutStyleChanged&gt;</ph> event, check the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Orientation%2A&gt;</ph> property, and resize the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control adjusts its width to closely fit its contents; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.AutoSize"&gt;&lt;/xref&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id="ph2">`SupportsTransparentBackColor`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.BackColor%2A&gt;</ph> property is an ambient property.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the background color of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultBackColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Occurs when the user begins to drag the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets the binding context for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> returns a single <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for all data-bound controls contained by the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> keeps all controls that are bound to the same data source synchronized.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifies the item in the underlying list that all data-bound controls point to.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingContext"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether items in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> can be sent to an overflow menu.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.CanOverflow%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to send a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> item to an overflow menu when the item's content exceeds the width of the toolbar.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are more overflow items than can be displayed on the form, use the ToolStrip Items Collection Editor to manage this situation.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to send <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> items to an overflow menu; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> causes validation to be performed on any controls that require validation when it receives focus.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.CausesValidation"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This event is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This event is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ControlCollection"&gt;&lt;/xref&gt;</ph> representing the collection of controls contained within the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Creates a new accessibility object for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> item.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> item.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the control collection for the control.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A new instance of <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ControlCollection"&gt;&lt;/xref&gt;</ph> assigned to the control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creates a default <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> with the specified text, image, and event handler on a new <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The text to use for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a hyphen (-), this method creates a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripSeparator"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> to display on the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An event handler that raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Click"&gt;&lt;/xref&gt;</ph> event when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is clicked.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripButton.#ctor(System.String,System.Drawing.Image,System.EventHandler)"&gt;&lt;/xref&gt;</ph>, or a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripSeparator"&gt;&lt;/xref&gt;</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">text</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a hyphen (-).</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the visual arrangement for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The visual arrangement to be applied to the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the cursor that is displayed when the mouse pointer is over the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Cursor%2A&gt;</ph> property to get or set a specific <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> used with the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Cursor"&gt;&lt;/xref&gt;</ph> that represents the cursor to display when the mouse pointer is over the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Cursor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the docking location of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>, indicating which borders are docked to the container.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle.Top"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets a value representing the default direction in which a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph> control is displayed relative to the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DefaultDropDownDirection%2A&gt;</ph> property to get or set where a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph> control appears in relation to its container.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripDropDownDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The specified value is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripDropDownDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the default spacing, in pixels, between the sizing grip and the edges of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> values representing the spacing, in pixels.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the spacing, in pixels, between the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> and the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets the internal spacing, in pixels, of the contents of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> are padded one pixel from the right edge of the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> to prevent the right border from painting over a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> that is right-aligned.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">(0, 0, 1, 0)</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether ToolTips are shown for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets the default size of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DefaultSize%2A&gt;</ph> property represents the <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> value of the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> when it is initially created.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can adjust the size of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> by setting its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreferredSize%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> in its constructor.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, override the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DefaultSize%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets the subset of items that are currently displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>, including items that are automatically added into the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A&gt;</ph> property to access only those items that are currently displayed.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are the items that are not currently in an overflow menu.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Items%2A&gt;</ph> collection to retrieve all the items of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemCollection"&gt;&lt;/xref&gt;</ph> representing the items that are currently displayed on the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Retrieves the current display rectangle.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display rectangle is the area where you lay out items.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position and dimensions of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> display rectangle change during automatic scrolling.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> representing the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> area for item layout.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets or sets which <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> borders are docked to its parent control and determines how a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is resized with its parent.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Dock%2A&gt;</ph> property to define how a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> is automatically resized as its parent control is resized.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Dock%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left&gt;</ph> causes the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> to align itself with the left edges of its parent control and to resize as the parent control is resized.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls are docked in their z-order, which is the visual layering of controls on a form along the form's z-axis (depth).</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control is in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> can be repositioned within the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph> and across <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph>s.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Dock%2A&gt;</ph> property is ignored, and if the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Stretch%2A&gt;</ph> property is <ph id="ph3">`false`</ph>, the size of the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> grows as items are added to the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not participate in the tab order.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle.Top"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Occurs when the user stops dragging the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets the font used to display text in the control.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The current default font.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> representing the foreground color.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ForeColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The child <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> that is located at the specified coordinates.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.GetChildAtPointSkip"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The child <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> that is located at the specified coordinates.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returns the item located at the specified x- and y-coordinates of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> client area.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate, in pixels, from the left edge of the client area.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The vertical coordinate, in pixels, from the top edge of the client area.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> located at the specified location, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is not found.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns the item located at the specified point in the client area of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> at which to search for the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> at the specified location, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is not found.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Retrieves the next <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> from the specified reference point and moving in the specified direction.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.GetNextItem%2A&gt;</ph> method to get the next <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ArrowDirection&gt;</ph> enumeration coordinates with the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Orientation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> that is the reference point from which to begin the retrieval of the next item.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>One of the values of <ph id="ph1">&lt;xref href="System.Windows.Forms.ArrowDirection"&gt;&lt;/xref&gt;</ph> that specifies the direction to move.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> that is specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">start</ph><ept id="p1">&lt;/code&gt;</ept> parameter and is next in the order as specified by the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">direction</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The specified value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the values of <ph id="ph2">&lt;xref href="System.Windows.Forms.ArrowDirection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets the orientation of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> move handle.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripGripDisplayStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripGripDisplayStyle.Horizontal"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripGripDisplayStyle.Vertical"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Gets or sets the space around the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> move handle.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.GripMargin%2A&gt;</ph> property to get or set the space around the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> move handle.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Forms.Padding?displayProperty=fullName&gt;</ph> can take individual values for <ph id="ph2">&lt;xref:System.Windows.Forms.Padding.Top%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Padding.Bottom%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Padding.Left%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Padding.Right%2A&gt;</ph>, you can adjust the space around the move handle as preferred.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The margin can even be off the edge of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph>, which represents the spacing.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Gets the boundaries of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> move handle.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.GripRectangle%2A&gt;</ph> property to get boundaries for painting, hit testing, and so on.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph>, representing the move handle boundaries.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If the boundaries are not visible, the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.GripRectangle"&gt;&lt;/xref&gt;</ph> property returns <ph id="ph2">&lt;xref href="System.Drawing.Rectangle.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> move handle is visible or hidden.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a stack layout, make a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> movable by putting it in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph> and ensuring that its <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.GripStyle%2A&gt;</ph> is set to <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripGripStyle.Visible&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripGripStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripGripStyle.Visible"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The specified value is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripGripStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> has children; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>An instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.HScrollProperties"&gt;&lt;/xref&gt;</ph> class, which provides basic properties for an <ph id="ph2">&lt;xref href="System.Windows.Forms.HScrollBar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Gets or sets the image list that contains the image displayed on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> item.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets or sets the size, in pixels, of an image used on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> property to control the default size of an image.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph> to make the size of the image on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> to automatically adjust to fit on a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> while retaining the original image proportions.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> value representing the size of the image, in pixels.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The default is 16 x 16 pixels.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user is currently moving the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> from one <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripContainer"&gt;&lt;/xref&gt;</ph> to another.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user is currently moving the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> from one <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripContainer"&gt;&lt;/xref&gt;</ph> to another; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is a <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph> control; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Determines whether a character is an input character that the item recognizes.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.IsInputChar%2A&gt;</ph> method is called during window message preprocessing to determine whether the given input character should be preprocessed or sent directly to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.IsInputChar%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the specified character is sent directly to the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the method returns <ph id="ph1">`false`</ph>, the character is preprocessed and only sent to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> if it is not consumed by the preprocessing phase.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The character to test.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character should be sent directly to the item and not preprocessed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Occurs when a new <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is added to the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItemCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is clicked.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Occurs when a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is removed from the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItemCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Gets all the items that belong to a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Items%2A&gt;</ph> collection to retrieve all the items that have been added to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, not just the items that are displayed.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>An item remains in the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Items%2A&gt;</ph> collection even if it is an overflow item and is therefore not currently visible.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A&gt;</ph> property to retrieve only the items that are currently displayed on the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemCollection"&gt;&lt;/xref&gt;</ph>, representing all the elements contained by a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Occurs when the layout of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is complete.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>When items do not fit within the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, an overflow button automatically appears.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Overflow%2A&gt;</ph> property setting determines whether an item appears in the overflow area always, as needed, or never.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inspect the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Placement%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.LayoutCompleted&gt;</ph> event to determine whether an item was placed on the main <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, the overflow <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, or if it is not currently showing at all.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical reasons why an item is not displayed are that the item did not fit on the main <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and its <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Overflow%2A&gt;</ph> property was set to <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemOverflow.Never&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Passes a reference to the cached <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.LayoutEngine"&gt;&lt;/xref&gt;</ph> returned by the layout engine interface.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Layout.LayoutEngine"&gt;&lt;/xref&gt;</ph> that represents the cached layout engine returned by the layout engine interface.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets or sets layout scheme characteristics.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutSettings"&gt;&lt;/xref&gt;</ph> representing the layout scheme characteristics.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> lays out the items collection.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sizing grip will not be displayed unless you also set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.LayoutStyle%2A&gt;</ph> property to one of the overflow values.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.LayoutStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripLayoutStyle.Flow&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripLayoutStyle.Table&gt;</ph>, the sizing grip will not be displayed.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The possible values are <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle.Table"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle.Flow"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle.StackWithOverflow"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle.HorizontalStackWithOverflow"&gt;&lt;/xref&gt;</ph>, and <ph id="ph5">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle.VerticalStackWithOverflow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.LayoutStyle"&gt;&lt;/xref&gt;</ph> is not one of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripLayoutStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.LayoutStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Gets the maximum height and width, in pixels, of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> representing the height and width of the control, in pixels.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.BeginDrag"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnBeginDrag%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DockChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnDockChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Enabled"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.EndDrag"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnEndDrag%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.FontChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleCreated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleDestroyed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Invalidated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.InvalidateEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ItemAdded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnItemAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ItemClicked"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnItemClicked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemClickedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ItemRemoved"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnItemRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.LayoutCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnLayoutCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.LayoutStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnLayoutStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Leave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.LostFocus"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseCaptureChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseMove"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;&lt;/xref&gt;</ph> event for the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> background.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnPaintBackground%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the control to paint.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.PaintGrip"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the move handle is painted.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnPaintGrip%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.RendererChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnRendererChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.RightToLeftChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnRightToLeftChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollableControl.Scroll"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.TabStopChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnTabStopChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.VisibleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the various *Changed events of a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise those events with specific property settings.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Gets the orientation of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripPanel"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Orientation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.Orientation.Horizontal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> that is the overflow button for a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> with overflow enabled.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripOverflowButton"&gt;&lt;/xref&gt;</ph> with its <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItemAlignment"&gt;&lt;/xref&gt;</ph> set to <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItemAlignment.Right"&gt;&lt;/xref&gt;</ph> and its <ph id="ph4">&lt;xref href="System.Windows.Forms.ToolStripItemOverflow"&gt;&lt;/xref&gt;</ph> value set to <ph id="ph5">&lt;xref href="System.Windows.Forms.ToolStripItemOverflow.Never"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> move handle is painted.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Processes a command key.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Processes a dialog box key.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A&gt;</ph> method is called during message preprocessing to handle dialog characters such as TAB, RETURN, ESCAPE, and arrow keys.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.IsInputKey%2A&gt;</ph> method indicates that the control is not processing the key.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A&gt;</ph> simply sends the character to the parent control's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;</ph> class overrides this method to perform actual processing of dialog box keys.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is only called when the control is hosted in a Windows Forms application or an ActiveX control.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Processes a mnemonic character.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ProcessMnemonic%2A&gt;</ph> method is called to give a control the opportunity to process a mnemonic character.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should determine whether the control is in a state to process mnemonics and whether the given character represents a mnemonic.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, the method should perform the action associated with the mnemonic and return <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, the method should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations of this method often use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A?displayProperty=fullName&gt;</ph> method to determine whether the given character matches a mnemonic in the control's text.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>This default implementation of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ProcessMnemonic%2A&gt;</ph> method simply returns <ph id="ph2">`false`</ph>, to indicate that the control has no mnemonic.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The character to process.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripRenderer"&gt;&lt;/xref&gt;</ph> used to customize the look and feel of a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Renderer%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripRenderer&gt;</ph> class to customize the look and feel of any <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> that does not have a window handle.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, derive a class from <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripRenderer&gt;</ph>, assign it to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.Renderer%2A&gt;</ph> property, and call the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.Invalidate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripRenderer"&gt;&lt;/xref&gt;</ph> used to customize the look and feel of a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.Renderer"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates which visual styles will be applied to the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to indicate which set of visual styles the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> will use.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to specify a professional rendering style, a default system rendering style, or a style managed by the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Renderer%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>A value that indicates the visual style to apply.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripRenderMode.ManagerRenderMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The value being set is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripRenderMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripRenderMode"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripRenderMode.Custom"&gt;&lt;/xref&gt;</ph> without the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStrip.Renderer"&gt;&lt;/xref&gt;</ph> property being assigned to a new instance of <ph id="ph4">&lt;xref href="System.Windows.Forms.ToolStripRenderer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Controls the return location of the focus.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.RestoreFocus%2A&gt;</ph> method to control where the focus returns to when the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.TabStop%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Activates a child control.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Optionally specifies the direction in the tab order to select the control from.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`directed`</ph> and <ph id="ph2">`forward`</ph> parameters are used by container-style controls.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`directed`</ph> parameter is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`forward`</ph> parameter is evaluated to determine which control to select.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`forward`</ph> is set to <ph id="ph2">`true`</ph>, the next control in the tab order is selected; when <ph id="ph3">`false`</ph>, the previous control in the tab order is selected.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> style bit is set to <ph id="ph3">`true`</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to specify the direction of the control to select; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to move forward in the tab order; <ph id="ph2">`false`</ph> to move backward in the tab order.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Performs the work of setting the specified bounds of this control.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Left"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Top"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Width"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Height"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BoundsSpecified"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Resets the collection of displayed and overflow items after a layout is done.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Anchors a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> to a particular place on a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> to anchor.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> representing the x and y client coordinates of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> location, in pixels.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> is not the owner of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> referred to by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">item</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Enables you to change the parent <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.SetItemParent%2A&gt;</ph> property when creating a custom layout engine.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Parent"&gt;&lt;/xref&gt;</ph> property is to be changed.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> that is the parent of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> referred to by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">item</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Retrieves a value that sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> to the specified visibility state.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically override this method to change the visibility behavior of the control.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is visible; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether ToolTips are to be displayed on <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> items.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A&gt;</ph> property to determine whether ToolTips are displayed for the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ToolTips are to be displayed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> stretches from end to end in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.Stretch%2A&gt;</ph> property to get or set whether the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> automatically fills its container.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> stretches from end to end in its <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripContainer"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user can give the focus to an item in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> using the TAB key.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user presses the TAB key, the input focus is set to the next <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> in the tab order.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls with a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id="ph2">`false`</ph> are not included in the collection of controls in the tab order.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate the tab order by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property value for controls in the collection.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can give the focus to an item in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> using the TAB key; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Gets or sets the direction in which to draw text on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.TextDirection%2A&gt;</ph> property to get or set the direction of the display text of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, such as a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripLabel&gt;</ph> or a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.TextDirection%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> itself, in which case the setting will apply to each <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> you add to the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, or you can set the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip.TextDirection%2A&gt;</ph> property differently for each <ph id="ph6">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripTextDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripTextDirection.Horizontal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The specified value is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripTextDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>A string that represents the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>An instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.VScrollProperties"&gt;&lt;/xref&gt;</ph> class, which provides basic properties for a <ph id="ph2">&lt;xref href="System.Windows.Forms.VScrollBar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>All messages are sent to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method after getting filtered through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method corresponds exactly to the Windows <ph id="ph2">`WindowProc`</ph> function.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about processing Windows messages, see the <ph id="ph1">`WindowProc`</ph> function documentation in the Windows Platform SDK reference located in the MSDN library at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>