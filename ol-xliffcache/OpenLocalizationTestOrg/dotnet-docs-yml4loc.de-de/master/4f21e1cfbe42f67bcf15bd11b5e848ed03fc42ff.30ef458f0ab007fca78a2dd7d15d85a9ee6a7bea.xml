{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class allows you to control code access security permissions for <xref href=\"System.DirectoryServices\"></xref>.","nodes":[{"pos":[0,189],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission\"&gt;&lt;/xref&gt;</ph> class allows you to control code access security permissions for <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class allows you to control code access security permissions for <xref href=\"System.DirectoryServices\"></xref>."}],"pos":[988,1178],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class."}],"pos":[4883,4998],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission access level entries.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission access level entries.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission access level entries."}],"pos":[6506,6672],"yaml":true},{"content":"An array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects. The <xref href=\"System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"pos":[0,226],"content":"An array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects. The <xref href=\"System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,99],"source":"An array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\"&gt;&lt;/xref&gt;</ph> property is set to this value.","pos":[100,226],"source":" The <xref href=\"System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\"></xref> property is set to this value."}]}],"pos":[6958,7185],"yaml":true},{"content":"The specified value for the <code>permissionAccessEntries</code> parameter is `null`.","nodes":[{"pos":[0,85],"content":"The specified value for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">permissionAccessEntries</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The specified value for the <code>permissionAccessEntries</code> parameter is `null`."}],"pos":[7373,7459],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission state.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission state.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission state."}],"pos":[8692,8843],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[9061,9145],"yaml":true},{"content":"The <code>State</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">State</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>State</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[9325,9448],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified access levels and specified path to an Active Directory Domain Services node.","nodes":[{"pos":[0,210],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermission\"&gt;&lt;/xref&gt;</ph> class with the specified access levels and specified path to an Active Directory Domain Services node.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified access levels and specified path to an Active Directory Domain Services node."}],"pos":[10846,11057],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values.","nodes":[{"pos":[0,98],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values."}],"pos":[11340,11439],"yaml":true},{"content":"The path of the Active Directory Domain Services object, otherwise known as the ADsPath, to which the permissions apply.","nodes":[{"pos":[0,120],"content":"The path of the Active Directory Domain Services object, otherwise known as the ADsPath, to which the permissions apply.","nodes":[{"content":"The path of the Active Directory Domain Services object, otherwise known as the ADsPath, to which the permissions apply.","pos":[0,120]}]}],"pos":[11499,11620],"yaml":true},{"content":"Gets the collection of permission entries for this permission.","nodes":[{"pos":[0,62],"content":"Gets the collection of permission entries for this permission.","nodes":[{"content":"Gets the collection of permission entries for this permission.","pos":[0,62]}]}],"pos":[12757,12820],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object that contains the permission entries for this permission.","nodes":[{"pos":[0,155],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"&gt;&lt;/xref&gt;</ph> object that contains the permission entries for this permission.","source":"A <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object that contains the permission entries for this permission."}],"pos":[13056,13212],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryServicesPermission\n  commentId: T:System.DirectoryServices.DirectoryServicesPermission\n  id: DirectoryServicesPermission\n  children:\n  - System.DirectoryServices.DirectoryServicesPermission.#ctor\n  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)\n  - System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\n  langs:\n  - csharp\n  name: DirectoryServicesPermission\n  nameWithType: DirectoryServicesPermission\n  fullName: System.DirectoryServices.DirectoryServicesPermission\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class allows you to control code access security permissions for <xref href=\"System.DirectoryServices\"></xref>.\n  syntax:\n    content: 'public sealed class DirectoryServicesPermission : System.Security.Permissions.ResourcePermissionBase'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  - System.Security.Permissions.ResourcePermissionBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.Any\n  - System.Security.Permissions.ResourcePermissionBase.Clear\n  - System.Security.Permissions.ResourcePermissionBase.Copy\n  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  - System.Security.Permissions.ResourcePermissionBase.Local\n  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.TagNames\n  - System.Security.Permissions.ResourcePermissionBase.ToXml\n  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor\n  commentId: M:System.DirectoryServices.DirectoryServicesPermission.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  langs:\n  - csharp\n  name: DirectoryServicesPermission()\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission()\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class.\n  syntax:\n    content: public DirectoryServicesPermission ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  commentId: M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  id: '#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])'\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  langs:\n  - csharp\n  name: DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission access level entries.\n  syntax:\n    content: public DirectoryServicesPermission (System.DirectoryServices.DirectoryServicesPermissionEntry[] permissionAccessEntries);\n    parameters:\n    - id: permissionAccessEntries\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n      description: An array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects. The <xref href=\"System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\"></xref> property is set to this value.\n  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified value for the <code>permissionAccessEntries</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  langs:\n  - csharp\n  name: DirectoryServicesPermission(PermissionState)\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified permission state.\n  syntax:\n    content: public DirectoryServicesPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>State</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)\n  commentId: M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)\n  id: '#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)'\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  langs:\n  - csharp\n  name: DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryServicesPermission\"></xref> class with the specified access levels and specified path to an Active Directory Domain Services node.\n  syntax:\n    content: public DirectoryServicesPermission (System.DirectoryServices.DirectoryServicesPermissionAccess permissionAccess, string path);\n    parameters:\n    - id: permissionAccess\n      type: System.DirectoryServices.DirectoryServicesPermissionAccess\n      description: One of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionAccess\"></xref> values.\n    - id: path\n      type: System.String\n      description: The path of the Active Directory Domain Services object, otherwise known as the ADsPath, to which the permissions apply.\n  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\n  commentId: P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\n  id: PermissionEntries\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  langs:\n  - csharp\n  name: PermissionEntries\n  nameWithType: DirectoryServicesPermission.PermissionEntries\n  fullName: DirectoryServicesPermission.PermissionEntries\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the collection of permission entries for this permission.\n  syntax:\n    content: public System.DirectoryServices.DirectoryServicesPermissionEntryCollection PermissionEntries { get; }\n    return:\n      type: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n      description: A <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object that contains the permission entries for this permission.\n  overload: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Security.Permissions.ResourcePermissionBase\n  parent: System.Security.Permissions\n  isExternal: false\n  name: ResourcePermissionBase\n  nameWithType: ResourcePermissionBase\n  fullName: System.Security.Permissions.ResourcePermissionBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: DirectoryServicesPermission()\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission()\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission()\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntry\n  name: DirectoryServicesPermissionEntry\n  nameWithType: DirectoryServicesPermissionEntry\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntry\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionEntry[]\n  nameWithType: DirectoryServicesPermissionEntry[]\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n  spec.csharp:\n  - uid: System.DirectoryServices.DirectoryServicesPermissionEntry\n    name: DirectoryServicesPermissionEntry\n    nameWithType: DirectoryServicesPermissionEntry\n    fullName: System.DirectoryServices.DirectoryServicesPermissionEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: DirectoryServicesPermission(PermissionState)\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess, String)\n- uid: System.DirectoryServices.DirectoryServicesPermissionAccess\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionAccess\n  nameWithType: DirectoryServicesPermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: DirectoryServicesPermission.PermissionEntries\n  fullName: DirectoryServicesPermission.PermissionEntries\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionEntryCollection\n  nameWithType: DirectoryServicesPermissionEntryCollection\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor*\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: DirectoryServicesPermission\n  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission\n  fullName: DirectoryServicesPermission.DirectoryServicesPermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*\n  parent: System.DirectoryServices.DirectoryServicesPermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: DirectoryServicesPermission.PermissionEntries\n  fullName: DirectoryServicesPermission.PermissionEntries\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryServicesPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.Permissions.ResourcePermissionBase.Copy\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Copy()\n  nameWithType: ResourcePermissionBase.Copy()\n  fullName: ResourcePermissionBase.Copy()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)\n  fullName: ResourcePermissionBase.FromXml(SecurityElement)\n- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ResourcePermissionBase.Intersect(IPermission)\n  fullName: ResourcePermissionBase.Intersect(IPermission)\n- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)\n  fullName: ResourcePermissionBase.IsSubsetOf(IPermission)\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.Permissions.ResourcePermissionBase.ToXml\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ToXml()\n  nameWithType: ResourcePermissionBase.ToXml()\n  fullName: ResourcePermissionBase.ToXml()\n- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ResourcePermissionBase.Union(IPermission)\n  fullName: ResourcePermissionBase.Union(IPermission)\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: AddPermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n  fullName: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBase.Any\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Any\n  nameWithType: ResourcePermissionBase.Any\n  fullName: ResourcePermissionBase.Any\n- uid: System.Security.Permissions.ResourcePermissionBase.Clear\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: ResourcePermissionBase.Clear()\n  fullName: ResourcePermissionBase.Clear()\n- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: GetPermissionEntries()\n  nameWithType: ResourcePermissionBase.GetPermissionEntries()\n  fullName: ResourcePermissionBase.GetPermissionEntries()\n- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ResourcePermissionBase.IsUnrestricted()\n  fullName: ResourcePermissionBase.IsUnrestricted()\n- uid: System.Security.Permissions.ResourcePermissionBase.Local\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Local\n  nameWithType: ResourcePermissionBase.Local\n  fullName: ResourcePermissionBase.Local\n- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: PermissionAccessType\n  nameWithType: ResourcePermissionBase.PermissionAccessType\n  fullName: ResourcePermissionBase.PermissionAccessType\n- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: RemovePermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n  fullName: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBase.TagNames\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: TagNames\n  nameWithType: ResourcePermissionBase.TagNames\n  fullName: ResourcePermissionBase.TagNames\n"}