### YamlMime:ManagedReference
items:
- uid: System.Web.HttpException
  commentId: T:System.Web.HttpException
  id: HttpException
  children:
  - System.Web.HttpException.#ctor
  - System.Web.HttpException.#ctor(System.String)
  - System.Web.HttpException.#ctor(System.Int32,System.String)
  - System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.#ctor(System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.String,System.Int32)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  langs:
  - csharp
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Describes an exception that occurred during the processing of HTTP requests.
  remarks: The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information. For more information about throwing and handling exceptions, see [Exceptions](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions. The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method. If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  -->"
  syntax:
    content: 'public class HttpException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  derivedClasses:
  - System.Web.HttpCompileException
  - System.Web.HttpParseException
  - System.Web.HttpRequestValidationException
  - System.Web.HttpUnhandledException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor
  commentId: M:System.Web.HttpException.#ctor
  id: '#ctor'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: HttpException.HttpException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class and creates an empty <xref href="System.Web.HttpException"></xref> object.
  remarks: "When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.  \n  \n A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception. This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions. For more information, see <xref:System.Exception.InnerException%2A>."
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  -->"
  syntax:
    content: public HttpException ();
    parameters: []
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.String)
  commentId: M:System.Web.HttpException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: HttpException.HttpException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using a supplied error message.
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]\n [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]"
  syntax:
    content: public HttpException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  commentId: M:System.Web.HttpException.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32, String)
  nameWithType: HttpException.HttpException(Int32, String)
  fullName: HttpException.HttpException(Int32, String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using an HTTP response status code and an error message.
  syntax:
    content: public HttpException (int httpCode, string message);
    parameters:
    - id: httpCode
      type: System.Int32
      description: The HTTP response status code sent to the client corresponding to this error.
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(SerializationInfo, StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo, StreamingContext)
  fullName: HttpException.HttpException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class with serialized data.
  remarks: The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).
  syntax:
    content: protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that holds the contextual information about the source or destination.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  commentId: M:System.Web.HttpException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String, Exception)
  nameWithType: HttpException.HttpException(String, Exception)
  fullName: HttpException.HttpException(String, Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using an error message and the <xref href="System.Exception.InnerException"></xref> property.
  remarks: "When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.  \n  \n A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception. This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions. For more information, see <xref:System.Exception.InnerException%2A>."
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  -->"
  syntax:
    content: public HttpException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
    - id: innerException
      type: System.Exception
      description: The <xref href="System.Exception.InnerException"></xref>, if any, that threw the current exception.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  commentId: M:System.Web.HttpException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String, Int32)
  nameWithType: HttpException.HttpException(String, Int32)
  fullName: HttpException.HttpException(String, Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using an error message and an exception code.
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]\n [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]"
  syntax:
    content: public HttpException (string message, int hr);
    parameters:
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
    - id: hr
      type: System.Int32
      description: The exception code that defines the error.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  commentId: M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  id: '#ctor(System.Int32,System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32, String, Exception)
  nameWithType: HttpException.HttpException(Int32, String, Exception)
  fullName: HttpException.HttpException(Int32, String, Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using an HTTP response status code, an error message, and the <xref href="System.Exception.InnerException"></xref> property.
  remarks: "When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.  \n  \n A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception. This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions. For more information, see <xref:System.Exception.InnerException%2A>."
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created. That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  -->"
  syntax:
    content: public HttpException (int httpCode, string message, Exception innerException);
    parameters:
    - id: httpCode
      type: System.Int32
      description: The HTTP response status code displayed on the client.
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
    - id: innerException
      type: System.Exception
      description: The <xref href="System.Exception.InnerException"></xref>, if any, that threw the current exception.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  commentId: M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  id: '#ctor(System.Int32,System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32, String, Int32)
  nameWithType: HttpException.HttpException(Int32, String, Int32)
  fullName: HttpException.HttpException(Int32, String, Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Initializes a new instance of the <xref href="System.Web.HttpException"></xref> class using an HTTP response status code, an error message, and an exception code.
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class. The user name and e-mail information are entered by the user in the provided text boxes. If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown. The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  -->"
  syntax:
    content: public HttpException (int httpCode, string message, int hr);
    parameters:
    - id: httpCode
      type: System.Int32
      description: The HTTP response status code displayed on the client.
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
    - id: hr
      type: System.Int32
      description: The exception code that defines the error.
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  commentId: M:System.Web.HttpException.CreateFromLastError(System.String)
  id: CreateFromLastError(System.String)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: HttpException.CreateFromLastError(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Creates a new <xref href="System.Web.HttpException"></xref> exception based on the error code that is returned from the Win32 API `GetLastError()` method.
  syntax:
    content: public static System.Web.HttpException CreateFromLastError (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message displayed to the client when the exception is thrown.
    return:
      type: System.Web.HttpException
      description: An <xref href="System.Web.HttpException"></xref> based on the error code that is returned from a call to the Win32 API `GetLastError()` method.
  overload: System.Web.HttpException.CreateFromLastError*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.GetHtmlErrorMessage
  commentId: M:System.Web.HttpException.GetHtmlErrorMessage
  id: GetHtmlErrorMessage
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: HttpException.GetHtmlErrorMessage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets the HTML error message to return to the client.
  syntax:
    content: public string GetHtmlErrorMessage ();
    parameters: []
    return:
      type: System.String
      description: The HTML error message.
  overload: System.Web.HttpException.GetHtmlErrorMessage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.GetHttpCode
  commentId: M:System.Web.HttpException.GetHttpCode
  id: GetHttpCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: HttpException.GetHttpCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets the HTTP response status code to return to the client.
  remarks: If there is a non-zero HTTP code, it is returned. Otherwise, the <xref:System.Exception.InnerException%2A> code is returned. If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned. For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).
  syntax:
    content: public int GetHttpCode ();
    parameters: []
    return:
      type: System.Int32
      description: A non-zero HTTP code representing the exception or the <xref href="System.Exception.InnerException"></xref> code; otherwise, HTTP response status code 500.
  overload: System.Web.HttpException.GetHttpCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: HttpException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets information about the exception and adds it to the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object.
  remarks: The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that holds the contextual information about the source or destination.
  overload: System.Web.HttpException.GetObjectData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.HttpException.WebEventCode
  commentId: P:System.Web.HttpException.WebEventCode
  id: WebEventCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: HttpException.WebEventCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets the event codes that are associated with the HTTP exception.
  syntax:
    content: public int WebEventCode { get; }
    return:
      type: System.Int32
      description: An integer representing a Web event code.
  overload: System.Web.HttpException.WebEventCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Web.HttpException.#ctor
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: HttpException.HttpException()
- uid: System.Web.HttpException.#ctor(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: HttpException.HttpException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32, String)
  nameWithType: HttpException.HttpException(Int32, String)
  fullName: HttpException.HttpException(Int32, String)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(SerializationInfo, StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo, StreamingContext)
  fullName: HttpException.HttpException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String, Exception)
  nameWithType: HttpException.HttpException(String, Exception)
  fullName: HttpException.HttpException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String, Int32)
  nameWithType: HttpException.HttpException(String, Int32)
  fullName: HttpException.HttpException(String, Int32)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32, String, Exception)
  nameWithType: HttpException.HttpException(Int32, String, Exception)
  fullName: HttpException.HttpException(Int32, String, Exception)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32, String, Int32)
  nameWithType: HttpException.HttpException(Int32, String, Int32)
  fullName: HttpException.HttpException(Int32, String, Int32)
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: HttpException.CreateFromLastError(String)
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpException.GetHtmlErrorMessage
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: HttpException.GetHtmlErrorMessage()
- uid: System.Web.HttpException.GetHttpCode
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: HttpException.GetHttpCode()
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: HttpException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Web.HttpException.WebEventCode
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: HttpException.WebEventCode
- uid: System.Web.HttpException.#ctor*
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException
  nameWithType: HttpException.HttpException
  fullName: HttpException.HttpException
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Web.HttpException.CreateFromLastError*
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError
  nameWithType: HttpException.CreateFromLastError
  fullName: HttpException.CreateFromLastError
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Web.HttpException.GetHtmlErrorMessage*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage
  nameWithType: HttpException.GetHtmlErrorMessage
  fullName: HttpException.GetHtmlErrorMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Web.HttpException.GetHttpCode*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode
  nameWithType: HttpException.GetHttpCode
  fullName: HttpException.GetHttpCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Web.HttpException.GetObjectData*
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData
  nameWithType: HttpException.GetObjectData
  fullName: HttpException.GetObjectData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Web.HttpException.WebEventCode*
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: HttpException.WebEventCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Runtime.InteropServices.ExternalException.ToString
  parent: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: ToString()
  nameWithType: ExternalException.ToString()
  fullName: ExternalException.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: Exception.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
- uid: System.Runtime.InteropServices.ExternalException.ErrorCode
  parent: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: ErrorCode
  nameWithType: ExternalException.ErrorCode
  fullName: ExternalException.ErrorCode
