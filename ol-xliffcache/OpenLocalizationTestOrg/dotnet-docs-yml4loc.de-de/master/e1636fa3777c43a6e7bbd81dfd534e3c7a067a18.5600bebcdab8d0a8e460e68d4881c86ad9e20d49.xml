{"nodes":[{"content":"Contains methods for reading and writing XML.","nodes":[{"pos":[0,45],"content":"Contains methods for reading and writing XML.","nodes":[{"content":"Contains methods for reading and writing XML.","pos":[0,45]}]}],"pos":[864,910],"yaml":true},{"content":"Using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], you can generate CLR types representing data contracts from XML schemas. In certain cases when doing so, the schemas may not all be represented as data contracts. In this case, you can use the <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.  Setting the property to `true` specifies that these types are imported as XML types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface. In the process, the generated types can store anything, but they are read and written as XML by the serializer.  \n  \n The <xref:System.Runtime.Serialization.XmlSerializableServices> is an abstract helper class that contains code that is used by the generated <xref:System.Xml.Serialization.IXmlSerializable> types to read and write XML. It also contains code for generating schema for the generated types. Note that details about the schemas are not stored. Only the name is stored in the generated type. This class generates a default schema that represents the XML schema type `anyType` with the appropriate schema type name as the contract name.","nodes":[{"pos":[0,661],"content":"Using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], you can generate CLR types representing data contracts from XML schemas. In certain cases when doing so, the schemas may not all be represented as data contracts. In this case, you can use the <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.  Setting the property to `true` specifies that these types are imported as XML types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface. In the process, the generated types can store anything, but they are read and written as XML by the serializer.","nodes":[{"content":"Using <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, you can generate CLR types representing data contracts from XML schemas.","pos":[0,125],"source":"Using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], you can generate CLR types representing data contracts from XML schemas."},{"content":"In certain cases when doing so, the schemas may not all be represented as data contracts.","pos":[126,215]},{"content":"In this case, you can use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class.","pos":[216,385],"source":" In this case, you can use the <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class."},{"content":"Setting the property to <ph id=\"ph1\">`true`</ph> specifies that these types are imported as XML types that implement the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.","pos":[387,549],"source":"  Setting the property to `true` specifies that these types are imported as XML types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface."},{"content":"In the process, the generated types can store anything, but they are read and written as XML by the serializer.","pos":[550,661]}]},{"pos":[668,1198],"content":"The <xref:System.Runtime.Serialization.XmlSerializableServices> is an abstract helper class that contains code that is used by the generated <xref:System.Xml.Serialization.IXmlSerializable> types to read and write XML. It also contains code for generating schema for the generated types. Note that details about the schemas are not stored. Only the name is stored in the generated type. This class generates a default schema that represents the XML schema type `anyType` with the appropriate schema type name as the contract name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XmlSerializableServices&gt;</ph> is an abstract helper class that contains code that is used by the generated <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> types to read and write XML.","pos":[0,218],"source":"The <xref:System.Runtime.Serialization.XmlSerializableServices> is an abstract helper class that contains code that is used by the generated <xref:System.Xml.Serialization.IXmlSerializable> types to read and write XML."},{"content":"It also contains code for generating schema for the generated types.","pos":[219,287]},{"content":"Note that details about the schemas are not stored.","pos":[288,339]},{"content":"Only the name is stored in the generated type.","pos":[340,386]},{"content":"This class generates a default schema that represents the XML schema type <ph id=\"ph1\">`anyType`</ph> with the appropriate schema type name as the contract name.","pos":[387,530],"source":" This class generates a default schema that represents the XML schema type `anyType` with the appropriate schema type name as the contract name."}]}],"pos":[921,2124],"yaml":true,"extradata":"MT"},{"content":"Generates a default schema type given the specified type name and adds it to the specified schema set.","nodes":[{"pos":[0,102],"content":"Generates a default schema type given the specified type name and adds it to the specified schema set.","nodes":[{"content":"Generates a default schema type given the specified type name and adds it to the specified schema set.","pos":[0,102]}]}],"pos":[4126,4229],"yaml":true},{"content":"This method contains code for generating a schema type for a data contract type with the specified type name.","nodes":[{"pos":[0,109],"content":"This method contains code for generating a schema type for a data contract type with the specified type name.","nodes":[{"content":"This method contains code for generating a schema type for a data contract type with the specified type name.","pos":[0,109]}]}],"pos":[4240,4350],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to add the generated schema type to.","nodes":[{"pos":[0,91],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> to add the generated schema type to.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to add the generated schema type to."}],"pos":[4586,4678],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the type name to assign the schema to.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that specifies the type name to assign the schema to.","source":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the type name to assign the schema to."}],"pos":[4757,4863],"yaml":true},{"content":"The <code>schemas</code> or <code>typeQName</code> argument is `null`.","nodes":[{"pos":[0,70],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">typeQName</ph><ept id=\"p2\">&lt;/code&gt;</ept> argument is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>typeQName</code> argument is `null`."}],"pos":[5062,5133],"yaml":true},{"content":"Reads a set of XML nodes from the specified reader and returns the result.","nodes":[{"pos":[0,74],"content":"Reads a set of XML nodes from the specified reader and returns the result.","nodes":[{"content":"Reads a set of XML nodes from the specified reader and returns the result.","pos":[0,74]}]}],"pos":[6505,6580],"yaml":true},{"content":"This method reads all XML contained within the node the reader is positioned on when this call is made. This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects. It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.","nodes":[{"pos":[0,384],"content":"This method reads all XML contained within the node the reader is positioned on when this call is made. This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects. It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.","nodes":[{"content":"This method reads all XML contained within the node the reader is positioned on when this call is made. This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects. It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.","pos":[0,384],"nodes":[{"content":"This method reads all XML contained within the node the reader is positioned on when this call is made.","pos":[0,103]},{"content":"This enables it to read and store all XML as an array of <ph id=\"ph1\">&lt;xref:System.Xml.XmlNode&gt;</ph> objects.","pos":[104,195],"source":" This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects."},{"content":"It is a helper method used by the types that implement <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> and that use the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method.","pos":[196,384],"source":" It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method."}]}]}],"pos":[6591,6976],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlReader\"></xref> used for reading.","nodes":[{"pos":[0,62],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> used for reading.","source":"An <xref href=\"System.Xml.XmlReader\"></xref> used for reading."}],"pos":[7166,7229],"yaml":true},{"content":"An array of type <xref href=\"System.Xml.XmlNode\"></xref>.","nodes":[{"pos":[0,57],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph>.","source":"An array of type <xref href=\"System.Xml.XmlNode\"></xref>."}],"pos":[7293,7351],"yaml":true},{"content":"The <code>xmlReader</code> argument is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlReader</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>xmlReader</code> argument is `null`."}],"pos":[7543,7590],"yaml":true},{"content":"While reading, a `null` node was encountered.","nodes":[{"pos":[0,45],"content":"While reading, a <ph id=\"ph1\">`null`</ph> node was encountered.","source":"While reading, a `null` node was encountered."}],"pos":[7738,7784],"yaml":true},{"content":"Writes the supplied nodes using the specified writer.","nodes":[{"pos":[0,53],"content":"Writes the supplied nodes using the specified writer.","nodes":[{"content":"Writes the supplied nodes using the specified writer.","pos":[0,53]}]}],"pos":[9258,9312],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlWriter\"></xref> used for writing.","nodes":[{"pos":[0,62],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> used for writing.","source":"An <xref href=\"System.Xml.XmlWriter\"></xref> used for writing."}],"pos":[9515,9578],"yaml":true},{"content":"An array of type <xref href=\"System.Xml.XmlNode\"></xref> to write.","nodes":[{"pos":[0,66],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> to write.","source":"An array of type <xref href=\"System.Xml.XmlNode\"></xref> to write."}],"pos":[9646,9713],"yaml":true},{"content":"The <code>xmlWriter</code> argument is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlWriter</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>xmlWriter</code> argument is `null`."}],"pos":[9906,9953],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.XmlSerializableServices\n  commentId: T:System.Runtime.Serialization.XmlSerializableServices\n  id: XmlSerializableServices\n  children:\n  - System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  - System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)\n  - System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])\n  langs:\n  - csharp\n  name: XmlSerializableServices\n  nameWithType: XmlSerializableServices\n  fullName: System.Runtime.Serialization.XmlSerializableServices\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Contains methods for reading and writing XML.\n  remarks: \"Using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], you can generate CLR types representing data contracts from XML schemas. In certain cases when doing so, the schemas may not all be represented as data contracts. In this case, you can use the <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.  Setting the property to `true` specifies that these types are imported as XML types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface. In the process, the generated types can store anything, but they are read and written as XML by the serializer.  \\n  \\n The <xref:System.Runtime.Serialization.XmlSerializableServices> is an abstract helper class that contains code that is used by the generated <xref:System.Xml.Serialization.IXmlSerializable> types to read and write XML. It also contains code for generating schema for the generated types. Note that details about the schemas are not stored. Only the name is stored in the generated type. This class generates a default schema that represents the XML schema type `anyType` with the appropriate schema type name as the contract name.\"\n  syntax:\n    content: public static class XmlSerializableServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  commentId: M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  id: AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  langs:\n  - csharp\n  name: AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n  fullName: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Generates a default schema type given the specified type name and adds it to the specified schema set.\n  remarks: This method contains code for generating a schema type for a data contract type with the specified type name.\n  syntax:\n    content: public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to add the generated schema type to.\n    - id: typeQName\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the type name to assign the schema to.\n  overload: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>typeQName</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)\n  commentId: M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)\n  id: ReadNodes(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  langs:\n  - csharp\n  name: ReadNodes(XmlReader)\n  nameWithType: XmlSerializableServices.ReadNodes(XmlReader)\n  fullName: XmlSerializableServices.ReadNodes(XmlReader)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Reads a set of XML nodes from the specified reader and returns the result.\n  remarks: This method reads all XML contained within the node the reader is positioned on when this call is made. This enables it to read and store all XML as an array of <xref:System.Xml.XmlNode> objects. It is a helper method used by the types that implement <xref:System.Xml.Serialization.IXmlSerializable> and that use the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.\n  syntax:\n    content: public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: An <xref href=\"System.Xml.XmlReader\"></xref> used for reading.\n    return:\n      type: System.Xml.XmlNode[]\n      description: An array of type <xref href=\"System.Xml.XmlNode\"></xref>.\n  overload: System.Runtime.Serialization.XmlSerializableServices.ReadNodes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>xmlReader</code> argument is `null`.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: While reading, a `null` node was encountered.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])\n  commentId: M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])\n  id: WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  langs:\n  - csharp\n  name: WriteNodes(XmlWriter, XmlNode[])\n  nameWithType: XmlSerializableServices.WriteNodes(XmlWriter, XmlNode[])\n  fullName: XmlSerializableServices.WriteNodes(XmlWriter, XmlNode[])\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Writes the supplied nodes using the specified writer.\n  syntax:\n    content: public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);\n    parameters:\n    - id: xmlWriter\n      type: System.Xml.XmlWriter\n      description: An <xref href=\"System.Xml.XmlWriter\"></xref> used for writing.\n    - id: nodes\n      type: System.Xml.XmlNode[]\n      description: An array of type <xref href=\"System.Xml.XmlNode\"></xref> to write.\n  overload: System.Runtime.Serialization.XmlSerializableServices.WriteNodes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>xmlWriter</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n  fullName: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet, XmlQualifiedName)\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: false\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: ReadNodes(XmlReader)\n  nameWithType: XmlSerializableServices.ReadNodes(XmlReader)\n  fullName: XmlSerializableServices.ReadNodes(XmlReader)\n- uid: System.Xml.XmlNode\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Xml.XmlNode[]\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode[]\n  nameWithType: XmlNode[]\n  fullName: System.Xml.XmlNode[]\n  spec.csharp:\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    nameWithType: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: WriteNodes(XmlWriter, XmlNode[])\n  nameWithType: XmlSerializableServices.WriteNodes(XmlWriter, XmlNode[])\n  fullName: XmlSerializableServices.WriteNodes(XmlWriter, XmlNode[])\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema*\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: AddDefaultSchema\n  nameWithType: XmlSerializableServices.AddDefaultSchema\n  fullName: XmlSerializableServices.AddDefaultSchema\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes*\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: ReadNodes\n  nameWithType: XmlSerializableServices.ReadNodes\n  fullName: XmlSerializableServices.ReadNodes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes*\n  parent: System.Runtime.Serialization.XmlSerializableServices\n  isExternal: false\n  name: WriteNodes\n  nameWithType: XmlSerializableServices.WriteNodes\n  fullName: XmlSerializableServices.WriteNodes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XmlSerializableServices.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}