### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.CallingConvention
  commentId: T:System.Runtime.InteropServices.CallingConvention
  id: CallingConvention
  children:
  - System.Runtime.InteropServices.CallingConvention.Cdecl
  - System.Runtime.InteropServices.CallingConvention.FastCall
  - System.Runtime.InteropServices.CallingConvention.StdCall
  - System.Runtime.InteropServices.CallingConvention.ThisCall
  - System.Runtime.InteropServices.CallingConvention.Winapi
  langs:
  - csharp
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
  type: Enum
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: Specifies the calling convention required to call methods implemented in unmanaged code.
  remarks: Always use the <xref:System.Runtime.InteropServices.CallingConvention> enumeration rather than the <xref:System.Runtime.InteropServices.CALLCONV> enumeration to specify a calling convention in managed code. The latter exists only for the sake of COM definitions. The <xref:System.Runtime.InteropServices.CallingConvention> enumeration is used by <xref:System.Runtime.InteropServices.DllImportAttribute> and several classes in <xref:System.Reflection.Emit> to dynamically emit platform invoke signatures.
  example:
  - "The following example demonstrates how to apply the `Cdecl` calling convention, which you must use because the stack is cleaned up by the caller.  \n  \n [!code-cpp[Interop CallingConvention#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop CallingConvention/CPP/callingconv.cpp#1)]\n [!code-csharp[Interop CallingConvention#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop CallingConvention/CS/callingconv.cs#1)]\n [!code-vb[Interop CallingConvention#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop CallingConvention/VB/callingconv.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum CallingConvention
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.CallingConvention.Cdecl
  commentId: F:System.Runtime.InteropServices.CallingConvention.Cdecl
  id: Cdecl
  parent: System.Runtime.InteropServices.CallingConvention
  langs:
  - csharp
  name: Cdecl
  nameWithType: CallingConvention.Cdecl
  fullName: CallingConvention.Cdecl
  type: Field
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The caller cleans the stack. This enables calling functions with `varargs`, which makes it appropriate to use for methods that accept a variable number of parameters, such as `Printf`.
  syntax:
    content: Cdecl
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
- uid: System.Runtime.InteropServices.CallingConvention.FastCall
  commentId: F:System.Runtime.InteropServices.CallingConvention.FastCall
  id: FastCall
  parent: System.Runtime.InteropServices.CallingConvention
  langs:
  - csharp
  name: FastCall
  nameWithType: CallingConvention.FastCall
  fullName: CallingConvention.FastCall
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: This calling convention is not supported.
  syntax:
    content: FastCall
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
- uid: System.Runtime.InteropServices.CallingConvention.StdCall
  commentId: F:System.Runtime.InteropServices.CallingConvention.StdCall
  id: StdCall
  parent: System.Runtime.InteropServices.CallingConvention
  langs:
  - csharp
  name: StdCall
  nameWithType: CallingConvention.StdCall
  fullName: CallingConvention.StdCall
  type: Field
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The callee cleans the stack. This is the default convention for calling unmanaged functions with platform invoke.
  syntax:
    content: StdCall
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
- uid: System.Runtime.InteropServices.CallingConvention.ThisCall
  commentId: F:System.Runtime.InteropServices.CallingConvention.ThisCall
  id: ThisCall
  parent: System.Runtime.InteropServices.CallingConvention
  langs:
  - csharp
  name: ThisCall
  nameWithType: CallingConvention.ThisCall
  fullName: CallingConvention.ThisCall
  type: Field
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The first parameter is the `this` pointer and is stored in register ECX. Other parameters are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.
  syntax:
    content: ThisCall
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
- uid: System.Runtime.InteropServices.CallingConvention.Winapi
  commentId: F:System.Runtime.InteropServices.CallingConvention.Winapi
  id: Winapi
  parent: System.Runtime.InteropServices.CallingConvention
  langs:
  - csharp
  name: Winapi
  nameWithType: CallingConvention.Winapi
  fullName: CallingConvention.Winapi
  type: Field
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: This member is not actually a calling convention, but instead uses the default platform calling convention. For example, on Windows the default is <xref href="System.Runtime.InteropServices.CallingConvention.StdCall"></xref> and on Windows CE.NET it is <xref href="System.Runtime.InteropServices.CallingConvention.Cdecl"></xref>.
  syntax:
    content: Winapi
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/CallingConvention.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Runtime.InteropServices.CallingConvention.Cdecl
  parent: System.Runtime.InteropServices.CallingConvention
  isExternal: false
  name: Cdecl
  nameWithType: CallingConvention.Cdecl
  fullName: CallingConvention.Cdecl
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.CallingConvention.FastCall
  parent: System.Runtime.InteropServices.CallingConvention
  isExternal: false
  name: FastCall
  nameWithType: CallingConvention.FastCall
  fullName: CallingConvention.FastCall
- uid: System.Runtime.InteropServices.CallingConvention.StdCall
  parent: System.Runtime.InteropServices.CallingConvention
  isExternal: false
  name: StdCall
  nameWithType: CallingConvention.StdCall
  fullName: CallingConvention.StdCall
- uid: System.Runtime.InteropServices.CallingConvention.ThisCall
  parent: System.Runtime.InteropServices.CallingConvention
  isExternal: false
  name: ThisCall
  nameWithType: CallingConvention.ThisCall
  fullName: CallingConvention.ThisCall
- uid: System.Runtime.InteropServices.CallingConvention.Winapi
  parent: System.Runtime.InteropServices.CallingConvention
  isExternal: false
  name: Winapi
  nameWithType: CallingConvention.Winapi
  fullName: CallingConvention.Winapi
