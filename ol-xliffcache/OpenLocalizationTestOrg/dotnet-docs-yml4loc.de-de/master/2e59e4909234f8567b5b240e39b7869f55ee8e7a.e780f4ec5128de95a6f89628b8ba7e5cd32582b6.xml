{"nodes":[{"content":"Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.","nodes":[{"pos":[0,99],"content":"Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.","nodes":[{"content":"Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.","pos":[0,99]}]}],"pos":[1011,1111],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.HandleCollector> class keeps track of a limited number of handles to unmanaged resources.  Typically, unmanaged resources include handles to `HDC`s, `HWnd`s, and so on.","nodes":[{"pos":[0,209],"content":"The <xref:System.Runtime.InteropServices.HandleCollector> class keeps track of a limited number of handles to unmanaged resources.  Typically, unmanaged resources include handles to `HDC`s, `HWnd`s, and so on.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.HandleCollector&gt;</ph> class keeps track of a limited number of handles to unmanaged resources.","pos":[0,130],"source":"The <xref:System.Runtime.InteropServices.HandleCollector> class keeps track of a limited number of handles to unmanaged resources."},{"content":"Typically, unmanaged resources include handles to <ph id=\"ph1\">`HDC`</ph>s, <ph id=\"ph2\">`HWnd`</ph>s, and so on.","pos":[132,209],"source":"  Typically, unmanaged resources include handles to `HDC`s, `HWnd`s, and so on."}]}],"pos":[1122,1332],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name and a threshold at which to begin handle collection.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector\"&gt;&lt;/xref&gt;</ph> class using a name and a threshold at which to begin handle collection.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name and a threshold at which to begin handle collection."}],"pos":[3397,3571],"yaml":true},{"content":"A name for the collector. This parameter allows you to name collectors that track handle types separately.","nodes":[{"pos":[0,106],"content":"A name for the collector. This parameter allows you to name collectors that track handle types separately.","nodes":[{"content":"A name for the collector. This parameter allows you to name collectors that track handle types separately.","pos":[0,106],"nodes":[{"content":"A name for the collector.","pos":[0,25]},{"content":"This parameter allows you to name collectors that track handle types separately.","pos":[26,106]}]}]}],"pos":[3730,3837],"yaml":true},{"content":"A value that specifies the point at which collections should begin.","nodes":[{"pos":[0,67],"content":"A value that specifies the point at which collections should begin.","nodes":[{"content":"A value that specifies the point at which collections should begin.","pos":[0,67]}]}],"pos":[3908,3976],"yaml":true},{"content":"The <code>initialThreshold</code> parameter is less than 0.","nodes":[{"pos":[0,59],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">initialThreshold</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>initialThreshold</code> parameter is less than 0."}],"pos":[4170,4230],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.","nodes":[{"pos":[0,225],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector\"&gt;&lt;/xref&gt;</ph> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur."}],"pos":[5952,6178],"yaml":true},{"content":"A name for the collector.  This parameter allows you to name collectors that track handle types separately.","nodes":[{"pos":[0,107],"content":"A name for the collector.  This parameter allows you to name collectors that track handle types separately.","nodes":[{"content":"A name for the collector.  This parameter allows you to name collectors that track handle types separately.","pos":[0,107],"nodes":[{"content":"A name for the collector.","pos":[0,25]},{"content":"This parameter allows you to name collectors that track handle types separately.","pos":[27,107]}]}]}],"pos":[6359,6467],"yaml":true},{"content":"A value that specifies the point at which collections should begin.","nodes":[{"pos":[0,67],"content":"A value that specifies the point at which collections should begin.","nodes":[{"content":"A value that specifies the point at which collections should begin.","pos":[0,67]}]}],"pos":[6538,6606],"yaml":true},{"content":"A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.","nodes":[{"pos":[0,128],"content":"A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.","nodes":[{"content":"A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.","pos":[0,128],"nodes":[{"content":"A value that specifies the point at which collections must occur.","pos":[0,65]},{"content":"This should be set to the maximum number of available handles.","pos":[66,128]}]}]}],"pos":[6677,6806],"yaml":true},{"content":"The <code>initialThreshold</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>maximumThreshold</code> parameter is less than 0.","nodes":[{"pos":[0,59],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">initialThreshold</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>initialThreshold</code> parameter is less than 0."},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,136],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">maximumThreshold</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>maximumThreshold</code> parameter is less than 0."}],"pos":[7000,7143],"yaml":true},{"content":"The <code>maximumThreshold</code> parameter is less than the <code>initialThreshold</code> parameter.","nodes":[{"pos":[0,101],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">maximumThreshold</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">initialThreshold</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The <code>maximumThreshold</code> parameter is less than the <code>initialThreshold</code> parameter."}],"pos":[7237,7339],"yaml":true},{"content":"Increments the current handle count.","nodes":[{"pos":[0,36],"content":"Increments the current handle count.","nodes":[{"content":"Increments the current handle count.","pos":[0,36]}]}],"pos":[8829,8866],"yaml":true},{"content":"The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"&gt;&lt;/xref&gt;</ph> property is less than 0.","source":"The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0."}],"pos":[9116,9219],"yaml":true},{"content":"Gets the number of handles collected.","nodes":[{"pos":[0,37],"content":"Gets the number of handles collected.","nodes":[{"content":"Gets the number of handles collected.","pos":[0,37]}]}],"pos":[10717,10755],"yaml":true},{"content":"The number of handles collected.","nodes":[{"pos":[0,32],"content":"The number of handles collected.","nodes":[{"content":"The number of handles collected.","pos":[0,32]}]}],"pos":[10860,10893],"yaml":true},{"content":"Gets a value that specifies the point at which collections should begin.","nodes":[{"pos":[0,72],"content":"Gets a value that specifies the point at which collections should begin.","nodes":[{"content":"Gets a value that specifies the point at which collections should begin.","pos":[0,72]}]}],"pos":[12540,12613],"yaml":true},{"content":"A value that specifies the point at which collections should begin.","nodes":[{"pos":[0,67],"content":"A value that specifies the point at which collections should begin.","nodes":[{"content":"A value that specifies the point at which collections should begin.","pos":[0,67]}]}],"pos":[12729,12797],"yaml":true},{"content":"Gets a value that specifies the point at which collections must occur.","nodes":[{"pos":[0,70],"content":"Gets a value that specifies the point at which collections must occur.","nodes":[{"content":"Gets a value that specifies the point at which collections must occur.","pos":[0,70]}]}],"pos":[14455,14526],"yaml":true},{"content":"A value that specifies the point at which collections must occur.","nodes":[{"pos":[0,65],"content":"A value that specifies the point at which collections must occur.","nodes":[{"content":"A value that specifies the point at which collections must occur.","pos":[0,65]}]}],"pos":[14642,14708],"yaml":true},{"content":"Gets the name of a <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> object.","nodes":[{"pos":[0,94],"content":"Gets the name of a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the name of a <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> object."}],"pos":[16294,16389],"yaml":true},{"content":"This <xref href=\"System.Runtime.InteropServices.HandleCollector.Name\"></xref> property allows you to name collectors that track handle types separately.","nodes":[{"pos":[0,152],"content":"This <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector.Name\"&gt;&lt;/xref&gt;</ph> property allows you to name collectors that track handle types separately.","source":"This <xref href=\"System.Runtime.InteropServices.HandleCollector.Name\"></xref> property allows you to name collectors that track handle types separately."}],"pos":[16497,16650],"yaml":true},{"content":"Decrements the current handle count.","nodes":[{"pos":[0,36],"content":"Decrements the current handle count.","nodes":[{"content":"Decrements the current handle count.","pos":[0,36]}]}],"pos":[18240,18277],"yaml":true},{"content":"The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"&gt;&lt;/xref&gt;</ph> property is less than 0.","source":"The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0."}],"pos":[18533,18636],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.HandleCollector\n  commentId: T:System.Runtime.InteropServices.HandleCollector\n  id: HandleCollector\n  children:\n  - System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)\n  - System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)\n  - System.Runtime.InteropServices.HandleCollector.Add\n  - System.Runtime.InteropServices.HandleCollector.Count\n  - System.Runtime.InteropServices.HandleCollector.InitialThreshold\n  - System.Runtime.InteropServices.HandleCollector.MaximumThreshold\n  - System.Runtime.InteropServices.HandleCollector.Name\n  - System.Runtime.InteropServices.HandleCollector.Remove\n  langs:\n  - csharp\n  name: HandleCollector\n  nameWithType: HandleCollector\n  fullName: System.Runtime.InteropServices.HandleCollector\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.\n  remarks: The <xref:System.Runtime.InteropServices.HandleCollector> class keeps track of a limited number of handles to unmanaged resources.  Typically, unmanaged resources include handles to `HDC`s, `HWnd`s, and so on.\n  syntax:\n    content: public sealed class HandleCollector\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)\n  commentId: M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: HandleCollector(String, Int32)\n  nameWithType: HandleCollector.HandleCollector(String, Int32)\n  fullName: HandleCollector.HandleCollector(String, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name and a threshold at which to begin handle collection.\n  syntax:\n    content: public HandleCollector (string name, int initialThreshold);\n    parameters:\n    - id: name\n      type: System.String\n      description: A name for the collector. This parameter allows you to name collectors that track handle types separately.\n    - id: initialThreshold\n      type: System.Int32\n      description: A value that specifies the point at which collections should begin.\n  overload: System.Runtime.InteropServices.HandleCollector.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>initialThreshold</code> parameter is less than 0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)\n  commentId: M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Int32,System.Int32)'\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: HandleCollector(String, Int32, Int32)\n  nameWithType: HandleCollector.HandleCollector(String, Int32, Int32)\n  fullName: HandleCollector.HandleCollector(String, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur.\n  syntax:\n    content: public HandleCollector (string name, int initialThreshold, int maximumThreshold);\n    parameters:\n    - id: name\n      type: System.String\n      description: A name for the collector.  This parameter allows you to name collectors that track handle types separately.\n    - id: initialThreshold\n      type: System.Int32\n      description: A value that specifies the point at which collections should begin.\n    - id: maximumThreshold\n      type: System.Int32\n      description: A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.\n  overload: System.Runtime.InteropServices.HandleCollector.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>initialThreshold</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>maximumThreshold</code> parameter is less than 0.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>maximumThreshold</code> parameter is less than the <code>initialThreshold</code> parameter.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.Add\n  commentId: M:System.Runtime.InteropServices.HandleCollector.Add\n  id: Add\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: Add()\n  nameWithType: HandleCollector.Add()\n  fullName: HandleCollector.Add()\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Increments the current handle count.\n  syntax:\n    content: public void Add ();\n    parameters: []\n  overload: System.Runtime.InteropServices.HandleCollector.Add*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.Count\n  commentId: P:System.Runtime.InteropServices.HandleCollector.Count\n  id: Count\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HandleCollector.Count\n  fullName: HandleCollector.Count\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the number of handles collected.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of handles collected.\n  overload: System.Runtime.InteropServices.HandleCollector.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.InitialThreshold\n  commentId: P:System.Runtime.InteropServices.HandleCollector.InitialThreshold\n  id: InitialThreshold\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: InitialThreshold\n  nameWithType: HandleCollector.InitialThreshold\n  fullName: HandleCollector.InitialThreshold\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets a value that specifies the point at which collections should begin.\n  syntax:\n    content: public int InitialThreshold { get; }\n    return:\n      type: System.Int32\n      description: A value that specifies the point at which collections should begin.\n  overload: System.Runtime.InteropServices.HandleCollector.InitialThreshold*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.MaximumThreshold\n  commentId: P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold\n  id: MaximumThreshold\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: MaximumThreshold\n  nameWithType: HandleCollector.MaximumThreshold\n  fullName: HandleCollector.MaximumThreshold\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets a value that specifies the point at which collections must occur.\n  syntax:\n    content: public int MaximumThreshold { get; }\n    return:\n      type: System.Int32\n      description: A value that specifies the point at which collections must occur.\n  overload: System.Runtime.InteropServices.HandleCollector.MaximumThreshold*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.Name\n  commentId: P:System.Runtime.InteropServices.HandleCollector.Name\n  id: Name\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: Name\n  nameWithType: HandleCollector.Name\n  fullName: HandleCollector.Name\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the name of a <xref href=\"System.Runtime.InteropServices.HandleCollector\"></xref> object.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: This <xref href=\"System.Runtime.InteropServices.HandleCollector.Name\"></xref> property allows you to name collectors that track handle types separately.\n  overload: System.Runtime.InteropServices.HandleCollector.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.HandleCollector.Remove\n  commentId: M:System.Runtime.InteropServices.HandleCollector.Remove\n  id: Remove\n  parent: System.Runtime.InteropServices.HandleCollector\n  langs:\n  - csharp\n  name: Remove()\n  nameWithType: HandleCollector.Remove()\n  fullName: HandleCollector.Remove()\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - System\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Decrements the current handle count.\n  syntax:\n    content: public void Remove ();\n    parameters: []\n  overload: System.Runtime.InteropServices.HandleCollector.Remove*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Runtime.InteropServices.HandleCollector.Count\"></xref> property is less than 0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: HandleCollector(String, Int32)\n  nameWithType: HandleCollector.HandleCollector(String, Int32)\n  fullName: HandleCollector.HandleCollector(String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: HandleCollector(String, Int32, Int32)\n  nameWithType: HandleCollector.HandleCollector(String, Int32, Int32)\n  fullName: HandleCollector.HandleCollector(String, Int32, Int32)\n- uid: System.Runtime.InteropServices.HandleCollector.Add\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Add()\n  nameWithType: HandleCollector.Add()\n  fullName: HandleCollector.Add()\n- uid: System.Runtime.InteropServices.HandleCollector.Count\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Count\n  nameWithType: HandleCollector.Count\n  fullName: HandleCollector.Count\n- uid: System.Runtime.InteropServices.HandleCollector.InitialThreshold\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: InitialThreshold\n  nameWithType: HandleCollector.InitialThreshold\n  fullName: HandleCollector.InitialThreshold\n- uid: System.Runtime.InteropServices.HandleCollector.MaximumThreshold\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: MaximumThreshold\n  nameWithType: HandleCollector.MaximumThreshold\n  fullName: HandleCollector.MaximumThreshold\n- uid: System.Runtime.InteropServices.HandleCollector.Name\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Name\n  nameWithType: HandleCollector.Name\n  fullName: HandleCollector.Name\n- uid: System.Runtime.InteropServices.HandleCollector.Remove\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Remove()\n  nameWithType: HandleCollector.Remove()\n  fullName: HandleCollector.Remove()\n- uid: System.Runtime.InteropServices.HandleCollector.#ctor*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: HandleCollector\n  nameWithType: HandleCollector.HandleCollector\n  fullName: HandleCollector.HandleCollector\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.Add*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Add\n  nameWithType: HandleCollector.Add\n  fullName: HandleCollector.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.Count*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Count\n  nameWithType: HandleCollector.Count\n  fullName: HandleCollector.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.InitialThreshold*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: InitialThreshold\n  nameWithType: HandleCollector.InitialThreshold\n  fullName: HandleCollector.InitialThreshold\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.MaximumThreshold*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: MaximumThreshold\n  nameWithType: HandleCollector.MaximumThreshold\n  fullName: HandleCollector.MaximumThreshold\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.Name*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Name\n  nameWithType: HandleCollector.Name\n  fullName: HandleCollector.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Runtime.InteropServices.HandleCollector.Remove*\n  parent: System.Runtime.InteropServices.HandleCollector\n  isExternal: false\n  name: Remove\n  nameWithType: HandleCollector.Remove\n  fullName: HandleCollector.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/HandleCollector.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}