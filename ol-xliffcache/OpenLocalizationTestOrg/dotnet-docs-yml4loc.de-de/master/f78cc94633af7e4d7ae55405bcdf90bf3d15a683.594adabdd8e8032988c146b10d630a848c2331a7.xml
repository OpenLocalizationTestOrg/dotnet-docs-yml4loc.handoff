{"nodes":[{"content":"Represents an *n*-tuple, where *n* is 8 or greater.","nodes":[{"pos":[0,51],"content":"Represents an <bpt id=\"p1\">*</bpt><ph id=\"ph1\">n</ph><ept id=\"p1\">*</ept>-tuple, where <bpt id=\"p2\">*</bpt><ph id=\"ph2\">n</ph><ept id=\"p2\">*</ept> is 8 or greater.","source":"Represents an *n*-tuple, where *n* is 8 or greater."}],"pos":[1281,1333],"yaml":true},{"content":"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.  \n  \n You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method. The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20. Note that it uses type inference to determine the type of each component.  \n  \n [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  \n  \n You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor. The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.  \n  \n [!code-csharp[System.Tuple\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\n [!code-vb[System.Tuple\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  \n  \n> [!NOTE]\n>  To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor. The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.  \n  \n To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple. By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.  \n  \n The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000. The first component of the tuple is the city name. The second component is the start date of the data series, and the third component is the population at the start date. Each subsequent component provides the population at decade intervals. The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)  \n  \n [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]\n [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  \n  \n You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties. Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property. In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple. The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties. The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.  \n  \n Tuples are commonly used in four different ways:  \n  \n-   To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.  \n  \n-   To provide easy access to, and manipulation of, a data set.  \n  \n-   To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.  \n  \n-   To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","nodes":[{"pos":[0,171],"content":"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.","nodes":[{"content":"A tuple is a data structure that has a specific number and sequence of values.","pos":[0,78]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> class represents an <bpt id=\"p1\">*</bpt><ph id=\"ph2\">n</ph><ept id=\"p1\">*</ept>-tuple that has eight or more components.","pos":[79,171],"source":" The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components."}]},{"pos":[178,521],"content":"You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method. The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20. Note that it uses type inference to determine the type of each component.","nodes":[{"content":"You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method. The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20. Note that it uses type inference to determine the type of each component.","pos":[0,343],"nodes":[{"content":"You can instantiate a <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object with exactly eight components by calling the static <ph id=\"ph2\">&lt;xref:System.Tuple.Create%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,167],"source":"You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method."},{"content":"The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.","pos":[168,269]},{"content":"Note that it uses type inference to determine the type of each component.","pos":[270,343]}]}]},{"pos":[528,791],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Tuple.Create#17<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Tuple.Create#17<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]"},{"pos":[798,1097],"content":"You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor. The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.","nodes":[{"content":"You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor. The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.","pos":[0,299],"nodes":[{"content":"You can also instantiate an n-tuple object with eight or more components by calling the <ph id=\"ph1\">&lt;xref:System.Tuple%608.%23ctor%2A&gt;</ph> constructor.","pos":[0,135],"source":"You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Tuple%608.%23ctor%2A&gt;</ph> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.","pos":[136,299],"source":" The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example."}]}]},{"pos":[1104,1361],"content":"<bpt id=\"p1\">[</bpt>!code-csharp<bpt id=\"p2\">[</bpt>System.Tuple<ph id=\"ph1\">\\`</ph>8.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)</ept>] [!code-vb[System.Tuple<ph id=\"ph2\">\\`</ph>8.Class#1<ept id=\"p1\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)</ept>]","source":"[!code-csharp[System.Tuple\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\n [!code-vb[System.Tuple\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]"},{"pos":[1369,1637],"content":"[!NOTE]\n To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor. The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.","leadings":["","> "],"nodes":[{"content":" To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor. The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.","pos":[8,266],"nodes":[{"content":"To create an n-tuple with nine or more components, you must call the  <ph id=\"ph1\">&lt;xref:System.Tuple%608.%23ctor%2A&gt;</ph> constructor.","pos":[1,118],"source":" To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor."},{"content":"The static factory methods of the <ph id=\"ph1\">&lt;xref:System.Tuple&gt;</ph> class do not support the creation of <ph id=\"ph2\">`Tuple`</ph> objects with more than eight components.","pos":[119,258],"source":" The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components."}]}]},{"pos":[1644,2017],"content":"To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple. By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.","nodes":[{"content":"To instantiate an n-tuple that has eight or more components with the <ph id=\"ph1\">&lt;xref:System.Tuple%608.%23ctor%2A&gt;</ph> constructor, you supply a generic <ph id=\"ph2\">`Tuple`</ph> object as the <ph id=\"ph3\">`rest`</ph> parameter to define the eighth through <bpt id=\"p1\">*</bpt><ph id=\"ph4\">n</ph><ept id=\"p1\">*</ept>th components of the tuple.","pos":[0,236],"source":"To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple."},{"content":"By nesting generic <ph id=\"ph1\">`Tuple`</ph> objects in this way, you can create a tuple that has no practical limitation on the number of its components.","pos":[237,373],"source":" By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components."}]},{"pos":[2024,2929],"content":"The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000. The first component of the tuple is the city name. The second component is the start date of the data series, and the third component is the population at the start date. Each subsequent component provides the population at decade intervals. The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)","nodes":[{"content":"The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.","pos":[0,149]},{"content":"The first component of the tuple is the city name.","pos":[150,200]},{"content":"The second component is the start date of the data series, and the third component is the population at the start date.","pos":[201,320]},{"content":"Each subsequent component provides the population at decade intervals.","pos":[321,391]},{"content":"The 17-tuple is created by nesting a <ph id=\"ph1\">&lt;xref:System.Tuple%603&gt;</ph> object inside a <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object.","pos":[392,500],"source":" The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object."},{"content":"(That is, the <ph id=\"ph1\">&lt;xref:System.Tuple%603&gt;</ph> object is supplied as the value of the <ph id=\"ph2\">`rest`</ph> parameter in the <ph id=\"ph3\">&lt;xref:System.Tuple%608&gt;</ph> class constructor.) This <ph id=\"ph4\">&lt;xref:System.Tuple%608&gt;</ph> object is, in turn, nested in an outer <ph id=\"ph5\">&lt;xref:System.Tuple%608&gt;</ph> object.","pos":[501,745],"source":" (That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object."},{"content":"(That is, the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object is supplied as the value of the <ph id=\"ph2\">`rest`</ph> parameter in the outer <ph id=\"ph3\">&lt;xref:System.Tuple%608&gt;</ph> object's class constructor.)","pos":[746,905],"source":" (That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)"}]},{"pos":[2936,3189],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Tuple.Create#19<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Tuple.Create#19<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]\n [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]"},{"pos":[3196,4194],"content":"You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties. Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property. In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple. The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties. The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.","nodes":[{"content":"You can retrieve the value of the tuple's first seven components by using the read-only <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Tuple%607.Item3%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Tuple%607.Item4%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Tuple%607.Item5%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Tuple%607.Item6%2A&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> instance properties.","pos":[0,349],"source":"You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties."},{"content":"Any additional components are nested and can be retrieved from the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property.","pos":[350,458],"source":" Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property."},{"content":"In the previous example, the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph> through <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item7%2A&gt;</ph> properties retrieve the first through seventh components of the tuple.","pos":[459,632],"source":" In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple."},{"content":"The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the <ph id=\"ph1\">`Rest.Item1`</ph> through <ph id=\"ph2\">`Rest.Item7`</ph> properties.","pos":[633,809],"source":" The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties."},{"content":"The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the <ph id=\"ph1\">`Rest.Rest.Item1`</ph> though <ph id=\"ph2\">`Rest.Rest.Item3`</ph> properties.","pos":[810,998],"source":" The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties."}]},{"pos":[4201,4249],"content":"Tuples are commonly used in four different ways:","nodes":[{"content":"Tuples are commonly used in four different ways:","pos":[0,48]}]},{"pos":[4259,4413],"content":"To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.","nodes":[{"content":"To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.","pos":[0,154],"nodes":[{"content":"To represent a single set of data.","pos":[0,34]},{"content":"For example, a tuple can represent a database record, and its components can represent individual fields of the record.","pos":[35,154]}]}]},{"pos":[4423,4482],"content":"To provide easy access to, and manipulation of, a data set.","nodes":[{"content":"To provide easy access to, and manipulation of, a data set.","pos":[0,59]}]},{"pos":[4492,4746],"content":"To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.","nodes":[{"content":"To return multiple values from a method without the use of <ph id=\"ph1\">`out`</ph> parameters (in C#) or <ph id=\"ph2\">`ByRef`</ph> parameters (in Visual Basic).","pos":[0,124],"source":"To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic)."},{"content":"For example, the previous example returns its computed statistics, along with the city name, in a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object.","pos":[125,254],"source":" For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object."}]},{"pos":[4756,5170],"content":"To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","nodes":[{"content":"To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","pos":[0,414],"nodes":[{"content":"To pass multiple values to a method through a single parameter.","pos":[0,63]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.","pos":[64,273],"source":" For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup."},{"content":"If you supply a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","pos":[274,414],"source":" If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data."}]}]}],"pos":[1344,6551],"yaml":true,"extradata":"MT"},{"content":"The type of the tuple's first component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's first component.","nodes":[{"content":"The type of the tuple's first component.","pos":[0,40]}]}],"pos":[6772,6813],"yaml":true},{"content":"The type of the tuple's second component.","nodes":[{"pos":[0,41],"content":"The type of the tuple's second component.","nodes":[{"content":"The type of the tuple's second component.","pos":[0,41]}]}],"pos":[6845,6887],"yaml":true},{"content":"The type of the tuple's third component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's third component.","nodes":[{"content":"The type of the tuple's third component.","pos":[0,40]}]}],"pos":[6919,6960],"yaml":true},{"content":"The type of the tuple's fourth component.","nodes":[{"pos":[0,41],"content":"The type of the tuple's fourth component.","nodes":[{"content":"The type of the tuple's fourth component.","pos":[0,41]}]}],"pos":[6992,7034],"yaml":true},{"content":"The type of the tuple's fifth component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's fifth component.","nodes":[{"content":"The type of the tuple's fifth component.","pos":[0,40]}]}],"pos":[7066,7107],"yaml":true},{"content":"The type of the tuple's sixth component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's sixth component.","nodes":[{"content":"The type of the tuple's sixth component.","pos":[0,40]}]}],"pos":[7139,7180],"yaml":true},{"content":"The type of the tuple's seventh component.","nodes":[{"pos":[0,42],"content":"The type of the tuple's seventh component.","nodes":[{"content":"The type of the tuple's seventh component.","pos":[0,42]}]}],"pos":[7212,7255],"yaml":true},{"content":"Any generic `Tuple` object that defines the types of the tuple's remaining components.","nodes":[{"pos":[0,86],"content":"Any generic <ph id=\"ph1\">`Tuple`</ph> object that defines the types of the tuple's remaining components.","source":"Any generic `Tuple` object that defines the types of the tuple's remaining components."}],"pos":[7290,7377],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Tuple`8\"></xref> class.","nodes":[{"pos":[0,76],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Tuple`8\"></xref> class."}],"pos":[14489,14566],"yaml":true},{"content":"You can also use the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.  \n  \n [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  \n  \n This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.  \n  \n [!code-csharp[System.Tuple\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\n [!code-vb[System.Tuple\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  \n  \n However, the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method cannot be used to create a tuple object with more than eight components.  \n  \n When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components. By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components. For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:  \n  \n-   The outermost <xref:System.Tuple%608> object contains the first through seventh components. Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.  \n  \n-   The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.  \n  \n-   The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.  \n  \n-   The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.","nodes":[{"pos":[0,375],"content":"You can also use the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.","nodes":[{"content":"You can also use the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.","pos":[0,375],"nodes":[{"content":"You can also use the static <ph id=\"ph1\">&lt;xref:System.Tuple.Create%2A?displayProperty=fullName&gt;</ph> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.","pos":[0,198],"source":"You can also use the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Tuple.Create%2A?displayProperty=fullName&gt;</ph> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.","pos":[199,375],"source":" The following example uses the <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple object that contains prime numbers that are less than 20."}]}]},{"pos":[382,645],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Tuple.Create#17<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Tuple.Create#17<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]"},{"pos":[652,753],"content":"This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.","nodes":[{"content":"This is equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.Tuple%607.%23ctor%2A&gt;</ph> class constructor.","pos":[0,101],"source":"This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor."}]},{"pos":[760,1017],"content":"<bpt id=\"p1\">[</bpt>!code-csharp<bpt id=\"p2\">[</bpt>System.Tuple<ph id=\"ph1\">\\`</ph>8.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)</ept>] [!code-vb[System.Tuple<ph id=\"ph2\">\\`</ph>8.Class#1<ept id=\"p1\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)</ept>]","source":"[!code-csharp[System.Tuple\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\n [!code-vb[System.Tuple\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]"},{"pos":[1024,1178],"content":"However, the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method cannot be used to create a tuple object with more than eight components.","nodes":[{"content":"However, the static <ph id=\"ph1\">&lt;xref:System.Tuple.Create%2A?displayProperty=fullName&gt;</ph> method cannot be used to create a tuple object with more than eight components.","pos":[0,154],"source":"However, the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method cannot be used to create a tuple object with more than eight components."}]},{"pos":[1185,1637],"content":"When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components. By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components. For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:","nodes":[{"content":"When using the <ph id=\"ph1\">&lt;xref:System.Tuple%608.%23ctor%2A&gt;</ph> constructor to create an n-tuple with eight or more components, you use the <ph id=\"ph2\">`rest`</ph> parameter to create a nested n-tuple that has from one to seven components.","pos":[0,208],"source":"When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components."},{"content":"By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.","pos":[209,326]},{"content":"For example, to create a 25-tuple, you instantiate a <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object with three levels of nesting, as follows:","pos":[327,452],"source":" For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:"}]},{"pos":[1647,1867],"content":"The outermost <xref:System.Tuple%608> object contains the first through seventh components. Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.","nodes":[{"content":"The outermost <xref:System.Tuple%608> object contains the first through seventh components. Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.","pos":[0,220],"nodes":[{"content":"The outermost <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object contains the first through seventh components.","pos":[0,91],"source":"The outermost <xref:System.Tuple%608> object contains the first through seventh components."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property provides access to an <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object at the first level of nesting.","pos":[92,220],"source":" Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting."}]}]},{"pos":[1877,2113],"content":"The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.","nodes":[{"content":"The outermost nested <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object contains the eighth through fourteenth components, and its <ph id=\"ph2\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property provides access to an <ph id=\"ph3\">&lt;xref:System.Tuple%608&gt;</ph> object at the second level of nesting.","pos":[0,236],"source":"The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting."}]},{"pos":[2123,2378],"content":"The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <ph id=\"ph2\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property provides access to an <ph id=\"ph3\">&lt;xref:System.Tuple%604&gt;</ph> object at the third level of nesting.","pos":[0,255],"source":"The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting."}]},{"pos":[2388,2508],"content":"The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.","nodes":[{"content":"The innermost tuple is a <ph id=\"ph1\">&lt;xref:System.Tuple%604&gt;</ph> object that contains the twenty-second through twenty-fifth components.","pos":[0,120],"source":"The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components."}]}],"pos":[14577,17110],"yaml":true,"extradata":"MT"},{"content":"The value of the tuple's first component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's first component.","nodes":[{"content":"The value of the tuple's first component.","pos":[0,41]}]}],"pos":[18283,18325],"yaml":true},{"content":"The value of the tuple's second component.","nodes":[{"pos":[0,42],"content":"The value of the tuple's second component.","nodes":[{"content":"The value of the tuple's second component.","pos":[0,42]}]}],"pos":[18375,18418],"yaml":true},{"content":"The value of the tuple's third component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's third component.","nodes":[{"content":"The value of the tuple's third component.","pos":[0,41]}]}],"pos":[18468,18510],"yaml":true},{"content":"The value of the tuple's fourth component","nodes":[{"pos":[0,41],"content":"The value of the tuple's fourth component","nodes":[{"content":"The value of the tuple's fourth component","pos":[0,41]}]}],"pos":[18560,18602],"yaml":true},{"content":"The value of the tuple's fifth component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's fifth component.","nodes":[{"content":"The value of the tuple's fifth component.","pos":[0,41]}]}],"pos":[18652,18694],"yaml":true},{"content":"The value of the tuple's sixth component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's sixth component.","nodes":[{"content":"The value of the tuple's sixth component.","pos":[0,41]}]}],"pos":[18744,18786],"yaml":true},{"content":"The value of the tuple's seventh component.","nodes":[{"pos":[0,43],"content":"The value of the tuple's seventh component.","nodes":[{"content":"The value of the tuple's seventh component.","pos":[0,43]}]}],"pos":[18836,18880],"yaml":true},{"content":"Any generic `Tuple` object that contains the values of the tuple's remaining components.","nodes":[{"pos":[0,88],"content":"Any generic <ph id=\"ph1\">`Tuple`</ph> object that contains the values of the tuple's remaining components.","source":"Any generic `Tuple` object that contains the values of the tuple's remaining components."}],"pos":[18932,19021],"yaml":true},{"content":"<code>rest</code> is not a generic `Tuple` object.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;rest&lt;/code&gt;</ph> is not a generic <ph id=\"ph2\">`Tuple`</ph> object.","source":"<code>rest</code> is not a generic `Tuple` object."}],"pos":[19163,19214],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object.","nodes":[{"pos":[0,125],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.","source":"Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object."}],"pos":[20695,20821],"yaml":true},{"content":"The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:  \n  \n-   It is a <xref:System.Tuple%608> object.  \n  \n-   It has the same total number of components that are of the same types as the current instance.  \n  \n-   Its components (including its nested components) are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">`obj`</ph> parameter is considered to be equal to the current instance if it meets all the following conditions:","source":"The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:"},{"pos":[121,160],"content":"It is a <xref:System.Tuple%608> object.","nodes":[{"content":"It is a <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object.","pos":[0,39],"source":"It is a <xref:System.Tuple%608> object."}]},{"pos":[170,264],"content":"It has the same total number of components that are of the same types as the current instance.","nodes":[{"content":"It has the same total number of components that are of the same types as the current instance.","pos":[0,94]}]},{"pos":[274,442],"content":"Its components (including its nested components) are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"content":"Its components (including its nested components) are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","pos":[0,168],"nodes":[{"content":"Its components (including its nested components) are equal to those of the current instance.","pos":[0,92]},{"content":"Equality is determined by the default equality comparer for each component.","pos":[93,168]}]}]}],"pos":[20832,21283],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[22043,22085],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[22143,22230],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object.","nodes":[{"pos":[0,84],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object."}],"pos":[23730,23815],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[23949,23984],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's first component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's first component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's first component."}],"pos":[25449,25541],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[25552,26040],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's first component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's first component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's first component."}],"pos":[26747,26834],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's second component.","nodes":[{"pos":[0,92],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's second component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's second component."}],"pos":[28293,28386],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item2%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item2%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property."},{"pos":[239,482],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,243],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[28397,28886],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's second component.","nodes":[{"pos":[0,87],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's second component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's second component."}],"pos":[29636,29724],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's third component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's third component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's third component."}],"pos":[31183,31275],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item3%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item3%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[31286,31774],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's third component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's third component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's third component."}],"pos":[32515,32602],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component.","nodes":[{"pos":[0,92],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's fourth component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component."}],"pos":[34061,34154],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item4%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item4%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property."},{"pos":[239,482],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the fourth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,243],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[34165,34654],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component.","nodes":[{"pos":[0,87],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's fourth component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component."}],"pos":[35396,35484],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's fifth component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component."}],"pos":[36943,37035],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item5%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item5%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the fifth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[37046,37534],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's fifth component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component."}],"pos":[38275,38362],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's sixth component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component."}],"pos":[39821,39913],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item6%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item6%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the sixth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[39924,40412],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's sixth component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component."}],"pos":[41153,41240],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component.","nodes":[{"pos":[0,93],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's seventh component.","source":"Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component."}],"pos":[42699,42793],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Item7%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item7%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property."},{"pos":[239,483],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object, and retrieving the seventh element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,244],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[42804,43294],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component.","nodes":[{"pos":[0,88],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's seventh component.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component."}],"pos":[44037,44126],"yaml":true},{"content":"Gets the current <xref href=\"System.Tuple`8\"></xref> object's remaining components.","nodes":[{"pos":[0,83],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's remaining components.","source":"Gets the current <xref href=\"System.Tuple`8\"></xref> object's remaining components."}],"pos":[45579,45663],"yaml":true},{"content":"The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple. Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties. You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.  \n  \n You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name. The following example provides an illustration.  \n  \n [!code-vb[System.Tuple\\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]","nodes":[{"pos":[0,562],"content":"The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple. Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties. You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property returns a nested <ph id=\"ph2\">`Tuple`</ph> object that allows access to the eighth though <bpt id=\"p1\">*</bpt><ph id=\"ph3\">n</ph><ept id=\"p1\">*</ept>th components of the tuple.","pos":[0,147],"source":"The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple."},{"content":"Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested <ph id=\"ph1\">`Tuple`</ph> object's <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph> through <ph id=\"ph3\">&lt;xref:System.Tuple%608.Item7%2A&gt;</ph> properties.","pos":[148,396],"source":" Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties."},{"content":"You can then use the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property of a nested <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> object to retrieve the <ph id=\"ph3\">`Tuple`</ph> object at the next level of nesting.","pos":[397,562],"source":" You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting."}]},{"pos":[569,807],"content":"You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name. The following example provides an illustration.","nodes":[{"content":"You can dynamically determine the number of components in a nested <ph id=\"ph1\">`Tuple`</ph> object that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property by extracting the digit from its type name.","pos":[0,190],"source":"You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name."},{"content":"The following example provides an illustration.","pos":[191,238]}]},{"pos":[814,938],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Tuple<ph id=\"ph1\">\\`</ph>8.Item1#2<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Tuple\\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]"}],"pos":[45674,46620],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's remaining components.","nodes":[{"pos":[0,91],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object's remaining components.","source":"The value of the current <xref href=\"System.Tuple`8\"></xref> object's remaining components."}],"pos":[47480,47572],"yaml":true},{"content":"Returns a string that represents the value of this <xref href=\"System.Tuple`8\"></xref> instance.","nodes":[{"pos":[0,96],"content":"Returns a string that represents the value of this <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a string that represents the value of this <xref href=\"System.Tuple`8\"></xref> instance."}],"pos":[49052,49149],"yaml":true},{"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*â€¦), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties. *Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property. The value of any additional nested components follow *Item8*. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"pos":[0,742],"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*â€¦), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties. *Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property. The value of any additional nested components follow *Item8*. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"content":"The string returned by this method takes the form (<bpt id=\"p1\">*</bpt>Item1<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>Item2<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>Item3<ept id=\"p3\">*</ept>, <bpt id=\"p4\">*</bpt>Item4<ept id=\"p4\">*</ept>, <ph id=\"ph1\">`Item5, Item6, Item7`</ph>, <bpt id=\"p5\">*</bpt>Item8<ept id=\"p5\">*</ept>â€¦), where <bpt id=\"p6\">*</bpt>Item1<ept id=\"p6\">*</ept>, <bpt id=\"p7\">*</bpt>Item2<ept id=\"p7\">*</ept>, <bpt id=\"p8\">*</bpt>Item3<ept id=\"p8\">*</ept>, <bpt id=\"p9\">*</bpt>Item4<ept id=\"p9\">*</ept>, <bpt id=\"p10\">*</bpt>Item5<ept id=\"p10\">*</ept>, <bpt id=\"p11\">*</bpt>Item6<ept id=\"p11\">*</ept>, and <bpt id=\"p12\">*</bpt>Item7<ept id=\"p12\">*</ept> represent the values of the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Tuple%608.Item2%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Tuple%608.Item3%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Tuple%608.Item4%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Tuple%608.Item5%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Tuple%608.Item6%2A&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Tuple%608.Item7%2A&gt;</ph> properties.","pos":[0,473],"source":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*â€¦), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties."},{"content":"<bpt id=\"p1\">*</bpt>Item8<ept id=\"p1\">*</ept> represents the value of the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> object's <ph id=\"ph2\">`Next.Item1`</ph> property.","pos":[474,565],"source":"*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property."},{"content":"The value of any additional nested components follow <bpt id=\"p1\">*</bpt>Item8<ept id=\"p1\">*</ept>.","pos":[566,627],"source":" The value of any additional nested components follow *Item8*."},{"content":"If any of the property values is <ph id=\"ph1\">`null`</ph>, it is represented as <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[628,742],"source":" If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>."}]}],"pos":[49160,49903],"yaml":true,"extradata":"MT"},{"content":"The string representation of this <xref href=\"System.Tuple`8\"></xref> object.","nodes":[{"pos":[0,77],"content":"The string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"The string representation of this <xref href=\"System.Tuple`8\"></xref> object."}],"pos":[50552,50630],"yaml":true},{"content":"Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,265],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[52506,52772],"yaml":true},{"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.  \n  \n This method lets you define customized comparisons of <xref:System.Tuple%608> objects. For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.  \n  \n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","nodes":[{"pos":[0,187],"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.","nodes":[{"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.","pos":[0,187],"nodes":[{"content":"This member is an explicit interface implementation.","pos":[0,52]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.","pos":[53,187],"source":" It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface."}]}]},{"pos":[194,402],"content":"This method lets you define customized comparisons of <xref:System.Tuple%608> objects. For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.","nodes":[{"content":"This method lets you define customized comparisons of <xref:System.Tuple%608> objects. For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.","pos":[0,208],"nodes":[{"content":"This method lets you define customized comparisons of <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> objects.","pos":[0,86],"source":"This method lets you define customized comparisons of <xref:System.Tuple%608> objects."},{"content":"For example, you can use this method to order <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> objects based on the value of a specific component.","pos":[87,208],"source":" For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component."}]}]},{"pos":[409,1006],"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","pos":[0,597],"nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id=\"ph1\">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.","pos":[0,199],"source":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection."},{"content":"For example, it is called by the <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id=\"ph3\">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id=\"ph4\">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName&gt;</ph> constructor.","pos":[200,597],"source":" For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor."}]}]},{"pos":[1014,1416],"content":"[!CAUTION]\n The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","pos":[11,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.","pos":[1,138],"source":" The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[139,248]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.","pos":[249,389],"source":" To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method."}]}]}],"pos":[52783,54209],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current instance.","nodes":[{"pos":[0,47],"content":"An object to compare with the current instance.","nodes":[{"content":"An object to compare with the current instance.","pos":[0,47]}]}],"pos":[55679,55727],"yaml":true},{"content":"An object that provides custom rules for comparison.","nodes":[{"pos":[0,52],"content":"An object that provides custom rules for comparison.","nodes":[{"content":"An object that provides custom rules for comparison.","pos":[0,52]}]}],"pos":[55806,55859],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,145],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table."},{"pos":[152,587],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[131,181],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[200,209],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[220,306],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[325,348],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[359,408],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[55915,56522],"yaml":true},{"content":"<code>other</code> is not a <xref href=\"System.Tuple`8\"></xref> object.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>other</code> is not a <xref href=\"System.Tuple`8\"></xref> object."}],"pos":[56709,56781],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object based on a specified comparison method.","nodes":[{"pos":[0,164],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object based on a specified comparison method.","source":"Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object based on a specified comparison method."}],"pos":[58627,58792],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance. The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.","nodes":[{"pos":[0,193],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","pos":[0,193],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[60,193],"source":" It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface."}]}]},{"pos":[200,1274],"content":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance. The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation is called only if <ph id=\"ph2\">`other`</ph> is not <ph id=\"ph3\">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id=\"ph4\">&lt;xref:System.Tuple%608&gt;</ph> object that has the same total number of components (including those in nested <ph id=\"ph5\">`Tuple`</ph> objects) of the same types as the current instance.","pos":[0,380],"source":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item1%2A&gt;</ph> values of the <ph id=\"ph3\">&lt;xref:System.Tuple%608&gt;</ph> objects to be compared to the <ph id=\"ph4\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation.","pos":[381,739],"source":" The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation."},{"content":"If this method call returns <ph id=\"ph1\">`true`</ph>, the method is called again and passed the <ph id=\"ph2\">&lt;xref:System.Tuple%608.Item2%2A&gt;</ph> values of the two <ph id=\"ph3\">&lt;xref:System.Tuple%608&gt;</ph> objects.","pos":[740,901],"source":" If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects."},{"content":"This continues until the method call returns <ph id=\"ph1\">`false`</ph> when it compares a specific pair of values, or the two <ph id=\"ph2\">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> values are passed to the method.","pos":[902,1074],"source":" This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method."}]}],"pos":[58803,60082],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[60278,60320],"yaml":true},{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"pos":[0,87],"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","pos":[0,87]}]}],"pos":[60407,60495],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[60553,60640],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object by using a specified computation method.","nodes":[{"pos":[0,124],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object by using a specified computation method.","source":"Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object by using a specified computation method."}],"pos":[62542,62667],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \n  \n The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.","nodes":[{"pos":[0,193],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","pos":[0,193],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[60,193],"source":" It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface."}]}]},{"pos":[200,357],"content":"The method simply wraps a call to the <ph id=\"ph1\">`comparer`</ph> object's <ph id=\"ph2\">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName&gt;</ph> implementation.","source":"The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation."},{"pos":[364,513],"content":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.","nodes":[{"content":"The algorithm used to compute the hash code should return the same hash code for two <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> objects that are considered to be equal.","pos":[0,149],"source":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal."}]}],"pos":[62678,63198],"yaml":true,"extradata":"MT"},{"content":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`8\"></xref> object.","nodes":[{"pos":[0,191],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"&gt;&lt;/xref&gt;</ph> method calculates the hash code of the current <ph id=\"ph2\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`8\"></xref> object."}],"pos":[63410,63602],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[63658,63693],"yaml":true},{"content":"Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,235],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[65396,65632],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.  \n  \n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%608> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName> method.  \n  \n This method uses the default object comparer to compare each component.","nodes":[{"pos":[0,172],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.","pos":[0,172],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%608&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[60,172],"source":" It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface."}]}]},{"pos":[179,636],"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%608> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","nodes":[{"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%608> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","pos":[0,457],"nodes":[{"content":"This method provides the <ph id=\"ph1\">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=fullName&gt;</ph> implementation for the <ph id=\"ph2\">&lt;xref:System.Tuple%608&gt;</ph> class.","pos":[0,142],"source":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%608> class."},{"content":"Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=fullName&gt;</ph>, to order the members of a collection.","pos":[143,457],"source":" Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection."}]}]},{"pos":[644,1017],"content":"[!CAUTION]\n The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName> method.","pos":[11,371],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%608.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.","pos":[1,114],"source":" The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[115,224]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method.","pos":[225,360],"source":" To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName> method."}]}]},{"pos":[1024,1095],"content":"This method uses the default object comparer to compare each component.","nodes":[{"content":"This method uses the default object comparer to compare each component.","pos":[0,71]}]}],"pos":[65643,66748],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current instance.","nodes":[{"pos":[0,47],"content":"An object to compare with the current instance.","nodes":[{"content":"An object to compare with the current instance.","pos":[0,47]}]}],"pos":[67811,67859],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,143],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table."},{"pos":[150,579],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>obj</code>.  \n  \n ","pos":[131,179],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,41],"source":" This instance precedes <code>obj</code>."}]},{"content":"Zero","pos":[198,207],"source":" Zero  \n  \n "},{"content":" This instance and <code>obj</code> have the same position in the sort order.  \n  \n ","pos":[218,302],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,77],"source":" This instance and <code>obj</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[321,344],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>obj</code>.  \n  \n ","pos":[355,402],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,40],"source":" This instance follows <code>obj</code>."}]}]}],"pos":[67915,68514],"yaml":true},{"content":"<code>obj</code> is not a <xref href=\"System.Tuple`8\"></xref> object.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Tuple`8\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>obj</code> is not a <xref href=\"System.Tuple`8\"></xref> object."}],"pos":[68679,68749],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Tuple`8\n  commentId: T:System.Tuple`8\n  id: Tuple`8\n  children:\n  - System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  - System.Tuple`8.Equals(System.Object)\n  - System.Tuple`8.GetHashCode\n  - System.Tuple`8.Item1\n  - System.Tuple`8.Item2\n  - System.Tuple`8.Item3\n  - System.Tuple`8.Item4\n  - System.Tuple`8.Item5\n  - System.Tuple`8.Item6\n  - System.Tuple`8.Item7\n  - System.Tuple`8.Rest\n  - System.Tuple`8.ToString\n  - System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  - System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  - System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length\n  langs:\n  - csharp\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents an *n*-tuple, where *n* is 8 or greater.\n  remarks: \"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.  \\n  \\n You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method. The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20. Note that it uses type inference to determine the type of each component.  \\n  \\n [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  \\n  \\n You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor. The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  \\n  \\n> [!NOTE]\\n>  To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor. The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.  \\n  \\n To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple. By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.  \\n  \\n The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000. The first component of the tuple is the city name. The second component is the start date of the data series, and the third component is the population at the start date. Each subsequent component provides the population at decade intervals. The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object. (That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)  \\n  \\n [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]\\n [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  \\n  \\n You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties. Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property. In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple. The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties. The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.  \\n  \\n Tuples are commonly used in four different ways:  \\n  \\n-   To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.  \\n  \\n-   To provide easy access to, and manipulation of, a data set.  \\n  \\n-   To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.  \\n  \\n-   To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.\"\n  syntax:\n    content: 'public class Tuple<T1,T2,T3,T4,T5,T6,T7,TRest> : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: The type of the tuple's first component.\n    - id: T2\n      description: The type of the tuple's second component.\n    - id: T3\n      description: The type of the tuple's third component.\n    - id: T4\n      description: The type of the tuple's fourth component.\n    - id: T5\n      description: The type of the tuple's fifth component.\n    - id: T6\n      description: The type of the tuple's sixth component.\n    - id: T7\n      description: The type of the tuple's seventh component.\n    - id: TRest\n      description: Any generic `Tuple` object that defines the types of the tuple's remaining components.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)\n  - System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)\n  - System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)\n  - System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)\n  - System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)\n  - System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)\n  - System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)\n  - System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)\n  - System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)\n  - System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)\n  - System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)\n  - System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)\n  - System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)\n  - System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)\n  - System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})\n  - System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})\n  - System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})\n  - System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})\n  - System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})\n  - System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})\n  - System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})\n  - System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})\n  - System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})\n  - System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})\n  - System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})\n  - System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})\n  - System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})\n  - System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  commentId: M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6,`7)'\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Tuple`8\"></xref> class.\n  remarks: \"You can also use the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%2A?displayProperty=fullName> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.  \\n  \\n [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]\\n [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  \\n  \\n This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  \\n  \\n However, the static <xref:System.Tuple.Create%2A?displayProperty=fullName> method cannot be used to create a tuple object with more than eight components.  \\n  \\n When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components. By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components. For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:  \\n  \\n-   The outermost <xref:System.Tuple%608> object contains the first through seventh components. Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.  \\n  \\n-   The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.  \\n  \\n-   The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.  \\n  \\n-   The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.\"\n  example:\n  - \"The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000. The first component of the tuple is the city name. The second component is the start date of the series of data, and the third component is the population at the start date. Each subsequent component provides the population at decade intervals. The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.  \\n  \\n [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]\\n [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]\"\n  syntax:\n    content: public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);\n    parameters:\n    - id: item1\n      type: T1\n      description: The value of the tuple's first component.\n    - id: item2\n      type: T2\n      description: The value of the tuple's second component.\n    - id: item3\n      type: T3\n      description: The value of the tuple's third component.\n    - id: item4\n      type: T4\n      description: The value of the tuple's fourth component\n    - id: item5\n      type: T5\n      description: The value of the tuple's fifth component.\n    - id: item6\n      type: T6\n      description: The value of the tuple's sixth component.\n    - id: item7\n      type: T7\n      description: The value of the tuple's seventh component.\n    - id: rest\n      type: TRest\n      description: Any generic `Tuple` object that contains the values of the tuple's remaining components.\n  overload: System.Tuple`8.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>rest</code> is not a generic `Tuple` object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Equals(System.Object)\n  commentId: M:System.Tuple`8.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object.\n  remarks: \"The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:  \\n  \\n-   It is a <xref:System.Tuple%608> object.  \\n  \\n-   It has the same total number of components that are of the same types as the current instance.  \\n  \\n-   Its components (including its nested components) are equal to those of the current instance. Equality is determined by the default equality comparer for each component.\"\n  example:\n  - \"The following example defines five <xref:System.Tuple%608> objects that contain prime numbers. It then compares the first object with each of the remaining objects. As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.Tuple`8.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.GetHashCode\n  commentId: M:System.Tuple`8.GetHashCode\n  id: GetHashCode\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Tuple`8.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item1\n  commentId: P:System.Tuple`8.Item1\n  id: Item1\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's first component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The first component of the 17-tuple is the city name. The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T1 Item1 { get; }\n    return:\n      type: T1\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's first component.\n  overload: System.Tuple`8.Item1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item2\n  commentId: P:System.Tuple`8.Item2\n  id: Item2\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's second component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The second component of the 17-tuple is the first year of the data series. The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T2 Item2 { get; }\n    return:\n      type: T2\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's second component.\n  overload: System.Tuple`8.Item2*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item3\n  commentId: P:System.Tuple`8.Item3\n  id: Item3\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's third component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The third component of the 17-tuple is the population in 1860. The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T3 Item3 { get; }\n    return:\n      type: T3\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's third component.\n  overload: System.Tuple`8.Item3*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item4\n  commentId: P:System.Tuple`8.Item4\n  id: Item4\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The fourth component of the 17-tuple is the population in 1870. The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T4 Item4 { get; }\n    return:\n      type: T4\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's fourth component.\n  overload: System.Tuple`8.Item4*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item5\n  commentId: P:System.Tuple`8.Item5\n  id: Item5\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The fifth component of the 17-tuple is the population in 1880. The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T5 Item5 { get; }\n    return:\n      type: T5\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's fifth component.\n  overload: System.Tuple`8.Item5*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item6\n  commentId: P:System.Tuple`8.Item6\n  id: Item6\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The sixth component of the 17-tuple is the population in 1890. The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T6 Item6 { get; }\n    return:\n      type: T6\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's sixth component.\n  overload: System.Tuple`8.Item6*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Item7\n  commentId: P:System.Tuple`8.Item7\n  id: Item7\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The seventh component of the 17-tuple is the population in 1900. The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T7 Item7 { get; }\n    return:\n      type: T7\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's seventh component.\n  overload: System.Tuple`8.Item7*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.Rest\n  commentId: P:System.Tuple`8.Rest\n  id: Rest\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Rest\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the current <xref href=\"System.Tuple`8\"></xref> object's remaining components.\n  remarks: \"The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple. Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties. You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.  \\n  \\n You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name. The following example provides an illustration.  \\n  \\n [!code-vb[System.Tuple\\\\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]\"\n  example:\n  - \"The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000. The seventh component of the 17-tuple is the population in 1900. The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public TRest Rest { get; }\n    return:\n      type: TRest\n      description: The value of the current <xref href=\"System.Tuple`8\"></xref> object's remaining components.\n  overload: System.Tuple`8.Rest*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.ToString\n  commentId: M:System.Tuple`8.ToString\n  id: ToString\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a string that represents the value of this <xref href=\"System.Tuple`8\"></xref> instance.\n  remarks: The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*â€¦), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties. *Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property. The value of any additional nested components follow *Item8*. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.\n  example:\n  - \"The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900. It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this <xref href=\"System.Tuple`8\"></xref> object.\n  overload: System.Tuple`8.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.  \\n  \\n This method lets you define customized comparisons of <xref:System.Tuple%608> objects. For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.  \\n  \\n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.\"\n  example:\n  - \"The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000. The octuple's first component is the city name. The remaining six components represent the population at 10-year intervals from 1940 to 2000.  \\n  \\n The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components. Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.  \\n  \\n The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]\\n [!code-vb[System.Tuple\\\\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]\"\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: An object to compare with the current instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: An object that provides custom rules for comparison.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>other</code> is not a <xref href=\"System.Tuple`8\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.Tuple`8\"></xref> object is equal to a specified object based on a specified comparison method.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \\n  \\n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance. The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects. This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.\"\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with this instance.\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object that defines the method to use to evaluate whether the two objects are equal.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.Tuple`8.System#Collections#IStructuralEquatable#Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.Tuple`8\"></xref> object by using a specified computation method.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \\n  \\n The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \\n  \\n The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.\"\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`8\"></xref> object.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.Tuple`8\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.  \\n  \\n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%608> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=fullName> method.  \\n  \\n This method uses the default object comparer to compare each component.\"\n  example:\n  - \"The following example creates an array of octuples whose components are integers that contain a range of prime numbers. The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order. The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component. Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method. This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.  \\n  \\n [!code-csharp[System.Tuple\\\\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]\\n [!code-vb[System.Tuple\\\\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]\"\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with the current instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>obj</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>obj</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Tuple`8.System#IComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>obj</code> is not a <xref href=\"System.Tuple`8\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  commentId: P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: ITuple.Item(Int32)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length\n  commentId: P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length\n  id: System#Runtime#CompilerServices#ITuple#Length\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int System.Runtime.CompilerServices.ITuple.Length { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  parent: System.Tuple`8\n  isExternal: false\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>(T1, T2, T3, T4, T5, T6, T7, TRest)\n- uid: T1\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: TRest\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.Tuple`8.Equals(System.Object)\n  parent: System.Tuple`8\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Tuple`8.GetHashCode\n  parent: System.Tuple`8\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Tuple`8.Item1\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n- uid: System.Tuple`8.Item2\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n- uid: System.Tuple`8.Item3\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n- uid: System.Tuple`8.Item4\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n- uid: System.Tuple`8.Item5\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n- uid: System.Tuple`8.Item6\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n- uid: System.Tuple`8.Item7\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n- uid: System.Tuple`8.Rest\n  parent: System.Tuple`8\n  isExternal: false\n  name: Rest\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n- uid: System.Tuple`8.ToString\n  parent: System.Tuple`8\n  isExternal: false\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  parent: System.Tuple`8\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.IComparable.CompareTo(Object)\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  parent: System.Tuple`8\n  isExternal: false\n  name: ITuple.Item(Int32)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Item(Int32)\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length\n  parent: System.Tuple`8\n  isExternal: false\n  name: ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ITuple.Length\n- uid: System.Tuple`8.#ctor*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Equals*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Equals\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.GetHashCode*\n  parent: System.Tuple`8\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item1*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item2*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item3*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item4*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item5*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item6*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Item7*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.Rest*\n  parent: System.Tuple`8\n  isExternal: false\n  name: Rest\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.ToString*\n  parent: System.Tuple`8\n  isExternal: false\n  name: ToString\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#IComparable#CompareTo*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Item\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Item\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length*\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Runtime.CompilerServices.ITuple.Length\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`8.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)\n- uid: System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n- uid: System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)\n- uid: System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)\n- uid: System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)\n- uid: System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)\n- uid: System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)\n- uid: System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)\n- uid: System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)\n- uid: System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)\n- uid: System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)\n- uid: System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)\n- uid: System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>, T1, T2, T3, T4, T5, T6, T7, T8)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>, T1, T2, T3, T4, T5, T6, T7, T8)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>, T1, T2, T3, T4, T5, T6, T7, T8)\n- uid: System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>, T1, T2, T3, T4, T5, T6, T7, T8, T9)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>, T1, T2, T3, T4, T5, T6, T7, T8, T9)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>, T1, T2, T3, T4, T5, T6, T7, T8, T9)\n- uid: System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10>>)\n- uid: System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11>>)\n- uid: System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12>>)\n- uid: System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13>>)\n- uid: System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14>>)\n- uid: System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>)\n- uid: System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>)\n- uid: System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>)\n- uid: System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>)\n- uid: System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>)\n- uid: System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>)\n- uid: System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>)\n- uid: System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8>>)\n- uid: System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>(Tuple<T1,T2,T3,T4,T5,T6,T7,Tuple<T8,T9>>)\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  nameWithType: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n"}