{"nodes":[{"content":"Defines the extension methods to the <xref href=\"System.Data.DataTable\"></xref> class. <xref href=\"System.Data.DataTableExtensions\"></xref> is a static class.","nodes":[{"pos":[0,158],"content":"Defines the extension methods to the <xref href=\"System.Data.DataTable\"></xref> class. <xref href=\"System.Data.DataTableExtensions\"></xref> is a static class.","nodes":[{"content":"Defines the extension methods to the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,86],"source":"Defines the extension methods to the <xref href=\"System.Data.DataTable\"></xref> class."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.DataTableExtensions\"&gt;&lt;/xref&gt;</ph> is a static class.","pos":[87,158],"source":"<xref href=\"System.Data.DataTableExtensions\"></xref> is a static class."}]}],"pos":[1044,1203],"yaml":true},{"content":"Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.","nodes":[{"pos":[0,84],"content":"Creates and returns a LINQ-enabled <ph id=\"ph1\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object."}],"pos":[2640,2725],"yaml":true},{"content":"<xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table. Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.  \n  \n For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).","nodes":[{"pos":[0,558],"content":"<xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table. Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> enables data-binding scenarios for <ph id=\"ph2\">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> and can be created from a typed or untyped <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph>, providing a default view of that table.","pos":[0,231],"source":"<xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table."},{"content":"Filtering and sorting can be set on the <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> after it has been created from a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[232,362],"source":" Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> is then bound to a UI control, such as a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> or a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, providing a simple data binding model.","pos":[363,558],"source":" The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model."}]},{"pos":[565,709],"content":"For more information and examples, see <bpt id=\"p1\">[</bpt>Creating a DataView Object<ept id=\"p1\">](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)</ept>.","source":"For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)."}],"pos":[2736,3450],"yaml":true,"extradata":"MT"},{"content":"The source <xref href=\"System.Data.DataTable\"></xref> from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created.","nodes":[{"pos":[0,135],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> from which the LINQ-enabled <ph id=\"ph2\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> is created.","source":"The source <xref href=\"System.Data.DataTable\"></xref> from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created."}],"pos":[4230,4366],"yaml":true},{"content":"A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.","nodes":[{"pos":[0,64],"content":"A LINQ-enabled <ph id=\"ph1\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> object.","source":"A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object."}],"pos":[4430,4495],"yaml":true},{"content":"Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.","nodes":[{"pos":[0,163],"content":"Creates and returns a LINQ-enabled <ph id=\"ph1\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query.","source":"Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query."}],"pos":[5724,5888],"yaml":true},{"content":"<xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query. The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query. The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.  \n  \n The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.  \n  \n The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  \n  \n-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  \n  \n For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).","nodes":[{"pos":[0,629],"content":"<xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query. The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query. The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> enables data binding scenarios for <ph id=\"ph2\">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> and can be created from a <ph id=\"ph3\">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query.","pos":[0,207],"source":"<xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> represents the query itself, and is not a view on top of the query.","pos":[208,307],"source":" The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query."},{"content":"The newly created <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> infers the filtering and sorting information from the query it is created from.","pos":[308,433],"source":" The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> is then bound to a UI control, such as a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> or a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, providing a simple data-binding model.","pos":[434,629],"source":" The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model."}]},{"pos":[636,783],"content":"The parameter <ph id=\"ph1\">`T`</ph> of the input parameter <ph id=\"ph2\">`source`</ph> can only be of type <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> or a type derived from <ph id=\"ph4\">&lt;xref:System.Data.DataRow&gt;</ph>.","source":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>."},{"pos":[790,895],"content":"The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:","nodes":[{"content":"The following query operators, only, are supported in a query used to create <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph>:","pos":[0,105],"source":"The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:"}]},{"pos":[905,965],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>","nodes":[]},{"pos":[975,1038],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>","nodes":[]},{"pos":[1048,1121],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>","nodes":[]},{"pos":[1131,1193],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>","nodes":[]},{"pos":[1203,1265],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>","nodes":[]},{"pos":[1275,1347],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>","nodes":[]},{"pos":[1357,1418],"content":"<xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>","nodes":[]},{"pos":[1425,1569],"content":"For more information and examples, see <bpt id=\"p1\">[</bpt>Creating a DataView Object<ept id=\"p1\">](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)</ept>.","source":"For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md)."}],"pos":[5899,7491],"yaml":true,"extradata":"MT"},{"content":"The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created.","nodes":[{"pos":[0,154],"content":"The source <ph id=\"ph1\">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query from which the LINQ-enabled <ph id=\"ph2\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> is created.","source":"The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created."}],"pos":[8189,8344],"yaml":true},{"content":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,95],"content":"The type of objects in the source sequence, typically <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[8395,8491],"yaml":true},{"content":"A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.","nodes":[{"pos":[0,64],"content":"A LINQ-enabled <ph id=\"ph1\">&lt;xref href=\"System.Data.DataView\"&gt;&lt;/xref&gt;</ph> object.","source":"A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object."}],"pos":[8555,8620],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.","nodes":[{"pos":[0,275],"content":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.","nodes":[{"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> object, where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","pos":[0,168],"source":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."},{"content":"This object can be used in a <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.","pos":[169,275],"source":" This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query."}]}],"pos":[9738,10014],"yaml":true},{"content":"[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Query.IQueryable%601> interface.  The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query. You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.  \n  \n The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it. Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.","nodes":[{"pos":[0,707],"content":"[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Query.IQueryable%601> interface.  The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query. You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]</ph> queries work on data sources that implement the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface or the <ph id=\"ph3\">&lt;xref:System.Query.IQueryable%601&gt;</ph> interface.","pos":[0,216],"source":"[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Query.IQueryable%601> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> class does not implement either interface, so you must call the <ph id=\"ph2\">&lt;xref:System.Data.DataTableExtensions.AsEnumerable%2A&gt;</ph> method to use the <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> as a source in the <ph id=\"ph4\">`From`</ph> clause of a <ph id=\"ph5\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query.","pos":[218,511],"source":"  The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query."},{"content":"You can also obtain custom, domain-specific operators, such as <ph id=\"ph1\">&lt;xref:System.Data.DataTableExtensions.CopyToDataTable%2A&gt;</ph>, by returning an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> object.","pos":[512,707],"source":" You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object."}]},{"pos":[714,1087],"content":"The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it. Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.","nodes":[{"content":"The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it. Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.","pos":[0,373],"nodes":[{"content":"The enumerable object returned by the <ph id=\"ph1\">&lt;xref:System.Data.DataTableExtensions.AsEnumerable%2A&gt;</ph> method is permanently bound to the <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> that produced it.","pos":[0,174],"source":"The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it."},{"content":"Multiple calls to the <ph id=\"ph1\">&lt;xref:System.Data.DataTableExtensions.AsEnumerable%2A&gt;</ph> method will return multiple, independent queryable objects that are all bound to the source <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[175,373],"source":" Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>."}]}]}],"pos":[10025,11117],"yaml":true,"extradata":"MT"},{"content":"The source <xref href=\"System.Data.DataTable\"></xref> to make enumerable.","nodes":[{"pos":[0,73],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> to make enumerable.","source":"The source <xref href=\"System.Data.DataTable\"></xref> to make enumerable."}],"pos":[11906,11980],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,160],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> object, where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[12080,12241],"yaml":true},{"content":"The source <xref href=\"System.Data.DataTable\"></xref> is `null`.","nodes":[{"pos":[0,64],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The source <xref href=\"System.Data.DataTable\"></xref> is `null`."}],"pos":[12415,12480],"yaml":true},{"content":"Returns a <xref href=\"System.Data.DataTable\"></xref> that contains copies of the <xref href=\"System.Data.DataRow\"></xref> objects, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,302],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains copies of the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects, given an input <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> object where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph5\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that contains copies of the <xref href=\"System.Data.DataRow\"></xref> objects, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[13639,13942],"yaml":true},{"content":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.  \n  \n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \n  \n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \n  \n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \n  \n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \n  \n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).","nodes":[{"pos":[0,147],"content":"The parameter <ph id=\"ph1\">`T`</ph> of the input parameter <ph id=\"ph2\">`source`</ph> can only be of type <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> or a type derived from <ph id=\"ph4\">&lt;xref:System.Data.DataRow&gt;</ph>.","source":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>."},{"pos":[154,477],"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","nodes":[{"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","pos":[0,323],"nodes":[{"content":"The input sequence can be any <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source, not only a query or a query over a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[0,152],"source":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>."},{"content":"Note that if the source sequence is a query, calling this operator will force immediate execution.","pos":[153,251]},{"content":"Enumerating the source sequence can also cause exceptions to be thrown.","pos":[252,323]}]}]},{"pos":[484,1191],"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","nodes":[{"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","pos":[0,707],"nodes":[{"content":"The schema of the destination table is based on the schema of the first <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> row in the source sequence.","pos":[0,126],"source":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence."},{"content":"The table metadata is extracted from the <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> metadata and the table values from the column values of the <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[127,282],"source":" The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>."},{"content":"For a typed <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, types are not preserved.","pos":[283,349],"source":" For a typed <xref:System.Data.DataTable>, types are not preserved."},{"content":"The data and schema are transferred, but the resulting rows of the output table will not be of the typed <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> type.","pos":[350,487],"source":" The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> properties are not preserved during the copy from the source <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> to the returned <ph id=\"ph4\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[488,707],"source":" The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>."}]}]},{"pos":[1198,1437],"content":"When a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> reference or nullable type with a value of <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept> is found in a source <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph>, this method replaces the value in the destination <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> with a value of <ph id=\"ph3\">&lt;xref:System.DBNull.Value&gt;</ph>.","source":"When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>."},{"pos":[1444,1737],"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","nodes":[{"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","pos":[0,293],"nodes":[{"content":"The generated table returned by the method has the default table name.","pos":[0,70]},{"content":"If you want to name the <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, attach it to a <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, or perform any other <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> specific operation, you must do so after the table is created and returned.","pos":[71,293],"source":" If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned."}]}]},{"pos":[1744,1889],"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating a DataTable From a Query<ept id=\"p1\">](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)</ept>.","source":"For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)."}],"pos":[13953,15855],"yaml":true,"extradata":"MT"},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.","nodes":[{"pos":[0,82],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence."}],"pos":[16878,16961],"yaml":true},{"content":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,95],"content":"The type of objects in the source sequence, typically <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[17012,17108],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that contains the input sequence as the type of <xref href=\"System.Data.DataRow\"></xref> objects.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains the input sequence as the type of <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects.","source":"A <xref href=\"System.Data.DataTable\"></xref> that contains the input sequence as the type of <xref href=\"System.Data.DataRow\"></xref> objects."}],"pos":[17173,17316],"yaml":true},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` and a new table cannot be created.","nodes":[{"pos":[0,126],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence is <ph id=\"ph2\">`null`</ph> and a new table cannot be created.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` and a new table cannot be created."}],"pos":[17496,17623],"yaml":true},{"content":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>.  \n  \n The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects.  \n  \n A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence has a state of <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRowState.Deleted\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>."},{"pos":[142,232],"content":"The source sequence does not contain any <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects.","source":"The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects."},{"pos":[239,315],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence is <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`."}],"pos":[17733,18063],"yaml":true},{"content":"Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,288],"content":"Copies <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects to the specified <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>, given an input <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> object where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph5\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[19426,19715],"yaml":true},{"content":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.  \n  \n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \n  \n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \n  \n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \n  \n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \n  \n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).","nodes":[{"pos":[0,148],"content":"The parameter <ph id=\"ph1\">`T`</ph> of the input parameter <ph id=\"ph2\">`source`</ph> can only be of type <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph>, or a type derived from <ph id=\"ph4\">&lt;xref:System.Data.DataRow&gt;</ph>.","source":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>."},{"pos":[155,467],"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","nodes":[{"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","pos":[0,312],"nodes":[{"content":"The input sequence can be any <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source, not only a query over a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[0,141],"source":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>."},{"content":"Note that if the source sequence is a query, calling this operator will force immediate execution.","pos":[142,240]},{"content":"Enumerating the source sequence can also cause exceptions to be thrown.","pos":[241,312]}]}]},{"pos":[474,1181],"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","nodes":[{"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","pos":[0,707],"nodes":[{"content":"The schema of the destination table is based on the schema of the first <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> row in the source sequence.","pos":[0,126],"source":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence."},{"content":"The table metadata is extracted from the <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> metadata and the table values from the column values of the <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[127,282],"source":" The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>."},{"content":"For a typed <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, types are not preserved.","pos":[283,349],"source":" For a typed <xref:System.Data.DataTable>, types are not preserved."},{"content":"The data and schema are transferred, but the resulting rows of the output table will not be of the typed <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> type.","pos":[350,487],"source":" The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> properties are not preserved during the copy from the source <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> to the returned <ph id=\"ph4\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[488,707],"source":" The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>."}]}]},{"pos":[1188,1427],"content":"When a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> reference or nullable type with a value of <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept> is found in a source <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph>, this method replaces the value in the destination <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> with a value of <ph id=\"ph3\">&lt;xref:System.DBNull.Value&gt;</ph>.","source":"When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>."},{"pos":[1434,1727],"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","nodes":[{"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","pos":[0,293],"nodes":[{"content":"The generated table returned by the method has the default table name.","pos":[0,70]},{"content":"If you want to name the <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, attach it to a <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, or perform any other <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> specific operation, you must do so after the table is created and returned.","pos":[71,293],"source":" If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned."}]}]},{"pos":[1734,1879],"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating a DataTable From a Query<ept id=\"p1\">](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)</ept>.","source":"For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)."}],"pos":[19726,21618],"yaml":true,"extradata":"MT"},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.","nodes":[{"pos":[0,82],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence."}],"pos":[21934,22017],"yaml":true},{"content":"The destination <xref href=\"System.Data.DataTable\"></xref>.","nodes":[{"pos":[0,59],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>.","source":"The destination <xref href=\"System.Data.DataTable\"></xref>."}],"pos":[22086,22146],"yaml":true},{"content":"A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.LoadOption\"&gt;&lt;/xref&gt;</ph> enumeration that specifies the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> load options.","source":"A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options."}],"pos":[22218,22352],"yaml":true},{"content":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,95],"content":"The type of objects in the source sequence, typically <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[22403,22499],"yaml":true},{"content":"The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>.","nodes":[{"pos":[0,144],"content":"The copied <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects do not fit the schema of the destination <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>.","source":"The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>."}],"pos":[22671,22816],"yaml":true},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`.","nodes":[{"pos":[0,164],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence is <ph id=\"ph2\">`null`</ph> or the destination <ph id=\"ph3\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`."}],"pos":[22918,23083],"yaml":true},{"content":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>.  \n  \n The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects.  \n  \n A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence has a state of <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRowState.Deleted\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>."},{"pos":[142,232],"content":"The source sequence does not contain any <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects.","source":"The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects."},{"pos":[239,315],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence is <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`."}],"pos":[23193,23523],"yaml":true},{"content":"Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,288],"content":"Copies <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects to the specified <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>, given an input <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> object where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph5\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[25057,25346],"yaml":true},{"content":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.  \n  \n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \n  \n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \n  \n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \n  \n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \n  \n If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called. A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:  \n  \n-   The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.  \n  \n-   The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.  \n  \n-   The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.  \n  \n The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.  \n  \n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).","nodes":[{"pos":[0,148],"content":"The parameter <ph id=\"ph1\">`T`</ph> of the input parameter <ph id=\"ph2\">`source`</ph> can only be of type <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph>, or a type derived from <ph id=\"ph4\">&lt;xref:System.Data.DataRow&gt;</ph>.","source":"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>."},{"pos":[155,467],"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","nodes":[{"content":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.","pos":[0,312],"nodes":[{"content":"The input sequence can be any <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source, not only a query over a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[0,141],"source":"The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>."},{"content":"Note that if the source sequence is a query, calling this operator will force immediate execution.","pos":[142,240]},{"content":"Enumerating the source sequence can also cause exceptions to be thrown.","pos":[241,312]}]}]},{"pos":[474,1181],"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","nodes":[{"content":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.","pos":[0,707],"nodes":[{"content":"The schema of the destination table is based on the schema of the first <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> row in the source sequence.","pos":[0,126],"source":"The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence."},{"content":"The table metadata is extracted from the <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> metadata and the table values from the column values of the <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[127,282],"source":" The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>."},{"content":"For a typed <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, types are not preserved.","pos":[283,349],"source":" For a typed <xref:System.Data.DataTable>, types are not preserved."},{"content":"The data and schema are transferred, but the resulting rows of the output table will not be of the typed <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph> type.","pos":[350,487],"source":" The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> properties are not preserved during the copy from the source <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph> to the returned <ph id=\"ph4\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[488,707],"source":" The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>."}]}]},{"pos":[1188,1427],"content":"When a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> reference or nullable type with a value of <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept> is found in a source <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph>, this method replaces the value in the destination <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> with a value of <ph id=\"ph3\">&lt;xref:System.DBNull.Value&gt;</ph>.","source":"When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>."},{"pos":[1434,1727],"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","nodes":[{"content":"The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.","pos":[0,293],"nodes":[{"content":"The generated table returned by the method has the default table name.","pos":[0,70]},{"content":"If you want to name the <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>, attach it to a <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, or perform any other <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> specific operation, you must do so after the table is created and returned.","pos":[71,293],"source":" If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned."}]}]},{"pos":[1734,1991],"content":"If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called. A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:","nodes":[{"content":"If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the <ph id=\"ph1\">`errorHandler`</ph> delegate is called.","pos":[0,149],"source":"If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> is passed to the <ph id=\"ph2\">`errorHandler`</ph> delegate with the following values:","pos":[150,257],"source":" A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:"}]},{"pos":[2001,2098],"content":"The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.Values%2A&gt;</ph> property is set to a copy of the source data.","pos":[0,97],"source":"The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data."}]},{"pos":[2108,2222],"content":"The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.DataTable%2A&gt;</ph> property is set to the target <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[0,114],"source":"The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>."}]},{"pos":[2232,2324],"content":"The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.Errors%2A&gt;</ph> property is set to the caught exception.","pos":[0,92],"source":"The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception."}]},{"pos":[2331,2776],"content":"The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property is read after the delegate call returns.","pos":[0,103],"source":"The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the source sequence continues to be enumerated and loaded into the data table.","pos":[104,259],"source":" If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the original exception is thrown from the <ph id=\"ph3\">&lt;xref:System.Data.DataTableExtensions.CopyToDataTable%2A&gt;</ph> method.","pos":[260,445],"source":" If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method."}]},{"pos":[2783,2928],"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating a DataTable From a Query<ept id=\"p1\">](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)</ept>.","source":"For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)."}],"pos":[25357,28308],"yaml":true,"extradata":"MT"},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.","nodes":[{"pos":[0,82],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence."}],"pos":[28672,28755],"yaml":true},{"content":"The destination <xref href=\"System.Data.DataTable\"></xref>.","nodes":[{"pos":[0,59],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>.","source":"The destination <xref href=\"System.Data.DataTable\"></xref>."}],"pos":[28824,28884],"yaml":true},{"content":"A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.LoadOption\"&gt;&lt;/xref&gt;</ph> enumeration that specifies the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> load options.","source":"A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options."}],"pos":[28956,29090],"yaml":true},{"content":"A <xref href=\"System.Data.FillErrorEventHandler\"></xref> delegate that represents the method that will handle an error.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.FillErrorEventHandler\"&gt;&lt;/xref&gt;</ph> delegate that represents the method that will handle an error.","source":"A <xref href=\"System.Data.FillErrorEventHandler\"></xref> delegate that represents the method that will handle an error."}],"pos":[29178,29298],"yaml":true},{"content":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,95],"content":"The type of objects in the source sequence, typically <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[29349,29445],"yaml":true},{"content":"The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>.","nodes":[{"pos":[0,144],"content":"The copied <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects do not fit the schema of the destination <ph id=\"ph2\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph>.","source":"The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>."}],"pos":[29617,29762],"yaml":true},{"content":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`.","nodes":[{"pos":[0,164],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> sequence is <ph id=\"ph2\">`null`</ph> or the destination <ph id=\"ph3\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`."}],"pos":[29864,30029],"yaml":true},{"content":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>.  \n  \n -or-  \n  \n The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects.  \n  \n -or-  \n  \n A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence has a state of <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRowState.Deleted\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence has a state of <xref href=\"System.Data.DataRowState.Deleted\"></xref>."},{"pos":[142,146],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[153,243],"content":"The source sequence does not contain any <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> objects.","source":"The source sequence does not contain any <xref href=\"System.Data.DataRow\"></xref> objects."},{"pos":[250,254],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[261,337],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> in the source sequence is <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Data.DataRow\"></xref> in the source sequence is `null`."}],"pos":[30139,30495],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataTableExtensions\n  commentId: T:System.Data.DataTableExtensions\n  id: DataTableExtensions\n  children:\n  - System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)\n  - System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})\n  - System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  langs:\n  - csharp\n  name: DataTableExtensions\n  nameWithType: DataTableExtensions\n  fullName: System.Data.DataTableExtensions\n  type: Class\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Defines the extension methods to the <xref href=\"System.Data.DataTable\"></xref> class. <xref href=\"System.Data.DataTableExtensions\"></xref> is a static class.\n  syntax:\n    content: public static class DataTableExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)\n  commentId: M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)\n  id: AsDataView(System.Data.DataTable)\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: AsDataView(DataTable)\n  nameWithType: DataTableExtensions.AsDataView(DataTable)\n  fullName: DataTableExtensions.AsDataView(DataTable)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.\n  remarks: \"<xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table. Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.  \\n  \\n For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).\"\n  example:\n  - \"The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:  \\n  \\n [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]\\n [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]\"\n  syntax:\n    content: public static System.Data.DataView AsDataView (this System.Data.DataTable table);\n    parameters:\n    - id: table\n      type: System.Data.DataTable\n      description: The source <xref href=\"System.Data.DataTable\"></xref> from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created.\n    return:\n      type: System.Data.DataView\n      description: A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.\n  overload: System.Data.DataTableExtensions.AsDataView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})\n  commentId: M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})\n  id: AsDataView``1(System.Data.EnumerableRowCollection{``0})\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: AsDataView<T>(EnumerableRowCollection<T>)\n  nameWithType: DataTableExtensions.AsDataView<T>(EnumerableRowCollection<T>)\n  fullName: DataTableExtensions.AsDataView<T>(EnumerableRowCollection<T>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Creates and returns a LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.\n  remarks: \"<xref:System.Data.DataView> enables data binding scenarios for [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] and can be created from a [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query. The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query. The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.  \\n  \\n The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.  \\n  \\n The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  \\n  \\n-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  \\n  \\n For more information and examples, see [Creating a DataView Object](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).\"\n  example:\n  - \"The following example creates a <xref:System.Data.DataView> of online orders ordered by total due:  \\n  \\n [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]\\n [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]\"\n  syntax:\n    content: 'public static System.Data.DataView AsDataView<T> (this System.Data.EnumerableRowCollection<T> source) where T : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection{T}\n      description: The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <xref href=\"System.Data.DataView\"></xref> is created.\n    typeParameters:\n    - id: T\n      description: The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.\n    return:\n      type: System.Data.DataView\n      description: A LINQ-enabled <xref href=\"System.Data.DataView\"></xref> object.\n  overload: System.Data.DataTableExtensions.AsDataView``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)\n  commentId: M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)\n  id: AsEnumerable(System.Data.DataTable)\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: AsEnumerable(DataTable)\n  nameWithType: DataTableExtensions.AsEnumerable(DataTable)\n  fullName: DataTableExtensions.AsEnumerable(DataTable)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.\n  remarks: \"[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Query.IQueryable%601> interface.  The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query. You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.  \\n  \\n The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it. Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.\"\n  example:\n  - \"In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.  \\n  \\n [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]\\n [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]\"\n  syntax:\n    content: public static System.Data.EnumerableRowCollection<System.Data.DataRow> AsEnumerable (this System.Data.DataTable source);\n    parameters:\n    - id: source\n      type: System.Data.DataTable\n      description: The source <xref href=\"System.Data.DataTable\"></xref> to make enumerable.\n    return:\n      type: System.Data.EnumerableRowCollection{System.Data.DataRow}\n      description: An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.\n  overload: System.Data.DataTableExtensions.AsEnumerable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The source <xref href=\"System.Data.DataTable\"></xref> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  commentId: M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that contains copies of the <xref href=\"System.Data.DataRow\"></xref> objects, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.\n  remarks: \"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.  \\n  \\n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \\n  \\n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \\n  \\n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \\n  \\n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \\n  \\n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).\"\n  example:\n  - \"The following example queries the SalesOrderHeader table for orders after August 8, 2001, and uses the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method to create a <xref:System.Data.DataTable> from that query. The <xref:System.Data.DataTable> is then bound to a <xref:System.Windows.Forms.BindingSource>, which acts as proxy for a <xref:System.Windows.Forms.DataGridView>.  \\n  \\n [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]\\n [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]\"\n  syntax:\n    content: 'public static System.Data.DataTable CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable`1\n      description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.\n    typeParameters:\n    - id: T\n      description: The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains the input sequence as the type of <xref href=\"System.Data.DataRow\"></xref> objects.\n  overload: System.Data.DataTableExtensions.CopyToDataTable``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` and a new table cannot be created.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence has a state of <xref href=\\\"System.Data.DataRowState.Deleted\\\"></xref>.  \\n  \\n The source sequence does not contain any <xref href=\\\"System.Data.DataRow\\\"></xref> objects.  \\n  \\n A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  commentId: M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.\n  remarks: \"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.  \\n  \\n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \\n  \\n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \\n  \\n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \\n  \\n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \\n  \\n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).\"\n  syntax:\n    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable`1\n      description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.\n    - id: table\n      type: System.Data.DataTable\n      description: The destination <xref href=\"System.Data.DataTable\"></xref>.\n    - id: options\n      type: System.Data.LoadOption\n      description: A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options.\n    typeParameters:\n    - id: T\n      description: The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.\n  overload: System.Data.DataTableExtensions.CopyToDataTable``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence has a state of <xref href=\\\"System.Data.DataRowState.Deleted\\\"></xref>.  \\n  \\n The source sequence does not contain any <xref href=\\\"System.Data.DataRow\\\"></xref> objects.  \\n  \\n A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  commentId: M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  langs:\n  - csharp\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Copies <xref href=\"System.Data.DataRow\"></xref> objects to the specified <xref href=\"System.Data.DataTable\"></xref>, given an input <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> object where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.\n  remarks: \"The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.  \\n  \\n The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>. Note that if the source sequence is a query, calling this operator will force immediate execution. Enumerating the source sequence can also cause exceptions to be thrown.  \\n  \\n The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence. The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>. For a typed <xref:System.Data.DataTable>, types are not preserved. The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type. The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.  \\n  \\n When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.  \\n  \\n The generated table returned by the method has the default table name. If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.  \\n  \\n If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called. A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:  \\n  \\n-   The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.  \\n  \\n-   The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.  \\n  \\n-   The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.  \\n  \\n The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table. If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.  \\n  \\n For more information, see [Creating a DataTable From a Query](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).\"\n  syntax:\n    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable`1\n      description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence.\n    - id: table\n      type: System.Data.DataTable\n      description: The destination <xref href=\"System.Data.DataTable\"></xref>.\n    - id: options\n      type: System.Data.LoadOption\n      description: A <xref href=\"System.Data.LoadOption\"></xref> enumeration that specifies the <xref href=\"System.Data.DataTable\"></xref> load options.\n    - id: errorHandler\n      type: System.Data.FillErrorEventHandler\n      description: A <xref href=\"System.Data.FillErrorEventHandler\"></xref> delegate that represents the method that will handle an error.\n    typeParameters:\n    - id: T\n      description: The type of objects in the source sequence, typically <xref href=\"System.Data.DataRow\"></xref>.\n  overload: System.Data.DataTableExtensions.CopyToDataTable``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The copied <xref href=\"System.Data.DataRow\"></xref> objects do not fit the schema of the destination <xref href=\"System.Data.DataTable\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The source <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> sequence is `null` or the destination <xref href=\"System.Data.DataTable\"></xref> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence has a state of <xref href=\\\"System.Data.DataRowState.Deleted\\\"></xref>.  \\n  \\n -or-  \\n  \\n The source sequence does not contain any <xref href=\\\"System.Data.DataRow\\\"></xref> objects.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Data.DataRow\\\"></xref> in the source sequence is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsDataView(DataTable)\n  nameWithType: DataTableExtensions.AsDataView(DataTable)\n  fullName: DataTableExtensions.AsDataView(DataTable)\n- uid: System.Data.DataView\n  parent: System.Data\n  isExternal: false\n  name: DataView\n  nameWithType: DataView\n  fullName: System.Data.DataView\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsDataView<T>(EnumerableRowCollection<T>)\n  nameWithType: DataTableExtensions.AsDataView<T>(EnumerableRowCollection<T>)\n  fullName: DataTableExtensions.AsDataView<T>(EnumerableRowCollection<T>)\n- uid: System.Data.EnumerableRowCollection`1\n  name: EnumerableRowCollection<TRow>\n  nameWithType: EnumerableRowCollection<TRow>\n  fullName: System.Data.EnumerableRowCollection<TRow>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.EnumerableRowCollection{T}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<T>\n  nameWithType: EnumerableRowCollection<T>\n  fullName: System.Data.EnumerableRowCollection<T>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: System.Data.EnumerableRowCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsEnumerable(DataTable)\n  nameWithType: DataTableExtensions.AsEnumerable(DataTable)\n  fullName: DataTableExtensions.AsEnumerable(DataTable)\n- uid: System.Data.DataRow\n  name: DataRow\n  nameWithType: DataRow\n  fullName: System.Data.DataRow\n- uid: System.Data.EnumerableRowCollection{System.Data.DataRow}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<DataRow>\n  nameWithType: EnumerableRowCollection<DataRow>\n  fullName: System.Data.EnumerableRowCollection<System.Data.DataRow>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: System.Data.EnumerableRowCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.DataRow\n    name: DataRow\n    nameWithType: DataRow\n    fullName: System.Data.DataRow\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.LoadOption\n  parent: System.Data\n  isExternal: false\n  name: LoadOption\n  nameWithType: LoadOption\n  fullName: System.Data.LoadOption\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Data.FillErrorEventHandler\n  parent: System.Data\n  isExternal: false\n  name: FillErrorEventHandler\n  nameWithType: FillErrorEventHandler\n  fullName: System.Data.FillErrorEventHandler\n- uid: System.Data.DataTableExtensions.AsDataView*\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsDataView\n  nameWithType: DataTableExtensions.AsDataView\n  fullName: DataTableExtensions.AsDataView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n- uid: System.Data.DataTableExtensions.AsDataView``1*\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsDataView<T>\n  nameWithType: DataTableExtensions.AsDataView<T>\n  fullName: DataTableExtensions.AsDataView<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n- uid: System.Data.DataTableExtensions.AsEnumerable*\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: AsEnumerable\n  nameWithType: DataTableExtensions.AsEnumerable\n  fullName: DataTableExtensions.AsEnumerable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1*\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>\n  nameWithType: DataTableExtensions.CopyToDataTable<T>\n  fullName: DataTableExtensions.CopyToDataTable<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataTableExtensions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}