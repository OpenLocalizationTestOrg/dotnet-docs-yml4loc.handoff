{"nodes":[{"content":"The exception that is thrown when one thread acquires a <xref href=\"System.Threading.Mutex\"></xref> object that another thread has abandoned by exiting without releasing it.","nodes":[{"pos":[0,173],"content":"The exception that is thrown when one thread acquires a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that another thread has abandoned by exiting without releasing it.","source":"The exception that is thrown when one thread acquires a <xref href=\"System.Threading.Mutex\"></xref> object that another thread has abandoned by exiting without releasing it."}],"pos":[1222,1396],"yaml":true},{"content":"When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex. The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.  \n  \n An abandoned mutex indicates a serious programming error. When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state. Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex. For more information, see the <xref:System.Threading.Mutex> class.  \n  \n The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.","nodes":[{"pos":[0,226],"content":"When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex. The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.","nodes":[{"content":"When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex. The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.","pos":[0,226],"nodes":[{"content":"When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.","pos":[0,99]},{"content":"The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.","pos":[100,226]}]}]},{"pos":[233,654],"content":"An abandoned mutex indicates a serious programming error. When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state. Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex. For more information, see the <xref:System.Threading.Mutex> class.","nodes":[{"content":"An abandoned mutex indicates a serious programming error. When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state. Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex. For more information, see the <xref:System.Threading.Mutex> class.","pos":[0,421],"nodes":[{"content":"An abandoned mutex indicates a serious programming error.","pos":[0,57]},{"content":"When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.","pos":[58,185]},{"content":"Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.","pos":[186,354]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Mutex&gt;</ph> class.","pos":[355,421],"source":" For more information, see the <xref:System.Threading.Mutex> class."}]}]},{"pos":[661,817],"content":"The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.","nodes":[{"content":"The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.","pos":[0,156]}]}],"pos":[1407,2231],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with default values.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with default values.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with default values."}],"pos":[6013,6136],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The system-supplied error message string.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|","nodes":[{"pos":[0,267],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.","pos":[0,267],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\"","pos":[0,207],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\""},{"content":"This message takes into account the current system culture.","pos":[208,267]}]}]},{"pos":[274,395],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>.","pos":[0,121],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>."}]},{"pos":[402,410],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[411,416],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[452,493],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[494,501],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[506,540],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[541,582],"content":"The system-supplied error message string.","nodes":[{"content":"The system-supplied error message string.","pos":[0,41]}]},{"pos":[587,643],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[644,651],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[656,717],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[718,733],"content":"–1 (minus one).","nodes":[{"content":"–1 (minus one).","pos":[0,15]}]}],"pos":[6147,6895],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message."}],"pos":[8641,8775],"yaml":true},{"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|`message`.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|","nodes":[{"pos":[0,185],"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is intended to be understood by humans.","pos":[0,64],"source":"The content of `message` is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[65,185]}]},{"pos":[192,347],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.","pos":[0,155],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor."}]},{"pos":[354,362],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[363,368],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[404,445],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[446,453],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[458,492],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[493,503],"content":"<ph id=\"ph1\">`message`</ph>.","source":"`message`."},{"pos":[508,564],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[565,572],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[577,638],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[639,654],"content":"–1 (minus one).","nodes":[{"content":"–1 (minus one).","pos":[0,15]}]}],"pos":[8786,9453],"yaml":true,"extradata":"MT"},{"content":"An error message that explains the reason for the exception.","nodes":[{"pos":[0,60],"content":"An error message that explains the reason for the exception.","nodes":[{"content":"An error message that explains the reason for the exception.","pos":[0,60]}]}],"pos":[9604,9665],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex.","nodes":[{"pos":[0,248],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with a specified index for the abandoned mutex, if applicable, and a <ph id=\"ph2\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the mutex.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex."}],"pos":[11448,11697],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|A system-supplied error message string.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|","nodes":[{"pos":[0,267],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\" This message takes into account the current system culture.","pos":[0,267],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\"","pos":[0,207],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The wait completed due to an abandoned mutex.\""},{"content":"This message takes into account the current system culture.","pos":[208,267]}]}]},{"pos":[274,429],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.","pos":[0,155],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor."}]},{"pos":[436,444],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[445,450],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[486,527],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[528,535],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[540,574],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[575,614],"content":"A system-supplied error message string.","nodes":[{"content":"A system-supplied error message string.","pos":[0,39]}]},{"pos":[619,675],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[676,685],"content":"<ph id=\"ph1\">`handle`</ph>.","source":"`handle`."},{"pos":[690,751],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[752,763],"content":"<ph id=\"ph1\">`location`</ph>.","source":"`location`."}],"pos":[11708,12486],"yaml":true,"extradata":"MT"},{"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.","nodes":[{"pos":[0,331],"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitAny*\"&gt;&lt;/xref&gt;</ph> method, or –1 if the exception is thrown for the <ph id=\"ph2\">&lt;xref href=\"System.Threading.WaitHandle.WaitOne*\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Threading.WaitHandle.WaitAll*\"&gt;&lt;/xref&gt;</ph> methods.","source":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods."}],"pos":[12671,13003],"yaml":true},{"content":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the abandoned mutex.","source":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex."}],"pos":[13079,13169],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with serialized data.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with serialized data."}],"pos":[15162,15286],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[15297,15529],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown."}],"pos":[15805,15956],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination."}],"pos":[16051,16199],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message and inner exception.","nodes":[{"pos":[0,153],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and inner exception.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message and inner exception."}],"pos":[17648,17802],"yaml":true},{"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`inner`.|  \n|<xref:System.Exception.Message%2A>|`message`.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|","nodes":[{"pos":[0,185],"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is intended to be understood by humans.","pos":[0,64],"source":"The content of `message` is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[65,185]}]},{"pos":[192,619],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[626,781],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.","pos":[0,155],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor."}]},{"pos":[788,796],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[797,802],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[838,879],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[880,888],"content":"<ph id=\"ph1\">`inner`</ph>.","source":"`inner`."},{"pos":[893,927],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[928,938],"content":"<ph id=\"ph1\">`message`</ph>.","source":"`message`."},{"pos":[943,999],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[1000,1007],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[1012,1073],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[1074,1089],"content":"–1 (minus one).","nodes":[{"content":"–1 (minus one).","pos":[0,15]}]}],"pos":[17813,18917],"yaml":true,"extradata":"MT"},{"content":"An error message that explains the reason for the exception.","nodes":[{"pos":[0,60],"content":"An error message that explains the reason for the exception.","nodes":[{"content":"An error message that explains the reason for the exception.","pos":[0,60]}]}],"pos":[19085,19146],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[19210,19404],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex."}],"pos":[21253,21461],"yaml":true},{"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|`message`.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|","nodes":[{"pos":[0,185],"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is intended to be understood by humans.","pos":[0,64],"source":"The content of `message` is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[65,185]}]},{"pos":[192,347],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.","pos":[0,155],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor."}]},{"pos":[354,362],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[363,368],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[404,445],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[446,453],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[458,492],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[493,503],"content":"<ph id=\"ph1\">`message`</ph>.","source":"`message`."},{"pos":[508,564],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[565,574],"content":"<ph id=\"ph1\">`handle`</ph>.","source":"`handle`."},{"pos":[579,640],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[641,652],"content":"<ph id=\"ph1\">`location`</ph>.","source":"`location`."}],"pos":[21472,22137],"yaml":true,"extradata":"MT"},{"content":"An error message that explains the reason for the exception.","nodes":[{"pos":[0,60],"content":"An error message that explains the reason for the exception.","nodes":[{"content":"An error message that explains the reason for the exception.","pos":[0,60]}]}],"pos":[22338,22399],"yaml":true},{"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.","nodes":[{"pos":[0,331],"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitAny*\"&gt;&lt;/xref&gt;</ph> method, or –1 if the exception is thrown for the <ph id=\"ph2\">&lt;xref href=\"System.Threading.WaitHandle.WaitOne*\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Threading.WaitHandle.WaitAll*\"&gt;&lt;/xref&gt;</ph> methods.","source":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods."}],"pos":[22462,22794],"yaml":true},{"content":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the abandoned mutex.","source":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex."}],"pos":[22870,22960],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex.","nodes":[{"pos":[0,288],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.AbandonedMutexException\"&gt;&lt;/xref&gt;</ph> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <ph id=\"ph2\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the mutex.","source":"Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex."}],"pos":[24893,25182],"yaml":true},{"content":"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`inner`.|  \n|<xref:System.Exception.Message%2A>|`message`.|  \n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|","nodes":[{"pos":[0,211],"content":"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is a text string intended to inform the user about the exception.","pos":[0,90],"source":"The content of `message` is a text string intended to inform the user about the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[91,211]}]},{"pos":[218,645],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[652,807],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.","pos":[0,155],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor."}]},{"pos":[814,822],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[823,828],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[864,905],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[906,914],"content":"<ph id=\"ph1\">`inner`</ph>.","source":"`inner`."},{"pos":[919,953],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[954,964],"content":"<ph id=\"ph1\">`message`</ph>.","source":"`message`."},{"pos":[969,1025],"content":"<xref:System.Threading.AbandonedMutexException.Mutex%2A>","nodes":[]},{"pos":[1026,1035],"content":"<ph id=\"ph1\">`handle`</ph>.","source":"`handle`."},{"pos":[1040,1101],"content":"<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>","nodes":[]},{"pos":[1102,1113],"content":"<ph id=\"ph1\">`location`</ph>.","source":"`location`."}],"pos":[25193,26321],"yaml":true,"extradata":"MT"},{"content":"An error message that explains the reason for the exception.","nodes":[{"pos":[0,60],"content":"An error message that explains the reason for the exception.","nodes":[{"content":"An error message that explains the reason for the exception.","pos":[0,60]}]}],"pos":[26539,26600],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[26664,26858],"yaml":true},{"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.","nodes":[{"pos":[0,331],"content":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitAny*\"&gt;&lt;/xref&gt;</ph> method, or –1 if the exception is thrown for the <ph id=\"ph2\">&lt;xref href=\"System.Threading.WaitHandle.WaitOne*\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Threading.WaitHandle.WaitAll*\"&gt;&lt;/xref&gt;</ph> methods.","source":"The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods."}],"pos":[26921,27253],"yaml":true},{"content":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the abandoned mutex.","source":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex."}],"pos":[27329,27419],"yaml":true},{"content":"Gets the abandoned mutex that caused the exception, if known.","nodes":[{"pos":[0,61],"content":"Gets the abandoned mutex that caused the exception, if known.","nodes":[{"content":"Gets the abandoned mutex that caused the exception, if known.","pos":[0,61]}]}],"pos":[28960,29022],"yaml":true},{"content":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.","nodes":[{"pos":[0,566],"content":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.","nodes":[{"content":"If the exception is thrown on a call to the <ph id=\"ph1\">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName&gt;</ph> method, the <ph id=\"ph2\">&lt;xref:System.Threading.Mutex&gt;</ph> returned is the abandoned mutex with the lowest index in the array of <ph id=\"ph3\">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id=\"ph4\">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id=\"ph5\">`null`</ph> if the abandoned mutex could not be identified.","pos":[0,393],"source":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified."},{"content":"If the exception is thrown on a call to <ph id=\"ph1\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns <ph id=\"ph3\">`null`</ph>.","pos":[394,566],"source":" If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`."}]}],"pos":[29033,29600],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or `null` if the abandoned mutex could not be identified.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the abandoned mutex, or <ph id=\"ph2\">`null`</ph> if the abandoned mutex could not be identified.","source":"A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or `null` if the abandoned mutex could not be identified."}],"pos":[29734,29882],"yaml":true},{"content":"Gets the index of the abandoned mutex that caused the exception, if known.","nodes":[{"pos":[0,74],"content":"Gets the index of the abandoned mutex that caused the exception, if known.","nodes":[{"content":"Gets the index of the abandoned mutex that caused the exception, if known.","pos":[0,74]}]}],"pos":[31453,31528],"yaml":true},{"content":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.","nodes":[{"pos":[0,547],"content":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.","nodes":[{"content":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.","pos":[0,547],"nodes":[{"content":"If the exception is thrown on a call to the <ph id=\"ph1\">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName&gt;</ph> method, this property returns the index of the abandoned mutex with the lowest index in the array of <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id=\"ph3\">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or –1 if the abandoned mutex could not be identified.","pos":[0,378],"source":"If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified."},{"content":"If the exception is thrown on a call to <ph id=\"ph1\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns –1.","pos":[379,547],"source":" If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1."}]}]}],"pos":[31539,32087],"yaml":true,"extradata":"MT"},{"content":"The index, in the array of wait handles passed to the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, of the <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.","nodes":[{"pos":[0,281],"content":"The index, in the array of wait handles passed to the <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitAny*\"&gt;&lt;/xref&gt;</ph> method, of the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.","source":"The index, in the array of wait handles passed to the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, of the <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined."}],"pos":[33457,33739],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.AbandonedMutexException\n  commentId: T:System.Threading.AbandonedMutexException\n  id: AbandonedMutexException\n  children:\n  - System.Threading.AbandonedMutexException.#ctor\n  - System.Threading.AbandonedMutexException.#ctor(System.String)\n  - System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.Mutex\n  - System.Threading.AbandonedMutexException.MutexIndex\n  langs:\n  - csharp\n  name: AbandonedMutexException\n  nameWithType: AbandonedMutexException\n  fullName: System.Threading.AbandonedMutexException\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: The exception that is thrown when one thread acquires a <xref href=\"System.Threading.Mutex\"></xref> object that another thread has abandoned by exiting without releasing it.\n  remarks: \"When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex. The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.  \\n  \\n An abandoned mutex indicates a serious programming error. When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state. Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex. For more information, see the <xref:System.Threading.Mutex> class.  \\n  \\n The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.\"\n  example:\n  - \"The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> methods. The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.  \\n  \\n> [!NOTE]\\n>  The call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method is interrupted by one of the abandoned mutexes. The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.  \\n  \\n [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]\\n [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]\\n [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class AbandonedMutexException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor\n  commentId: M:System.Threading.AbandonedMutexException.#ctor\n  id: '#ctor'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException()\n  nameWithType: AbandonedMutexException.AbandonedMutexException()\n  fullName: AbandonedMutexException.AbandonedMutexException()\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with default values.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"The wait completed due to an abandoned mutex.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The system-supplied error message string.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|\"\n  syntax:\n    content: public AbandonedMutexException ();\n    parameters: []\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(String)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String)\n  fullName: AbandonedMutexException.AbandonedMutexException(String)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message.\n  remarks: \"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|`message`.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|\"\n  syntax:\n    content: public AbandonedMutexException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: An error message that explains the reason for the exception.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(Int32, WaitHandle)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"The wait completed due to an abandoned mutex.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|A system-supplied error message string.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|\"\n  syntax:\n    content: public AbandonedMutexException (int location, System.Threading.WaitHandle handle);\n    parameters:\n    - id: location\n      type: System.Int32\n      description: The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(SerializationInfo, StreamingContext)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(SerializationInfo, StreamingContext)\n  fullName: AbandonedMutexException.AbandonedMutexException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: protected AbandonedMutexException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(String, Exception)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message and inner exception.\n  remarks: \"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`inner`.|  \\n|<xref:System.Exception.Message%2A>|`message`.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`null`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|–1 (minus one).|\"\n  syntax:\n    content: public AbandonedMutexException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: An error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.String,System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(String, Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Int32, WaitHandle)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.\n  remarks: \"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|`message`.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|\"\n  syntax:\n    content: public AbandonedMutexException (string message, int location, System.Threading.WaitHandle handle);\n    parameters:\n    - id: message\n      type: System.String\n      description: An error message that explains the reason for the exception.\n    - id: location\n      type: System.Int32\n      description: The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.AbandonedMutexException\"></xref> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <xref href=\"System.Threading.Mutex\"></xref> object that represents the mutex.\n  remarks: \"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`inner`.|  \\n|<xref:System.Exception.Message%2A>|`message`.|  \\n|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|`handle`.|  \\n|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|`location`.|\"\n  syntax:\n    content: public AbandonedMutexException (string message, Exception inner, int location, System.Threading.WaitHandle handle);\n    parameters:\n    - id: message\n      type: System.String\n      description: An error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n    - id: location\n      type: System.Int32\n      description: The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, or –1 if the exception is thrown for the <xref href=\"System.Threading.WaitHandle.WaitOne*\"></xref> or <xref href=\"System.Threading.WaitHandle.WaitAll*\"></xref> methods.\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex.\n  overload: System.Threading.AbandonedMutexException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.Mutex\n  commentId: P:System.Threading.AbandonedMutexException.Mutex\n  id: Mutex\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: Mutex\n  nameWithType: AbandonedMutexException.Mutex\n  fullName: AbandonedMutexException.Mutex\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the abandoned mutex that caused the exception, if known.\n  remarks: If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.\n  syntax:\n    content: public System.Threading.Mutex Mutex { get; }\n    return:\n      type: System.Threading.Mutex\n      description: A <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or `null` if the abandoned mutex could not be identified.\n  overload: System.Threading.AbandonedMutexException.Mutex*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.AbandonedMutexException.MutexIndex\n  commentId: P:System.Threading.AbandonedMutexException.MutexIndex\n  id: MutexIndex\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  name: MutexIndex\n  nameWithType: AbandonedMutexException.MutexIndex\n  fullName: AbandonedMutexException.MutexIndex\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the index of the abandoned mutex that caused the exception, if known.\n  remarks: If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=fullName> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified. If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.\n  example:\n  - \"The following code example executes a thread that abandons five mutexes. The abandoned mutexes are used to demonstrate the effects on the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> method calls. The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.  \\n  \\n> [!NOTE]\\n>  The call to <xref:System.Threading.WaitHandle.WaitAny%2A> is interrupted by one of the abandoned mutexes. The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.  \\n  \\n [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]\\n [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]\\n [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]\"\n  syntax:\n    content: public int MutexIndex { get; }\n    return:\n      type: System.Int32\n      description: The index, in the array of wait handles passed to the <xref href=\"System.Threading.WaitHandle.WaitAny*\"></xref> method, of the <xref href=\"System.Threading.Mutex\"></xref> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.\n  overload: System.Threading.AbandonedMutexException.MutexIndex*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.AbandonedMutexException.#ctor\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException()\n  nameWithType: AbandonedMutexException.AbandonedMutexException()\n  fullName: AbandonedMutexException.AbandonedMutexException()\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(String)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String)\n  fullName: AbandonedMutexException.AbandonedMutexException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(Int32, WaitHandle)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(SerializationInfo, StreamingContext)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(SerializationInfo, StreamingContext)\n  fullName: AbandonedMutexException.AbandonedMutexException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(String, Exception)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Exception)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(String, Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Int32, WaitHandle)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  fullName: AbandonedMutexException.AbandonedMutexException(String, Exception, Int32, WaitHandle)\n- uid: System.Threading.AbandonedMutexException.Mutex\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: Mutex\n  nameWithType: AbandonedMutexException.Mutex\n  fullName: AbandonedMutexException.Mutex\n- uid: System.Threading.Mutex\n  parent: System.Threading\n  isExternal: false\n  name: Mutex\n  nameWithType: Mutex\n  fullName: System.Threading.Mutex\n- uid: System.Threading.AbandonedMutexException.MutexIndex\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: MutexIndex\n  nameWithType: AbandonedMutexException.MutexIndex\n  fullName: AbandonedMutexException.MutexIndex\n- uid: System.Threading.AbandonedMutexException.#ctor*\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: AbandonedMutexException\n  nameWithType: AbandonedMutexException.AbandonedMutexException\n  fullName: AbandonedMutexException.AbandonedMutexException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n- uid: System.Threading.AbandonedMutexException.Mutex*\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: Mutex\n  nameWithType: AbandonedMutexException.Mutex\n  fullName: AbandonedMutexException.Mutex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n- uid: System.Threading.AbandonedMutexException.MutexIndex*\n  parent: System.Threading.AbandonedMutexException\n  isExternal: false\n  name: MutexIndex\n  nameWithType: AbandonedMutexException.MutexIndex\n  fullName: AbandonedMutexException.MutexIndex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/AbandonedMutexException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}