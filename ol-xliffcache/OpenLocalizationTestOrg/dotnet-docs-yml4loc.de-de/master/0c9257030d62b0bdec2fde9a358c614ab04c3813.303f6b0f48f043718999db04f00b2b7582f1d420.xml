{"nodes":[{"content":"Specifies generic undo/redo functionality at design time.","nodes":[{"pos":[0,57],"content":"Specifies generic undo/redo functionality at design time.","nodes":[{"content":"Specifies generic undo/redo functionality at design time.","pos":[0,57]}]}],"pos":[1385,1443],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.  \n  \n The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:  \n  \n-   All interesting objects can be persisted to some format by the designer loader.  \n  \n-   All objects raise property-change notifications when a property is changed.  \n  \n-   <xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.  \n  \n With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically.  \n  \n> [!NOTE]\n>  Do not change property values directly. The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.  \n  \n <xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Saves property and object values for a component before and after a change is made.|  \n|<xref:System.ComponentModel.Design.IComponentChangeService>|Notifies the undo engine of changes made to components.|  \n|<xref:System.ComponentModel.Design.IDesignerHost>|Used to track transactions.|  \n  \n> [!NOTE]\n>  Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.  \n  \n The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","nodes":[{"pos":[0,409],"content":"The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.","nodes":[{"content":"The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.","pos":[0,409],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> abstract class provides a default implementation of undo functionality at design time.","pos":[0,137],"source":"The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time."},{"content":"An undo unit represents a single unit of undoable work.","pos":[138,193]},{"content":"This unit is added to a stack and the user can then walk the stack to undo each action.","pos":[194,281]},{"content":"Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.","pos":[282,409]}]}]},{"pos":[416,561],"content":"The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class takes advantage of the following characteristics of objects running within the designer:","pos":[0,145],"source":"The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:"}]},{"pos":[571,650],"content":"All interesting objects can be persisted to some format by the designer loader.","nodes":[{"content":"All interesting objects can be persisted to some format by the designer loader.","pos":[0,79]}]},{"pos":[660,735],"content":"All objects raise property-change notifications when a property is changed.","nodes":[{"content":"All objects raise property-change notifications when a property is changed.","pos":[0,75]}]},{"pos":[745,910],"content":"<xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.","pos":[0,165],"source":"<xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions."}]},{"pos":[917,1037],"content":"With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically.","nodes":[{"content":"With these features, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> can fabricate any undo units it needs automatically.","pos":[0,120],"source":"With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically."}]},{"pos":[1045,1259],"content":"[!NOTE]\n Do not change property values directly. The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.","leadings":["","> "],"nodes":[{"content":" Do not change property values directly. The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.","pos":[8,212],"nodes":[{"content":"Do not change property values directly.","pos":[1,40]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires you to use the appropriate <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to change property values.","pos":[41,204],"source":" The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values."}]}]},{"pos":[1266,1556],"content":"<xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.","nodes":[{"content":"<xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.","pos":[0,290],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> monitors for change notifications to create undo units, and the units themselves consist of serialized object states.","pos":[0,164],"source":"<xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states."},{"content":"The following table shows the services that must be available when <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> is created.","pos":[165,290],"source":" The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created."}]}]},{"pos":[1563,1570],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[1571,1582],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1623,1702],"content":"<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>","nodes":[]},{"pos":[1703,1786],"content":"Saves property and object values for a component before and after a change is made.","nodes":[{"content":"Saves property and object values for a component before and after a change is made.","pos":[0,83]}]},{"pos":[1791,1850],"content":"<xref:System.ComponentModel.Design.IComponentChangeService>","nodes":[]},{"pos":[1851,1906],"content":"Notifies the undo engine of changes made to components.","nodes":[{"content":"Notifies the undo engine of changes made to components.","pos":[0,55]}]},{"pos":[1911,1960],"content":"<xref:System.ComponentModel.Design.IDesignerHost>","nodes":[]},{"pos":[1961,1988],"content":"Used to track transactions.","nodes":[{"content":"Used to track transactions.","pos":[0,27]}]},{"pos":[1997,2263],"content":"[!NOTE]\n Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.","leadings":["","> "],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, it is available only at design time.","pos":[9,264],"source":" Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time."}]},{"pos":[2270,2721],"content":"The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","nodes":[{"content":"The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","pos":[0,451],"nodes":[{"content":"The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.","pos":[0,98]},{"content":"As a result, the undo engine has control over the duration of an undoable action.","pos":[99,180]},{"content":"Also, because transactions can be named, undoable actions inherit their names from the current transaction.","pos":[181,288]},{"content":"If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","pos":[289,451]}]}]}],"pos":[1454,4206],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> class."}],"pos":[5704,5806],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requires several services from the <ph id=\"ph2\">`provider`</ph> parameter to be useful.","source":"The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful."}],"pos":[5817,5938],"yaml":true,"extradata":"MT"},{"content":"A parenting service provider.","nodes":[{"pos":[0,29],"content":"A parenting service provider.","nodes":[{"content":"A parenting service provider.","pos":[0,29]}]}],"pos":[6101,6131],"yaml":true},{"content":"<code>provider</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>provider</code> is `null`."}],"pos":[6306,6339],"yaml":true},{"content":"A required service cannot be found. See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services. If you have removed this service, ensure that you provide a replacement.","nodes":[{"pos":[0,196],"content":"A required service cannot be found. See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services. If you have removed this service, ensure that you provide a replacement.","nodes":[{"content":"A required service cannot be found.","pos":[0,35]},{"content":"See <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph> for required services.","pos":[36,123],"source":" See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services."},{"content":"If you have removed this service, ensure that you provide a replacement.","pos":[124,196]}]}],"pos":[6441,6638],"yaml":true},{"content":"Adds an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> to the undo stack.","nodes":[{"pos":[0,96],"content":"Adds an <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"&gt;&lt;/xref&gt;</ph> to the undo stack.","source":"Adds an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> to the undo stack."}],"pos":[7798,7895],"yaml":true},{"content":"Create the `unit` parameter by calling the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method.","nodes":[{"pos":[0,115],"content":"Create the <ph id=\"ph1\">`unit`</ph> parameter by calling the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method.","source":"Create the `unit` parameter by calling the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method."}],"pos":[7906,8022],"yaml":true,"extradata":"MT"},{"content":"The undo unit to add","nodes":[{"pos":[0,20],"content":"The undo unit to add","nodes":[{"content":"The undo unit to add","pos":[0,20]}]}],"pos":[8249,8270],"yaml":true},{"content":"Creates a new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>.","nodes":[{"pos":[0,84],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>."}],"pos":[9458,9543],"yaml":true},{"content":"The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.  \n  \n By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.","nodes":[{"pos":[0,183],"content":"The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.","nodes":[{"content":"The default implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method simply returns a new <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>.","pos":[0,183],"source":"The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>."}]},{"pos":[190,506],"content":"By default, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> does nothing with the <ph id=\"ph2\">`primary`</ph> parameter, but some implementations of undo, such as those involving the COM <ph id=\"ph3\">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> design pattern, may need to identify the difference between a primary unit and its children.","source":"By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children."}],"pos":[9554,10065],"yaml":true,"extradata":"MT"},{"content":"The name of the unit to create.","nodes":[{"pos":[0,31],"content":"The name of the unit to create.","nodes":[{"content":"The name of the unit to create.","pos":[0,31]}]}],"pos":[10275,10307],"yaml":true},{"content":"`true` to create the first of a series of nested units; `false` to create subsequent nested units.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> to create the first of a series of nested units; <ph id=\"ph2\">`false`</ph> to create subsequent nested units.","source":"`true` to create the first of a series of nested units; `false` to create subsequent nested units."}],"pos":[10371,10472],"yaml":true},{"content":"A new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> with a specified name.","nodes":[{"pos":[0,98],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"&gt;&lt;/xref&gt;</ph> with a specified name.","source":"A new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> with a specified name."}],"pos":[10564,10663],"yaml":true},{"content":"Discards an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>.","nodes":[{"pos":[0,82],"content":"Discards an <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Discards an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>."}],"pos":[11932,12015],"yaml":true},{"content":"Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone.","nodes":[{"pos":[0,135],"content":"Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone.","nodes":[{"content":"Before the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A&gt;</ph> method is called, the undo unit is closed and then undone.","pos":[0,135],"source":"Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone."}]}],"pos":[12026,12162],"yaml":true,"extradata":"MT"},{"content":"The unit to discard.","nodes":[{"pos":[0,20],"content":"The unit to discard.","nodes":[{"content":"The unit to discard.","pos":[0,20]}]}],"pos":[12392,12413],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.","nodes":[{"pos":[0,96],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>."}],"pos":[13428,13525],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,152],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> and optionally releases the managed resources."}],"pos":[14667,14820],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[14974,15077],"yaml":true},{"content":"Enables or disables the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.","nodes":[{"pos":[0,85],"content":"Enables or disables the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph>.","source":"Enables or disables the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>."}],"pos":[16080,16166],"yaml":true},{"content":"`true` if the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> is enabled; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;&lt;/xref&gt;</ph> is enabled; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> is enabled; otherwise, `false`."}],"pos":[16281,16390],"yaml":true},{"content":"Gets the requested service.","nodes":[{"pos":[0,27],"content":"Gets the requested service.","nodes":[{"content":"Gets the requested service.","pos":[0,27]}]}],"pos":[17514,17542],"yaml":true},{"content":"The type of service to retrieve.","nodes":[{"pos":[0,32],"content":"The type of service to retrieve.","nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]}],"pos":[17702,17735],"yaml":true},{"content":"The requested service, if found.","nodes":[{"pos":[0,32],"content":"The requested service, if found.","nodes":[{"content":"The requested service, if found.","pos":[0,32]}]}],"pos":[17792,17825],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[18013,18049],"yaml":true},{"content":"<code>serviceType</code> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.","nodes":[{"pos":[0,130],"content":"<code>serviceType</code> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is required but cannot be found.","pos":[0,57],"source":"<code>serviceType</code> is required but cannot be found."},{"content":"If you have removed this service, ensure that you provide a replacement.","pos":[58,130]}]}],"pos":[18151,18282],"yaml":true},{"content":"Gets the requested service.","nodes":[{"pos":[0,27],"content":"Gets the requested service.","nodes":[{"content":"Gets the requested service.","pos":[0,27]}]}],"pos":[19280,19308],"yaml":true},{"content":"The type of service to retrieve.","nodes":[{"pos":[0,32],"content":"The type of service to retrieve.","nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]}],"pos":[19460,19493],"yaml":true},{"content":"The requested service, or `null` if the requested service is not found.","nodes":[{"pos":[0,71],"content":"The requested service, or <ph id=\"ph1\">`null`</ph> if the requested service is not found.","source":"The requested service, or `null` if the requested service is not found."}],"pos":[19550,19622],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[19802,19838],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"></xref> event.","nodes":[{"pos":[0,86],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"></xref> event."}],"pos":[20860,20947],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[21094,21165],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"></xref> event.","nodes":[{"pos":[0,85],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"></xref> event."}],"pos":[22261,22347],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[22493,22564],"yaml":true},{"content":"Occurs immediately before an undo action is performed.","nodes":[{"pos":[0,54],"content":"Occurs immediately before an undo action is performed.","nodes":[{"content":"Occurs immediately before an undo action is performed.","pos":[0,54]}]}],"pos":[23565,23620],"yaml":true},{"content":"Indicates if an undo action is in progress.","nodes":[{"pos":[0,43],"content":"Indicates if an undo action is in progress.","nodes":[{"content":"Indicates if an undo action is in progress.","pos":[0,43]}]}],"pos":[24728,24772],"yaml":true},{"content":"`true` if an undo action is in progress; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if an undo action is in progress; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if an undo action is in progress; otherwise, `false`."}],"pos":[24889,24952],"yaml":true},{"content":"Occurs immediately after an undo action is performed.","nodes":[{"pos":[0,53],"content":"Occurs immediately after an undo action is performed.","nodes":[{"content":"Occurs immediately after an undo action is performed.","pos":[0,53]}]}],"pos":[25953,26007],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown.","nodes":[{"pos":[0,113],"content":"The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.UndoEngine.Undone&gt;</ph> event is always raised, even if an exception is thrown.","pos":[0,113],"source":"The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown."}]}],"pos":[26018,26132],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.UndoEngine\n  commentId: T:System.ComponentModel.Design.UndoEngine\n  id: UndoEngine\n  children:\n  - System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  - System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  - System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  - System.ComponentModel.Design.UndoEngine.Dispose\n  - System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  - System.ComponentModel.Design.UndoEngine.Enabled\n  - System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  - System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  - System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  - System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  - System.ComponentModel.Design.UndoEngine.Undoing\n  - System.ComponentModel.Design.UndoEngine.UndoInProgress\n  - System.ComponentModel.Design.UndoEngine.Undone\n  langs:\n  - csharp\n  name: UndoEngine\n  nameWithType: UndoEngine\n  fullName: System.ComponentModel.Design.UndoEngine\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Specifies generic undo/redo functionality at design time.\n  remarks: \"The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.  \\n  \\n The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:  \\n  \\n-   All interesting objects can be persisted to some format by the designer loader.  \\n  \\n-   All objects raise property-change notifications when a property is changed.  \\n  \\n-   <xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.  \\n  \\n With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically.  \\n  \\n> [!NOTE]\\n>  Do not change property values directly. The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.  \\n  \\n <xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Saves property and object values for a component before and after a change is made.|  \\n|<xref:System.ComponentModel.Design.IComponentChangeService>|Notifies the undo engine of changes made to components.|  \\n|<xref:System.ComponentModel.Design.IDesignerHost>|Used to track transactions.|  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.  \\n  \\n The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \\\"Change property 'Text'\\\").\"\n  syntax:\n    content: 'public abstract class UndoEngine : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: UndoEngine(IServiceProvider)\n  nameWithType: UndoEngine.UndoEngine(IServiceProvider)\n  fullName: UndoEngine.UndoEngine(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> class.\n  remarks: The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful.\n  syntax:\n    content: protected UndoEngine (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: A parenting service provider.\n  overload: System.ComponentModel.Design.UndoEngine.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A required service cannot be found. See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services. If you have removed this service, ensure that you provide a replacement.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  commentId: M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  id: AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: AddUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  fullName: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Adds an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> to the undo stack.\n  remarks: Create the `unit` parameter by calling the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method.\n  syntax:\n    content: protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);\n    parameters:\n    - id: unit\n      type: System.ComponentModel.Design.UndoEngine+UndoUnit\n      description: The undo unit to add\n  overload: System.ComponentModel.Design.UndoEngine.AddUndoUnit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  commentId: M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  id: CreateUndoUnit(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: CreateUndoUnit(String, Boolean)\n  nameWithType: UndoEngine.CreateUndoUnit(String, Boolean)\n  fullName: UndoEngine.CreateUndoUnit(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>.\n  remarks: \"The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.  \\n  \\n By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.\"\n  syntax:\n    content: protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the unit to create.\n    - id: primary\n      type: System.Boolean\n      description: '`true` to create the first of a series of nested units; `false` to create subsequent nested units.'\n    return:\n      type: System.ComponentModel.Design.UndoEngine+UndoUnit\n      description: A new <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref> with a specified name.\n  overload: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  commentId: M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  id: DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: DiscardUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  fullName: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Discards an <xref href=\"System.ComponentModel.Design.UndoEngine.UndoUnit\"></xref>.\n  remarks: Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone.\n  syntax:\n    content: protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);\n    parameters:\n    - id: unit\n      type: System.ComponentModel.Design.UndoEngine+UndoUnit\n      description: The unit to discard.\n  overload: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.Dispose\n  commentId: M:System.ComponentModel.Design.UndoEngine.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UndoEngine.Dispose()\n  fullName: UndoEngine.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.UndoEngine.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: UndoEngine.Dispose(Boolean)\n  fullName: UndoEngine.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Design.UndoEngine.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.Enabled\n  commentId: P:System.ComponentModel.Design.UndoEngine.Enabled\n  id: Enabled\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n  fullName: UndoEngine.Enabled\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Enables or disables the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> is enabled; otherwise, `false`.'\n  overload: System.ComponentModel.Design.UndoEngine.Enabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  commentId: M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  id: GetRequiredService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: GetRequiredService(Type)\n  nameWithType: UndoEngine.GetRequiredService(Type)\n  fullName: UndoEngine.GetRequiredService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested service.\n  syntax:\n    content: protected object GetRequiredService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: The requested service, if found.\n  overload: System.ComponentModel.Design.UndoEngine.GetRequiredService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>serviceType</code> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: UndoEngine.GetService(Type)\n  fullName: UndoEngine.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested service.\n  syntax:\n    content: protected object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: The requested service, or `null` if the requested service is not found.\n  overload: System.ComponentModel.Design.UndoEngine.GetService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  id: OnUndoing(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: OnUndoing(EventArgs)\n  nameWithType: UndoEngine.OnUndoing(EventArgs)\n  fullName: UndoEngine.OnUndoing(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"></xref> event.\n  syntax:\n    content: protected virtual void OnUndoing (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.UndoEngine.OnUndoing*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  id: OnUndone(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: OnUndone(EventArgs)\n  nameWithType: UndoEngine.OnUndone(EventArgs)\n  fullName: UndoEngine.OnUndone(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"></xref> event.\n  syntax:\n    content: protected virtual void OnUndone (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.UndoEngine.OnUndone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.Undoing\n  commentId: E:System.ComponentModel.Design.UndoEngine.Undoing\n  id: Undoing\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Undoing\n  nameWithType: UndoEngine.Undoing\n  fullName: UndoEngine.Undoing\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs immediately before an undo action is performed.\n  syntax:\n    content: public event EventHandler Undoing;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress\n  commentId: P:System.ComponentModel.Design.UndoEngine.UndoInProgress\n  id: UndoInProgress\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n  fullName: UndoEngine.UndoInProgress\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Indicates if an undo action is in progress.\n  syntax:\n    content: public bool UndoInProgress { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if an undo action is in progress; otherwise, `false`.'\n  overload: System.ComponentModel.Design.UndoEngine.UndoInProgress*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.UndoEngine.Undone\n  commentId: E:System.ComponentModel.Design.UndoEngine.Undone\n  id: Undone\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Undone\n  nameWithType: UndoEngine.Undone\n  fullName: UndoEngine.Undone\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs immediately after an undo action is performed.\n  remarks: The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown.\n  syntax:\n    content: public event EventHandler Undone;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoEngine(IServiceProvider)\n  nameWithType: UndoEngine.UndoEngine(IServiceProvider)\n  fullName: UndoEngine.UndoEngine(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: AddUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  fullName: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n- uid: System.ComponentModel.Design.UndoEngine\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: UndoEngine\n  nameWithType: UndoEngine\n  fullName: System.ComponentModel.Design.UndoEngine+UndoUnit\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: CreateUndoUnit(String, Boolean)\n  nameWithType: UndoEngine.CreateUndoUnit(String, Boolean)\n  fullName: UndoEngine.CreateUndoUnit(String, Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: DiscardUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  fullName: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n- uid: System.ComponentModel.Design.UndoEngine.Dispose\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose()\n  nameWithType: UndoEngine.Dispose()\n  fullName: UndoEngine.Dispose()\n- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: UndoEngine.Dispose(Boolean)\n  fullName: UndoEngine.Dispose(Boolean)\n- uid: System.ComponentModel.Design.UndoEngine.Enabled\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n  fullName: UndoEngine.Enabled\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetRequiredService(Type)\n  nameWithType: UndoEngine.GetRequiredService(Type)\n  fullName: UndoEngine.GetRequiredService(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: UndoEngine.GetService(Type)\n  fullName: UndoEngine.GetService(Type)\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndoing(EventArgs)\n  nameWithType: UndoEngine.OnUndoing(EventArgs)\n  fullName: UndoEngine.OnUndoing(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndone(EventArgs)\n  nameWithType: UndoEngine.OnUndone(EventArgs)\n  fullName: UndoEngine.OnUndone(EventArgs)\n- uid: System.ComponentModel.Design.UndoEngine.Undoing\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Undoing\n  nameWithType: UndoEngine.Undoing\n  fullName: UndoEngine.Undoing\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n  fullName: UndoEngine.UndoInProgress\n- uid: System.ComponentModel.Design.UndoEngine.Undone\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Undone\n  nameWithType: UndoEngine.Undone\n  fullName: UndoEngine.Undone\n- uid: System.ComponentModel.Design.UndoEngine.#ctor*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoEngine\n  nameWithType: UndoEngine.UndoEngine\n  fullName: UndoEngine.UndoEngine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: AddUndoUnit\n  nameWithType: UndoEngine.AddUndoUnit\n  fullName: UndoEngine.AddUndoUnit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: CreateUndoUnit\n  nameWithType: UndoEngine.CreateUndoUnit\n  fullName: UndoEngine.CreateUndoUnit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: DiscardUndoUnit\n  nameWithType: UndoEngine.DiscardUndoUnit\n  fullName: UndoEngine.DiscardUndoUnit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.Dispose*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose\n  nameWithType: UndoEngine.Dispose\n  fullName: UndoEngine.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.Enabled*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n  fullName: UndoEngine.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetRequiredService\n  nameWithType: UndoEngine.GetRequiredService\n  fullName: UndoEngine.GetRequiredService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.GetService*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetService\n  nameWithType: UndoEngine.GetService\n  fullName: UndoEngine.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndoing\n  nameWithType: UndoEngine.OnUndoing\n  fullName: UndoEngine.OnUndoing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndone\n  nameWithType: UndoEngine.OnUndone\n  fullName: UndoEngine.OnUndone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n  fullName: UndoEngine.UndoInProgress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/UndoEngine.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}