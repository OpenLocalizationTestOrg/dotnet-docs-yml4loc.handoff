{"nodes":[{"content":"Represents a collection of objects that is maintained in sorted order.","nodes":[{"pos":[0,70],"content":"Represents a collection of objects that is maintained in sorted order.","nodes":[{"content":"Represents a collection of objects that is maintained in sorted order.","pos":[0,70]}]}],"pos":[4235,4306],"yaml":true},{"content":"A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted. Duplicate elements are not allowed. Changing the sort values of existing items is not supported and may lead to unexpected behavior.  \n  \n For a thread safe alternative to <xref:System.Collections.Generic.SortedSet%601>, see <xref:System.Collections.Immutable.ImmutableSortedSet%601>","nodes":[{"pos":[0,282],"content":"A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted. Duplicate elements are not allowed. Changing the sort values of existing items is not supported and may lead to unexpected behavior.","nodes":[{"content":"A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted. Duplicate elements are not allowed. Changing the sort values of existing items is not supported and may lead to unexpected behavior.","pos":[0,282],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object maintains a sorted order without affecting performance as elements are inserted and deleted.","pos":[0,149],"source":"A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted."},{"content":"Duplicate elements are not allowed.","pos":[150,185]},{"content":"Changing the sort values of existing items is not supported and may lead to unexpected behavior.","pos":[186,282]}]}]},{"pos":[289,433],"content":"For a thread safe alternative to <xref:System.Collections.Generic.SortedSet%601>, see <xref:System.Collections.Immutable.ImmutableSortedSet%601>","nodes":[{"content":"For a thread safe alternative to <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, see <ph id=\"ph2\">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph>","pos":[0,144],"source":"For a thread safe alternative to <xref:System.Collections.Generic.SortedSet%601>, see <xref:System.Collections.Immutable.ImmutableSortedSet%601>"}]}],"pos":[4317,4755],"yaml":true,"extradata":"MT"},{"content":"The type of elements in the set.","nodes":[{"pos":[0,32],"content":"The type of elements in the set.","nodes":[{"content":"The type of elements in the set.","pos":[0,32]}]}],"pos":[5983,6016],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class."}],"pos":[35043,35144],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that uses a specified comparer.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> class that uses a specified comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that uses a specified comparer."}],"pos":[36917,37049],"yaml":true},{"content":"If `comparer` does not implement <xref:System.IComparable%601>, you must specify an <xref:System.Collections.Generic.IComparer%601> object to be used.","nodes":[{"pos":[0,150],"content":"If <ph id=\"ph1\">`comparer`</ph> does not implement <ph id=\"ph2\">&lt;xref:System.IComparable%601&gt;</ph>, you must specify an <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to be used.","source":"If `comparer` does not implement <xref:System.IComparable%601>, you must specify an <xref:System.Collections.Generic.IComparer%601> object to be used."}],"pos":[37060,37211],"yaml":true,"extradata":"MT"},{"content":"The default comparer to use for comparing objects.","nodes":[{"pos":[0,50],"content":"The default comparer to use for comparing objects.","nodes":[{"content":"The default comparer to use for comparing objects.","pos":[0,50]}]}],"pos":[38334,38385],"yaml":true},{"content":"<code>comparer</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;comparer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>comparer</code> is `null`."}],"pos":[38559,38592],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> class that contains elements copied from a specified enumerable collection.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection."}],"pos":[40239,40409],"yaml":true},{"content":"Duplicate elements in the enumerable collection are not copied into the new instance of the <xref:System.Collections.Generic.SortedSet%601> class, and no exceptions are thrown.  \n  \n This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in the `collection` parameter.","nodes":[{"pos":[0,176],"content":"Duplicate elements in the enumerable collection are not copied into the new instance of the <xref:System.Collections.Generic.SortedSet%601> class, and no exceptions are thrown.","nodes":[{"content":"Duplicate elements in the enumerable collection are not copied into the new instance of the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class, and no exceptions are thrown.","pos":[0,176],"source":"Duplicate elements in the enumerable collection are not copied into the new instance of the <xref:System.Collections.Generic.SortedSet%601> class, and no exceptions are thrown."}]},{"pos":[183,298],"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph> log <ph id=\"ph2\">`n`</ph>) operation, where <ph id=\"ph3\">`n`</ph> is the number of elements in the <ph id=\"ph4\">`collection`</ph> parameter.","source":"This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in the `collection` parameter."}],"pos":[40420,40723],"yaml":true,"extradata":"MT"},{"content":"The enumerable collection to be copied.","nodes":[{"pos":[0,39],"content":"The enumerable collection to be copied.","nodes":[{"content":"The enumerable collection to be copied.","pos":[0,39]}]}],"pos":[40928,40968],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.","nodes":[{"pos":[0,204],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection and that uses a specified comparer."}],"pos":[42855,43060],"yaml":true},{"content":"The enumerable collection to be copied.","nodes":[{"pos":[0,39],"content":"The enumerable collection to be copied.","nodes":[{"content":"The enumerable collection to be copied.","pos":[0,39]}]}],"pos":[43315,43355],"yaml":true},{"content":"The default comparer to use for comparing objects.","nodes":[{"pos":[0,50],"content":"The default comparer to use for comparing objects.","nodes":[{"content":"The default comparer to use for comparing objects.","pos":[0,50]}]}],"pos":[43444,43495],"yaml":true},{"content":"<code>collection</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;collection&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>collection</code> is `null`."}],"pos":[43669,43704],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains serialized data.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> class that contains serialized data.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains serialized data."}],"pos":[45564,45695],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.","nodes":[{"pos":[0,110],"content":"This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.","pos":[0,110]}]}],"pos":[45706,45817],"yaml":true,"extradata":"MT"},{"content":"The object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,142],"content":"The object that contains the information that is required to serialize the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[46079,46222],"yaml":true},{"content":"The structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,167],"content":"The structure that contains the source and destination of the serialized stream associated with the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[46317,46485],"yaml":true},{"content":"Adds an element to the set and returns a value that indicates if it was successfully added.","nodes":[{"pos":[0,91],"content":"Adds an element to the set and returns a value that indicates if it was successfully added.","nodes":[{"content":"Adds an element to the set and returns a value that indicates if it was successfully added.","pos":[0,91]}]}],"pos":[47704,47796],"yaml":true},{"content":"The <xref:System.Collections.Generic.SortedSet%601> class does not accept duplicate elements. If `item` is already in the set, this method returns `false` and does not throw an exception.  \n  \n If <xref:System.Collections.Generic.SortedSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.SortedSet%601> object, the capacity is automatically adjusted to accommodate the new item.","nodes":[{"pos":[0,187],"content":"The <xref:System.Collections.Generic.SortedSet%601> class does not accept duplicate elements. If `item` is already in the set, this method returns `false` and does not throw an exception.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class does not accept duplicate elements.","pos":[0,93],"source":"The <xref:System.Collections.Generic.SortedSet%601> class does not accept duplicate elements."},{"content":"If <ph id=\"ph1\">`item`</ph> is already in the set, this method returns <ph id=\"ph2\">`false`</ph> and does not throw an exception.","pos":[94,187],"source":" If `item` is already in the set, this method returns `false` and does not throw an exception."}]},{"pos":[194,412],"content":"If <xref:System.Collections.Generic.SortedSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.SortedSet%601> object, the capacity is automatically adjusted to accommodate the new item.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.","pos":[0,218],"source":"If <xref:System.Collections.Generic.SortedSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.SortedSet%601> object, the capacity is automatically adjusted to accommodate the new item."}]}],"pos":[47807,48224],"yaml":true,"extradata":"MT"},{"content":"The element to add to the set.","nodes":[{"pos":[0,30],"content":"The element to add to the set.","nodes":[{"content":"The element to add to the set.","pos":[0,30]}]}],"pos":[48852,48883],"yaml":true},{"content":"`true` if <code>item</code> is added to the set; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is added to the set; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>item</code> is added to the set; otherwise, `false`."}],"pos":[48941,49012],"yaml":true},{"content":"Removes all elements from the set.","nodes":[{"pos":[0,34],"content":"Removes all elements from the set.","nodes":[{"content":"Removes all elements from the set.","pos":[0,34]}]}],"pos":[50530,50565],"yaml":true},{"content":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,106],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}],"pos":[50576,50683],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Collections.Generic.IComparer`1\"></xref> object that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,176],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IComparer`1\"&gt;&lt;/xref&gt;</ph> object that is used to order the values in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Collections.Generic.IComparer`1\"></xref> object that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[52289,52466],"yaml":true},{"content":"The returned comparer can be either the default comparer of the type for a <xref:System.Collections.Generic.SortedSet%601>, or the comparer used for its constructor.  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,165],"content":"The returned comparer can be either the default comparer of the type for a <xref:System.Collections.Generic.SortedSet%601>, or the comparer used for its constructor.","nodes":[{"content":"The returned comparer can be either the default comparer of the type for a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, or the comparer used for its constructor.","pos":[0,165],"source":"The returned comparer can be either the default comparer of the type for a <xref:System.Collections.Generic.SortedSet%601>, or the comparer used for its constructor."}]},{"pos":[172,231],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[52477,52713],"yaml":true,"extradata":"MT"},{"content":"The comparer that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,113],"content":"The comparer that is used to order the values in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"The comparer that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[52883,52997],"yaml":true},{"content":"Determines whether the set contains a specific element.","nodes":[{"pos":[0,55],"content":"Determines whether the set contains a specific element.","nodes":[{"content":"Determines whether the set contains a specific element.","pos":[0,55]}]}],"pos":[54553,54609],"yaml":true},{"content":"This method is an O(ln n) operation.","nodes":[{"pos":[0,36],"content":"This method is an O(ln n) operation.","nodes":[{"content":"This method is an O(ln n) operation.","pos":[0,36]}]}],"pos":[54620,54657],"yaml":true,"extradata":"MT"},{"content":"The element to locate in the set.","nodes":[{"pos":[0,33],"content":"The element to locate in the set.","nodes":[{"content":"The element to locate in the set.","pos":[0,33]}]}],"pos":[54783,54817],"yaml":true},{"content":"`true` if the set contains <code>item</code>; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the set contains <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the set contains <code>item</code>; otherwise, `false`."}],"pos":[54875,54943],"yaml":true},{"content":"Copies a specified number of elements from <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.","nodes":[{"pos":[0,180],"content":"Copies a specified number of elements from <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.","source":"Copies a specified number of elements from <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index."}],"pos":[56619,56800],"yaml":true},{"content":"This method is an O(`n`) operation, where `n` is `count`.","nodes":[{"pos":[0,57],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`count`</ph>.","source":"This method is an O(`n`) operation, where `n` is `count`."}],"pos":[56811,56869],"yaml":true,"extradata":"MT"},{"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"pos":[0,181],"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"content":"A one-dimensional array that is the destination of the elements copied from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,140],"source":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."},{"content":"The array must have zero-based indexing.","pos":[141,181]}]}],"pos":[57013,57195],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[57255,57323],"yaml":true},{"content":"The number of elements to copy.","nodes":[{"pos":[0,31],"content":"The number of elements to copy.","nodes":[{"content":"The number of elements to copy.","pos":[0,31]}]}],"pos":[57383,57415],"yaml":true},{"content":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.","nodes":[{"pos":[0,139],"content":"The number of elements in the source array is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination array.","source":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array."}],"pos":[57582,57722],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[57824,57854],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>count</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,92],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>count</code> is less than zero."}],"pos":[57968,58067],"yaml":true},{"content":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.","nodes":[{"pos":[0,157],"content":"Copies the complete <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.","source":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index."}],"pos":[59605,59763],"yaml":true},{"content":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,106],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}],"pos":[59774,59881],"yaml":true,"extradata":"MT"},{"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"pos":[0,181],"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"content":"A one-dimensional array that is the destination of the elements copied from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,140],"source":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."},{"content":"The array must have zero-based indexing.","pos":[141,181]}]}],"pos":[60014,60196],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[60256,60324],"yaml":true},{"content":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.","nodes":[{"pos":[0,139],"content":"The number of elements in the source array is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination array.","source":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array."}],"pos":[60491,60631],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[60733,60763],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[60877,60915],"yaml":true},{"content":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the beginning of the target array.","nodes":[{"pos":[0,165],"content":"Copies the complete <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the target array.","source":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the beginning of the target array."}],"pos":[62393,62559],"yaml":true},{"content":"The indexing of `array` must be zero-based.","nodes":[{"pos":[0,43],"content":"The indexing of <ph id=\"ph1\">`array`</ph> must be zero-based.","source":"The indexing of `array` must be zero-based."}],"pos":[62570,62614],"yaml":true,"extradata":"MT"},{"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,140],"content":"A one-dimensional array that is the destination of the elements copied from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[62736,62877],"yaml":true},{"content":"The number of elements in the source <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> exceeds the number of elements that the destination array can contain.","nodes":[{"pos":[0,167],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> exceeds the number of elements that the destination array can contain.","source":"The number of elements in the source <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> exceeds the number of elements that the destination array can contain."}],"pos":[63044,63212],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[63314,63344],"yaml":true},{"content":"Gets the number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the number of elements in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[64785,64881],"yaml":true},{"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,59],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[64892,64952],"yaml":true,"extradata":"MT"},{"content":"The number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,90],"content":"The number of elements in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[65057,65148],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object that can be used to create a collection that contains individual sets.","nodes":[{"pos":[0,146],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object that can be used to create a collection that contains individual sets.","source":"Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object that can be used to create a collection that contains individual sets."}],"pos":[66740,66887],"yaml":true},{"content":"The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.  \n  \n Calling this method is an O(1) operation.","nodes":[{"pos":[0,192],"content":"The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.","pos":[0,192],"source":"The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing."}]},{"pos":[199,240],"content":"Calling this method is an O(1) operation.","nodes":[{"content":"Calling this method is an O(1) operation.","pos":[0,41]}]}],"pos":[66898,67143],"yaml":true,"extradata":"MT"},{"content":"A comparer for creating a collection of sets.","nodes":[{"pos":[0,45],"content":"A comparer for creating a collection of sets.","nodes":[{"content":"A comparer for creating a collection of sets.","pos":[0,45]}]}],"pos":[67436,67482],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object, according to a specified comparer, that can be used to create a collection that contains individual sets.","nodes":[{"pos":[0,182],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object, according to a specified comparer, that can be used to create a collection that contains individual sets.","source":"Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object, according to a specified comparer, that can be used to create a collection that contains individual sets."}],"pos":[68992,69175],"yaml":true},{"content":"The `memberEqualityComparer` and the current <xref:System.Collections.Generic.SortedSet%601> must have the same definition of equality.  \n  \n You can use the comparer returned by this method in the <xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=fullName> constructor to create a hash table of individual sets.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">`memberEqualityComparer`</ph> and the current <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> must have the same definition of equality.","source":"The `memberEqualityComparer` and the current <xref:System.Collections.Generic.SortedSet%601> must have the same definition of equality."},{"pos":[142,436],"content":"You can use the comparer returned by this method in the <xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=fullName> constructor to create a hash table of individual sets.","nodes":[{"content":"You can use the comparer returned by this method in the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=fullName&gt;</ph> constructor to create a hash table of individual sets.","pos":[0,294],"source":"You can use the comparer returned by this method in the <xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=fullName> constructor to create a hash table of individual sets."}]}],"pos":[69186,69627],"yaml":true,"extradata":"MT"},{"content":"The comparer to use for creating the returned comparer.","nodes":[{"pos":[0,55],"content":"The comparer to use for creating the returned comparer.","nodes":[{"content":"The comparer to use for creating the returned comparer.","pos":[0,55]}]}],"pos":[70563,70619],"yaml":true},{"content":"A comparer for creating a collection of sets.","nodes":[{"pos":[0,45],"content":"A comparer for creating a collection of sets.","nodes":[{"content":"A comparer for creating a collection of sets.","pos":[0,45]}]}],"pos":[70748,70794],"yaml":true},{"content":"Removes all elements that are in a specified collection from the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,140],"content":"Removes all elements that are in a specified collection from the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all elements that are in a specified collection from the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[72226,72367],"yaml":true},{"content":"This method removes any element in the current <xref:System.Collections.Generic.SortedSet%601> that is also in `other`. Duplicate values in `other` are ignored.  \n  \n This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.","nodes":[{"pos":[0,160],"content":"This method removes any element in the current <xref:System.Collections.Generic.SortedSet%601> that is also in `other`. Duplicate values in `other` are ignored.","nodes":[{"content":"This method removes any element in the current <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> that is also in <ph id=\"ph2\">`other`</ph>.","pos":[0,119],"source":"This method removes any element in the current <xref:System.Collections.Generic.SortedSet%601> that is also in `other`."},{"content":"Duplicate values in <ph id=\"ph1\">`other`</ph> are ignored.","pos":[120,160],"source":" Duplicate values in `other` are ignored."}]},{"pos":[167,264],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of elements in the <ph id=\"ph3\">`other`</ph> parameter.","source":"This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter."}],"pos":[72378,72647],"yaml":true,"extradata":"MT"},{"content":"The collection of items to remove from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,110],"content":"The collection of items to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection of items to remove from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[73410,73521],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[73700,73730],"yaml":true},{"content":"Returns an enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,108],"content":"Returns an enumerator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[75223,75332],"yaml":true},{"content":"Any changes to the <xref:System.Collections.Generic.SortedSet%601> will invalidate the enumerator.  \n  \n This method is an O(log n) operation.","nodes":[{"pos":[0,98],"content":"Any changes to the <xref:System.Collections.Generic.SortedSet%601> will invalidate the enumerator.","nodes":[{"content":"Any changes to the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> will invalidate the enumerator.","pos":[0,98],"source":"Any changes to the <xref:System.Collections.Generic.SortedSet%601> will invalidate the enumerator."}]},{"pos":[105,142],"content":"This method is an O(log n) operation.","nodes":[{"content":"This method is an O(log n) operation.","pos":[0,37]}]}],"pos":[75343,75490],"yaml":true,"extradata":"MT"},{"content":"An enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in sorted order.","nodes":[{"pos":[0,116],"content":"An enumerator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> in sorted order.","source":"An enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in sorted order."}],"pos":[75691,75808],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data that you must have to serialize a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,211],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface and returns the data that you must have to serialize a <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data that you must have to serialize a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[77771,77983],"yaml":true},{"content":"Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,114],"content":"Calling this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","source":"Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}],"pos":[77994,78109],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,208],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that contains the information that is required to serialize the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[78388,78597],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[78692,78925],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[79107,79136],"yaml":true},{"content":"Returns a view of a subset in a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,92],"content":"Returns a view of a subset in a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a view of a subset in a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[80364,80457],"yaml":true},{"content":"This method returns a view of the range of elements that fall between `lowerValue` and `upperValue`, as defined by the comparer. This method does not copy elements from the <xref:System.Collections.Generic.SortedSet%601>, but provides a window into the underlying <xref:System.Collections.Generic.SortedSet%601> itself. You can make changes in both the view and in the underlying <xref:System.Collections.Generic.SortedSet%601>.","nodes":[{"pos":[0,428],"content":"This method returns a view of the range of elements that fall between `lowerValue` and `upperValue`, as defined by the comparer. This method does not copy elements from the <xref:System.Collections.Generic.SortedSet%601>, but provides a window into the underlying <xref:System.Collections.Generic.SortedSet%601> itself. You can make changes in both the view and in the underlying <xref:System.Collections.Generic.SortedSet%601>.","nodes":[{"content":"This method returns a view of the range of elements that fall between <ph id=\"ph1\">`lowerValue`</ph> and <ph id=\"ph2\">`upperValue`</ph>, as defined by the comparer.","pos":[0,128],"source":"This method returns a view of the range of elements that fall between `lowerValue` and `upperValue`, as defined by the comparer."},{"content":"This method does not copy elements from the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, but provides a window into the underlying <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> itself.","pos":[129,319],"source":" This method does not copy elements from the <xref:System.Collections.Generic.SortedSet%601>, but provides a window into the underlying <xref:System.Collections.Generic.SortedSet%601> itself."},{"content":"You can make changes in both the view and in the underlying <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.","pos":[320,428],"source":" You can make changes in both the view and in the underlying <xref:System.Collections.Generic.SortedSet%601>."}]}],"pos":[80468,80897],"yaml":true,"extradata":"MT"},{"content":"The lowest desired value in the view.","nodes":[{"pos":[0,37],"content":"The lowest desired value in the view.","nodes":[{"content":"The lowest desired value in the view.","pos":[0,37]}]}],"pos":[81905,81943],"yaml":true},{"content":"The highest desired value in the view.","nodes":[{"pos":[0,38],"content":"The highest desired value in the view.","nodes":[{"content":"The highest desired value in the view.","pos":[0,38]}]}],"pos":[81997,82036],"yaml":true},{"content":"A subset view that contains only the values in the specified range.","nodes":[{"pos":[0,67],"content":"A subset view that contains only the values in the specified range.","nodes":[{"content":"A subset view that contains only the values in the specified range.","pos":[0,67]}]}],"pos":[82118,82186],"yaml":true},{"content":"<code>lowerValue</code> is more than <code>upperValue</code> according to the comparer.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">&lt;code&gt;lowerValue&lt;/code&gt;</ph> is more than <ph id=\"ph2\">&lt;code&gt;upperValue&lt;/code&gt;</ph> according to the comparer.","source":"<code>lowerValue</code> is more than <code>upperValue</code> according to the comparer."}],"pos":[82361,82449],"yaml":true},{"content":"A tried operation on the view was outside the range specified by <code>lowerValue</code> and <code>upperValue</code>.","nodes":[{"pos":[0,117],"content":"A tried operation on the view was outside the range specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">lowerValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">upperValue</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A tried operation on the view was outside the range specified by <code>lowerValue</code> and <code>upperValue</code>."}],"pos":[82563,82681],"yaml":true},{"content":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are also in a specified collection.","nodes":[{"pos":[0,162],"content":"Modifies the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object so that it contains only elements that are also in a specified collection.","source":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are also in a specified collection."}],"pos":[84348,84511],"yaml":true},{"content":"This method ignores any duplicate elements in `other`.  \n  \n If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"pos":[0,54],"content":"This method ignores any duplicate elements in <ph id=\"ph1\">`other`</ph>.","source":"This method ignores any duplicate elements in `other`."},{"pos":[61,487],"content":"If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"content":"If the collection represented by the <ph id=\"ph1\">`other`</ph> parameter is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,257],"source":"If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is <ph id=\"ph5\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id=\"ph6\">`m`</ph> is the number of elements in <ph id=\"ph7\">`other`</ph>.","pos":[258,426],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`."}]}],"pos":[84522,85014],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[85226,85335],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[85517,85547],"yaml":true},{"content":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of the specified collection.","nodes":[{"pos":[0,135],"content":"Determines whether a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a proper subset of the specified collection.","source":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of the specified collection."}],"pos":[87232,87368],"yaml":true},{"content":"An empty set is a proper subset of any other collection. Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty unless the `other` parameter is also an empty set.  \n  \n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than or equal to the number of elements in `other`.  \n  \n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, then this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"pos":[0,254],"content":"An empty set is a proper subset of any other collection. Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty unless the `other` parameter is also an empty set.","nodes":[{"content":"An empty set is a proper subset of any other collection.","pos":[0,56]},{"content":"Therefore, this method returns <ph id=\"ph1\">`true`</ph> if the collection represented by the current <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty unless the <ph id=\"ph3\">`other`</ph> parameter is also an empty set.","pos":[57,254],"source":" Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty unless the `other` parameter is also an empty set."}]},{"pos":[261,418],"content":"This method always returns <ph id=\"ph1\">`false`</ph> if <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id=\"ph3\">`other`</ph>.","source":"This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than or equal to the number of elements in `other`."},{"pos":[425,842],"content":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, then this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"content":"If the collection represented by <ph id=\"ph1\">`other`</ph> is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, then this method is an O(<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,248],"source":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, then this method is an O(`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is <ph id=\"ph5\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id=\"ph6\">`m`</ph> is the number of elements in <ph id=\"ph7\">`other`</ph>.","pos":[249,417],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`."}]}],"pos":[87379,88228],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[88435,88544],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of <code>other</code>; otherwise, `false`.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a proper subset of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of <code>other</code>; otherwise, `false`."}],"pos":[88602,88747],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[88932,88962],"yaml":true},{"content":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of the specified collection.","nodes":[{"pos":[0,137],"content":"Determines whether a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a proper superset of the specified collection.","source":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of the specified collection."}],"pos":[90676,90814],"yaml":true},{"content":"An empty set is a proper superset of any other collection. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.SortedSet%601> collection is also empty.  \n  \n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than or equal to the number of elements in `other`.  \n  \n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,253],"content":"An empty set is a proper superset of any other collection. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.SortedSet%601> collection is also empty.","nodes":[{"content":"An empty set is a proper superset of any other collection.","pos":[0,58]},{"content":"Therefore, this method returns <ph id=\"ph1\">`true`</ph> if the collection represented by the <ph id=\"ph2\">`other`</ph> parameter is empty unless the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection is also empty.","pos":[59,253],"source":" Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.SortedSet%601> collection is also empty."}]},{"pos":[260,414],"content":"This method always returns <ph id=\"ph1\">`false`</ph> if <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id=\"ph3\">`other`</ph>.","source":"This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than or equal to the number of elements in `other`."},{"pos":[421,833],"content":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"content":"If the collection represented by <ph id=\"ph1\">`other`</ph> is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,243],"source":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is the number of elements in <ph id=\"ph5\">`other`</ph> and <ph id=\"ph6\">`m`</ph> is <ph id=\"ph7\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","pos":[244,412],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}]}],"pos":[90825,91665],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[91874,91983],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of <code>other</code>; otherwise, `false`.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a proper superset of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of <code>other</code>; otherwise, `false`."}],"pos":[92041,92188],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[92375,92405],"yaml":true},{"content":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of the specified collection.","nodes":[{"pos":[0,128],"content":"Determines whether a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a subset of the specified collection.","source":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of the specified collection."}],"pos":[94071,94200],"yaml":true},{"content":"An empty set is a subset of any other collection, including an empty set; therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty, even if the `other` parameter is an empty set.  \n  \n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than the number of elements in `other`.  \n  \n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"pos":[0,268],"content":"An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id=\"ph1\">`true`</ph> if the collection represented by the current <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty, even if the <ph id=\"ph3\">`other`</ph> parameter is an empty set.","source":"An empty set is a subset of any other collection, including an empty set; therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty, even if the `other` parameter is an empty set."},{"pos":[275,420],"content":"This method always returns <ph id=\"ph1\">`false`</ph> if <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id=\"ph3\">`other`</ph>.","source":"This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than the number of elements in `other`."},{"pos":[427,839],"content":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.","nodes":[{"content":"If the collection represented by <ph id=\"ph1\">`other`</ph> is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,243],"source":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is <ph id=\"ph5\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id=\"ph6\">`m`</ph> is the number of elements in <ph id=\"ph7\">`other`</ph>.","pos":[244,412],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`."}]}],"pos":[94211,95057],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[95258,95367],"yaml":true},{"content":"`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of <code>other</code>; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a subset of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of <code>other</code>; otherwise, `false`."}],"pos":[95425,95571],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[95750,95780],"yaml":true},{"content":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of the specified collection.","nodes":[{"pos":[0,130],"content":"Determines whether a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a superset of the specified collection.","source":"Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of the specified collection."}],"pos":[97458,97589],"yaml":true},{"content":"All collections, including the empty set, are supersets of the empty set. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.SortedSet%601> object is empty.  \n  \n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than the number of elements in `other`.  \n  \n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,261],"content":"All collections, including the empty set, are supersets of the empty set. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.SortedSet%601> object is empty.","nodes":[{"content":"All collections, including the empty set, are supersets of the empty set.","pos":[0,73]},{"content":"Therefore, this method returns <ph id=\"ph1\">`true`</ph> if the collection represented by the <ph id=\"ph2\">`other`</ph> parameter is empty, even if the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty.","pos":[74,261],"source":" Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.SortedSet%601> object is empty."}]},{"pos":[268,410],"content":"This method always returns <ph id=\"ph1\">`false`</ph> if <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id=\"ph3\">`other`</ph>.","source":"This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than the number of elements in `other`."},{"pos":[417,829],"content":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"content":"If the collection represented by <ph id=\"ph1\">`other`</ph> is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,243],"source":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is the number of elements in <ph id=\"ph5\">`other`</ph> and <ph id=\"ph6\">`m`</ph> is <ph id=\"ph7\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","pos":[244,412],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}]}],"pos":[97600,98436],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[98639,98748],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of <code>other</code>; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is a superset of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of <code>other</code>; otherwise, `false`."}],"pos":[98806,98946],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[99127,99157],"yaml":true},{"content":"Gets the maximum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer.","nodes":[{"pos":[0,118],"content":"Gets the maximum value in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>, as defined by the comparer.","source":"Gets the maximum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer."}],"pos":[100586,100705],"yaml":true},{"content":"The maximum value in the set.","nodes":[{"pos":[0,29],"content":"The maximum value in the set.","nodes":[{"content":"The maximum value in the set.","pos":[0,29]}]}],"pos":[100795,100825],"yaml":true},{"content":"Gets the minimum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer.","nodes":[{"pos":[0,118],"content":"Gets the minimum value in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>, as defined by the comparer.","source":"Gets the minimum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer."}],"pos":[102327,102446],"yaml":true},{"content":"The minimum value in the set.","nodes":[{"pos":[0,29],"content":"The minimum value in the set.","nodes":[{"content":"The minimum value in the set.","pos":[0,29]}]}],"pos":[102536,102566],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and raises the deserialization event when the deserialization is completed.","nodes":[{"pos":[0,165],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and raises the deserialization event when the deserialization is completed."}],"pos":[104219,104385],"yaml":true},{"content":"Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,114],"content":"Calling this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","source":"Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}],"pos":[104396,104511],"yaml":true,"extradata":"MT"},{"content":"The source of the deserialization event.","nodes":[{"pos":[0,40],"content":"The source of the deserialization event.","nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]}],"pos":[104670,104711],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is invalid.","nodes":[{"pos":[0,185],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is invalid.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is invalid."}],"pos":[104943,105129],"yaml":true},{"content":"Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and a specified collection share common elements.","nodes":[{"pos":[0,147],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object and a specified collection share common elements.","source":"Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and a specified collection share common elements."}],"pos":[106462,106610],"yaml":true},{"content":"Any duplicate elements in `other` are ignored.  \n  \n This method is an O(`n`) operation, where `n` is the number of elements in `other`.","nodes":[{"pos":[0,46],"content":"Any duplicate elements in <ph id=\"ph1\">`other`</ph> are ignored.","source":"Any duplicate elements in `other` are ignored."},{"pos":[53,136],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of elements in <ph id=\"ph3\">`other`</ph>.","source":"This method is an O(`n`) operation, where `n` is the number of elements in `other`."}],"pos":[106621,106762],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[106961,107070],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and <code>other</code> share at least one common element; otherwise, `false`.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> share at least one common element; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and <code>other</code> share at least one common element; otherwise, `false`."}],"pos":[107128,107289],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[107466,107496],"yaml":true},{"content":"Removes a specified item from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,94],"content":"Removes a specified item from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes a specified item from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[108962,109057],"yaml":true},{"content":"If the <xref:System.Collections.Generic.SortedSet%601> object does not contain the specified element, the object remains unchanged and no exception is thrown.  \n  \n `item` can be `null` for reference types.  \n  \n This method is an O(log n) operation.","nodes":[{"pos":[0,158],"content":"If the <xref:System.Collections.Generic.SortedSet%601> object does not contain the specified element, the object remains unchanged and no exception is thrown.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged and no exception is thrown.","pos":[0,158],"source":"If the <xref:System.Collections.Generic.SortedSet%601> object does not contain the specified element, the object remains unchanged and no exception is thrown."}]},{"pos":[165,206],"content":"<ph id=\"ph1\">`item`</ph> can be <ph id=\"ph2\">`null`</ph> for reference types.","source":"`item` can be `null` for reference types."},{"pos":[213,250],"content":"This method is an O(log n) operation.","nodes":[{"content":"This method is an O(log n) operation.","pos":[0,37]}]}],"pos":[109068,109325],"yaml":true,"extradata":"MT"},{"content":"The element to remove.","nodes":[{"pos":[0,22],"content":"The element to remove.","nodes":[{"content":"The element to remove.","pos":[0,22]}]}],"pos":[109441,109464],"yaml":true},{"content":"`true` if the element is found and successfully removed; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the element is found and successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element is found and successfully removed; otherwise, `false`."}],"pos":[109522,109601],"yaml":true},{"content":"Removes all elements that match the conditions defined by the specified predicate from a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.","nodes":[{"pos":[0,149],"content":"Removes all elements that match the conditions defined by the specified predicate from a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all elements that match the conditions defined by the specified predicate from a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."}],"pos":[111260,111410],"yaml":true},{"content":"`match` must not modify the <xref:System.Collections.Generic.SortedSet%601>. Doing so can cause unexpected results.  \n  \n Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,115],"content":"`match` must not modify the <xref:System.Collections.Generic.SortedSet%601>. Doing so can cause unexpected results.","nodes":[{"content":"<ph id=\"ph1\">`match`</ph> must not modify the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.","pos":[0,76],"source":"`match` must not modify the <xref:System.Collections.Generic.SortedSet%601>."},{"content":"Doing so can cause unexpected results.","pos":[77,115]}]},{"pos":[122,236],"content":"Calling this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","source":"Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}],"pos":[111421,111662],"yaml":true,"extradata":"MT"},{"content":"The delegate that defines the conditions of the elements to remove.","nodes":[{"pos":[0,67],"content":"The delegate that defines the conditions of the elements to remove.","nodes":[{"content":"The delegate that defines the conditions of the elements to remove.","pos":[0,67]}]}],"pos":[112662,112730],"yaml":true},{"content":"The number of elements that were removed from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> collection..","nodes":[{"pos":[0,122],"content":"The number of elements that were removed from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> collection..","source":"The number of elements that were removed from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> collection.."}],"pos":[112786,112909],"yaml":true},{"content":"<code>match</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;match&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>match</code> is `null`."}],"pos":[113089,113119],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order.","nodes":[{"pos":[0,173],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> that iterates over the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> in reverse order.","source":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order."}],"pos":[114576,114750],"yaml":true},{"content":"An enumerator that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order.","nodes":[{"pos":[0,114],"content":"An enumerator that iterates over the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> in reverse order.","source":"An enumerator that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order."}],"pos":[114937,115052],"yaml":true},{"content":"Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and the specified collection contain the same elements.","nodes":[{"pos":[0,153],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object and the specified collection contain the same elements.","source":"Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and the specified collection contain the same elements."}],"pos":[116772,116926],"yaml":true},{"content":"This method ignores the order of elements and any duplicate elements in `other`.  \n  \n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(log`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,80],"content":"This method ignores the order of elements and any duplicate elements in <ph id=\"ph1\">`other`</ph>.","source":"This method ignores the order of elements and any duplicate elements in `other`."},{"pos":[87,502],"content":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(log`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"content":"If the collection represented by <ph id=\"ph1\">`other`</ph> is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(log<ph id=\"ph4\">`n`</ph>) operation.","pos":[0,246],"source":"If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(log`n`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is the number of elements in <ph id=\"ph5\">`other`</ph> and <ph id=\"ph6\">`m`</ph> is <ph id=\"ph7\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","pos":[247,415],"source":" Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}]}],"pos":[116937,117444],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[117644,117753],"yaml":true},{"content":"`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is equal to <code>other</code>; otherwise, false.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object is equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, false.","source":"`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is equal to <code>other</code>; otherwise, false."}],"pos":[117811,117952],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[118130,118160],"yaml":true},{"content":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.","nodes":[{"pos":[0,213],"content":"Modifies the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.","source":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are present either in the current object or in the specified collection, but not both."}],"pos":[119880,120094],"yaml":true},{"content":"Any duplicate elements in `other` are ignored.  \n  \n If the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(n log `m`) operation. Otherwise, this method is an O(`n` log `m`) + O(`n` log `n`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"pos":[0,46],"content":"Any duplicate elements in <ph id=\"ph1\">`other`</ph> are ignored.","source":"Any duplicate elements in `other` are ignored."},{"pos":[53,474],"content":"If the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(n log `m`) operation. Otherwise, this method is an O(`n` log `m`) + O(`n` log `n`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.","nodes":[{"content":"If the <ph id=\"ph1\">`other`</ph> parameter is a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id=\"ph3\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(n log <ph id=\"ph4\">`m`</ph>) operation.","pos":[0,233],"source":"If the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(n log `m`) operation."},{"content":"Otherwise, this method is an O(<ph id=\"ph1\">`n`</ph> log <ph id=\"ph2\">`m`</ph>) + O(<ph id=\"ph3\">`n`</ph> log <ph id=\"ph4\">`n`</ph>) operation, where <ph id=\"ph5\">`n`</ph> is the number of elements in <ph id=\"ph6\">`other`</ph> and <ph id=\"ph7\">`m`</ph> is <ph id=\"ph8\">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.","pos":[234,421],"source":" Otherwise, this method is an O(`n` log `m`) + O(`n` log `n`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>."}]}],"pos":[120105,120584],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[120794,120903],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[121091,121121],"yaml":true},{"content":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains all elements that are present in either the current object or the specified collection.","nodes":[{"pos":[0,195],"content":"Modifies the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object so that it contains all elements that are present in either the current object or the specified collection.","source":"Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains all elements that are present in either the current object or the specified collection."}],"pos":[123726,123922],"yaml":true},{"content":"Any duplicate elements in `other` are ignored.","nodes":[{"pos":[0,46],"content":"Any duplicate elements in <ph id=\"ph1\">`other`</ph> are ignored.","source":"Any duplicate elements in `other` are ignored."}],"pos":[123933,123980],"yaml":true,"extradata":"MT"},{"content":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.","nodes":[{"pos":[0,108],"content":"The collection to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object."}],"pos":[124180,124289],"yaml":true},{"content":"<code>other</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>other</code> is `null`."}],"pos":[124467,124497],"yaml":true},{"content":"Adds an item to an <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object.","nodes":[{"pos":[0,88],"content":"Adds an item to an <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds an item to an <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object."}],"pos":[126130,126219],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.  \n  \n If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation. If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>.","nodes":[{"pos":[0,220],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,220],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,220],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]},{"pos":[227,557],"content":"If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation. If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id=\"ph2\">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.","pos":[0,157],"source":"If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation."},{"content":"If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.","pos":[158,330],"source":" If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>."}]}],"pos":[126230,126792],"yaml":true,"extradata":"MT"},{"content":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object.","nodes":[{"pos":[0,94],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object."}],"pos":[126913,127008],"yaml":true},{"content":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only."}],"pos":[127222,127302],"yaml":true},{"content":"Gets a value that indicates whether a <xref href=\"System.Collections.ICollection\"></xref> is read-only.","nodes":[{"pos":[0,103],"content":"Gets a value that indicates whether a <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value that indicates whether a <xref href=\"System.Collections.ICollection\"></xref> is read-only."}],"pos":[128958,129062],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.  \n  \n A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n Getting the value of this property is an O(1) operation.","nodes":[{"pos":[0,220],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,220],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,220],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]},{"pos":[227,356],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]},{"pos":[363,581],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[588,644],"content":"Getting the value of this property is an O(1) operation.","nodes":[{"content":"Getting the value of this property is an O(1) operation.","pos":[0,56]}]}],"pos":[129073,129726],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection is read-only; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the collection is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is read-only; otherwise, `false`."}],"pos":[129874,129935],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[131698,131756],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","nodes":[{"pos":[0,220],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","pos":[0,220],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.","pos":[60,220],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface."}]}]}],"pos":[131767,131988],"yaml":true,"extradata":"MT"},{"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"pos":[0,65],"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]}],"pos":[132189,132255],"yaml":true},{"content":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.","nodes":[{"pos":[0,157],"content":"Copies the complete <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.","source":"Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index."}],"pos":[134091,134249],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,208],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,208],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,208],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[134260,134469],"yaml":true,"extradata":"MT"},{"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"pos":[0,181],"content":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.","nodes":[{"content":"A one-dimensional array that is the destination of the elements copied from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,140],"source":"A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>."},{"content":"The array must have zero-based indexing.","pos":[141,181]}]}],"pos":[134618,134800],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[134860,134928],"yaml":true},{"content":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.","nodes":[{"pos":[0,139],"content":"The number of elements in the source array is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination array.","source":"The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array."}],"pos":[135126,135266],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[135368,135398],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[135512,135550],"yaml":true},{"content":"Gets a value that indicates whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,132],"content":"Gets a value that indicates whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value that indicates whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe)."}],"pos":[137188,137321],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,208],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,208],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,208],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[137332,137541],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized; otherwise, `false`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized; otherwise, `false`."}],"pos":[137682,137797],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,113],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[139477,139591],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,208],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,208],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,208],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]},{"pos":[215,248],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[139602,139855],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>. In the default implementation of <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\"></xref>, this property always returns the current instance.","nodes":[{"pos":[0,268],"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>. In the default implementation of <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\"></xref>, this property always returns the current instance.","nodes":[{"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,108],"source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\"&gt;&lt;/xref&gt;</ph>, this property always returns the current instance.","pos":[109,268],"source":" In the default implementation of <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\"></xref>, this property always returns the current instance."}]}],"pos":[139991,140260],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[141968,142026],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,208],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,208],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[60,208],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[215,248],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[142037,142290],"yaml":true,"extradata":"MT"},{"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"pos":[0,65],"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]}],"pos":[142467,142533],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface, and raises the deserialization event when the deserialization is completed.","nodes":[{"pos":[0,176],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.IDeserializationCallback\"&gt;&lt;/xref&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.","source":"Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface, and raises the deserialization event when the deserialization is completed."}],"pos":[144478,144655],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.","nodes":[{"pos":[0,231],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.","pos":[0,231],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface.","pos":[60,231],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface."}]}]}],"pos":[144666,144898],"yaml":true,"extradata":"MT"},{"content":"The source of the deserialization event.","nodes":[{"pos":[0,40],"content":"The source of the deserialization event.","nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]}],"pos":[145064,145105],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance is invalid.","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> instance is invalid.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance is invalid."}],"pos":[145391,145579],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and returns the data that you need to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.","nodes":[{"pos":[0,211],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface, and returns the data that you need to serialize the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and returns the data that you need to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance."}],"pos":[147340,147552],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"pos":[0,220],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","pos":[0,220],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.","pos":[60,220],"source":" It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface."}]}]}],"pos":[147563,147784],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.","nodes":[{"pos":[0,210],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that contains the information that is required to serialize the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance."}],"pos":[148059,148270],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.","nodes":[{"pos":[0,234],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.SortedSet`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance."}],"pos":[148365,148600],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[148825,148854],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.SortedSet`1\n  commentId: T:System.Collections.Generic.SortedSet`1\n  id: SortedSet`1\n  children:\n  - System.Collections.Generic.SortedSet`1.#ctor\n  - System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.SortedSet`1.Add(`0)\n  - System.Collections.Generic.SortedSet`1.Clear\n  - System.Collections.Generic.SortedSet`1.Comparer\n  - System.Collections.Generic.SortedSet`1.Contains(`0)\n  - System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.SortedSet`1.CopyTo(`0[])\n  - System.Collections.Generic.SortedSet`1.Count\n  - System.Collections.Generic.SortedSet`1.CreateSetComparer\n  - System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.GetEnumerator\n  - System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)\n  - System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.Max\n  - System.Collections.Generic.SortedSet`1.Min\n  - System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)\n  - System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.Remove(`0)\n  - System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})\n  - System.Collections.Generic.SortedSet`1.Reverse\n  - System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)\n  - System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: SortedSet<T>\n  nameWithType: SortedSet<T>\n  fullName: System.Collections.Generic.SortedSet<T>\n  type: Class\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Represents a collection of objects that is maintained in sorted order.\n  remarks: \"A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted. Duplicate elements are not allowed. Changing the sort values of existing items is not supported and may lead to unexpected behavior.  \\n  \\n For a thread safe alternative to <xref:System.Collections.Generic.SortedSet%601>, see <xref:System.Collections.Immutable.ImmutableSortedSet%601>\"\n  example:\n  - \"The following example demonstrates a <xref:System.Collections.Generic.SortedSet%601> class that is created with the constructor that takes an <xref:System.Collections.Generic.IComparer%601> as a parameter. This comparer (`ByFileExtension`) is used to sort a list of file names by their extensions.  \\n  \\n This example demonstrates how to create a sorted set of media file names, remove unwanted elements, view a range of elements, and compare the set with another sorted set.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#1)]\\n [!code-vb[System.Collections.Generic.SortedSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#1)]\"\n  syntax:\n    content: 'public class SortedSet<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.ISet<T>, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n    typeParameters:\n    - id: T\n      description: The type of elements in the set.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{T}\n  - System.Collections.Generic.IEnumerable{T}\n  - System.Collections.Generic.IReadOnlyCollection{T}\n  - System.Collections.Generic.ISet{T}\n  - System.Collections.ICollection\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.#ctor\n  commentId: M:System.Collections.Generic.SortedSet`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SortedSet<T>()\n  nameWithType: SortedSet<T>.SortedSet<T>()\n  fullName: SortedSet<T>.SortedSet<T>()\n  type: Constructor\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class.\n  syntax:\n    content: public SortedSet ();\n    parameters: []\n  overload: System.Collections.Generic.SortedSet`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SortedSet<T>(IComparer<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IComparer<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IComparer<T>)\n  type: Constructor\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that uses a specified comparer.\n  remarks: If `comparer` does not implement <xref:System.IComparable%601>, you must specify an <xref:System.Collections.Generic.IComparer%601> object to be used.\n  example:\n  - \"The following example defines a comparer (`ByFileExtension`) that is used to construct a sorted set that sorts file names by their extensions. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#2)]\\n [!code-vb[System.Collections.Generic.SortedSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#2)]  \\n[!code-csharp[System.Collections.Generic.SortedSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#9)]\\n[!code-vb[System.Collections.Generic.SortedSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#9)]\"\n  syntax:\n    content: public SortedSet (System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: The default comparer to use for comparing objects.\n  overload: System.Collections.Generic.SortedSet`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>comparer</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SortedSet<T>(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IEnumerable<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection.\n  remarks: \"Duplicate elements in the enumerable collection are not copied into the new instance of the <xref:System.Collections.Generic.SortedSet%601> class, and no exceptions are thrown.  \\n  \\n This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in the `collection` parameter.\"\n  syntax:\n    content: public SortedSet (System.Collections.Generic.IEnumerable<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: The enumerable collection to be copied.\n  overload: System.Collections.Generic.SortedSet`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SortedSet<T>(IEnumerable<T>, IComparer<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IEnumerable<T>, IComparer<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IEnumerable<T>, IComparer<T>)\n  type: Constructor\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.\n  syntax:\n    content: public SortedSet (System.Collections.Generic.IEnumerable<T> collection, System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: The enumerable collection to be copied.\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: The default comparer to use for comparing objects.\n  overload: System.Collections.Generic.SortedSet`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>collection</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SortedSet<T>(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.SortedSet<T>(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.SortedSet<T>(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> class that contains serialized data.\n  remarks: This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.\n  syntax:\n    content: protected SortedSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Add(`0)\n  commentId: M:System.Collections.Generic.SortedSet`1.Add(`0)\n  id: Add(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: SortedSet<T>.Add(T)\n  fullName: SortedSet<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Adds an element to the set and returns a value that indicates if it was successfully added.\n  remarks: \"The <xref:System.Collections.Generic.SortedSet%601> class does not accept duplicate elements. If `item` is already in the set, this method returns `false` and does not throw an exception.  \\n  \\n If <xref:System.Collections.Generic.SortedSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.SortedSet%601> object, the capacity is automatically adjusted to accommodate the new item.\"\n  example:\n  - \"The following example adds elements to a sorted set. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#3)]\\n [!code-vb[System.Collections.Generic.SortedSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#3)]\"\n  syntax:\n    content: public bool Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The element to add to the set.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> is added to the set; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Clear\n  commentId: M:System.Collections.Generic.SortedSet`1.Clear\n  id: Clear\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: SortedSet<T>.Clear()\n  fullName: SortedSet<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Removes all elements from the set.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Collections.Generic.SortedSet`1.Clear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Comparer\n  commentId: P:System.Collections.Generic.SortedSet`1.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Comparer\n  nameWithType: SortedSet<T>.Comparer\n  fullName: SortedSet<T>.Comparer\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the <xref href=\"System.Collections.Generic.IComparer`1\"></xref> object that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: \"The returned comparer can be either the default comparer of the type for a <xref:System.Collections.Generic.SortedSet%601>, or the comparer used for its constructor.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public System.Collections.Generic.IComparer<T> Comparer { get; }\n    return:\n      type: System.Collections.Generic.IComparer`1\n      description: The comparer that is used to order the values in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  overload: System.Collections.Generic.SortedSet`1.Comparer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Contains(`0)\n  commentId: M:System.Collections.Generic.SortedSet`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: SortedSet<T>.Contains(T)\n  fullName: SortedSet<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether the set contains a specific element.\n  remarks: This method is an O(ln n) operation.\n  syntax:\n    content: public virtual bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The element to locate in the set.\n    return:\n      type: System.Boolean\n      description: '`true` if the set contains <code>item</code>; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  commentId: M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  id: CopyTo(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[], Int32, Int32)\n  nameWithType: SortedSet<T>.CopyTo(T[], Int32, Int32)\n  fullName: SortedSet<T>.CopyTo(T[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Copies a specified number of elements from <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.\n  remarks: This method is an O(`n`) operation, where `n` is `count`.\n  syntax:\n    content: public void CopyTo (T[] array, int index, int count);\n    parameters:\n    - id: array\n      type: T[]\n      description: A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n    - id: count\n      type: System.Int32\n      description: The number of elements to copy.\n  overload: System.Collections.Generic.SortedSet`1.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than zero.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[], Int32)\n  nameWithType: SortedSet<T>.CopyTo(T[], Int32)\n  fullName: SortedSet<T>.CopyTo(T[], Int32)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.Generic.SortedSet`1.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[])\n  commentId: M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])\n  id: CopyTo(`0[])\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[])\n  nameWithType: SortedSet<T>.CopyTo(T[])\n  fullName: SortedSet<T>.CopyTo(T[])\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the beginning of the target array.\n  remarks: The indexing of `array` must be zero-based.\n  syntax:\n    content: public void CopyTo (T[] array);\n    parameters:\n    - id: array\n      type: T[]\n      description: A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  overload: System.Collections.Generic.SortedSet`1.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> exceeds the number of elements that the destination array can contain.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Count\n  commentId: P:System.Collections.Generic.SortedSet`1.Count\n  id: Count\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SortedSet<T>.Count\n  fullName: SortedSet<T>.Count\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  overload: System.Collections.Generic.SortedSet`1.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.CreateSetComparer\n  commentId: M:System.Collections.Generic.SortedSet`1.CreateSetComparer\n  id: CreateSetComparer\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: CreateSetComparer()\n  nameWithType: SortedSet<T>.CreateSetComparer()\n  fullName: SortedSet<T>.CreateSetComparer()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object that can be used to create a collection that contains individual sets.\n  remarks: \"The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.  \\n  \\n Calling this method is an O(1) operation.\"\n  syntax:\n    content: public static System.Collections.Generic.IEqualityComparer<System.Collections.Generic.SortedSet<T>> CreateSetComparer ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.SortedSet{T}}\n      description: A comparer for creating a collection of sets.\n  overload: System.Collections.Generic.SortedSet`1.CreateSetComparer*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})\n  id: CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: CreateSetComparer(IEqualityComparer<T>)\n  nameWithType: SortedSet<T>.CreateSetComparer(IEqualityComparer<T>)\n  fullName: SortedSet<T>.CreateSetComparer(IEqualityComparer<T>)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Returns an <xref href=\"System.Collections.IEqualityComparer\"></xref> object, according to a specified comparer, that can be used to create a collection that contains individual sets.\n  remarks: \"The `memberEqualityComparer` and the current <xref:System.Collections.Generic.SortedSet%601> must have the same definition of equality.  \\n  \\n You can use the comparer returned by this method in the <xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=fullName> constructor to create a hash table of individual sets.\"\n  example:\n  - \"The following example uses the <xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A> method to create a set of sets. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#7)]\\n [!code-vb[System.Collections.Generic.SortedSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#7)]\"\n  syntax:\n    content: public static System.Collections.Generic.IEqualityComparer<System.Collections.Generic.SortedSet<T>> CreateSetComparer (System.Collections.Generic.IEqualityComparer<T> memberEqualityComparer);\n    parameters:\n    - id: memberEqualityComparer\n      type: System.Collections.Generic.IEqualityComparer`1\n      description: The comparer to use for creating the returned comparer.\n    return:\n      type: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.SortedSet{T}}\n      description: A comparer for creating a collection of sets.\n  overload: System.Collections.Generic.SortedSet`1.CreateSetComparer*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  id: ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ExceptWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.ExceptWith(IEnumerable<T>)\n  fullName: SortedSet<T>.ExceptWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Removes all elements that are in a specified collection from the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  remarks: \"This method removes any element in the current <xref:System.Collections.Generic.SortedSet%601> that is also in `other`. Duplicate values in `other` are ignored.  \\n  \\n This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.\"\n  example:\n  - \"The following example removes elements from a sorted set that are duplicated in another sorted set. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#6)]\\n [!code-vb[System.Collections.Generic.SortedSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#6)]\"\n  syntax:\n    content: public void ExceptWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection of items to remove from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.ExceptWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.GetEnumerator\n  commentId: M:System.Collections.Generic.SortedSet`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SortedSet<T>.GetEnumerator()\n  fullName: SortedSet<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns an enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: \"Any changes to the <xref:System.Collections.Generic.SortedSet%601> will invalidate the enumerator.  \\n  \\n This method is an O(log n) operation.\"\n  syntax:\n    content: public System.Collections.Generic.SortedSet<T>.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.SortedSet{T}\n      description: An enumerator that iterates through the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in sorted order.\n  overload: System.Collections.Generic.SortedSet`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data that you must have to serialize a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  remarks: Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\n  syntax:\n    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)\n  commentId: M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)\n  id: GetViewBetween(`0,`0)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: GetViewBetween(T, T)\n  nameWithType: SortedSet<T>.GetViewBetween(T, T)\n  fullName: SortedSet<T>.GetViewBetween(T, T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns a view of a subset in a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: This method returns a view of the range of elements that fall between `lowerValue` and `upperValue`, as defined by the comparer. This method does not copy elements from the <xref:System.Collections.Generic.SortedSet%601>, but provides a window into the underlying <xref:System.Collections.Generic.SortedSet%601> itself. You can make changes in both the view and in the underlying <xref:System.Collections.Generic.SortedSet%601>.\n  example:\n  - \"The following example uses the <xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A> method to list only the AVI files from a sorted set of media file names. The comparer evaluates file names according to their extensions. The `lowerValue` is \\\"AVI\\\" and the `upperValue` is only one value higher, \\\"AVJ\\\", to get the view of all AVI files. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#5)]\\n [!code-vb[System.Collections.Generic.SortedSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#5)]\"\n  syntax:\n    content: public virtual System.Collections.Generic.SortedSet<T> GetViewBetween (T lowerValue, T upperValue);\n    parameters:\n    - id: lowerValue\n      type: T\n      description: The lowest desired value in the view.\n    - id: upperValue\n      type: T\n      description: The highest desired value in the view.\n    return:\n      type: System.Collections.Generic.SortedSet`1\n      description: A subset view that contains only the values in the specified range.\n  overload: System.Collections.Generic.SortedSet`1.GetViewBetween*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>lowerValue</code> is more than <code>upperValue</code> according to the comparer.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: A tried operation on the view was outside the range specified by <code>lowerValue</code> and <code>upperValue</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  id: IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IntersectWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IntersectWith(IEnumerable<T>)\n  fullName: SortedSet<T>.IntersectWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are also in a specified collection.\n  remarks: \"This method ignores any duplicate elements in `other`.  \\n  \\n If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.\"\n  syntax:\n    content: public virtual void IntersectWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.IntersectWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IsProperSubsetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of the specified collection.\n  remarks: \"An empty set is a proper subset of any other collection. Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty unless the `other` parameter is also an empty set.  \\n  \\n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than or equal to the number of elements in `other`.  \\n  \\n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, then this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.\"\n  syntax:\n    content: public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper subset of <code>other</code>; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.IsProperSubsetOf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IsProperSupersetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of the specified collection.\n  remarks: \"An empty set is a proper superset of any other collection. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.SortedSet%601> collection is also empty.  \\n  \\n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than or equal to the number of elements in `other`.  \\n  \\n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\"\n  syntax:\n    content: public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a proper superset of <code>other</code>; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.IsProperSupersetOf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IsSubsetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsSubsetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsSubsetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of the specified collection.\n  remarks: \"An empty set is a subset of any other collection, including an empty set; therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty, even if the `other` parameter is an empty set.  \\n  \\n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than the number of elements in `other`.  \\n  \\n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.\"\n  syntax:\n    content: public bool IsSubsetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a subset of <code>other</code>; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  id: IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IsSupersetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsSupersetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsSupersetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of the specified collection.\n  remarks: \"All collections, including the empty set, are supersets of the empty set. Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.SortedSet%601> object is empty.  \\n  \\n This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than the number of elements in `other`.  \\n  \\n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\"\n  syntax:\n    content: public bool IsSupersetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is a superset of <code>other</code>; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.IsSupersetOf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Max\n  commentId: P:System.Collections.Generic.SortedSet`1.Max\n  id: Max\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Max\n  nameWithType: SortedSet<T>.Max\n  fullName: SortedSet<T>.Max\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the maximum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer.\n  syntax:\n    content: public T Max { get; }\n    return:\n      type: T\n      description: The maximum value in the set.\n  overload: System.Collections.Generic.SortedSet`1.Max*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Min\n  commentId: P:System.Collections.Generic.SortedSet`1.Min\n  id: Min\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Min\n  nameWithType: SortedSet<T>.Min\n  fullName: SortedSet<T>.Min\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the minimum value in the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>, as defined by the comparer.\n  syntax:\n    content: public T Min { get; }\n    return:\n      type: T\n      description: The minimum value in the set.\n  overload: System.Collections.Generic.SortedSet`1.Min*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)\n  commentId: M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: SortedSet<T>.OnDeserialization(Object)\n  fullName: SortedSet<T>.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and raises the deserialization event when the deserialization is completed.\n  remarks: Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\n  syntax:\n    content: protected virtual void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Collections.Generic.SortedSet`1.OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  id: Overlaps(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Overlaps(IEnumerable<T>)\n  nameWithType: SortedSet<T>.Overlaps(IEnumerable<T>)\n  fullName: SortedSet<T>.Overlaps(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and a specified collection share common elements.\n  remarks: \"Any duplicate elements in `other` are ignored.  \\n  \\n This method is an O(`n`) operation, where `n` is the number of elements in `other`.\"\n  syntax:\n    content: public bool Overlaps (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and <code>other</code> share at least one common element; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.Overlaps*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Remove(`0)\n  commentId: M:System.Collections.Generic.SortedSet`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: SortedSet<T>.Remove(T)\n  fullName: SortedSet<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Removes a specified item from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: \"If the <xref:System.Collections.Generic.SortedSet%601> object does not contain the specified element, the object remains unchanged and no exception is thrown.  \\n  \\n `item` can be `null` for reference types.  \\n  \\n This method is an O(log n) operation.\"\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The element to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the element is found and successfully removed; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})\n  id: RemoveWhere(System.Predicate{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: RemoveWhere(Predicate<T>)\n  nameWithType: SortedSet<T>.RemoveWhere(Predicate<T>)\n  fullName: SortedSet<T>.RemoveWhere(Predicate<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Removes all elements that match the conditions defined by the specified predicate from a <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>.\n  remarks: \"`match` must not modify the <xref:System.Collections.Generic.SortedSet%601>. Doing so can cause unexpected results.  \\n  \\n Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\"\n  example:\n  - \"The following example removes unwanted elements from a sorted set. This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.  \\n  \\n [!code-csharp[System.Collections.Generic.SortedSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#4)]\\n [!code-vb[System.Collections.Generic.SortedSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#4)]  \\n[!code-csharp[System.Collections.Generic.SortedSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#8)]\\n[!code-vb[System.Collections.Generic.SortedSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#8)]\"\n  syntax:\n    content: public int RemoveWhere (Predicate<T> match);\n    parameters:\n    - id: match\n      type: System.Predicate`1\n      description: The delegate that defines the conditions of the elements to remove.\n    return:\n      type: System.Int32\n      description: The number of elements that were removed from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> collection..\n  overload: System.Collections.Generic.SortedSet`1.RemoveWhere*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>match</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.Reverse\n  commentId: M:System.Collections.Generic.SortedSet`1.Reverse\n  id: Reverse\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: Reverse()\n  nameWithType: SortedSet<T>.Reverse()\n  fullName: SortedSet<T>.Reverse()\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<T> Reverse ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable`1\n      description: An enumerator that iterates over the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> in reverse order.\n  overload: System.Collections.Generic.SortedSet`1.Reverse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  id: SetEquals(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SetEquals(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SetEquals(IEnumerable<T>)\n  fullName: SortedSet<T>.SetEquals(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object and the specified collection contain the same elements.\n  remarks: \"This method ignores the order of elements and any duplicate elements in `other`.  \\n  \\n If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(log`n`) operation. Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\"\n  syntax:\n    content: public bool SetEquals (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object is equal to <code>other</code>; otherwise, false.'\n  overload: System.Collections.Generic.SortedSet`1.SetEquals*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: SymmetricExceptWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  fullName: SortedSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.\n  remarks: \"Any duplicate elements in `other` are ignored.  \\n  \\n If the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(n log `m`) operation. Otherwise, this method is an O(`n` log `m`) + O(`n` log `n`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.\"\n  syntax:\n    content: public void SymmetricExceptWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.SymmetricExceptWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)\n  commentId: M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)\n  id: TryGetValue(`0,`0@)\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: TryGetValue(T, T)\n  nameWithType: SortedSet<T>.TryGetValue(T, T)\n  fullName: SortedSet<T>.TryGetValue(T, T)\n  type: Method\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool TryGetValue (T equalValue, out T actualValue);\n    parameters:\n    - id: equalValue\n      type: T\n      description: ''\n    - id: actualValue\n      type: T\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Collections.Generic.SortedSet`1.TryGetValue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  id: UnionWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: UnionWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.UnionWith(IEnumerable<T>)\n  fullName: SortedSet<T>.UnionWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Modifies the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object so that it contains all elements that are present in either the current object or the specified collection.\n  remarks: Any duplicate elements in `other` are ignored.\n  syntax:\n    content: public void UnionWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection to compare to the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.UnionWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection<T>#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ICollection<T>.Add(T)\n  nameWithType: SortedSet<T>.ICollection<T>.Add(T)\n  fullName: SortedSet<T>.ICollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Adds an item to an <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.  \\n  \\n If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation. If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>.\"\n  syntax:\n    content: void ICollection<T>.Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> object.\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  commentId: P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection<T>#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ICollection<T>.IsReadOnly\n  nameWithType: SortedSet<T>.ICollection<T>.IsReadOnly\n  fullName: SortedSet<T>.ICollection<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets a value that indicates whether a <xref href=\"System.Collections.ICollection\"></xref> is read-only.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.  \\n  \\n A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Getting the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is read-only; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: SortedSet<T>.IEnumerable<T>.GetEnumerator()\n  fullName: SortedSet<T>.IEnumerable<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns an enumerator that iterates through a collection.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: SortedSet<T>.ICollection.CopyTo(Array, Int32)\n  fullName: SortedSet<T>.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Copies the complete <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> to a compatible one-dimensional array, starting at the specified array index.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: A one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref>. The array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source array is greater than the available space from <code>index</code> to the end of the destination array.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: SortedSet<T>.ICollection.IsSynchronized\n  fullName: SortedSet<T>.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets a value that indicates whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized; otherwise, `false`.'\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: SortedSet<T>.ICollection.SyncRoot\n  fullName: SortedSet<T>.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>. In the default implementation of <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\"></xref>, this property always returns the current instance.\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: SortedSet<T>.IEnumerable.GetEnumerator()\n  fullName: SortedSet<T>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections\n  - System\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns an enumerator that iterates through a collection.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: SortedSet<T>.IDeserializationCallback.OnDeserialization(Object)\n  fullName: SortedSet<T>.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Implements the <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref> interface, and raises the deserialization event when the deserialization is completed.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Collections.Generic.SortedSet`1\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface, and returns the data that you need to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information that is required to serialize the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Generic.SortedSet`1\"></xref> instance.\n  overload: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Collections.Generic.SortedSet`1.#ctor\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>()\n  nameWithType: SortedSet<T>.SortedSet<T>()\n  fullName: SortedSet<T>.SortedSet<T>()\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>(IComparer<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IComparer<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IComparer<T>)\n- uid: System.Collections.Generic.IComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IEnumerable<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>(IEnumerable<T>, IComparer<T>)\n  nameWithType: SortedSet<T>.SortedSet<T>(IEnumerable<T>, IComparer<T>)\n  fullName: SortedSet<T>.SortedSet<T>(IEnumerable<T>, IComparer<T>)\n- uid: System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.SortedSet<T>(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.SortedSet<T>(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Generic.SortedSet`1.Add(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: SortedSet<T>.Add(T)\n  fullName: SortedSet<T>.Add(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.SortedSet`1.Clear\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Clear()\n  nameWithType: SortedSet<T>.Clear()\n  fullName: SortedSet<T>.Clear()\n- uid: System.Collections.Generic.SortedSet`1.Comparer\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Comparer\n  nameWithType: SortedSet<T>.Comparer\n  fullName: SortedSet<T>.Comparer\n- uid: System.Collections.Generic.SortedSet`1.Contains(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: SortedSet<T>.Contains(T)\n  fullName: SortedSet<T>.Contains(T)\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CopyTo(T[], Int32, Int32)\n  nameWithType: SortedSet<T>.CopyTo(T[], Int32, Int32)\n  fullName: SortedSet<T>.CopyTo(T[], Int32, Int32)\n- uid: T[]\n  isExternal: true\n  name: T[]\n  nameWithType: T[]\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: SortedSet<T>.CopyTo(T[], Int32)\n  fullName: SortedSet<T>.CopyTo(T[], Int32)\n- uid: System.Collections.Generic.SortedSet`1.CopyTo(`0[])\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CopyTo(T[])\n  nameWithType: SortedSet<T>.CopyTo(T[])\n  fullName: SortedSet<T>.CopyTo(T[])\n- uid: System.Collections.Generic.SortedSet`1.Count\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Count\n  nameWithType: SortedSet<T>.Count\n  fullName: SortedSet<T>.Count\n- uid: System.Collections.Generic.SortedSet`1.CreateSetComparer\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CreateSetComparer()\n  nameWithType: SortedSet<T>.CreateSetComparer()\n  fullName: SortedSet<T>.CreateSetComparer()\n- uid: System.Collections.Generic.IEqualityComparer`1\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.Generic.SortedSet`1\n  name: SortedSet<T>\n  nameWithType: SortedSet<T>\n  fullName: System.Collections.Generic.SortedSet<T>\n- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.SortedSet{T}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<SortedSet<T>>\n  nameWithType: IEqualityComparer<SortedSet<T>>\n  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.SortedSet<T>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.SortedSet`1\n    name: SortedSet\n    nameWithType: SortedSet\n    fullName: System.Collections.Generic.SortedSet\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CreateSetComparer(IEqualityComparer<T>)\n  nameWithType: SortedSet<T>.CreateSetComparer(IEqualityComparer<T>)\n  fullName: SortedSet<T>.CreateSetComparer(IEqualityComparer<T>)\n- uid: System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ExceptWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.ExceptWith(IEnumerable<T>)\n  fullName: SortedSet<T>.ExceptWith(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.GetEnumerator\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SortedSet<T>.GetEnumerator()\n  fullName: SortedSet<T>.GetEnumerator()\n- uid: System.Collections.Generic.SortedSet{T}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedSet<T>\n  nameWithType: SortedSet<T>\n  fullName: System.Collections.Generic.SortedSet<T>+Enumerator\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedSet`1\n    name: SortedSet\n    nameWithType: SortedSet\n    fullName: System.Collections.Generic.SortedSet\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetViewBetween(T, T)\n  nameWithType: SortedSet<T>.GetViewBetween(T, T)\n  fullName: SortedSet<T>.GetViewBetween(T, T)\n- uid: System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IntersectWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IntersectWith(IEnumerable<T>)\n  fullName: SortedSet<T>.IntersectWith(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsProperSubsetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsProperSubsetOf(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsProperSupersetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsProperSupersetOf(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsSubsetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsSubsetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsSubsetOf(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsSupersetOf(IEnumerable<T>)\n  nameWithType: SortedSet<T>.IsSupersetOf(IEnumerable<T>)\n  fullName: SortedSet<T>.IsSupersetOf(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.Max\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Max\n  nameWithType: SortedSet<T>.Max\n  fullName: SortedSet<T>.Max\n- uid: System.Collections.Generic.SortedSet`1.Min\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Min\n  nameWithType: SortedSet<T>.Min\n  fullName: SortedSet<T>.Min\n- uid: System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: SortedSet<T>.OnDeserialization(Object)\n  fullName: SortedSet<T>.OnDeserialization(Object)\n- uid: System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Overlaps(IEnumerable<T>)\n  nameWithType: SortedSet<T>.Overlaps(IEnumerable<T>)\n  fullName: SortedSet<T>.Overlaps(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.Remove(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: SortedSet<T>.Remove(T)\n  fullName: SortedSet<T>.Remove(T)\n- uid: System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: RemoveWhere(Predicate<T>)\n  nameWithType: SortedSet<T>.RemoveWhere(Predicate<T>)\n  fullName: SortedSet<T>.RemoveWhere(Predicate<T>)\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Collections.Generic.SortedSet`1.Reverse\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Reverse()\n  nameWithType: SortedSet<T>.Reverse()\n  fullName: SortedSet<T>.Reverse()\n- uid: System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SetEquals(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SetEquals(IEnumerable<T>)\n  fullName: SortedSet<T>.SetEquals(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SymmetricExceptWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  fullName: SortedSet<T>.SymmetricExceptWith(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: TryGetValue(T, T)\n  nameWithType: SortedSet<T>.TryGetValue(T, T)\n  fullName: SortedSet<T>.TryGetValue(T, T)\n- uid: System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: UnionWith(IEnumerable<T>)\n  nameWithType: SortedSet<T>.UnionWith(IEnumerable<T>)\n  fullName: SortedSet<T>.UnionWith(IEnumerable<T>)\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ICollection<T>.Add(T)\n  nameWithType: SortedSet<T>.ICollection<T>.Add(T)\n  fullName: SortedSet<T>.ICollection<T>.Add(T)\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: SortedSet<T>.ICollection<T>.IsReadOnly\n  fullName: SortedSet<T>.ICollection<T>.IsReadOnly\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: SortedSet<T>.IEnumerable<T>.GetEnumerator()\n  fullName: SortedSet<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: SortedSet<T>.ICollection.CopyTo(Array, Int32)\n  fullName: SortedSet<T>.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: SortedSet<T>.ICollection.IsSynchronized\n  fullName: SortedSet<T>.ICollection.IsSynchronized\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: SortedSet<T>.ICollection.SyncRoot\n  fullName: SortedSet<T>.ICollection.SyncRoot\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: SortedSet<T>.IEnumerable.GetEnumerator()\n  fullName: SortedSet<T>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: SortedSet<T>.IDeserializationCallback.OnDeserialization(Object)\n  fullName: SortedSet<T>.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SortedSet<T>.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SortedSet<T>.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Generic.SortedSet`1.#ctor*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SortedSet<T>\n  nameWithType: SortedSet<T>.SortedSet<T>\n  fullName: SortedSet<T>.SortedSet<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.CopyTo*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: SortedSet<T>.CopyTo\n  fullName: SortedSet<T>.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Add*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Add\n  nameWithType: SortedSet<T>.Add\n  fullName: SortedSet<T>.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Clear*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Clear\n  nameWithType: SortedSet<T>.Clear\n  fullName: SortedSet<T>.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Comparer*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Comparer\n  nameWithType: SortedSet<T>.Comparer\n  fullName: SortedSet<T>.Comparer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Contains*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Contains\n  nameWithType: SortedSet<T>.Contains\n  fullName: SortedSet<T>.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Count*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Count\n  nameWithType: SortedSet<T>.Count\n  fullName: SortedSet<T>.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.CreateSetComparer*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: CreateSetComparer\n  nameWithType: SortedSet<T>.CreateSetComparer\n  fullName: SortedSet<T>.CreateSetComparer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.ExceptWith*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: ExceptWith\n  nameWithType: SortedSet<T>.ExceptWith\n  fullName: SortedSet<T>.ExceptWith\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.GetEnumerator*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: SortedSet<T>.GetEnumerator\n  fullName: SortedSet<T>.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.GetObjectData*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetObjectData\n  nameWithType: SortedSet<T>.GetObjectData\n  fullName: SortedSet<T>.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.GetViewBetween*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: GetViewBetween\n  nameWithType: SortedSet<T>.GetViewBetween\n  fullName: SortedSet<T>.GetViewBetween\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.IntersectWith*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IntersectWith\n  nameWithType: SortedSet<T>.IntersectWith\n  fullName: SortedSet<T>.IntersectWith\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.IsProperSubsetOf*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsProperSubsetOf\n  nameWithType: SortedSet<T>.IsProperSubsetOf\n  fullName: SortedSet<T>.IsProperSubsetOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.IsProperSupersetOf*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsProperSupersetOf\n  nameWithType: SortedSet<T>.IsProperSupersetOf\n  fullName: SortedSet<T>.IsProperSupersetOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.IsSubsetOf*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: SortedSet<T>.IsSubsetOf\n  fullName: SortedSet<T>.IsSubsetOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.IsSupersetOf*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: IsSupersetOf\n  nameWithType: SortedSet<T>.IsSupersetOf\n  fullName: SortedSet<T>.IsSupersetOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Max*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Max\n  nameWithType: SortedSet<T>.Max\n  fullName: SortedSet<T>.Max\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Min*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Min\n  nameWithType: SortedSet<T>.Min\n  fullName: SortedSet<T>.Min\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.OnDeserialization*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: OnDeserialization\n  nameWithType: SortedSet<T>.OnDeserialization\n  fullName: SortedSet<T>.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Overlaps*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Overlaps\n  nameWithType: SortedSet<T>.Overlaps\n  fullName: SortedSet<T>.Overlaps\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Remove*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Remove\n  nameWithType: SortedSet<T>.Remove\n  fullName: SortedSet<T>.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.RemoveWhere*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: RemoveWhere\n  nameWithType: SortedSet<T>.RemoveWhere\n  fullName: SortedSet<T>.RemoveWhere\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.Reverse*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: Reverse\n  nameWithType: SortedSet<T>.Reverse\n  fullName: SortedSet<T>.Reverse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.SetEquals*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SetEquals\n  nameWithType: SortedSet<T>.SetEquals\n  fullName: SortedSet<T>.SetEquals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.SymmetricExceptWith*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: SymmetricExceptWith\n  nameWithType: SortedSet<T>.SymmetricExceptWith\n  fullName: SortedSet<T>.SymmetricExceptWith\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.TryGetValue*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: TryGetValue\n  nameWithType: SortedSet<T>.TryGetValue\n  fullName: SortedSet<T>.TryGetValue\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.UnionWith*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: UnionWith\n  nameWithType: SortedSet<T>.UnionWith\n  fullName: SortedSet<T>.UnionWith\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Add\n  nameWithType: SortedSet<T>.System.Collections.Generic.ICollection<T>.Add\n  fullName: SortedSet<T>.System.Collections.Generic.ICollection<T>.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.IsReadOnly\n  nameWithType: SortedSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullName: SortedSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  nameWithType: SortedSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  fullName: SortedSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: SortedSet<T>.System.Collections.ICollection.CopyTo\n  fullName: SortedSet<T>.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedSet<T>.System.Collections.ICollection.IsSynchronized\n  fullName: SortedSet<T>.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedSet<T>.System.Collections.ICollection.SyncRoot\n  fullName: SortedSet<T>.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: SortedSet<T>.System.Collections.IEnumerable.GetEnumerator\n  fullName: SortedSet<T>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: SortedSet<T>.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: SortedSet<T>.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Collections.Generic.SortedSet`1\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: SortedSet<T>.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: SortedSet<T>.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedSet`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  nameWithType: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n- uid: System.Collections.Generic.ISet`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ISet<T>\n  nameWithType: ISet<T>\n  fullName: System.Collections.Generic.ISet<T>\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}