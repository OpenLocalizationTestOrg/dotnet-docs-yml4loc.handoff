### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.TrustManagerContext
  commentId: T:System.Security.Policy.TrustManagerContext
  id: TrustManagerContext
  children:
  - System.Security.Policy.TrustManagerContext.#ctor
  - System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  - System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  - System.Security.Policy.TrustManagerContext.KeepAlive
  - System.Security.Policy.TrustManagerContext.NoPrompt
  - System.Security.Policy.TrustManagerContext.Persist
  - System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  - System.Security.Policy.TrustManagerContext.UIContext
  langs:
  - csharp
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <xref href="System.AppDomain"></xref> in which to run an application.
  remarks: For a list of initial property values for an instance of the <xref:System.Security.Policy.TrustManagerContext> class, see the <xref:System.Security.Policy.TrustManagerContext.%23ctor> constructor.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TrustManagerContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.#ctor
  commentId: M:System.Security.Policy.TrustManagerContext.#ctor
  id: '#ctor'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: TrustManagerContext.TrustManagerContext()
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Initializes a new instance of the <xref href="System.Security.Policy.TrustManagerContext"></xref> class.
  remarks: "The following table shows the initial property values for a new instance of the <xref:System.Security.Policy.TrustManagerContext> class.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.Persist%2A>|`true`|  \n|<xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>|`null`|  \n|<xref:System.Security.Policy.TrustManagerContext.UIContext%2A>|<xref:System.Security.Policy.TrustManagerUIContext.Run>|"
  syntax:
    content: public TrustManagerContext ();
    parameters: []
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  commentId: M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  id: '#ctor(System.Security.Policy.TrustManagerUIContext)'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Initializes a new instance of the <xref href="System.Security.Policy.TrustManagerContext"></xref> class using the specified <xref href="System.Security.Policy.TrustManagerUIContext"></xref> object.
  remarks: This constructor initializes the properties to the same settings as the default constructor, with the exception of the <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property, which is set to the value that is passed in.
  syntax:
    content: public TrustManagerContext (System.Security.Policy.TrustManagerUIContext uiContext);
    parameters:
    - id: uiContext
      type: System.Security.Policy.TrustManagerUIContext
      description: One of the <xref href="System.Security.Policy.TrustManagerUIContext"></xref> values that specifies the type of trust manager user interface to use.
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  commentId: P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  id: IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: TrustManagerContext.IgnorePersistedDecision
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.
  remarks: If `true`, the <xref:System.Security.Policy.ApplicationSecurityManager> ignores persisted decisions for the application and calls the trust manager. If `false`, the <xref:System.Security.Policy.ApplicationSecurityManager> uses cached decisions, if available.
  syntax:
    content: public virtual bool IgnorePersistedDecision { get; set; }
    return:
      type: System.Boolean
      description: '`true` to call the trust manager; otherwise, `false`.'
  overload: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  commentId: P:System.Security.Policy.TrustManagerContext.KeepAlive
  id: KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: TrustManagerContext.KeepAlive
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.
  remarks: This flag is set to `true` if the host might call the trust manager numerous times for trust decisions for this application. If `true`, the trust manager should cache any state that might improve the speed of future calls to the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> method. This property is set to `false` if the host does not expect to call the trust manager again for the current <xref:System.AppDomain>.
  syntax:
    content: public virtual bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: '`true` to cache state data; otherwise, `false`. The default is `false`.'
  overload: System.Security.Policy.TrustManagerContext.KeepAlive*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  commentId: P:System.Security.Policy.TrustManagerContext.NoPrompt
  id: NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: TrustManagerContext.NoPrompt
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.
  remarks: If `false`, the trust manager determines the appropriate user dialog to obtain a trust decision.
  syntax:
    content: public virtual bool NoPrompt { get; set; }
    return:
      type: System.Boolean
      description: '`true` to not prompt the user; `false` to prompt the user. The default is `false`.'
  overload: System.Security.Policy.TrustManagerContext.NoPrompt*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.Persist
  commentId: P:System.Security.Policy.TrustManagerContext.Persist
  id: Persist
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: TrustManagerContext.Persist
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.
  remarks: This property is `true` if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request. This property is `false` if the user’s response should not be persisted.
  syntax:
    content: public virtual bool Persist { get; set; }
    return:
      type: System.Boolean
      description: '`true` to cache state data; otherwise, `false`. The default is `true`.'
  overload: System.Security.Policy.TrustManagerContext.Persist*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  commentId: P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  id: PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: TrustManagerContext.PreviousApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets the identity of the previous application identity.
  syntax:
    content: public virtual ApplicationIdentity PreviousApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: An <xref href="System.ApplicationIdentity"></xref> object representing the previous <xref href="System.ApplicationIdentity"></xref>.
  overload: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Policy.TrustManagerContext.UIContext
  commentId: P:System.Security.Policy.TrustManagerContext.UIContext
  id: UIContext
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: TrustManagerContext.UIContext
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Policy
  summary: Gets or sets the type of user interface the trust manager should display.
  remarks: The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision. A trust manager can decide to use a different interface.
  syntax:
    content: public virtual System.Security.Policy.TrustManagerUIContext UIContext { get; set; }
    return:
      type: System.Security.Policy.TrustManagerUIContext
      description: One of the <xref href="System.Security.Policy.TrustManagerUIContext"></xref> values. The default is <xref href="System.Security.Policy.TrustManagerUIContext.Run"></xref>.
  overload: System.Security.Policy.TrustManagerContext.UIContext*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.TrustManagerContext.#ctor
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: TrustManagerContext.TrustManagerContext()
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
- uid: System.Security.Policy.TrustManagerUIContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerUIContext
  nameWithType: TrustManagerUIContext
  fullName: System.Security.Policy.TrustManagerUIContext
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: TrustManagerContext.IgnorePersistedDecision
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: TrustManagerContext.KeepAlive
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: TrustManagerContext.NoPrompt
- uid: System.Security.Policy.TrustManagerContext.Persist
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: TrustManagerContext.Persist
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: TrustManagerContext.PreviousApplicationIdentity
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.TrustManagerContext.UIContext
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: TrustManagerContext.UIContext
- uid: System.Security.Policy.TrustManagerContext.#ctor*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext.TrustManagerContext
  fullName: TrustManagerContext.TrustManagerContext
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: TrustManagerContext.IgnorePersistedDecision
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.KeepAlive*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: TrustManagerContext.KeepAlive
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.NoPrompt*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: TrustManagerContext.NoPrompt
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.Persist*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: TrustManagerContext.Persist
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: TrustManagerContext.PreviousApplicationIdentity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Security.Policy.TrustManagerContext.UIContext*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: TrustManagerContext.UIContext
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
