{"nodes":[{"content":"An abstract base class that provides functionality for the <xref href=\"System.Drawing.Bitmap\"></xref> and <xref href=\"System.Drawing.Imaging.Metafile\"></xref> descended classes.","nodes":[{"pos":[0,177],"content":"An abstract base class that provides functionality for the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Imaging.Metafile\"&gt;&lt;/xref&gt;</ph> descended classes.","source":"An abstract base class that provides functionality for the <xref href=\"System.Drawing.Bitmap\"></xref> and <xref href=\"System.Drawing.Imaging.Metafile\"></xref> descended classes."}],"pos":[3218,3396],"yaml":true},{"content":"To draw an <xref:System.Drawing.Image> on a Windows Form, you should use one of the <xref:System.Drawing.Graphics.DrawImage%2A> methods.","nodes":[{"pos":[0,136],"content":"To draw an <xref:System.Drawing.Image> on a Windows Form, you should use one of the <xref:System.Drawing.Graphics.DrawImage%2A> methods.","nodes":[{"content":"To draw an <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> on a Windows Form, you should use one of the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> methods.","pos":[0,136],"source":"To draw an <xref:System.Drawing.Image> on a Windows Form, you should use one of the <xref:System.Drawing.Graphics.DrawImage%2A> methods."}]}],"pos":[3407,3544],"yaml":true,"extradata":"MT"},{"content":"Creates an exact copy of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,72],"content":"Creates an exact copy of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an exact copy of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[6612,6685],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates, cast as an object.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates, cast as an object.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates, cast as an object."}],"pos":[6808,6894],"yaml":true},{"content":"Releases all resources used by this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,78],"content":"Releases all resources used by this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[7781,7860],"yaml":true},{"content":"Calling the <xref:System.Drawing.Image.Dispose%2A> method allows the resources used by this <xref:System.Drawing.Image> to be reallocated for other purposes.  \n  \n Call <xref:System.Drawing.Image.Dispose%2A> when you are finished using the <xref:System.Drawing.Image>. The <xref:System.Drawing.Image.Dispose%2A> method leaves the <xref:System.Drawing.Image> in an unusable state. After calling <xref:System.Drawing.Image.Dispose%2A>, you must release all references to the <xref:System.Drawing.Image> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Image> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","nodes":[{"pos":[0,157],"content":"Calling the <xref:System.Drawing.Image.Dispose%2A> method allows the resources used by this <xref:System.Drawing.Image> to be reallocated for other purposes.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> method allows the resources used by this <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> to be reallocated for other purposes.","pos":[0,157],"source":"Calling the <xref:System.Drawing.Image.Dispose%2A> method allows the resources used by this <xref:System.Drawing.Image> to be reallocated for other purposes."}]},{"pos":[164,806],"content":"Call <xref:System.Drawing.Image.Dispose%2A> when you are finished using the <xref:System.Drawing.Image>. The <xref:System.Drawing.Image.Dispose%2A> method leaves the <xref:System.Drawing.Image> in an unusable state. After calling <xref:System.Drawing.Image.Dispose%2A>, you must release all references to the <xref:System.Drawing.Image> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Image> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[0,104],"source":"Call <xref:System.Drawing.Image.Dispose%2A> when you are finished using the <xref:System.Drawing.Image>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> in an unusable state.","pos":[105,215],"source":" The <xref:System.Drawing.Image.Dispose%2A> method leaves the <xref:System.Drawing.Image> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Drawing.Image&gt;</ph> was occupying.","pos":[216,436],"source":" After calling <xref:System.Drawing.Image.Dispose%2A>, you must release all references to the <xref:System.Drawing.Image> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Image> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[437,642],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[814,1099],"content":"[!NOTE]\n Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","pos":[8,283],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[1,126],"source":" Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[127,275],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method."}]}]}],"pos":[7871,8978],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Drawing.Image\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,133],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Drawing.Image\"></xref> and optionally releases the managed resources."}],"pos":[10002,10136],"yaml":true},{"content":"> [!NOTE]\n>  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","nodes":[{"pos":[2,287],"content":"[!NOTE]\n Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.","pos":[8,283],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[1,126],"source":" Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[127,275],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method."}]}]}],"pos":[10147,10447],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[10601,10704],"yaml":true},{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"pos":[0,124],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]}],"pos":[11599,11724],"yaml":true},{"content":"Gets attribute flags for the pixel data of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,90],"content":"Gets attribute flags for the pixel data of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets attribute flags for the pixel data of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[12651,12742],"yaml":true},{"content":"The integer value returned from this method will correspond to a sum of <xref:System.Drawing.Imaging.ImageFlags>, as described in the following table.  \n  \n|ImageFlag value|Integer representation|  \n|---------------------|----------------------------|  \n|`ImageFlagsNone`|0|  \n|`ImageFlagsScalable`|1|  \n|`ImageFlagsHasAlpha`|2|  \n|`ImageFlagsHasTranslucent`|4|  \n|`ImageFlagsPartiallyScalable`|8|  \n|`ImageFlagsColorSpaceRGB`|16|  \n|`ImageFlagsColorSpaceCMYK`|32|  \n|`ImageFlagsColorSpaceGRAY`|64|  \n|`ImageFlagsColorSpaceYCBCR`|128|  \n|`ImageFlagsColorSpaceYCCK`|256|  \n|`ImageFlagsHasRealDPI`|4096|  \n|`ImageFlagsHasRealPixelSize`|8192|  \n|`ImageFlagsReadOnly`|65536|  \n|`ImageFlagsCaching`|131072|  \n  \n For example, if the <xref:System.Drawing.Image.Flags%2A> property for an image returned 77960, the <xref:System.Drawing.Imaging.ImageFlags> for the image would be <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, and <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.","nodes":[{"pos":[0,150],"content":"The integer value returned from this method will correspond to a sum of <xref:System.Drawing.Imaging.ImageFlags>, as described in the following table.","nodes":[{"content":"The integer value returned from this method will correspond to a sum of <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.ImageFlags&gt;</ph>, as described in the following table.","pos":[0,150],"source":"The integer value returned from this method will correspond to a sum of <xref:System.Drawing.Imaging.ImageFlags>, as described in the following table."}]},{"pos":[157,172],"content":"ImageFlag value","nodes":[{"content":"ImageFlag value","pos":[0,15]}]},{"pos":[173,195],"content":"Integer representation","nodes":[{"content":"Integer representation","pos":[0,22]}]},{"pos":[272,273],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[299,300],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[326,327],"content":"2","nodes":[{"content":"2","pos":[0,1]}]},{"pos":[359,360],"content":"4","nodes":[{"content":"4","pos":[0,1]}]},{"pos":[395,396],"content":"8","nodes":[{"content":"8","pos":[0,1]}]},{"pos":[427,429],"content":"16","nodes":[{"content":"16","pos":[0,2]}]},{"pos":[461,463],"content":"32","nodes":[{"content":"32","pos":[0,2]}]},{"pos":[495,497],"content":"64","nodes":[{"content":"64","pos":[0,2]}]},{"pos":[530,533],"content":"128","nodes":[{"content":"128","pos":[0,3]}]},{"pos":[565,568],"content":"256","nodes":[{"content":"256","pos":[0,3]}]},{"pos":[596,600],"content":"4096","nodes":[{"content":"4096","pos":[0,4]}]},{"pos":[634,638],"content":"8192","nodes":[{"content":"8192","pos":[0,4]}]},{"pos":[664,669],"content":"65536","nodes":[{"content":"65536","pos":[0,5]}]},{"pos":[694,700],"content":"131072","nodes":[{"content":"131072","pos":[0,6]}]},{"pos":[708,1155],"content":"For example, if the <xref:System.Drawing.Image.Flags%2A> property for an image returned 77960, the <xref:System.Drawing.Imaging.ImageFlags> for the image would be <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, and <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.","nodes":[{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Flags%2A&gt;</ph> property for an image returned 77960, the <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.ImageFlags&gt;</ph> for the image would be <ph id=\"ph3\">&lt;xref:System.Drawing.Imaging.ImageFlags.ReadOnly&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Drawing.Imaging.ImageFlags.HasRealDpi&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable&gt;</ph>.","pos":[0,447],"source":"For example, if the <xref:System.Drawing.Image.Flags%2A> property for an image returned 77960, the <xref:System.Drawing.Imaging.ImageFlags> for the image would be <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, and <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>."}]}],"pos":[12753,13930],"yaml":true,"extradata":"MT"},{"content":"The integer representing a bitwise combination of <xref href=\"System.Drawing.Imaging.ImageFlags\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,156],"content":"The integer representing a bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageFlags\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The integer representing a bitwise combination of <xref href=\"System.Drawing.Imaging.ImageFlags\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[14092,14249],"yaml":true},{"content":"Gets an array of GUIDs that represent the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,117],"content":"Gets an array of GUIDs that represent the dimensions of frames within this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an array of GUIDs that represent the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[15269,15387],"yaml":true},{"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \n  \n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \n  \n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.","nodes":[{"pos":[0,125],"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.","nodes":[{"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.","pos":[0,125]}]},{"pos":[132,383],"content":"A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","nodes":[{"content":"A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","pos":[0,251],"nodes":[{"content":"A multiple-page image is an image that contains more than one image.","pos":[0,68]},{"content":"Each page contains a single image (or frame).","pos":[69,114]},{"content":"These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","pos":[115,251]}]}]},{"pos":[390,886],"content":"A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.","nodes":[{"content":"A multiple-resolution image is an image that contains more than one copy of an image at different resolutions.","pos":[0,110]},{"content":"This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing.","pos":[111,235]},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions.","pos":[236,405],"source":"[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions."},{"content":"The defined dimensions are properties of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.FrameDimension&gt;</ph>.","pos":[406,496],"source":" The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>."}]}],"pos":[15398,16291],"yaml":true,"extradata":"MT"},{"content":"An array of GUIDs that specify the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref> from most significant to least significant.","nodes":[{"pos":[0,153],"content":"An array of GUIDs that specify the dimensions of frames within this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from most significant to least significant.","source":"An array of GUIDs that specify the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref> from most significant to least significant."}],"pos":[16471,16625],"yaml":true},{"content":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file.","nodes":[{"pos":[0,77],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from the specified file.","source":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file."}],"pos":[17660,17738],"yaml":true},{"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:  \n  \n-   BMP  \n  \n-   GIF  \n  \n-   JPEG  \n  \n-   PNG  \n  \n-   TIFF  \n  \n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \n  \n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","nodes":[{"pos":[0,86],"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:","nodes":[{"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:","pos":[0,86]}]},{"pos":[96,99],"content":"BMP","nodes":[{"content":"BMP","pos":[0,3]}]},{"pos":[109,112],"content":"GIF","nodes":[{"content":"GIF","pos":[0,3]}]},{"pos":[122,126],"content":"JPEG","nodes":[{"content":"JPEG","pos":[0,4]}]},{"pos":[136,139],"content":"PNG","nodes":[{"content":"PNG","pos":[0,3]}]},{"pos":[149,153],"content":"TIFF","nodes":[{"content":"TIFF","pos":[0,4]}]},{"pos":[160,234],"content":"The file remains locked until the <xref:System.Drawing.Image> is disposed.","nodes":[{"content":"The file remains locked until the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> is disposed.","pos":[0,74],"source":"The file remains locked until the <xref:System.Drawing.Image> is disposed."}]},{"pos":[241,466],"content":"If the file does not have a valid image format or if <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file, this method throws an <ph id=\"ph2\">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.","source":"If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception."},{"pos":[474,639],"content":"[!NOTE]\n The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[8,163],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> class does not support alpha transparency in bitmaps.","pos":[1,86],"source":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps."},{"content":"To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[87,155]}]}]}],"pos":[17749,18408],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,111],"content":"A string that contains the name of the file from which to create the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[19486,19598],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates."}],"pos":[19662,19729],"yaml":true},{"content":"The file does not have a valid image format.  \n  \n -or-  \n  \n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.","nodes":[{"pos":[0,44],"content":"The file does not have a valid image format.","nodes":[{"content":"The file does not have a valid image format.","pos":[0,44]}]},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,166],"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file.","source":"[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file."}],"pos":[19886,20059],"yaml":true},{"content":"The specified file does not exist.","nodes":[{"pos":[0,34],"content":"The specified file does not exist.","nodes":[{"content":"The specified file does not exist.","pos":[0,34]}]}],"pos":[20167,20202],"yaml":true},{"content":"<code>filename</code> is a <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"<code>filename</code> is a <xref href=\"System.Uri\"></xref>."}],"pos":[20296,20356],"yaml":true},{"content":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file using embedded color management information in that file.","nodes":[{"pos":[0,134],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from the specified file using embedded color management information in that file.","source":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file using embedded color management information in that file."}],"pos":[21327,21462],"yaml":true},{"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:  \n  \n-   BMP  \n  \n-   GIF  \n  \n-   JPEG  \n  \n-   PNG  \n  \n-   TIFF  \n  \n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \n  \n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \n  \n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the image file. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","nodes":[{"pos":[0,86],"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:","nodes":[{"content":"Managed GDI+ has built-in encoders and decoders that support the following file types:","pos":[0,86]}]},{"pos":[96,99],"content":"BMP","nodes":[{"content":"BMP","pos":[0,3]}]},{"pos":[109,112],"content":"GIF","nodes":[{"content":"GIF","pos":[0,3]}]},{"pos":[122,126],"content":"JPEG","nodes":[{"content":"JPEG","pos":[0,4]}]},{"pos":[136,139],"content":"PNG","nodes":[{"content":"PNG","pos":[0,3]}]},{"pos":[149,153],"content":"TIFF","nodes":[{"content":"TIFF","pos":[0,4]}]},{"pos":[160,385],"content":"If the file does not have a valid image format or if <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file, this method throws an <ph id=\"ph2\">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.","source":"If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception."},{"pos":[392,466],"content":"The file remains locked until the <xref:System.Drawing.Image> is disposed.","nodes":[{"content":"The file remains locked until the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> is disposed.","pos":[0,74],"source":"The file remains locked until the <xref:System.Drawing.Image> is disposed."}]},{"pos":[473,796],"content":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the image file. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","nodes":[{"content":"The <ph id=\"ph1\">`useEmbeddedColorManagement`</ph> parameter specifies whether the new <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> applies color correction according to color management information that is embedded in the image file.","pos":[0,199],"source":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the image file."},{"content":"Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","pos":[200,323]}]},{"pos":[804,969],"content":"[!NOTE]\n The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[8,163],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> class does not support alpha transparency in bitmaps.","pos":[1,86],"source":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps."},{"content":"To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[87,155]}]}]}],"pos":[21473,22464],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,111],"content":"A string that contains the name of the file from which to create the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[23533,23645],"yaml":true},{"content":"Set to `true` to use color management information embedded in the image file; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"Set to <ph id=\"ph1\">`true`</ph> to use color management information embedded in the image file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"Set to `true` to use color management information embedded in the image file; otherwise, `false`."}],"pos":[23728,23826],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates."}],"pos":[23890,23957],"yaml":true},{"content":"The file does not have a valid image format.  \n  \n -or-  \n  \n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.","nodes":[{"pos":[0,44],"content":"The file does not have a valid image format.","nodes":[{"content":"The file does not have a valid image format.","pos":[0,44]}]},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,166],"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file.","source":"[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file."}],"pos":[24114,24287],"yaml":true},{"content":"The specified file does not exist.","nodes":[{"pos":[0,34],"content":"The specified file does not exist.","nodes":[{"content":"The specified file does not exist.","pos":[0,34]}]}],"pos":[24395,24430],"yaml":true},{"content":"<code>filename</code> is a <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"<code>filename</code> is a <xref href=\"System.Uri\"></xref>."}],"pos":[24524,24584],"yaml":true},{"content":"Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap.","nodes":[{"pos":[0,83],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph> from a handle to a GDI bitmap.","source":"Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap."}],"pos":[25501,25585],"yaml":true},{"content":"The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.","nodes":[{"pos":[0,366],"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.FromHbitmap%2A&gt;</ph> method makes a copy of the <ph id=\"ph2\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap; so you can release the incoming <ph id=\"ph3\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap using the <ph id=\"ph4\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id=\"ph5\">`DeleteObject`</ph> method immediately after creating the new <ph id=\"ph6\">&lt;xref:System.Drawing.Image&gt;</ph>.","source":"The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>."}],"pos":[25596,25963],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>.","nodes":[{"pos":[0,136],"content":"The <ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap handle from which to create the <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph>.","source":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>."}],"pos":[26131,26268],"yaml":true},{"content":"The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates."}],"pos":[26333,26401],"yaml":true},{"content":"Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap and a handle to a GDI palette.","nodes":[{"pos":[0,113],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph> from a handle to a GDI bitmap and a handle to a GDI palette.","source":"Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap and a handle to a GDI palette."}],"pos":[27447,27561],"yaml":true},{"content":"The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.","nodes":[{"pos":[0,366],"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.FromHbitmap%2A&gt;</ph> method makes a copy of the <ph id=\"ph2\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap; so you can release the incoming <ph id=\"ph3\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap using the <ph id=\"ph4\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id=\"ph5\">`DeleteObject`</ph> method immediately after creating the new <ph id=\"ph6\">&lt;xref:System.Drawing.Image&gt;</ph>.","source":"The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>."}],"pos":[27572,27939],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>.","nodes":[{"pos":[0,136],"content":"The <ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> bitmap handle from which to create the <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph>.","source":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>."}],"pos":[28124,28261],"yaml":true},{"content":"A handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palette used to define the bitmap colors if the bitmap specified in the <code>hBitmap</code> parameter is not a device-independent bitmap (DIB).","nodes":[{"pos":[0,208],"content":"A handle to a <ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> palette used to define the bitmap colors if the bitmap specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">hBitmap</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a device-independent bitmap (DIB).","source":"A handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palette used to define the bitmap colors if the bitmap specified in the <code>hBitmap</code> parameter is not a device-independent bitmap (DIB)."}],"pos":[28325,28534],"yaml":true},{"content":"The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates."}],"pos":[28599,28667],"yaml":true},{"content":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information and validating the image data.","nodes":[{"pos":[0,170],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from the specified data stream, optionally using embedded color management information and validating the image data.","source":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information and validating the image data."}],"pos":[29794,29965],"yaml":true},{"content":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","nodes":[{"pos":[0,324],"content":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","nodes":[{"content":"The <ph id=\"ph1\">`useEmbeddedColorManagement`</ph> parameter specifies whether the new <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> applies color correction according to color management information that is embedded in the data stream.","pos":[0,200],"source":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream."},{"content":"Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","pos":[201,324]}]},{"pos":[332,497],"content":"[!NOTE]\n The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[8,163],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> class does not support alpha transparency in bitmaps.","pos":[1,86],"source":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps."},{"content":"To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[87,155]}]}]}],"pos":[29976,30479],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the data for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[30713,30828],"yaml":true},{"content":"`true` to use color management information embedded in the data stream; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> to use color management information embedded in the data stream; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to use color management information embedded in the data stream; otherwise, `false`."}],"pos":[30911,31005],"yaml":true},{"content":"`true` to validate the image data; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> to validate the image data; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to validate the image data; otherwise, `false`."}],"pos":[31079,31136],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates."}],"pos":[31200,31267],"yaml":true},{"content":"The stream does not have a valid image format.","nodes":[{"pos":[0,46],"content":"The stream does not have a valid image format.","nodes":[{"content":"The stream does not have a valid image format.","pos":[0,46]}]}],"pos":[31420,31467],"yaml":true},{"content":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream.","nodes":[{"pos":[0,84],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from the specified data stream.","source":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream."}],"pos":[32387,32472],"yaml":true},{"content":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \n  \n The stream is reset to zero if this method is called successively with the same stream.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","nodes":[{"pos":[0,82],"content":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.","nodes":[{"content":"You must keep the stream open for the lifetime of the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[0,82],"source":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>."}]},{"pos":[89,176],"content":"The stream is reset to zero if this method is called successively with the same stream.","nodes":[{"content":"The stream is reset to zero if this method is called successively with the same stream.","pos":[0,87]}]},{"pos":[184,349],"content":"[!NOTE]\n The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[8,163],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> class does not support alpha transparency in bitmaps.","pos":[1,86],"source":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps."},{"content":"To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[87,155]}]}]}],"pos":[32483,32840],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the data for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[33017,33132],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates."}],"pos":[33196,33263],"yaml":true},{"content":"The stream does not have a valid image format  \n  \n -or-  \n  \n <code>stream</code> is `null`.","nodes":[{"pos":[0,45],"content":"The stream does not have a valid image format","nodes":[{"content":"The stream does not have a valid image format","pos":[0,45]}]},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,93],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[33416,33516],"yaml":true},{"content":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information in that stream.","nodes":[{"pos":[0,155],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> from the specified data stream, optionally using embedded color management information in that stream.","source":"Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information in that stream."}],"pos":[34508,34664],"yaml":true},{"content":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \n  \n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n The stream is reset to zero if this method is called successively with the same stream.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","nodes":[{"pos":[0,82],"content":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.","nodes":[{"content":"You must keep the stream open for the lifetime of the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[0,82],"source":"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>."}]},{"pos":[89,413],"content":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","nodes":[{"content":"The <ph id=\"ph1\">`useEmbeddedColorManagement`</ph> parameter specifies whether the new <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> applies color correction according to color management information that is embedded in the data stream.","pos":[0,200],"source":"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream."},{"content":"Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.","pos":[201,324]}]},{"pos":[420,507],"content":"The stream is reset to zero if this method is called successively with the same stream.","nodes":[{"content":"The stream is reset to zero if this method is called successively with the same stream.","pos":[0,87]}]},{"pos":[515,680],"content":"[!NOTE]\n The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[8,163],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> class does not support alpha transparency in bitmaps.","pos":[1,86],"source":" The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps."},{"content":"To enable alpha transparency, use PNG images with 32 bits per pixel.","pos":[87,155]}]}]}],"pos":[34675,35365],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the data for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[35575,35690],"yaml":true},{"content":"`true` to use color management information embedded in the data stream; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> to use color management information embedded in the data stream; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to use color management information embedded in the data stream; otherwise, `false`."}],"pos":[35773,35867],"yaml":true},{"content":"The <xref href=\"System.Drawing.Image\"></xref> this method creates.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> this method creates.","source":"The <xref href=\"System.Drawing.Image\"></xref> this method creates."}],"pos":[35931,35998],"yaml":true},{"content":"The stream does not have a valid image format  \n  \n -or-  \n  \n <code>stream</code> is `null`.","nodes":[{"pos":[0,45],"content":"The stream does not have a valid image format","nodes":[{"content":"The stream does not have a valid image format","pos":[0,45]}]},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,93],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[36151,36251],"yaml":true},{"content":"Gets the bounds of the image in the specified unit.","nodes":[{"pos":[0,51],"content":"Gets the bounds of the image in the specified unit.","nodes":[{"content":"Gets the bounds of the image in the specified unit.","pos":[0,51]}]}],"pos":[37219,37271],"yaml":true},{"content":"One of the <xref href=\"System.Drawing.GraphicsUnit\"></xref> values indicating the unit of measure for the bounding rectangle.","nodes":[{"pos":[0,125],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.GraphicsUnit\"&gt;&lt;/xref&gt;</ph> values indicating the unit of measure for the bounding rectangle.","source":"One of the <xref href=\"System.Drawing.GraphicsUnit\"></xref> values indicating the unit of measure for the bounding rectangle."}],"pos":[38440,38566],"yaml":true},{"content":"The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the bounds of the image, in the specified unit.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;&lt;/xref&gt;</ph> that represents the bounds of the image, in the specified unit.","source":"The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the bounds of the image, in the specified unit."}],"pos":[38635,38750],"yaml":true},{"content":"Returns information about the parameters supported by the specified image encoder.","nodes":[{"pos":[0,82],"content":"Returns information about the parameters supported by the specified image encoder.","nodes":[{"content":"Returns information about the parameters supported by the specified image encoder.","pos":[0,82]}]}],"pos":[39788,39871],"yaml":true},{"content":"A GUID that specifies the image encoder.","nodes":[{"pos":[0,40],"content":"A GUID that specifies the image encoder.","nodes":[{"content":"A GUID that specifies the image encoder.","pos":[0,40]}]}],"pos":[40059,40100],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that contains an array of <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> objects. Each <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> contains information about one of the parameters supported by the specified image encoder.","nodes":[{"pos":[0,317],"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that contains an array of <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> objects. Each <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> contains information about one of the parameters supported by the specified image encoder.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameters\"&gt;&lt;/xref&gt;</ph> that contains an array of <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameter\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,160],"source":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that contains an array of <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> objects."},{"content":"Each <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameter\"&gt;&lt;/xref&gt;</ph> contains information about one of the parameters supported by the specified image encoder.","pos":[161,317],"source":" Each <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> contains information about one of the parameters supported by the specified image encoder."}]}],"pos":[40184,40502],"yaml":true},{"content":"Returns the number of frames of the specified dimension.","nodes":[{"pos":[0,56],"content":"Returns the number of frames of the specified dimension.","nodes":[{"content":"Returns the number of frames of the specified dimension.","pos":[0,56]}]}],"pos":[41602,41659],"yaml":true},{"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \n  \n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \n  \n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.","nodes":[{"pos":[0,125],"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.","nodes":[{"content":"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.","pos":[0,125]}]},{"pos":[132,383],"content":"A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","nodes":[{"content":"A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","pos":[0,251],"nodes":[{"content":"A multiple-page image is an image that contains more than one image.","pos":[0,68]},{"content":"Each page contains a single image (or frame).","pos":[69,114]},{"content":"These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.","pos":[115,251]}]}]},{"pos":[390,886],"content":"A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.","nodes":[{"content":"A multiple-resolution image is an image that contains more than one copy of an image at different resolutions.","pos":[0,110]},{"content":"This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing.","pos":[111,235]},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions.","pos":[236,405],"source":"[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions."},{"content":"The defined dimensions are properties of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.FrameDimension&gt;</ph>.","pos":[406,496],"source":" The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>."}]}],"pos":[41670,42563],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.FrameDimension\"&gt;&lt;/xref&gt;</ph> that specifies the identity of the dimension type.","source":"A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type."}],"pos":[42767,42879],"yaml":true},{"content":"The number of frames in the specified dimension.","nodes":[{"pos":[0,48],"content":"The number of frames in the specified dimension.","nodes":[{"content":"The number of frames in the specified dimension.","pos":[0,48]}]}],"pos":[42935,42984],"yaml":true},{"content":"Returns the color depth, in number of bits per pixel, of the specified pixel format.","nodes":[{"pos":[0,84],"content":"Returns the color depth, in number of bits per pixel, of the specified pixel format.","nodes":[{"content":"Returns the color depth, in number of bits per pixel, of the specified pixel format.","pos":[0,84]}]}],"pos":[44086,44171],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> member that specifies the format for which to find the size.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;&lt;/xref&gt;</ph> member that specifies the format for which to find the size.","source":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> member that specifies the format for which to find the size."}],"pos":[44375,44496],"yaml":true},{"content":"The color depth of the specified pixel format.","nodes":[{"pos":[0,46],"content":"The color depth of the specified pixel format.","nodes":[{"content":"The color depth of the specified pixel format.","pos":[0,46]}]}],"pos":[44552,44599],"yaml":true},{"content":"Gets the specified property item from this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,85],"content":"Gets the specified property item from this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the specified property item from this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[45604,45690],"yaml":true},{"content":"For a list of property item IDs and links to more information, see <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.  \n  \n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"pos":[0,116],"content":"For a list of property item IDs and links to more information, see <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.","nodes":[{"content":"For a list of property item IDs and links to more information, see <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem.Id%2A&gt;</ph>.","pos":[0,116],"source":"For a list of property item IDs and links to more information, see <xref:System.Drawing.Imaging.PropertyItem.Id%2A>."}]},{"pos":[123,703],"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","pos":[0,580],"nodes":[{"content":"It is difficult to set property items, because the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> class has no public constructors.","pos":[0,127],"source":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors."},{"content":"One way to work around this restriction is to obtain a <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> by retrieving the <ph id=\"ph2\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> property value or calling the <ph id=\"ph3\">&lt;xref:System.Drawing.Image.GetPropertyItem%2A&gt;</ph> method of an <ph id=\"ph4\">&lt;xref:System.Drawing.Image&gt;</ph> that already has property items.","pos":[128,439],"source":" One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items."},{"content":"Then you can set the fields of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> and pass it to <ph id=\"ph2\">&lt;xref:System.Drawing.Image.SetPropertyItem%2A&gt;</ph>.","pos":[440,580],"source":" Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>."}]}]}],"pos":[45701,46409],"yaml":true,"extradata":"MT"},{"content":"The ID of the property item to get.","nodes":[{"pos":[0,35],"content":"The ID of the property item to get.","nodes":[{"content":"The ID of the property item to get.","pos":[0,35]}]}],"pos":[47621,47657],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> this method gets.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PropertyItem\"&gt;&lt;/xref&gt;</ph> this method gets.","source":"The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> this method gets."}],"pos":[47736,47815],"yaml":true},{"content":"The image format of this image does not support property items.","nodes":[{"pos":[0,63],"content":"The image format of this image does not support property items.","nodes":[{"content":"The image format of this image does not support property items.","pos":[0,63]}]}],"pos":[47973,48037],"yaml":true},{"content":"Returns a thumbnail for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,71],"content":"Returns a thumbnail for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a thumbnail for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[49332,49404],"yaml":true},{"content":"If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size. If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.  \n  \n The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels. If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image. It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method.","nodes":[{"pos":[0,300],"content":"If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size. If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.","nodes":[{"content":"If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size. If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.","pos":[0,300],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size.","pos":[0,154],"source":"If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.","pos":[155,300],"source":" If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image."}]}]},{"pos":[307,804],"content":"The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels. If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image. It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method.","nodes":[{"content":"The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels. If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image. It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method.","pos":[0,497],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.GetThumbnailImage%2A&gt;</ph> method works well when the requested thumbnail image has a size of about 120 x 120 pixels.","pos":[0,143],"source":"The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels."},{"content":"If you request a large thumbnail image (for example, 300 x 300) from an <ph id=\"ph1\">&lt;xref:System.Drawing.Image&gt;</ph> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image.","pos":[144,343],"source":" If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image."},{"content":"It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method.","pos":[344,497],"source":" It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method."}]}]}],"pos":[49415,50224],"yaml":true,"extradata":"MT"},{"content":"The width, in pixels, of the requested thumbnail image.","nodes":[{"pos":[0,55],"content":"The width, in pixels, of the requested thumbnail image.","nodes":[{"content":"The width, in pixels, of the requested thumbnail image.","pos":[0,55]}]}],"pos":[50898,50954],"yaml":true},{"content":"The height, in pixels, of the requested thumbnail image.","nodes":[{"pos":[0,56],"content":"The height, in pixels, of the requested thumbnail image.","nodes":[{"content":"The height, in pixels, of the requested thumbnail image.","pos":[0,56]}]}],"pos":[51020,51077],"yaml":true},{"content":"A <xref href=\"System.Drawing.Image.GetThumbnailImageAbort\"></xref> delegate.  \n  \n **Note** You must create a delegate and pass a reference to the delegate as the <code>callback</code> parameter, but the delegate is not used.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image.GetThumbnailImageAbort\"&gt;&lt;/xref&gt;</ph> delegate.","source":"A <xref href=\"System.Drawing.Image.GetThumbnailImageAbort\"></xref> delegate."},{"pos":[83,225],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> You must create a delegate and pass a reference to the delegate as the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter, but the delegate is not used.","source":"**Note** You must create a delegate and pass a reference to the delegate as the <code>callback</code> parameter, but the delegate is not used."}],"pos":[51171,51403],"yaml":true},{"content":"Must be <xref href=\"System.IntPtr.Zero\"></xref>.","nodes":[{"pos":[0,48],"content":"Must be <ph id=\"ph1\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph>.","source":"Must be <xref href=\"System.IntPtr.Zero\"></xref>."}],"pos":[51471,51520],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> that represents the thumbnail.","nodes":[{"pos":[0,75],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> that represents the thumbnail.","source":"An <xref href=\"System.Drawing.Image\"></xref> that represents the thumbnail."}],"pos":[51584,51660],"yaml":true},{"content":"Gets the height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,78],"content":"Gets the height, in pixels, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[52549,52628],"yaml":true},{"content":"The height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,73],"content":"The height, in pixels, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[53954,54028],"yaml":true},{"content":"Gets the horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,102],"content":"Gets the horizontal resolution, in pixels per inch, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[55055,55158],"yaml":true},{"content":"The horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,97],"content":"The horizontal resolution, in pixels per inch, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[55281,55379],"yaml":true},{"content":"Returns a value that indicates whether the pixel format for this <xref href=\"System.Drawing.Image\"></xref> contains alpha information.","nodes":[{"pos":[0,134],"content":"Returns a value that indicates whether the pixel format for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> contains alpha information.","source":"Returns a value that indicates whether the pixel format for this <xref href=\"System.Drawing.Image\"></xref> contains alpha information."}],"pos":[56488,56623],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test."}],"pos":[56828,56897],"yaml":true},{"content":"`true` if <code>pixfmt</code> contains alpha information; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pixfmt</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains alpha information; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>pixfmt</code> contains alpha information; otherwise, `false`."}],"pos":[56955,57035],"yaml":true},{"content":"Returns a value that indicates whether the pixel format is 32 bits per pixel.","nodes":[{"pos":[0,77],"content":"Returns a value that indicates whether the pixel format is 32 bits per pixel.","nodes":[{"content":"Returns a value that indicates whether the pixel format is 32 bits per pixel.","pos":[0,77]}]}],"pos":[58166,58244],"yaml":true},{"content":"The canonical pixel format indicates a pixel format of 32 bits per pixel. This format specifies 24-bit color depth and an 8-bit alpha channel.","nodes":[{"pos":[0,142],"content":"The canonical pixel format indicates a pixel format of 32 bits per pixel. This format specifies 24-bit color depth and an 8-bit alpha channel.","nodes":[{"content":"The canonical pixel format indicates a pixel format of 32 bits per pixel. This format specifies 24-bit color depth and an 8-bit alpha channel.","pos":[0,142],"nodes":[{"content":"The canonical pixel format indicates a pixel format of 32 bits per pixel.","pos":[0,73]},{"content":"This format specifies 24-bit color depth and an 8-bit alpha channel.","pos":[74,142]}]}]}],"pos":[58255,58398],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test."}],"pos":[58607,58676],"yaml":true},{"content":"`true` if <code>pixfmt</code> is canonical; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pixfmt</ph><ept id=\"p1\">&lt;/code&gt;</ept> is canonical; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>pixfmt</code> is canonical; otherwise, `false`."}],"pos":[58734,58800],"yaml":true},{"content":"Returns a value that indicates whether the pixel format is 64 bits per pixel.","nodes":[{"pos":[0,77],"content":"Returns a value that indicates whether the pixel format is 64 bits per pixel.","nodes":[{"content":"Returns a value that indicates whether the pixel format is 64 bits per pixel.","pos":[0,77]}]}],"pos":[59929,60007],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> enumeration to test.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;&lt;/xref&gt;</ph> enumeration to test.","source":"The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> enumeration to test."}],"pos":[60215,60296],"yaml":true},{"content":"`true` if <code>pixfmt</code> is extended; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pixfmt</ph><ept id=\"p1\">&lt;/code&gt;</ept> is extended; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>pixfmt</code> is extended; otherwise, `false`."}],"pos":[60354,60419],"yaml":true},{"content":"Gets or sets the color palette used for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,87],"content":"Gets or sets the color palette used for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the color palette used for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[61318,61406],"yaml":true},{"content":"This property returns a copy of the <xref:System.Drawing.Imaging.ColorPalette> object used by this <xref:System.Drawing.Image>.","nodes":[{"pos":[0,127],"content":"This property returns a copy of the <xref:System.Drawing.Imaging.ColorPalette> object used by this <xref:System.Drawing.Image>.","nodes":[{"content":"This property returns a copy of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.ColorPalette&gt;</ph> object used by this <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph>.","pos":[0,127],"source":"This property returns a copy of the <xref:System.Drawing.Imaging.ColorPalette> object used by this <xref:System.Drawing.Image>."}]}],"pos":[61417,61545],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref> that represents the color palette used for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ColorPalette\"&gt;&lt;/xref&gt;</ph> that represents the color palette used for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref> that represents the color palette used for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[61769,61919],"yaml":true},{"content":"Gets the width and height of this image.","nodes":[{"pos":[0,40],"content":"Gets the width and height of this image.","nodes":[{"content":"Gets the width and height of this image.","pos":[0,40]}]}],"pos":[62929,62970],"yaml":true},{"content":"If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.","nodes":[{"pos":[0,158],"content":"If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.","nodes":[{"content":"If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.","pos":[0,158],"nodes":[{"content":"If the image is a bitmap, the width and height are returned in pixels.","pos":[0,70]},{"content":"If the image is a metafile, the width and height are returned in 0.01 millimeter units.","pos":[71,158]}]}]}],"pos":[62981,63140],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.SizeF\"></xref> structure that represents the width and height of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;&lt;/xref&gt;</ph> structure that represents the width and height of this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Drawing.SizeF\"></xref> structure that represents the width and height of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[63282,63424],"yaml":true},{"content":"Gets the pixel format for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,73],"content":"Gets the pixel format for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the pixel format for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[64343,64417],"yaml":true},{"content":"A <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> that represents the pixel format for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;&lt;/xref&gt;</ph> that represents the pixel format for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> that represents the pixel format for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[65698,65841],"yaml":true},{"content":"Gets IDs of the property items stored in this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,88],"content":"Gets IDs of the property items stored in this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets IDs of the property items stored in this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[66772,66861],"yaml":true},{"content":"If the image has no property items or if the image format does not support property items, the <xref:System.Drawing.Image.PropertyIdList%2A> property returns an empty array (that is, an array of length zero).","nodes":[{"pos":[0,208],"content":"If the image has no property items or if the image format does not support property items, the <xref:System.Drawing.Image.PropertyIdList%2A> property returns an empty array (that is, an array of length zero).","nodes":[{"content":"If the image has no property items or if the image format does not support property items, the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.PropertyIdList%2A&gt;</ph> property returns an empty array (that is, an array of length zero).","pos":[0,208],"source":"If the image has no property items or if the image format does not support property items, the <xref:System.Drawing.Image.PropertyIdList%2A> property returns an empty array (that is, an array of length zero)."}]}],"pos":[66872,67081],"yaml":true,"extradata":"MT"},{"content":"An array of the property IDs, one for each property item stored in this image.","nodes":[{"pos":[0,78],"content":"An array of the property IDs, one for each property item stored in this image.","nodes":[{"content":"An array of the property IDs, one for each property item stored in this image.","pos":[0,78]}]}],"pos":[67256,67335],"yaml":true},{"content":"Gets all the property items (pieces of metadata) stored in this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,106],"content":"Gets all the property items (pieces of metadata) stored in this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets all the property items (pieces of metadata) stored in this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[68328,68435],"yaml":true},{"content":"If the image has no property items or if the image format does not support property items, <xref:System.Drawing.Image.PropertyItems%2A> returns an empty array (that is, an array of length zero).","nodes":[{"pos":[0,194],"content":"If the image has no property items or if the image format does not support property items, <xref:System.Drawing.Image.PropertyItems%2A> returns an empty array (that is, an array of length zero).","nodes":[{"content":"If the image has no property items or if the image format does not support property items, <ph id=\"ph1\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> returns an empty array (that is, an array of length zero).","pos":[0,194],"source":"If the image has no property items or if the image format does not support property items, <xref:System.Drawing.Image.PropertyItems%2A> returns an empty array (that is, an array of length zero)."}]}],"pos":[68446,68641],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> objects, one for each property item stored in the image.","nodes":[{"pos":[0,125],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PropertyItem\"&gt;&lt;/xref&gt;</ph> objects, one for each property item stored in the image.","source":"An array of <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> objects, one for each property item stored in the image."}],"pos":[69964,70090],"yaml":true},{"content":"Gets the file format of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,71],"content":"Gets the file format of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the file format of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[71058,71130],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that represents the file format of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageFormat\"&gt;&lt;/xref&gt;</ph> that represents the file format of this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that represents the file format of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[71292,71435],"yaml":true},{"content":"Removes the specified property item from this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,88],"content":"Removes the specified property item from this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the specified property item from this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[72449,72538],"yaml":true},{"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"pos":[0,580],"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","pos":[0,580],"nodes":[{"content":"It is difficult to set property items, because the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> class has no public constructors.","pos":[0,127],"source":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors."},{"content":"One way to work around this restriction is to obtain a <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> by retrieving the <ph id=\"ph2\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> property value or calling the <ph id=\"ph3\">&lt;xref:System.Drawing.Image.GetPropertyItem%2A&gt;</ph> method of an <ph id=\"ph4\">&lt;xref:System.Drawing.Image&gt;</ph> that already has property items.","pos":[128,439],"source":" One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items."},{"content":"Then you can set the fields of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> and pass it to <ph id=\"ph2\">&lt;xref:System.Drawing.Image.SetPropertyItem%2A&gt;</ph>.","pos":[440,580],"source":" Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>."}]}]}],"pos":[72549,73130],"yaml":true,"extradata":"MT"},{"content":"The ID of the property item to remove.","nodes":[{"pos":[0,38],"content":"The ID of the property item to remove.","nodes":[{"content":"The ID of the property item to remove.","pos":[0,38]}]}],"pos":[73275,73314],"yaml":true},{"content":"The image does not contain the requested property item.  \n  \n -or-  \n  \n The image format for this image does not support property items.","nodes":[{"pos":[0,55],"content":"The image does not contain the requested property item.","nodes":[{"content":"The image does not contain the requested property item.","pos":[0,55]}]},{"pos":[62,66],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[73,137],"content":"The image format for this image does not support property items.","nodes":[{"content":"The image format for this image does not support property items.","pos":[0,64]}]}],"pos":[73475,73619],"yaml":true},{"content":"Rotates, flips, or rotates and flips the <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,83],"content":"Rotates, flips, or rotates and flips the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Rotates, flips, or rotates and flips the <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[74602,74686],"yaml":true},{"content":"The <xref:System.Drawing.Image.RotateFlip%2A> method rotates the image clockwise.  \n  \n If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur.","nodes":[{"pos":[0,81],"content":"The <xref:System.Drawing.Image.RotateFlip%2A> method rotates the image clockwise.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.RotateFlip%2A&gt;</ph> method rotates the image clockwise.","pos":[0,81],"source":"The <xref:System.Drawing.Image.RotateFlip%2A> method rotates the image clockwise."}]},{"pos":[88,246],"content":"If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur.","nodes":[{"content":"If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur.","pos":[0,158]}]}],"pos":[74697,74948],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.RotateFlipType\"></xref> member that specifies the type of rotation and flip to apply to the image.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.RotateFlipType\"&gt;&lt;/xref&gt;</ph> member that specifies the type of rotation and flip to apply to the image.","source":"A <xref href=\"System.Drawing.RotateFlipType\"></xref> member that specifies the type of rotation and flip to apply to the image."}],"pos":[76188,76316],"yaml":true},{"content":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file, with the specified encoder and image-encoder parameters.","nodes":[{"pos":[0,132],"content":"Saves this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> to the specified file, with the specified encoder and image-encoder parameters.","source":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file, with the specified encoder and image-encoder parameters."}],"pos":[77595,77728],"yaml":true},{"content":"Saving the image to the same file it was constructed from is not allowed and throws an exception.","nodes":[{"pos":[0,97],"content":"Saving the image to the same file it was constructed from is not allowed and throws an exception.","nodes":[{"content":"Saving the image to the same file it was constructed from is not allowed and throws an exception.","pos":[0,97]}]}],"pos":[77739,77837],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,108],"content":"A string that contains the name of the file to which to save this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[78748,78857],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageCodecInfo\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[78944,79059],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> to use for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameters\"&gt;&lt;/xref&gt;</ph> to use for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> to use for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[79155,79279],"yaml":true},{"content":"<code>filename</code> or <code>encoder</code> is `null.`","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoder&lt;/code&gt;</ph> is <ph id=\"ph3\">`null.`</ph>","source":"<code>filename</code> or <code>encoder</code> is `null.`"}],"pos":[79434,79491],"yaml":true},{"content":"The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from.","nodes":[{"pos":[0,48],"content":"The image was saved with the wrong image format.","nodes":[{"content":"The image was saved with the wrong image format.","pos":[0,48]}]},{"pos":[55,59],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[66,123],"content":"The image was saved to the same file it was created from.","nodes":[{"content":"The image was saved to the same file it was created from.","pos":[0,57]}]}],"pos":[79633,79763],"yaml":true},{"content":"Saves this image to the specified stream, with the specified encoder and image encoder parameters.","nodes":[{"pos":[0,98],"content":"Saves this image to the specified stream, with the specified encoder and image encoder parameters.","nodes":[{"content":"Saves this image to the specified stream, with the specified encoder and image encoder parameters.","pos":[0,98]}]}],"pos":[80989,81088],"yaml":true},{"content":"Do not save an image to the same stream that was used to construct the image. Doing so might damage the stream.  \n  \n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","nodes":[{"pos":[0,111],"content":"Do not save an image to the same stream that was used to construct the image. Doing so might damage the stream.","nodes":[{"content":"Do not save an image to the same stream that was used to construct the image. Doing so might damage the stream.","pos":[0,111],"nodes":[{"content":"Do not save an image to the same stream that was used to construct the image.","pos":[0,77]},{"content":"Doing so might damage the stream.","pos":[78,111]}]}]},{"pos":[118,304],"content":"The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","nodes":[{"content":"The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","pos":[0,186],"nodes":[{"content":"The image must be saved to the stream at an offset of zero.","pos":[0,59]},{"content":"If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","pos":[60,186]}]}]}],"pos":[81099,81408],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> where the image will be saved.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> where the image will be saved.","source":"The <xref href=\"System.IO.Stream\"></xref> where the image will be saved."}],"pos":[81659,81732],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageCodecInfo\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[81819,81934],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that specifies parameters used by the image encoder.","nodes":[{"pos":[0,117],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameters\"&gt;&lt;/xref&gt;</ph> that specifies parameters used by the image encoder.","source":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that specifies parameters used by the image encoder."}],"pos":[82030,82148],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[82303,82334],"yaml":true},{"content":"The image was saved with the wrong image format.","nodes":[{"pos":[0,48],"content":"The image was saved with the wrong image format.","nodes":[{"content":"The image was saved with the wrong image format.","pos":[0,48]}]}],"pos":[82476,82525],"yaml":true},{"content":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file in the specified format.","nodes":[{"pos":[0,99],"content":"Saves this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> to the specified file in the specified format.","source":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file in the specified format."}],"pos":[83544,83644],"yaml":true},{"content":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,108],"content":"A string that contains the name of the file to which to save this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[84664,84773],"yaml":true},{"content":"The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageFormat\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[84856,84968],"yaml":true},{"content":"<code>filename</code> or <code>format</code> is `null.`","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph3\">`null.`</ph>","source":"<code>filename</code> or <code>format</code> is `null.`"}],"pos":[85123,85179],"yaml":true},{"content":"The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from.","nodes":[{"pos":[0,48],"content":"The image was saved with the wrong image format.","nodes":[{"content":"The image was saved with the wrong image format.","pos":[0,48]}]},{"pos":[55,59],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[66,123],"content":"The image was saved to the same file it was created from.","nodes":[{"content":"The image was saved to the same file it was created from.","pos":[0,57]}]}],"pos":[85321,85451],"yaml":true},{"content":"Saves this image to the specified stream in the specified format.","nodes":[{"pos":[0,65],"content":"Saves this image to the specified stream in the specified format.","nodes":[{"content":"Saves this image to the specified stream in the specified format.","pos":[0,65]}]}],"pos":[86479,86545],"yaml":true},{"content":"You should avoid saving an image to the same stream that was used to construct it. Doing so might damage the stream.  \n  \n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","nodes":[{"pos":[0,116],"content":"You should avoid saving an image to the same stream that was used to construct it. Doing so might damage the stream.","nodes":[{"content":"You should avoid saving an image to the same stream that was used to construct it. Doing so might damage the stream.","pos":[0,116],"nodes":[{"content":"You should avoid saving an image to the same stream that was used to construct it.","pos":[0,82]},{"content":"Doing so might damage the stream.","pos":[83,116]}]}]},{"pos":[123,309],"content":"The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","nodes":[{"content":"The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","pos":[0,186],"nodes":[{"content":"The image must be saved to the stream at an offset of zero.","pos":[0,59]},{"content":"If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.","pos":[60,186]}]}]}],"pos":[86556,86870],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> where the image will be saved.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> where the image will be saved.","source":"The <xref href=\"System.IO.Stream\"></xref> where the image will be saved."}],"pos":[87061,87134],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that specifies the format of the saved image.","nodes":[{"pos":[0,104],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.ImageFormat\"&gt;&lt;/xref&gt;</ph> that specifies the format of the saved image.","source":"An <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that specifies the format of the saved image."}],"pos":[87217,87322],"yaml":true},{"content":"<code>stream</code> or <code>format</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>format</code> is `null`."}],"pos":[87477,87531],"yaml":true},{"content":"The image was saved with the wrong image format","nodes":[{"pos":[0,47],"content":"The image was saved with the wrong image format","nodes":[{"content":"The image was saved with the wrong image format","pos":[0,47]}]}],"pos":[87673,87721],"yaml":true},{"content":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file or stream.","nodes":[{"pos":[0,85],"content":"Saves this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> to the specified file or stream.","source":"Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file or stream."}],"pos":[88596,88682],"yaml":true},{"content":"If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used. When you use the <xref:System.Drawing.Image.Save%2A> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file. This behavior occurs because the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] component of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not have an encoder that you can use to save files as .wmf or .emf files.  \n  \n Saving the image to the same file it was constructed from is not allowed and throws an exception.","nodes":[{"pos":[0,578],"content":"If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used. When you use the <xref:System.Drawing.Image.Save%2A> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file. This behavior occurs because the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] component of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not have an encoder that you can use to save files as .wmf or .emf files.","nodes":[{"content":"If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used.","pos":[0,107]},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.Save%2A&gt;</ph> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file.","pos":[108,337],"source":" When you use the <xref:System.Drawing.Image.Save%2A> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file."},{"content":"This behavior occurs because the <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> component of the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> does not have an encoder that you can use to save files as .wmf or .emf files.","pos":[338,578],"source":" This behavior occurs because the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] component of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not have an encoder that you can use to save files as .wmf or .emf files."}]},{"pos":[585,682],"content":"Saving the image to the same file it was constructed from is not allowed and throws an exception.","nodes":[{"content":"Saving the image to the same file it was constructed from is not allowed and throws an exception.","pos":[0,97]}]}],"pos":[88693,89380],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,108],"content":"A string that contains the name of the file to which to save this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[90285,90394],"yaml":true},{"content":"<code>filename</code> is `null.`","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> is <ph id=\"ph2\">`null.`</ph>","source":"<code>filename</code> is `null.`"}],"pos":[90549,90582],"yaml":true},{"content":"The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from.","nodes":[{"pos":[0,48],"content":"The image was saved with the wrong image format.","nodes":[{"content":"The image was saved with the wrong image format.","pos":[0,48]}]},{"pos":[55,59],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[66,123],"content":"The image was saved to the same file it was created from.","nodes":[{"content":"The image was saved to the same file it was created from.","pos":[0,57]}]}],"pos":[90724,90854],"yaml":true},{"content":"Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.","nodes":[{"pos":[0,227],"content":"Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.","nodes":[{"content":"Adds a frame to the file or stream specified in a previous call to the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image.Save*\"&gt;&lt;/xref&gt;</ph> method.","pos":[0,126],"source":"Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method."},{"content":"Use this method to save selected frames from a multiple-frame image to another multiple-frame image.","pos":[127,227]}]}],"pos":[91861,92089],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation.","nodes":[{"pos":[0,156],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameters\"&gt;&lt;/xref&gt;</ph> that holds parameters required by the image encoder that is used by the save-add operation.","source":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation."}],"pos":[92302,92459],"yaml":true},{"content":"Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method.","nodes":[{"pos":[0,126],"content":"Adds a frame to the file or stream specified in a previous call to the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image.Save*\"&gt;&lt;/xref&gt;</ph> method.","source":"Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method."}],"pos":[93609,93736],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> that contains the frame to add.","nodes":[{"pos":[0,76],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> that contains the frame to add.","source":"An <xref href=\"System.Drawing.Image\"></xref> that contains the frame to add."}],"pos":[93949,94026],"yaml":true},{"content":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation.","nodes":[{"pos":[0,156],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.EncoderParameters\"&gt;&lt;/xref&gt;</ph> that holds parameters required by the image encoder that is used by the save-add operation.","source":"An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation."}],"pos":[94122,94279],"yaml":true},{"content":"<code>image</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;image&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>image</code> is `null`."}],"pos":[94437,94467],"yaml":true},{"content":"Selects the frame specified by the dimension and index.","nodes":[{"pos":[0,55],"content":"Selects the frame specified by the dimension and index.","nodes":[{"content":"Selects the frame specified by the dimension and index.","pos":[0,55]}]}],"pos":[95576,95632],"yaml":true},{"content":"The possible values of the `dimensionID` parameter are properties of the <xref:System.Drawing.Imaging.FrameDimension>. These can be used to identify an image by its time, resolution, or page number.  \n  \n Calling this method causes all changes made to the previous frame to be discarded. Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties. If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0.","nodes":[{"pos":[0,198],"content":"The possible values of the `dimensionID` parameter are properties of the <xref:System.Drawing.Imaging.FrameDimension>. These can be used to identify an image by its time, resolution, or page number.","nodes":[{"content":"The possible values of the <ph id=\"ph1\">`dimensionID`</ph> parameter are properties of the <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.FrameDimension&gt;</ph>.","pos":[0,118],"source":"The possible values of the `dimensionID` parameter are properties of the <xref:System.Drawing.Imaging.FrameDimension>."},{"content":"These can be used to identify an image by its time, resolution, or page number.","pos":[119,198]}]},{"pos":[205,559],"content":"Calling this method causes all changes made to the previous frame to be discarded. Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties. If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0.","nodes":[{"content":"Calling this method causes all changes made to the previous frame to be discarded. Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties. If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0.","pos":[0,354],"nodes":[{"content":"Calling this method causes all changes made to the previous frame to be discarded.","pos":[0,82]},{"content":"Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties.","pos":[83,208]},{"content":"If the call to the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.SelectActiveFrame%2A&gt;</ph> method is successful (an exception does not occur), the method will return 0.","pos":[209,354],"source":" If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0."}]}]}],"pos":[95643,96207],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.FrameDimension\"&gt;&lt;/xref&gt;</ph> that specifies the identity of the dimension type.","source":"A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type."}],"pos":[96431,96543],"yaml":true},{"content":"The index of the active frame.","nodes":[{"pos":[0,30],"content":"The index of the active frame.","nodes":[{"content":"The index of the active frame.","pos":[0,30]}]}],"pos":[96608,96639],"yaml":true},{"content":"Always returns 0.","nodes":[{"pos":[0,17],"content":"Always returns 0.","nodes":[{"content":"Always returns 0.","pos":[0,17]}]}],"pos":[96695,96713],"yaml":true},{"content":"Stores a property item (piece of metadata) in this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,93],"content":"Stores a property item (piece of metadata) in this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Stores a property item (piece of metadata) in this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[97807,97901],"yaml":true},{"content":"If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \"Property not supported.\" If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.  \n  \n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"pos":[0,327],"content":"If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \"Property not supported.\" If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.","nodes":[{"content":"If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \"Property not supported.\" If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.","pos":[0,327],"nodes":[{"content":"If the image format does not support property items, this method throws <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> with the message \"Property not supported.\"","pos":[0,146],"source":"If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \"Property not supported.\""},{"content":"If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.","pos":[147,327]}]}]},{"pos":[334,914],"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","nodes":[{"content":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.","pos":[0,580],"nodes":[{"content":"It is difficult to set property items, because the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> class has no public constructors.","pos":[0,127],"source":"It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors."},{"content":"One way to work around this restriction is to obtain a <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> by retrieving the <ph id=\"ph2\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> property value or calling the <ph id=\"ph3\">&lt;xref:System.Drawing.Image.GetPropertyItem%2A&gt;</ph> method of an <ph id=\"ph4\">&lt;xref:System.Drawing.Image&gt;</ph> that already has property items.","pos":[128,439],"source":" One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items."},{"content":"Then you can set the fields of the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> and pass it to <ph id=\"ph2\">&lt;xref:System.Drawing.Image.SetPropertyItem%2A&gt;</ph>.","pos":[440,580],"source":" Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>."}]}]}],"pos":[97912,98833],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> to be stored.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Imaging.PropertyItem\"&gt;&lt;/xref&gt;</ph> to be stored.","source":"The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> to be stored."}],"pos":[99907,99982],"yaml":true},{"content":"The image format of this image does not support property items.","nodes":[{"pos":[0,63],"content":"The image format of this image does not support property items.","nodes":[{"content":"The image format of this image does not support property items.","pos":[0,63]}]}],"pos":[100140,100204],"yaml":true},{"content":"Gets the width and height, in pixels, of this image.","nodes":[{"pos":[0,52],"content":"Gets the width and height, in pixels, of this image.","nodes":[{"content":"Gets the width and height, in pixels, of this image.","pos":[0,52]}]}],"pos":[101012,101065],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> structure that represents the width and height, in pixels, of this image.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> structure that represents the width and height, in pixels, of this image.","source":"A <xref href=\"System.Drawing.Size\"></xref> structure that represents the width and height, in pixels, of this image."}],"pos":[101192,101309],"yaml":true},{"content":"Gets or sets an object that provides additional data about the image.","nodes":[{"pos":[0,69],"content":"Gets or sets an object that provides additional data about the image.","nodes":[{"content":"Gets or sets an object that provides additional data about the image.","pos":[0,69]}]}],"pos":[102167,102237],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that provides additional data about the image.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that provides additional data about the image.","source":"The <xref href=\"System.Object\"></xref> that provides additional data about the image."}],"pos":[102496,102582],"yaml":true},{"content":"Gets the vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,100],"content":"Gets the vertical resolution, in pixels per inch, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[103648,103749],"yaml":true},{"content":"The vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,95],"content":"The vertical resolution, in pixels per inch, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[103870,103966],"yaml":true},{"content":"Gets the width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,77],"content":"Gets the width, in pixels, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[104850,104928],"yaml":true},{"content":"The width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.","nodes":[{"pos":[0,72],"content":"The width, in pixels, of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph>.","source":"The width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>."}],"pos":[106312,106385],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.","nodes":[{"pos":[0,132],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> with the data needed to serialize the target object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object."}],"pos":[107945,108078],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to populate with data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data."}],"pos":[108349,108444],"yaml":true},{"content":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.","nodes":[{"pos":[0,112],"content":"The destination (see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>) for this serialization.","source":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization."}],"pos":[108539,108652],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Image\n  commentId: T:System.Drawing.Image\n  id: Image\n  children:\n  - System.Drawing.Image.Clone\n  - System.Drawing.Image.Dispose\n  - System.Drawing.Image.Dispose(System.Boolean)\n  - System.Drawing.Image.Finalize\n  - System.Drawing.Image.Flags\n  - System.Drawing.Image.FrameDimensionsList\n  - System.Drawing.Image.FromFile(System.String)\n  - System.Drawing.Image.FromFile(System.String,System.Boolean)\n  - System.Drawing.Image.FromHbitmap(System.IntPtr)\n  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)\n  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)\n  - System.Drawing.Image.FromStream(System.IO.Stream)\n  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)\n  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)\n  - System.Drawing.Image.GetEncoderParameterList(System.Guid)\n  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)\n  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)\n  - System.Drawing.Image.GetPropertyItem(System.Int32)\n  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)\n  - System.Drawing.Image.Height\n  - System.Drawing.Image.HorizontalResolution\n  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)\n  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)\n  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)\n  - System.Drawing.Image.Palette\n  - System.Drawing.Image.PhysicalDimension\n  - System.Drawing.Image.PixelFormat\n  - System.Drawing.Image.PropertyIdList\n  - System.Drawing.Image.PropertyItems\n  - System.Drawing.Image.RawFormat\n  - System.Drawing.Image.RemovePropertyItem(System.Int32)\n  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)\n  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)\n  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)\n  - System.Drawing.Image.Save(System.String)\n  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)\n  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)\n  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)\n  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)\n  - System.Drawing.Image.Size\n  - System.Drawing.Image.Tag\n  - System.Drawing.Image.VerticalResolution\n  - System.Drawing.Image.Width\n  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: An abstract base class that provides functionality for the <xref href=\"System.Drawing.Bitmap\"></xref> and <xref href=\"System.Drawing.Imaging.Metafile\"></xref> descended classes.\n  remarks: To draw an <xref:System.Drawing.Image> on a Windows Form, you should use one of the <xref:System.Drawing.Graphics.DrawImage%2A> methods.\n  example:\n  - \"The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \\n  \\n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \\n  \\n-   Creates a point at which to draw the upper-left corner of the image.  \\n  \\n-   Draws the unscaled image on the form.  \\n  \\n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#55)]\\n [!code-csharp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#55)]\\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#55)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  derivedClasses:\n  - System.Drawing.Bitmap\n  - System.Drawing.Imaging.Metafile\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Clone\n  commentId: M:System.Drawing.Image.Clone\n  id: Clone\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Image.Clone()\n  fullName: Image.Clone()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an exact copy of this <xref href=\"System.Drawing.Image\"></xref>.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates, cast as an object.\n  overload: System.Drawing.Image.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Dispose\n  commentId: M:System.Drawing.Image.Dispose\n  id: Dispose\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Image.Dispose()\n  fullName: Image.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"Calling the <xref:System.Drawing.Image.Dispose%2A> method allows the resources used by this <xref:System.Drawing.Image> to be reallocated for other purposes.  \\n  \\n Call <xref:System.Drawing.Image.Dispose%2A> when you are finished using the <xref:System.Drawing.Image>. The <xref:System.Drawing.Image.Dispose%2A> method leaves the <xref:System.Drawing.Image> in an unusable state. After calling <xref:System.Drawing.Image.Dispose%2A>, you must release all references to the <xref:System.Drawing.Image> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Image> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.Image.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Dispose(System.Boolean)\n  commentId: M:System.Drawing.Image.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Image.Dispose(Boolean)\n  fullName: Image.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Drawing.Image\"></xref> and optionally releases the managed resources.\n  remarks: >-\n    > [!NOTE]\n\n    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Drawing.Image.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Finalize\n  commentId: M:System.Drawing.Image.Finalize\n  id: Finalize\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: Image.Finalize()\n  fullName: Image.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~Image ();\n    parameters: []\n  overload: System.Drawing.Image.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Flags\n  commentId: P:System.Drawing.Image.Flags\n  id: Flags\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: Image.Flags\n  fullName: Image.Flags\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets attribute flags for the pixel data of this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"The integer value returned from this method will correspond to a sum of <xref:System.Drawing.Imaging.ImageFlags>, as described in the following table.  \\n  \\n|ImageFlag value|Integer representation|  \\n|---------------------|----------------------------|  \\n|`ImageFlagsNone`|0|  \\n|`ImageFlagsScalable`|1|  \\n|`ImageFlagsHasAlpha`|2|  \\n|`ImageFlagsHasTranslucent`|4|  \\n|`ImageFlagsPartiallyScalable`|8|  \\n|`ImageFlagsColorSpaceRGB`|16|  \\n|`ImageFlagsColorSpaceCMYK`|32|  \\n|`ImageFlagsColorSpaceGRAY`|64|  \\n|`ImageFlagsColorSpaceYCBCR`|128|  \\n|`ImageFlagsColorSpaceYCCK`|256|  \\n|`ImageFlagsHasRealDPI`|4096|  \\n|`ImageFlagsHasRealPixelSize`|8192|  \\n|`ImageFlagsReadOnly`|65536|  \\n|`ImageFlagsCaching`|131072|  \\n  \\n For example, if the <xref:System.Drawing.Image.Flags%2A> property for an image returned 77960, the <xref:System.Drawing.Imaging.ImageFlags> for the image would be <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, and <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Flags { get; }\n    return:\n      type: System.Int32\n      description: The integer representing a bitwise combination of <xref href=\"System.Drawing.Imaging.ImageFlags\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Flags*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FrameDimensionsList\n  commentId: P:System.Drawing.Image.FrameDimensionsList\n  id: FrameDimensionsList\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FrameDimensionsList\n  nameWithType: Image.FrameDimensionsList\n  fullName: Image.FrameDimensionsList\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets an array of GUIDs that represent the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \\n  \\n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \\n  \\n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public Guid[] FrameDimensionsList { get; }\n    return:\n      type: System.Guid[]\n      description: An array of GUIDs that specify the dimensions of frames within this <xref href=\"System.Drawing.Image\"></xref> from most significant to least significant.\n  overload: System.Drawing.Image.FrameDimensionsList*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromFile(System.String)\n  commentId: M:System.Drawing.Image.FromFile(System.String)\n  id: FromFile(System.String)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromFile(String)\n  nameWithType: Image.FromFile(String)\n  fullName: Image.FromFile(String)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file.\n  remarks: \"Managed GDI+ has built-in encoders and decoders that support the following file types:  \\n  \\n-   BMP  \\n  \\n-   GIF  \\n  \\n-   JPEG  \\n  \\n-   PNG  \\n  \\n-   TIFF  \\n  \\n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \\n  \\n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Image.FromFile%2A><xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]\"\n  syntax:\n    content: public static System.Drawing.Image FromFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>.\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates.\n  overload: System.Drawing.Image.FromFile*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: \"The file does not have a valid image format.  \\n  \\n -or-  \\n  \\n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified file does not exist.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>filename</code> is a <xref href=\"System.Uri\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)\n  commentId: M:System.Drawing.Image.FromFile(System.String,System.Boolean)\n  id: FromFile(System.String,System.Boolean)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromFile(String, Boolean)\n  nameWithType: Image.FromFile(String, Boolean)\n  fullName: Image.FromFile(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified file using embedded color management information in that file.\n  remarks: \"Managed GDI+ has built-in encoders and decoders that support the following file types:  \\n  \\n-   BMP  \\n  \\n-   GIF  \\n  \\n-   JPEG  \\n  \\n-   PNG  \\n  \\n-   TIFF  \\n  \\n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \\n  \\n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \\n  \\n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the image file. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.\"\n  example:\n  - \"The following code example demonstrates how to obtain a new bitmap using the <xref:System.Drawing.Image.FromFile%2A> method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \\n  \\n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]\\n [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]\\n [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]\"\n  syntax:\n    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);\n    parameters:\n    - id: filename\n      type: System.String\n      description: A string that contains the name of the file from which to create the <xref href=\"System.Drawing.Image\"></xref>.\n    - id: useEmbeddedColorManagement\n      type: System.Boolean\n      description: Set to `true` to use color management information embedded in the image file; otherwise, `false`.\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates.\n  overload: System.Drawing.Image.FromFile*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: \"The file does not have a valid image format.  \\n  \\n -or-  \\n  \\n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified file does not exist.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>filename</code> is a <xref href=\"System.Uri\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)\n  commentId: M:System.Drawing.Image.FromHbitmap(System.IntPtr)\n  id: FromHbitmap(System.IntPtr)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromHbitmap(IntPtr)\n  nameWithType: Image.FromHbitmap(IntPtr)\n  fullName: Image.FromHbitmap(IntPtr)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap.\n  remarks: The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.\n  syntax:\n    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);\n    parameters:\n    - id: hbitmap\n      type: System.IntPtr\n      description: The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>.\n    return:\n      type: System.Drawing.Bitmap\n      description: The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates.\n  overload: System.Drawing.Image.FromHbitmap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)\n  commentId: M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)\n  id: FromHbitmap(System.IntPtr,System.IntPtr)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromHbitmap(IntPtr, IntPtr)\n  nameWithType: Image.FromHbitmap(IntPtr, IntPtr)\n  fullName: Image.FromHbitmap(IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a <xref href=\"System.Drawing.Bitmap\"></xref> from a handle to a GDI bitmap and a handle to a GDI palette.\n  remarks: The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.\n  syntax:\n    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);\n    parameters:\n    - id: hbitmap\n      type: System.IntPtr\n      description: The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href=\"System.Drawing.Bitmap\"></xref>.\n    - id: hpalette\n      type: System.IntPtr\n      description: A handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palette used to define the bitmap colors if the bitmap specified in the <code>hBitmap</code> parameter is not a device-independent bitmap (DIB).\n    return:\n      type: System.Drawing.Bitmap\n      description: The <xref href=\"System.Drawing.Bitmap\"></xref> this method creates.\n  overload: System.Drawing.Image.FromHbitmap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)\n  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)\n  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromStream(Stream, Boolean, Boolean)\n  nameWithType: Image.FromStream(Stream, Boolean, Boolean)\n  fullName: Image.FromStream(Stream, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information and validating the image data.\n  remarks: \"The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.\"\n  syntax:\n    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: useEmbeddedColorManagement\n      type: System.Boolean\n      description: '`true` to use color management information embedded in the data stream; otherwise, `false`.'\n    - id: validateImageData\n      type: System.Boolean\n      description: '`true` to validate the image data; otherwise, `false`.'\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates.\n  overload: System.Drawing.Image.FromStream*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not have a valid image format.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromStream(System.IO.Stream)\n  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream)\n  id: FromStream(System.IO.Stream)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromStream(Stream)\n  nameWithType: Image.FromStream(Stream)\n  fullName: Image.FromStream(Stream)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream.\n  remarks: \"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \\n  \\n The stream is reset to zero if this method is called successively with the same stream.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.\"\n  syntax:\n    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates.\n  overload: System.Drawing.Image.FromStream*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The stream does not have a valid image format  \\n  \\n -or-  \\n  \\n <code>stream</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)\n  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)\n  id: FromStream(System.IO.Stream,System.Boolean)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: FromStream(Stream, Boolean)\n  nameWithType: Image.FromStream(Stream, Boolean)\n  fullName: Image.FromStream(Stream, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an <xref href=\"System.Drawing.Image\"></xref> from the specified data stream, optionally using embedded color management information in that stream.\n  remarks: \"You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \\n  \\n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \\n  \\n The stream is reset to zero if this method is called successively with the same stream.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel.\"\n  syntax:\n    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that contains the data for this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: useEmbeddedColorManagement\n      type: System.Boolean\n      description: '`true` to use color management information embedded in the data stream; otherwise, `false`.'\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> this method creates.\n  overload: System.Drawing.Image.FromStream*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The stream does not have a valid image format  \\n  \\n -or-  \\n  \\n <code>stream</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)\n  commentId: M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)\n  id: GetBounds(System.Drawing.GraphicsUnit@)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetBounds(GraphicsUnit)\n  nameWithType: Image.GetBounds(GraphicsUnit)\n  fullName: Image.GetBounds(GraphicsUnit)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the bounds of the image in the specified unit.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \\n  \\n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);\n    parameters:\n    - id: pageUnit\n      type: System.Drawing.GraphicsUnit\n      description: One of the <xref href=\"System.Drawing.GraphicsUnit\"></xref> values indicating the unit of measure for the bounding rectangle.\n    return:\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> that represents the bounds of the image, in the specified unit.\n  overload: System.Drawing.Image.GetBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)\n  commentId: M:System.Drawing.Image.GetEncoderParameterList(System.Guid)\n  id: GetEncoderParameterList(System.Guid)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetEncoderParameterList(Guid)\n  nameWithType: Image.GetEncoderParameterList(Guid)\n  fullName: Image.GetEncoderParameterList(Guid)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns information about the parameters supported by the specified image encoder.\n  syntax:\n    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);\n    parameters:\n    - id: encoder\n      type: System.Guid\n      description: A GUID that specifies the image encoder.\n    return:\n      type: System.Drawing.Imaging.EncoderParameters\n      description: An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that contains an array of <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> objects. Each <xref href=\"System.Drawing.Imaging.EncoderParameter\"></xref> contains information about one of the parameters supported by the specified image encoder.\n  overload: System.Drawing.Image.GetEncoderParameterList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)\n  commentId: M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)\n  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetFrameCount(FrameDimension)\n  nameWithType: Image.GetFrameCount(FrameDimension)\n  fullName: Image.GetFrameCount(FrameDimension)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the number of frames of the specified dimension.\n  remarks: \"This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \\n  \\n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \\n  \\n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>.\"\n  syntax:\n    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);\n    parameters:\n    - id: dimension\n      type: System.Drawing.Imaging.FrameDimension\n      description: A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type.\n    return:\n      type: System.Int32\n      description: The number of frames in the specified dimension.\n  overload: System.Drawing.Image.GetFrameCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)\n  commentId: M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)\n  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetPixelFormatSize(PixelFormat)\n  nameWithType: Image.GetPixelFormatSize(PixelFormat)\n  fullName: Image.GetPixelFormatSize(PixelFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the color depth, in number of bits per pixel, of the specified pixel format.\n  syntax:\n    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);\n    parameters:\n    - id: pixfmt\n      type: System.Drawing.Imaging.PixelFormat\n      description: The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> member that specifies the format for which to find the size.\n    return:\n      type: System.Int32\n      description: The color depth of the specified pixel format.\n  overload: System.Drawing.Image.GetPixelFormatSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetPropertyItem(System.Int32)\n  commentId: M:System.Drawing.Image.GetPropertyItem(System.Int32)\n  id: GetPropertyItem(System.Int32)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetPropertyItem(Int32)\n  nameWithType: Image.GetPropertyItem(Int32)\n  fullName: Image.GetPropertyItem(Int32)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the specified property item from this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"For a list of property item IDs and links to more information, see <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.  \\n  \\n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls <xref:System.Drawing.Image.GetPropertyItem%2A> passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]\"\n  syntax:\n    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);\n    parameters:\n    - id: propid\n      type: System.Int32\n      description: The ID of the property item to get.\n    return:\n      type: System.Drawing.Imaging.PropertyItem\n      description: The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> this method gets.\n  overload: System.Drawing.Image.GetPropertyItem*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The image format of this image does not support property items.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)\n  commentId: M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)\n  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n  nameWithType: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n  fullName: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a thumbnail for this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size. If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.  \\n  \\n The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels. If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image. It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method.\"\n  example:\n  - \"The following code example creates and displays a thumbnail image. This delegate is never called.  \\n  \\n [!code-csharp[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#getthumbnail)]\\n [!code-vb[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#getthumbnail)]\"\n  syntax:\n    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);\n    parameters:\n    - id: thumbWidth\n      type: System.Int32\n      description: The width, in pixels, of the requested thumbnail image.\n    - id: thumbHeight\n      type: System.Int32\n      description: The height, in pixels, of the requested thumbnail image.\n    - id: callback\n      type: System.Drawing.Image+GetThumbnailImageAbort\n      description: \"A <xref href=\\\"System.Drawing.Image.GetThumbnailImageAbort\\\"></xref> delegate.  \\n  \\n **Note** You must create a delegate and pass a reference to the delegate as the <code>callback</code> parameter, but the delegate is not used.\"\n    - id: callbackData\n      type: System.IntPtr\n      description: Must be <xref href=\"System.IntPtr.Zero\"></xref>.\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> that represents the thumbnail.\n  overload: System.Drawing.Image.GetThumbnailImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Height\n  commentId: P:System.Drawing.Image.Height\n  id: Height\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Height\n  nameWithType: Image.Height\n  fullName: Image.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and <xref:System.Drawing.Image.Height%2A> properties.  \\n  \\n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Height { get; }\n    return:\n      type: System.Int32\n      description: The height, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Height*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.HorizontalResolution\n  commentId: P:System.Drawing.Image.HorizontalResolution\n  id: HorizontalResolution\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: HorizontalResolution\n  nameWithType: Image.HorizontalResolution\n  fullName: Image.HorizontalResolution\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.\n  syntax:\n    content: public float HorizontalResolution { get; }\n    return:\n      type: System.Single\n      description: The horizontal resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.HorizontalResolution*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)\n  commentId: M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)\n  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: IsAlphaPixelFormat(PixelFormat)\n  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)\n  fullName: Image.IsAlphaPixelFormat(PixelFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value that indicates whether the pixel format for this <xref href=\"System.Drawing.Image\"></xref> contains alpha information.\n  syntax:\n    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);\n    parameters:\n    - id: pixfmt\n      type: System.Drawing.Imaging.PixelFormat\n      description: The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>pixfmt</code> contains alpha information; otherwise, `false`.'\n  overload: System.Drawing.Image.IsAlphaPixelFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)\n  commentId: M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)\n  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: IsCanonicalPixelFormat(PixelFormat)\n  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)\n  fullName: Image.IsCanonicalPixelFormat(PixelFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value that indicates whether the pixel format is 32 bits per pixel.\n  remarks: The canonical pixel format indicates a pixel format of 32 bits per pixel. This format specifies 24-bit color depth and an 8-bit alpha channel.\n  syntax:\n    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);\n    parameters:\n    - id: pixfmt\n      type: System.Drawing.Imaging.PixelFormat\n      description: The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>pixfmt</code> is canonical; otherwise, `false`.'\n  overload: System.Drawing.Image.IsCanonicalPixelFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)\n  commentId: M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)\n  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: IsExtendedPixelFormat(PixelFormat)\n  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)\n  fullName: Image.IsExtendedPixelFormat(PixelFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value that indicates whether the pixel format is 64 bits per pixel.\n  syntax:\n    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);\n    parameters:\n    - id: pixfmt\n      type: System.Drawing.Imaging.PixelFormat\n      description: The <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> enumeration to test.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>pixfmt</code> is extended; otherwise, `false`.'\n  overload: System.Drawing.Image.IsExtendedPixelFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Palette\n  commentId: P:System.Drawing.Image.Palette\n  id: Palette\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Palette\n  nameWithType: Image.Palette\n  fullName: Image.Palette\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the color palette used for this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: This property returns a copy of the <xref:System.Drawing.Imaging.ColorPalette> object used by this <xref:System.Drawing.Image>.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Imaging.ColorPalette Palette { get; set; }\n    return:\n      type: System.Drawing.Imaging.ColorPalette\n      description: A <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref> that represents the color palette used for this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Palette*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.PhysicalDimension\n  commentId: P:System.Drawing.Image.PhysicalDimension\n  id: PhysicalDimension\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: PhysicalDimension\n  nameWithType: Image.PhysicalDimension\n  fullName: Image.PhysicalDimension\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the width and height of this image.\n  remarks: If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.\n  syntax:\n    content: public System.Drawing.SizeF PhysicalDimension { get; }\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> structure that represents the width and height of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.PhysicalDimension*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.PixelFormat\n  commentId: P:System.Drawing.Image.PixelFormat\n  id: PixelFormat\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: PixelFormat\n  nameWithType: Image.PixelFormat\n  fullName: Image.PixelFormat\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the pixel format for this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> property.  \\n  \\n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }\n    return:\n      type: System.Drawing.Imaging.PixelFormat\n      description: A <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> that represents the pixel format for this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.PixelFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.PropertyIdList\n  commentId: P:System.Drawing.Image.PropertyIdList\n  id: PropertyIdList\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: PropertyIdList\n  nameWithType: Image.PropertyIdList\n  fullName: Image.PropertyIdList\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets IDs of the property items stored in this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: If the image has no property items or if the image format does not support property items, the <xref:System.Drawing.Image.PropertyIdList%2A> property returns an empty array (that is, an array of length zero).\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int[] PropertyIdList { get; }\n    return:\n      type: System.Int32[]\n      description: An array of the property IDs, one for each property item stored in this image.\n  overload: System.Drawing.Image.PropertyIdList*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.PropertyItems\n  commentId: P:System.Drawing.Image.PropertyItems\n  id: PropertyItems\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: PropertyItems\n  nameWithType: Image.PropertyItems\n  fullName: Image.PropertyItems\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets all the property items (pieces of metadata) stored in this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: If the image has no property items or if the image format does not support property items, <xref:System.Drawing.Image.PropertyItems%2A> returns an empty array (that is, an array of length zero).\n  example:\n  - \"The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the <xref:System.Drawing.Image.PropertyItems%2A> property.  \\n  \\n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]\\n [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]\\n [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }\n    return:\n      type: System.Drawing.Imaging.PropertyItem[]\n      description: An array of <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> objects, one for each property item stored in the image.\n  overload: System.Drawing.Image.PropertyItems*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.RawFormat\n  commentId: P:System.Drawing.Image.RawFormat\n  id: RawFormat\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: RawFormat\n  nameWithType: Image.RawFormat\n  fullName: Image.RawFormat\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the file format of this <xref href=\"System.Drawing.Image\"></xref>.\n  syntax:\n    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }\n    return:\n      type: System.Drawing.Imaging.ImageFormat\n      description: The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that represents the file format of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.RawFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)\n  commentId: M:System.Drawing.Image.RemovePropertyItem(System.Int32)\n  id: RemovePropertyItem(System.Int32)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: RemovePropertyItem(Int32)\n  nameWithType: Image.RemovePropertyItem(Int32)\n  fullName: Image.RemovePropertyItem(Int32)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Removes the specified property item from this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.\n  syntax:\n    content: public void RemovePropertyItem (int propid);\n    parameters:\n    - id: propid\n      type: System.Int32\n      description: The ID of the property item to remove.\n  overload: System.Drawing.Image.RemovePropertyItem*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The image does not contain the requested property item.  \\n  \\n -or-  \\n  \\n The image format for this image does not support property items.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)\n  commentId: M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)\n  id: RotateFlip(System.Drawing.RotateFlipType)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: RotateFlip(RotateFlipType)\n  nameWithType: Image.RotateFlip(RotateFlipType)\n  fullName: Image.RotateFlip(RotateFlipType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Rotates, flips, or rotates and flips the <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"The <xref:System.Drawing.Image.RotateFlip%2A> method rotates the image clockwise.  \\n  \\n If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur.\"\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Drawing.Image.RotateFlip%2A> method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \\n  \\n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \\n  \\n [!code-cpp[System.Drawing.BitmapMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#3)]\\n [!code-csharp[System.Drawing.BitmapMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#3)]\\n [!code-vb[System.Drawing.BitmapMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#3)]\"\n  syntax:\n    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);\n    parameters:\n    - id: rotateFlipType\n      type: System.Drawing.RotateFlipType\n      description: A <xref href=\"System.Drawing.RotateFlipType\"></xref> member that specifies the type of rotation and flip to apply to the image.\n  overload: System.Drawing.Image.RotateFlip*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  commentId: M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Save(String, ImageCodecInfo, EncoderParameters)\n  nameWithType: Image.Save(String, ImageCodecInfo, EncoderParameters)\n  fullName: Image.Save(String, ImageCodecInfo, EncoderParameters)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file, with the specified encoder and image-encoder parameters.\n  remarks: Saving the image to the same file it was constructed from is not allowed and throws an exception.\n  example:\n  - \"The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \\n  \\n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CPP/form1.cpp#3)]\\n [!code-csharp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CS/form1.cs#3)]\\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/VB/form1.vb#3)]\"\n  syntax:\n    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);\n    parameters:\n    - id: filename\n      type: System.String\n      description: A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: encoder\n      type: System.Drawing.Imaging.ImageCodecInfo\n      description: The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: encoderParams\n      type: System.Drawing.Imaging.EncoderParameters\n      description: An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> to use for this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filename</code> or <code>encoder</code> is `null.`\n  - type: System.Runtime.InteropServices.ExternalException\n    commentId: T:System.Runtime.InteropServices.ExternalException\n    description: \"The image was saved with the wrong image format.  \\n  \\n -or-  \\n  \\n The image was saved to the same file it was created from.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  commentId: M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Save(Stream, ImageCodecInfo, EncoderParameters)\n  nameWithType: Image.Save(Stream, ImageCodecInfo, EncoderParameters)\n  fullName: Image.Save(Stream, ImageCodecInfo, EncoderParameters)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Saves this image to the specified stream, with the specified encoder and image encoder parameters.\n  remarks: \"Do not save an image to the same stream that was used to construct the image. Doing so might damage the stream.  \\n  \\n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.\"\n  syntax:\n    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> where the image will be saved.\n    - id: encoder\n      type: System.Drawing.Imaging.ImageCodecInfo\n      description: The <xref href=\"System.Drawing.Imaging.ImageCodecInfo\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: encoderParams\n      type: System.Drawing.Imaging.EncoderParameters\n      description: An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that specifies parameters used by the image encoder.\n  overload: System.Drawing.Image.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.Runtime.InteropServices.ExternalException\n    commentId: T:System.Runtime.InteropServices.ExternalException\n    description: The image was saved with the wrong image format.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)\n  commentId: M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)\n  id: Save(System.String,System.Drawing.Imaging.ImageFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Save(String, ImageFormat)\n  nameWithType: Image.Save(String, ImageFormat)\n  fullName: Image.Save(String, ImageFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file in the specified format.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to construct a bitmap from a type, and how to use the <xref:System.Drawing.Image.Save%2A> method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \\n  \\n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]\\n [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]\"\n  syntax:\n    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);\n    parameters:\n    - id: filename\n      type: System.String\n      description: A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.\n    - id: format\n      type: System.Drawing.Imaging.ImageFormat\n      description: The <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> for this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filename</code> or <code>format</code> is `null.`\n  - type: System.Runtime.InteropServices.ExternalException\n    commentId: T:System.Runtime.InteropServices.ExternalException\n    description: \"The image was saved with the wrong image format.  \\n  \\n -or-  \\n  \\n The image was saved to the same file it was created from.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)\n  commentId: M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)\n  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Save(Stream, ImageFormat)\n  nameWithType: Image.Save(Stream, ImageFormat)\n  fullName: Image.Save(Stream, ImageFormat)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Saves this image to the specified stream in the specified format.\n  remarks: \"You should avoid saving an image to the same stream that was used to construct it. Doing so might damage the stream.  \\n  \\n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.\"\n  syntax:\n    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> where the image will be saved.\n    - id: format\n      type: System.Drawing.Imaging.ImageFormat\n      description: An <xref href=\"System.Drawing.Imaging.ImageFormat\"></xref> that specifies the format of the saved image.\n  overload: System.Drawing.Image.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>format</code> is `null`.\n  - type: System.Runtime.InteropServices.ExternalException\n    commentId: T:System.Runtime.InteropServices.ExternalException\n    description: The image was saved with the wrong image format\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Save(System.String)\n  commentId: M:System.Drawing.Image.Save(System.String)\n  id: Save(System.String)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Save(String)\n  nameWithType: Image.Save(String)\n  fullName: Image.Save(String)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Saves this <xref href=\"System.Drawing.Image\"></xref> to the specified file or stream.\n  remarks: \"If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used. When you use the <xref:System.Drawing.Image.Save%2A> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file. This behavior occurs because the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] component of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not have an encoder that you can use to save files as .wmf or .emf files.  \\n  \\n Saving the image to the same file it was constructed from is not allowed and throws an exception.\"\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Drawing.Image.Save%2A> method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#5)]\\n [!code-csharp[System.Drawing.ImageExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#5)]\\n [!code-vb[System.Drawing.ImageExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#5)]\"\n  syntax:\n    content: public void Save (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: A string that contains the name of the file to which to save this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filename</code> is `null.`\n  - type: System.Runtime.InteropServices.ExternalException\n    commentId: T:System.Runtime.InteropServices.ExternalException\n    description: \"The image was saved with the wrong image format.  \\n  \\n -or-  \\n  \\n The image was saved to the same file it was created from.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)\n  commentId: M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)\n  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: SaveAdd(EncoderParameters)\n  nameWithType: Image.SaveAdd(EncoderParameters)\n  fullName: Image.SaveAdd(EncoderParameters)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.\n  syntax:\n    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);\n    parameters:\n    - id: encoderParams\n      type: System.Drawing.Imaging.EncoderParameters\n      description: An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation.\n  overload: System.Drawing.Image.SaveAdd*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)\n  commentId: M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)\n  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: SaveAdd(Image, EncoderParameters)\n  nameWithType: Image.SaveAdd(Image, EncoderParameters)\n  fullName: Image.SaveAdd(Image, EncoderParameters)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds a frame to the file or stream specified in a previous call to the <xref href=\"System.Drawing.Image.Save*\"></xref> method.\n  syntax:\n    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);\n    parameters:\n    - id: image\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> that contains the frame to add.\n    - id: encoderParams\n      type: System.Drawing.Imaging.EncoderParameters\n      description: An <xref href=\"System.Drawing.Imaging.EncoderParameters\"></xref> that holds parameters required by the image encoder that is used by the save-add operation.\n  overload: System.Drawing.Image.SaveAdd*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>image</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)\n  commentId: M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)\n  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: SelectActiveFrame(FrameDimension, Int32)\n  nameWithType: Image.SelectActiveFrame(FrameDimension, Int32)\n  fullName: Image.SelectActiveFrame(FrameDimension, Int32)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Selects the frame specified by the dimension and index.\n  remarks: \"The possible values of the `dimensionID` parameter are properties of the <xref:System.Drawing.Imaging.FrameDimension>. These can be used to identify an image by its time, resolution, or page number.  \\n  \\n Calling this method causes all changes made to the previous frame to be discarded. Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties. If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0.\"\n  syntax:\n    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);\n    parameters:\n    - id: dimension\n      type: System.Drawing.Imaging.FrameDimension\n      description: A <xref href=\"System.Drawing.Imaging.FrameDimension\"></xref> that specifies the identity of the dimension type.\n    - id: frameIndex\n      type: System.Int32\n      description: The index of the active frame.\n    return:\n      type: System.Int32\n      description: Always returns 0.\n  overload: System.Drawing.Image.SelectActiveFrame*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)\n  commentId: M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)\n  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: SetPropertyItem(PropertyItem)\n  nameWithType: Image.SetPropertyItem(PropertyItem)\n  fullName: Image.SetPropertyItem(PropertyItem)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Stores a property item (piece of metadata) in this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: \"If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \\\"Property not supported.\\\" If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.  \\n  \\n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]\"\n  syntax:\n    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);\n    parameters:\n    - id: propitem\n      type: System.Drawing.Imaging.PropertyItem\n      description: The <xref href=\"System.Drawing.Imaging.PropertyItem\"></xref> to be stored.\n  overload: System.Drawing.Image.SetPropertyItem*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The image format of this image does not support property items.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Size\n  commentId: P:System.Drawing.Image.Size\n  id: Size\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Image.Size\n  fullName: Image.Size\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the width and height, in pixels, of this image.\n  syntax:\n    content: public System.Drawing.Size Size { get; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that represents the width and height, in pixels, of this image.\n  overload: System.Drawing.Image.Size*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Tag\n  commentId: P:System.Drawing.Image.Tag\n  id: Tag\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: Image.Tag\n  fullName: Image.Tag\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets an object that provides additional data about the image.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]\n\n      public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> that provides additional data about the image.\n  overload: System.Drawing.Image.Tag*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.VerticalResolution\n  commentId: P:System.Drawing.Image.VerticalResolution\n  id: VerticalResolution\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: VerticalResolution\n  nameWithType: Image.VerticalResolution\n  fullName: Image.VerticalResolution\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.\n  syntax:\n    content: public float VerticalResolution { get; }\n    return:\n      type: System.Single\n      description: The vertical resolution, in pixels per inch, of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.VerticalResolution*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.Width\n  commentId: P:System.Drawing.Image.Width\n  id: Width\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: Width\n  nameWithType: Image.Width\n  fullName: Image.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Image.Height%2A> properties.  \\n  \\n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Width { get; }\n    return:\n      type: System.Int32\n      description: The width, in pixels, of this <xref href=\"System.Drawing.Image\"></xref>.\n  overload: System.Drawing.Image.Width*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Drawing.Image\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: si\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.\n  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.InteropServices.ExternalException\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ExternalException\n  nameWithType: ExternalException\n  fullName: System.Runtime.InteropServices.ExternalException\n- uid: System.Drawing.Image.Clone\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Clone()\n  nameWithType: Image.Clone()\n  fullName: Image.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Image.Dispose\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Dispose()\n  nameWithType: Image.Dispose()\n  fullName: Image.Dispose()\n- uid: System.Drawing.Image.Dispose(System.Boolean)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Image.Dispose(Boolean)\n  fullName: Image.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Image.Finalize\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Finalize()\n  nameWithType: Image.Finalize()\n  fullName: Image.Finalize()\n- uid: System.Drawing.Image.Flags\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Flags\n  nameWithType: Image.Flags\n  fullName: Image.Flags\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.Image.FrameDimensionsList\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FrameDimensionsList\n  nameWithType: Image.FrameDimensionsList\n  fullName: Image.FrameDimensionsList\n- uid: System.Guid\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid[]\n  parent: System\n  isExternal: false\n  name: Guid[]\n  nameWithType: Guid[]\n  fullName: System.Guid[]\n  spec.csharp:\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: System.Guid\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Image.FromFile(System.String)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromFile(String)\n  nameWithType: Image.FromFile(String)\n  fullName: Image.FromFile(String)\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromFile(String, Boolean)\n  nameWithType: Image.FromFile(String, Boolean)\n  fullName: Image.FromFile(String, Boolean)\n- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromHbitmap(IntPtr)\n  nameWithType: Image.FromHbitmap(IntPtr)\n  fullName: Image.FromHbitmap(IntPtr)\n- uid: System.Drawing.Bitmap\n  parent: System.Drawing\n  isExternal: false\n  name: Bitmap\n  nameWithType: Bitmap\n  fullName: System.Drawing.Bitmap\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromHbitmap(IntPtr, IntPtr)\n  nameWithType: Image.FromHbitmap(IntPtr, IntPtr)\n  fullName: Image.FromHbitmap(IntPtr, IntPtr)\n- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromStream(Stream, Boolean, Boolean)\n  nameWithType: Image.FromStream(Stream, Boolean, Boolean)\n  fullName: Image.FromStream(Stream, Boolean, Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Drawing.Image.FromStream(System.IO.Stream)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromStream(Stream)\n  nameWithType: Image.FromStream(Stream)\n  fullName: Image.FromStream(Stream)\n- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromStream(Stream, Boolean)\n  nameWithType: Image.FromStream(Stream, Boolean)\n  fullName: Image.FromStream(Stream, Boolean)\n- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetBounds(GraphicsUnit)\n  nameWithType: Image.GetBounds(GraphicsUnit)\n  fullName: Image.GetBounds(GraphicsUnit)\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n- uid: System.Drawing.GraphicsUnit\n  parent: System.Drawing\n  isExternal: false\n  name: GraphicsUnit\n  nameWithType: GraphicsUnit\n  fullName: System.Drawing.GraphicsUnit\n- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetEncoderParameterList(Guid)\n  nameWithType: Image.GetEncoderParameterList(Guid)\n  fullName: Image.GetEncoderParameterList(Guid)\n- uid: System.Drawing.Imaging.EncoderParameters\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: EncoderParameters\n  nameWithType: EncoderParameters\n  fullName: System.Drawing.Imaging.EncoderParameters\n- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetFrameCount(FrameDimension)\n  nameWithType: Image.GetFrameCount(FrameDimension)\n  fullName: Image.GetFrameCount(FrameDimension)\n- uid: System.Drawing.Imaging.FrameDimension\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: FrameDimension\n  nameWithType: FrameDimension\n  fullName: System.Drawing.Imaging.FrameDimension\n- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetPixelFormatSize(PixelFormat)\n  nameWithType: Image.GetPixelFormatSize(PixelFormat)\n  fullName: Image.GetPixelFormatSize(PixelFormat)\n- uid: System.Drawing.Imaging.PixelFormat\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: PixelFormat\n  nameWithType: PixelFormat\n  fullName: System.Drawing.Imaging.PixelFormat\n- uid: System.Drawing.Image.GetPropertyItem(System.Int32)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetPropertyItem(Int32)\n  nameWithType: Image.GetPropertyItem(Int32)\n  fullName: Image.GetPropertyItem(Int32)\n- uid: System.Drawing.Imaging.PropertyItem\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: PropertyItem\n  nameWithType: PropertyItem\n  fullName: System.Drawing.Imaging.PropertyItem\n- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n  nameWithType: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n  fullName: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)\n- uid: System.Drawing.Image.Height\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Height\n  nameWithType: Image.Height\n  fullName: Image.Height\n- uid: System.Drawing.Image.HorizontalResolution\n  parent: System.Drawing.Image\n  isExternal: false\n  name: HorizontalResolution\n  nameWithType: Image.HorizontalResolution\n  fullName: Image.HorizontalResolution\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsAlphaPixelFormat(PixelFormat)\n  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)\n  fullName: Image.IsAlphaPixelFormat(PixelFormat)\n- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsCanonicalPixelFormat(PixelFormat)\n  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)\n  fullName: Image.IsCanonicalPixelFormat(PixelFormat)\n- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsExtendedPixelFormat(PixelFormat)\n  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)\n  fullName: Image.IsExtendedPixelFormat(PixelFormat)\n- uid: System.Drawing.Image.Palette\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Palette\n  nameWithType: Image.Palette\n  fullName: Image.Palette\n- uid: System.Drawing.Imaging.ColorPalette\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorPalette\n  nameWithType: ColorPalette\n  fullName: System.Drawing.Imaging.ColorPalette\n- uid: System.Drawing.Image.PhysicalDimension\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PhysicalDimension\n  nameWithType: Image.PhysicalDimension\n  fullName: Image.PhysicalDimension\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Drawing.Image.PixelFormat\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PixelFormat\n  nameWithType: Image.PixelFormat\n  fullName: Image.PixelFormat\n- uid: System.Drawing.Image.PropertyIdList\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PropertyIdList\n  nameWithType: Image.PropertyIdList\n  fullName: Image.PropertyIdList\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Image.PropertyItems\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PropertyItems\n  nameWithType: Image.PropertyItems\n  fullName: Image.PropertyItems\n- uid: System.Drawing.Imaging.PropertyItem[]\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: PropertyItem[]\n  nameWithType: PropertyItem[]\n  fullName: System.Drawing.Imaging.PropertyItem[]\n  spec.csharp:\n  - uid: System.Drawing.Imaging.PropertyItem\n    name: PropertyItem\n    nameWithType: PropertyItem\n    fullName: System.Drawing.Imaging.PropertyItem\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Image.RawFormat\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RawFormat\n  nameWithType: Image.RawFormat\n  fullName: Image.RawFormat\n- uid: System.Drawing.Imaging.ImageFormat\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ImageFormat\n  nameWithType: ImageFormat\n  fullName: System.Drawing.Imaging.ImageFormat\n- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RemovePropertyItem(Int32)\n  nameWithType: Image.RemovePropertyItem(Int32)\n  fullName: Image.RemovePropertyItem(Int32)\n- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RotateFlip(RotateFlipType)\n  nameWithType: Image.RotateFlip(RotateFlipType)\n  fullName: Image.RotateFlip(RotateFlipType)\n- uid: System.Drawing.RotateFlipType\n  parent: System.Drawing\n  isExternal: false\n  name: RotateFlipType\n  nameWithType: RotateFlipType\n  fullName: System.Drawing.RotateFlipType\n- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save(String, ImageCodecInfo, EncoderParameters)\n  nameWithType: Image.Save(String, ImageCodecInfo, EncoderParameters)\n  fullName: Image.Save(String, ImageCodecInfo, EncoderParameters)\n- uid: System.Drawing.Imaging.ImageCodecInfo\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ImageCodecInfo\n  nameWithType: ImageCodecInfo\n  fullName: System.Drawing.Imaging.ImageCodecInfo\n- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save(Stream, ImageCodecInfo, EncoderParameters)\n  nameWithType: Image.Save(Stream, ImageCodecInfo, EncoderParameters)\n  fullName: Image.Save(Stream, ImageCodecInfo, EncoderParameters)\n- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save(String, ImageFormat)\n  nameWithType: Image.Save(String, ImageFormat)\n  fullName: Image.Save(String, ImageFormat)\n- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save(Stream, ImageFormat)\n  nameWithType: Image.Save(Stream, ImageFormat)\n  fullName: Image.Save(Stream, ImageFormat)\n- uid: System.Drawing.Image.Save(System.String)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save(String)\n  nameWithType: Image.Save(String)\n  fullName: Image.Save(String)\n- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SaveAdd(EncoderParameters)\n  nameWithType: Image.SaveAdd(EncoderParameters)\n  fullName: Image.SaveAdd(EncoderParameters)\n- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SaveAdd(Image, EncoderParameters)\n  nameWithType: Image.SaveAdd(Image, EncoderParameters)\n  fullName: Image.SaveAdd(Image, EncoderParameters)\n- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SelectActiveFrame(FrameDimension, Int32)\n  nameWithType: Image.SelectActiveFrame(FrameDimension, Int32)\n  fullName: Image.SelectActiveFrame(FrameDimension, Int32)\n- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SetPropertyItem(PropertyItem)\n  nameWithType: Image.SetPropertyItem(PropertyItem)\n  fullName: Image.SetPropertyItem(PropertyItem)\n- uid: System.Drawing.Image.Size\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Size\n  nameWithType: Image.Size\n  fullName: Image.Size\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.Image.Tag\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Tag\n  nameWithType: Image.Tag\n  fullName: Image.Tag\n- uid: System.Drawing.Image.VerticalResolution\n  parent: System.Drawing.Image\n  isExternal: false\n  name: VerticalResolution\n  nameWithType: Image.VerticalResolution\n  fullName: Image.VerticalResolution\n- uid: System.Drawing.Image.Width\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Width\n  nameWithType: Image.Width\n  fullName: Image.Width\n- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Drawing.Image\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Drawing.Image.Dispose*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Dispose\n  nameWithType: Image.Dispose\n  fullName: Image.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Clone*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Clone\n  nameWithType: Image.Clone\n  fullName: Image.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Finalize*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Finalize\n  nameWithType: Image.Finalize\n  fullName: Image.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Flags*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Flags\n  nameWithType: Image.Flags\n  fullName: Image.Flags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.FrameDimensionsList*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FrameDimensionsList\n  nameWithType: Image.FrameDimensionsList\n  fullName: Image.FrameDimensionsList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.FromFile*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromFile\n  nameWithType: Image.FromFile\n  fullName: Image.FromFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.FromHbitmap*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromHbitmap\n  nameWithType: Image.FromHbitmap\n  fullName: Image.FromHbitmap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.FromStream*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: FromStream\n  nameWithType: Image.FromStream\n  fullName: Image.FromStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetBounds*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetBounds\n  nameWithType: Image.GetBounds\n  fullName: Image.GetBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetEncoderParameterList*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetEncoderParameterList\n  nameWithType: Image.GetEncoderParameterList\n  fullName: Image.GetEncoderParameterList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetFrameCount*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetFrameCount\n  nameWithType: Image.GetFrameCount\n  fullName: Image.GetFrameCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetPixelFormatSize*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetPixelFormatSize\n  nameWithType: Image.GetPixelFormatSize\n  fullName: Image.GetPixelFormatSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetPropertyItem*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetPropertyItem\n  nameWithType: Image.GetPropertyItem\n  fullName: Image.GetPropertyItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.GetThumbnailImage*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: GetThumbnailImage\n  nameWithType: Image.GetThumbnailImage\n  fullName: Image.GetThumbnailImage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Height*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Height\n  nameWithType: Image.Height\n  fullName: Image.Height\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.HorizontalResolution*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: HorizontalResolution\n  nameWithType: Image.HorizontalResolution\n  fullName: Image.HorizontalResolution\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.IsAlphaPixelFormat*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsAlphaPixelFormat\n  nameWithType: Image.IsAlphaPixelFormat\n  fullName: Image.IsAlphaPixelFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.IsCanonicalPixelFormat*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsCanonicalPixelFormat\n  nameWithType: Image.IsCanonicalPixelFormat\n  fullName: Image.IsCanonicalPixelFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.IsExtendedPixelFormat*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: IsExtendedPixelFormat\n  nameWithType: Image.IsExtendedPixelFormat\n  fullName: Image.IsExtendedPixelFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Palette*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Palette\n  nameWithType: Image.Palette\n  fullName: Image.Palette\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.PhysicalDimension*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PhysicalDimension\n  nameWithType: Image.PhysicalDimension\n  fullName: Image.PhysicalDimension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.PixelFormat*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PixelFormat\n  nameWithType: Image.PixelFormat\n  fullName: Image.PixelFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.PropertyIdList*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PropertyIdList\n  nameWithType: Image.PropertyIdList\n  fullName: Image.PropertyIdList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.PropertyItems*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: PropertyItems\n  nameWithType: Image.PropertyItems\n  fullName: Image.PropertyItems\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.RawFormat*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RawFormat\n  nameWithType: Image.RawFormat\n  fullName: Image.RawFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.RemovePropertyItem*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RemovePropertyItem\n  nameWithType: Image.RemovePropertyItem\n  fullName: Image.RemovePropertyItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.RotateFlip*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: RotateFlip\n  nameWithType: Image.RotateFlip\n  fullName: Image.RotateFlip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Save*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Save\n  nameWithType: Image.Save\n  fullName: Image.Save\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.SaveAdd*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SaveAdd\n  nameWithType: Image.SaveAdd\n  fullName: Image.SaveAdd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.SelectActiveFrame*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SelectActiveFrame\n  nameWithType: Image.SelectActiveFrame\n  fullName: Image.SelectActiveFrame\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.SetPropertyItem*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: SetPropertyItem\n  nameWithType: Image.SetPropertyItem\n  fullName: Image.SetPropertyItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Size*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Size\n  nameWithType: Image.Size\n  fullName: Image.Size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Tag*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Tag\n  nameWithType: Image.Tag\n  fullName: Image.Tag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.VerticalResolution*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: VerticalResolution\n  nameWithType: Image.VerticalResolution\n  fullName: Image.VerticalResolution\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.Width*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: Width\n  nameWithType: Image.Width\n  fullName: Image.Width\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Drawing.Image\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: Image.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}