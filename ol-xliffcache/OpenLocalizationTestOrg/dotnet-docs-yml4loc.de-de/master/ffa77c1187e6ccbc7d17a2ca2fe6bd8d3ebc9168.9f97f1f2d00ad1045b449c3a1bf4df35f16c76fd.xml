{"nodes":[{"content":"Allows control of code access permissions for messaging.","nodes":[{"pos":[0,56],"content":"Allows control of code access permissions for messaging.","nodes":[{"content":"Allows control of code access permissions for messaging.","pos":[0,56]}]}],"pos":[1455,1512],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class."}],"pos":[4332,4434],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission access level entries.","nodes":[{"pos":[0,152],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission access level entries.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission access level entries."}],"pos":[6071,6224],"yaml":true},{"content":"An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects. The <xref href=\"System.Messaging.MessageQueuePermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"pos":[0,200],"content":"An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects. The <xref href=\"System.Messaging.MessageQueuePermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,86],"source":"An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission.PermissionEntries\"&gt;&lt;/xref&gt;</ph> property is set to this value.","pos":[87,200],"source":" The <xref href=\"System.Messaging.MessageQueuePermission.PermissionEntries\"></xref> property is set to this value."}]}],"pos":[6746,6947],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission state.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission state.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission state."}],"pos":[8190,8328],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[8808,8892],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels and the path of the queue.","nodes":[{"pos":[0,160],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;&lt;/xref&gt;</ph> class with the specified access levels and the path of the queue.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels and the path of the queue."}],"pos":[10246,10407],"yaml":true},{"content":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.","nodes":[{"pos":[0,85],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values."}],"pos":[10926,11012],"yaml":true},{"content":"The path of the queue that is referenced by the <xref href=\"System.Messaging.MessageQueue\"></xref>.","nodes":[{"pos":[0,99],"content":"The path of the queue that is referenced by the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph>.","source":"The path of the queue that is referenced by the <xref href=\"System.Messaging.MessageQueue\"></xref>."}],"pos":[11072,11172],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels, computer to use, queue description, and queue category.","nodes":[{"pos":[0,190],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;&lt;/xref&gt;</ph> class with the specified access levels, computer to use, queue description, and queue category.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels, computer to use, queue description, and queue category."}],"pos":[12658,12849],"yaml":true},{"content":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.","nodes":[{"pos":[0,85],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values."}],"pos":[13406,13492],"yaml":true},{"content":"The name of the computer where the Message Queuing queue is located.","nodes":[{"pos":[0,68],"content":"The name of the computer where the Message Queuing queue is located.","nodes":[{"content":"The name of the computer where the Message Queuing queue is located.","pos":[0,68]}]}],"pos":[13559,13628],"yaml":true},{"content":"The queue description.","nodes":[{"pos":[0,22],"content":"The queue description.","nodes":[{"content":"The queue description.","pos":[0,22]}]}],"pos":[13689,13712],"yaml":true},{"content":"The queue category (Message Queuing type identifier).","nodes":[{"pos":[0,53],"content":"The queue category (Message Queuing type identifier).","nodes":[{"content":"The queue category (Message Queuing type identifier).","pos":[0,53]}]}],"pos":[13776,13830],"yaml":true},{"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"pos":[0,71],"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]}],"pos":[14829,14901],"yaml":true},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[15067,15108],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[16268,16344],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[16552,16612],"yaml":true},{"content":"Returns a new permission object that represents the intersection of the current permission object and the specified permission object.","nodes":[{"pos":[0,134],"content":"Returns a new permission object that represents the intersection of the current permission object and the specified permission object.","nodes":[{"content":"Returns a new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,134]}]}],"pos":[17763,17898],"yaml":true},{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","nodes":[{"pos":[0,130],"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","nodes":[{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","pos":[0,130],"nodes":[{"content":"A permission object to intersect with the current permission object.","pos":[0,68]},{"content":"It must be of the same type as the current permission object.","pos":[69,130]}]}]}],"pos":[18105,18236],"yaml":true},{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.","nodes":[{"pos":[0,231],"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.","nodes":[{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,126]},{"content":"This new permission object is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if the intersection is empty.","pos":[127,231],"source":" This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty."}]}],"pos":[18307,18539],"yaml":true},{"content":"Returns a value that indicates whether the current permission object is a subset of the specified permission object.","nodes":[{"pos":[0,116],"content":"Returns a value that indicates whether the current permission object is a subset of the specified permission object.","nodes":[{"content":"Returns a value that indicates whether the current permission object is a subset of the specified permission object.","pos":[0,116]}]}],"pos":[19698,19815],"yaml":true},{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"pos":[0,140],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]}],"pos":[20000,20141],"yaml":true},{"content":"`true` if the current permission object is a subset of the specified permission object; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if the current permission object is a subset of the specified permission object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission object is a subset of the specified permission object; otherwise, `false`."}],"pos":[20199,20309],"yaml":true},{"content":"Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","nodes":[{"pos":[0,139],"content":"Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","nodes":[{"content":"Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","pos":[0,139]}]}],"pos":[21373,21513],"yaml":true},{"content":"`true` if the permission can be represented as unrestricted; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the permission can be represented as unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the permission can be represented as unrestricted; otherwise, `false`."}],"pos":[21644,21727],"yaml":true},{"content":"Gets the collection of permission entries for this permissions request.","nodes":[{"pos":[0,71],"content":"Gets the collection of permission entries for this permissions request.","nodes":[{"content":"Gets the collection of permission entries for this permissions request.","pos":[0,71]}]}],"pos":[22809,22881],"yaml":true},{"content":"A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries for this permissions request.","nodes":[{"pos":[0,144],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"&gt;&lt;/xref&gt;</ph> that contains the permission entries for this permissions request.","source":"A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries for this permissions request."}],"pos":[23461,23606],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[24623,24693],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[24868,24941],"yaml":true},{"content":"Returns a new permission object that is the union of the current and specified permission objects.","nodes":[{"pos":[0,98],"content":"Returns a new permission object that is the union of the current and specified permission objects.","nodes":[{"content":"Returns a new permission object that is the union of the current and specified permission objects.","pos":[0,98]}]}],"pos":[26066,26165],"yaml":true},{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","nodes":[{"pos":[0,128],"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","nodes":[{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","pos":[0,128],"nodes":[{"content":"A permission object to combine with the current permission object.","pos":[0,66]},{"content":"It must be of the same type as the current permission object.","pos":[67,128]}]}]}],"pos":[26368,26497],"yaml":true},{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"pos":[0,119],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]}],"pos":[26568,26688],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueuePermission\n  commentId: T:System.Messaging.MessageQueuePermission\n  id: MessageQueuePermission\n  children:\n  - System.Messaging.MessageQueuePermission.#ctor\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  - System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  - System.Messaging.MessageQueuePermission.Copy\n  - System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  - System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  - System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Messaging.MessageQueuePermission.IsUnrestricted\n  - System.Messaging.MessageQueuePermission.PermissionEntries\n  - System.Messaging.MessageQueuePermission.ToXml\n  - System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: MessageQueuePermission\n  nameWithType: MessageQueuePermission\n  fullName: System.Messaging.MessageQueuePermission\n  type: Class\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Allows control of code access permissions for messaging.\n  remarks: ''\n  example:\n  - \"The following code example creates several instances of <xref:System.Messaging.MessageQueuePermission> and demonstrates the use of the <xref:System.Messaging.MessageQueuePermission.PermissionEntries%2A> property.  \\n  \\n [!code-csharp[MessageQueuePermission#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#0)]\"\n  syntax:\n    content: 'public sealed class MessageQueuePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.#ctor\n  commentId: M:System.Messaging.MessageQueuePermission.#ctor\n  id: '#ctor'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission()\n  nameWithType: MessageQueuePermission.MessageQueuePermission()\n  fullName: MessageQueuePermission.MessageQueuePermission()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-csharp[MessageQueuePermission#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#1)]\"\n  syntax:\n    content: public MessageQueuePermission ();\n    parameters: []\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  commentId: M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  id: '#ctor(System.Messaging.MessageQueuePermissionEntry[])'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission access level entries.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-csharp[MessageQueuePermission#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#4)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionEntry[] permissionAccessEntries);\n    parameters:\n    - id: permissionAccessEntries\n      type: System.Messaging.MessageQueuePermissionEntry[]\n      description: An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects. The <xref href=\"System.Messaging.MessageQueuePermission.PermissionEntries\"></xref> property is set to this value.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(PermissionState)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)\n  fullName: MessageQueuePermission.MessageQueuePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission state.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-csharp[MessageQueuePermission#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#5)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  commentId: M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionAccess, String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String)\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels and the path of the queue.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-csharp[MessageQueuePermission#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#2)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string path);\n    parameters:\n    - id: permissionAccess\n      type: System.Messaging.MessageQueuePermissionAccess\n      description: One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.\n    - id: path\n      type: System.String\n      description: The path of the queue that is referenced by the <xref href=\"System.Messaging.MessageQueue\"></xref>.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  commentId: M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels, computer to use, queue description, and queue category.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-csharp[MessageQueuePermission#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#3)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string machineName, string label, string category);\n    parameters:\n    - id: permissionAccess\n      type: System.Messaging.MessageQueuePermissionAccess\n      description: One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.\n    - id: machineName\n      type: System.String\n      description: The name of the computer where the Message Queuing queue is located.\n    - id: label\n      type: System.String\n      description: The queue description.\n    - id: category\n      type: System.String\n      description: The queue category (Message Queuing type identifier).\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.Copy\n  commentId: M:System.Messaging.MessageQueuePermission.Copy\n  id: Copy\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: MessageQueuePermission.Copy()\n  fullName: MessageQueuePermission.Copy()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Messaging.MessageQueuePermission.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: MessageQueuePermission.FromXml(SecurityElement)\n  fullName: MessageQueuePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Messaging.MessageQueuePermission.FromXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: MessageQueuePermission.Intersect(IPermission)\n  fullName: MessageQueuePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a new permission object that represents the intersection of the current permission object and the specified permission object.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to intersect with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.\n  overload: System.Messaging.MessageQueuePermission.Intersect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)\n  fullName: MessageQueuePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a value that indicates whether the current permission object is a subset of the specified permission object.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission object is a subset of the specified permission object; otherwise, `false`.'\n  overload: System.Messaging.MessageQueuePermission.IsSubsetOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted\n  commentId: M:System.Messaging.MessageQueuePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: MessageQueuePermission.IsUnrestricted()\n  fullName: MessageQueuePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the permission can be represented as unrestricted; otherwise, `false`.'\n  overload: System.Messaging.MessageQueuePermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries\n  commentId: P:System.Messaging.MessageQueuePermission.PermissionEntries\n  id: PermissionEntries\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n  fullName: MessageQueuePermission.PermissionEntries\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the collection of permission entries for this permissions request.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission> and gets the value of its <xref:System.Messaging.MessageQueuePermission.PermissionEntries%2A> property.  \\n  \\n [!code-csharp[MessageQueuePermission#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermission/CS/class1.cs#6)]\"\n  syntax:\n    content: public System.Messaging.MessageQueuePermissionEntryCollection PermissionEntries { get; }\n    return:\n      type: System.Messaging.MessageQueuePermissionEntryCollection\n      description: A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries for this permissions request.\n  overload: System.Messaging.MessageQueuePermission.PermissionEntries*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.ToXml\n  commentId: M:System.Messaging.MessageQueuePermission.ToXml\n  id: ToXml\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: MessageQueuePermission.ToXml()\n  fullName: MessageQueuePermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Messaging.MessageQueuePermission.ToXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  commentId: M:System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: MessageQueuePermission.Union(IPermission)\n  fullName: MessageQueuePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a new permission object that is the union of the current and specified permission objects.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Messaging.MessageQueuePermission.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.Messaging.MessageQueuePermission.#ctor\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission()\n  nameWithType: MessageQueuePermission.MessageQueuePermission()\n  fullName: MessageQueuePermission.MessageQueuePermission()\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n- uid: System.Messaging.MessageQueuePermissionEntry\n  name: MessageQueuePermissionEntry\n  nameWithType: MessageQueuePermissionEntry\n  fullName: System.Messaging.MessageQueuePermissionEntry\n- uid: System.Messaging.MessageQueuePermissionEntry[]\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntry[]\n  nameWithType: MessageQueuePermissionEntry[]\n  fullName: System.Messaging.MessageQueuePermissionEntry[]\n  spec.csharp:\n  - uid: System.Messaging.MessageQueuePermissionEntry\n    name: MessageQueuePermissionEntry\n    nameWithType: MessageQueuePermissionEntry\n    fullName: System.Messaging.MessageQueuePermissionEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(PermissionState)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)\n  fullName: MessageQueuePermission.MessageQueuePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionAccess, String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String)\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String)\n- uid: System.Messaging.MessageQueuePermissionAccess\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionAccess\n  nameWithType: MessageQueuePermissionAccess\n  fullName: System.Messaging.MessageQueuePermissionAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n  fullName: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess, String, String, String)\n- uid: System.Messaging.MessageQueuePermission.Copy\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: MessageQueuePermission.Copy()\n  fullName: MessageQueuePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: MessageQueuePermission.FromXml(SecurityElement)\n  fullName: MessageQueuePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: MessageQueuePermission.Intersect(IPermission)\n  fullName: MessageQueuePermission.Intersect(IPermission)\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)\n  fullName: MessageQueuePermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: MessageQueuePermission.IsUnrestricted()\n  fullName: MessageQueuePermission.IsUnrestricted()\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n  fullName: MessageQueuePermission.PermissionEntries\n- uid: System.Messaging.MessageQueuePermissionEntryCollection\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntryCollection\n  nameWithType: MessageQueuePermissionEntryCollection\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection\n- uid: System.Messaging.MessageQueuePermission.ToXml\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: MessageQueuePermission.ToXml()\n  fullName: MessageQueuePermission.ToXml()\n- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: MessageQueuePermission.Union(IPermission)\n  fullName: MessageQueuePermission.Union(IPermission)\n- uid: System.Messaging.MessageQueuePermission.#ctor*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission\n  nameWithType: MessageQueuePermission.MessageQueuePermission\n  fullName: MessageQueuePermission.MessageQueuePermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.Copy*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Copy\n  nameWithType: MessageQueuePermission.Copy\n  fullName: MessageQueuePermission.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.FromXml*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: MessageQueuePermission.FromXml\n  fullName: MessageQueuePermission.FromXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.Intersect*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: MessageQueuePermission.Intersect\n  fullName: MessageQueuePermission.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: MessageQueuePermission.IsSubsetOf\n  fullName: MessageQueuePermission.IsSubsetOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: MessageQueuePermission.IsUnrestricted\n  fullName: MessageQueuePermission.IsUnrestricted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n  fullName: MessageQueuePermission.PermissionEntries\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.ToXml*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: MessageQueuePermission.ToXml\n  fullName: MessageQueuePermission.ToXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Messaging.MessageQueuePermission.Union*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Union\n  nameWithType: MessageQueuePermission.Union\n  fullName: MessageQueuePermission.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueuePermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}