{"nodes":[{"content":"Presents the packet information from a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>.","nodes":[{"pos":[0,433],"content":"Presents the packet information from a call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph>.","source":"Presents the packet information from a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>."}],"pos":[925,1359],"yaml":true},{"content":"Gets the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method.","nodes":[{"pos":[0,487],"content":"Gets the origin information of the packet that was received as a result of calling the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> method or <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> method.","source":"Gets the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method."}],"pos":[2769,3257],"yaml":true},{"content":"An <xref href=\"System.Net.IPAddress\"></xref> that indicates the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method. For packets that were sent from a unicast address, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the <xref href=\"System.Net.IPAddress\"></xref> of the sender; for multicast or broadcast packets, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the multicast or broadcast <xref href=\"System.Net.IPAddress\"></xref>.","nodes":[{"pos":[0,946],"content":"An <xref href=\"System.Net.IPAddress\"></xref> that indicates the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method. For packets that were sent from a unicast address, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the <xref href=\"System.Net.IPAddress\"></xref> of the sender; for multicast or broadcast packets, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the multicast or broadcast <xref href=\"System.Net.IPAddress\"></xref>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph> that indicates the origin information of the packet that was received as a result of calling the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> method or <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> method.","pos":[0,542],"source":"An <xref href=\"System.Net.IPAddress\"></xref> that indicates the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method."},{"content":"For packets that were sent from a unicast address, the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation.Address\"&gt;&lt;/xref&gt;</ph> property will return the <ph id=\"ph2\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph> of the sender; for multicast or broadcast packets, the <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation.Address\"&gt;&lt;/xref&gt;</ph> property will return the multicast or broadcast <ph id=\"ph4\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph>.","pos":[543,946],"source":" For packets that were sent from a unicast address, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the <xref href=\"System.Net.IPAddress\"></xref> of the sender; for multicast or broadcast packets, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the multicast or broadcast <xref href=\"System.Net.IPAddress\"></xref>."}]}],"pos":[3389,4336],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"pos":[0,84],"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]}],"pos":[5756,5841],"yaml":true},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[5993,6035],"yaml":true},{"content":"`true` if <code>comparand</code> is an instance of <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> and equals the value of the instance; otherwise, `false`.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">comparand</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> and equals the value of the instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>comparand</code> is an instance of <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> and equals the value of the instance; otherwise, `false`."}],"pos":[6093,6264],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[7650,7691],"yaml":true},{"content":"The hash code is constructed from the values of the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> properties.","nodes":[{"pos":[0,183],"content":"The hash code is constructed from the values of the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> properties.","nodes":[{"content":"The hash code is constructed from the values of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> properties.","pos":[0,183],"source":"The hash code is constructed from the values of the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> properties."}]}],"pos":[7702,7886],"yaml":true,"extradata":"MT"},{"content":"An Int32 hash code.","nodes":[{"pos":[0,19],"content":"An Int32 hash code.","nodes":[{"content":"An Int32 hash code.","pos":[0,19]}]}],"pos":[8020,8040],"yaml":true},{"content":"Gets the network interface information that is associated with a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>.","nodes":[{"pos":[0,459],"content":"Gets the network interface information that is associated with a call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the network interface information that is associated with a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>."}],"pos":[9415,9875],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> value, which represents the index of the network interface. You can use this index with <xref href=\"System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\"></xref> to get more information about the relevant interface.","nodes":[{"pos":[0,270],"content":"An <xref href=\"System.Int32\"></xref> value, which represents the index of the network interface. You can use this index with <xref href=\"System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\"></xref> to get more information about the relevant interface.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value, which represents the index of the network interface.","pos":[0,96],"source":"An <xref href=\"System.Int32\"></xref> value, which represents the index of the network interface."},{"content":"You can use this index with <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\"&gt;&lt;/xref&gt;</ph> to get more information about the relevant interface.","pos":[97,270],"source":" You can use this index with <xref href=\"System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\"></xref> to get more information about the relevant interface."}]}],"pos":[9984,10255],"yaml":true},{"content":"Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are equivalent.","nodes":[{"pos":[0,113],"content":"Tests whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instances are equivalent.","source":"Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are equivalent."}],"pos":[12003,12117],"yaml":true},{"content":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.  \n  \n The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>","nodes":[{"pos":[0,175],"content":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.","nodes":[{"content":"This operator tests both the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> values for both arguments.","pos":[0,175],"source":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments."}]},{"pos":[182,387],"content":"The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName&gt;</ph>","pos":[0,205],"source":"The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>"}]}],"pos":[12128,12520],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the equality operator.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instance that is to the left of the equality operator.","source":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the equality operator."}],"pos":[12809,12928],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the equality operator.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instance that is to the right of the equality operator.","source":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the equality operator."}],"pos":[13027,13147],"yaml":true},{"content":"`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are equal; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">packetInformation1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">packetInformation2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are equal; otherwise, `false`."}],"pos":[13205,13316],"yaml":true},{"content":"Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are not equal.","nodes":[{"pos":[0,112],"content":"Tests whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instances are not equal.","source":"Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are not equal."}],"pos":[15078,15191],"yaml":true},{"content":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.  \n  \n The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>","nodes":[{"pos":[0,175],"content":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.","nodes":[{"content":"This operator tests both the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> values for both arguments.","pos":[0,175],"source":"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments."}]},{"pos":[182,388],"content":"The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName&gt;</ph>","pos":[0,206],"source":"The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>"}]}],"pos":[15202,15595],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the inequality operator.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instance that is to the left of the inequality operator.","source":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the inequality operator."}],"pos":[15886,16007],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the inequality operator.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.IPPacketInformation\"&gt;&lt;/xref&gt;</ph> instance that is to the right of the inequality operator.","source":"The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the inequality operator."}],"pos":[16106,16228],"yaml":true},{"content":"`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are unequal; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">packetInformation1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">packetInformation2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are unequal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are unequal; otherwise, `false`."}],"pos":[16286,16399],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.IPPacketInformation\n  commentId: T:System.Net.Sockets.IPPacketInformation\n  id: IPPacketInformation\n  children:\n  - System.Net.Sockets.IPPacketInformation.Address\n  - System.Net.Sockets.IPPacketInformation.Equals(System.Object)\n  - System.Net.Sockets.IPPacketInformation.GetHashCode\n  - System.Net.Sockets.IPPacketInformation.Interface\n  - System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  - System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  langs:\n  - csharp\n  name: IPPacketInformation\n  nameWithType: IPPacketInformation\n  fullName: System.Net.Sockets.IPPacketInformation\n  type: Struct\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Presents the packet information from a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>.\n  syntax:\n    content: public struct IPPacketInformation\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.Address\n  commentId: P:System.Net.Sockets.IPPacketInformation.Address\n  id: Address\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: Address\n  nameWithType: IPPacketInformation.Address\n  fullName: IPPacketInformation.Address\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method.\n  syntax:\n    content: public System.Net.IPAddress Address { get; }\n    return:\n      type: System.Net.IPAddress\n      description: An <xref href=\"System.Net.IPAddress\"></xref> that indicates the origin information of the packet that was received as a result of calling the <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> method. For packets that were sent from a unicast address, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the <xref href=\"System.Net.IPAddress\"></xref> of the sender; for multicast or broadcast packets, the <xref href=\"System.Net.Sockets.IPPacketInformation.Address\"></xref> property will return the multicast or broadcast <xref href=\"System.Net.IPAddress\"></xref>.\n  overload: System.Net.Sockets.IPPacketInformation.Address*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.Equals(System.Object)\n  commentId: M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: IPPacketInformation.Equals(Object)\n  fullName: IPPacketInformation.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object comparand);\n    parameters:\n    - id: comparand\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>comparand</code> is an instance of <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> and equals the value of the instance; otherwise, `false`.'\n  overload: System.Net.Sockets.IPPacketInformation.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.GetHashCode\n  commentId: M:System.Net.Sockets.IPPacketInformation.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: IPPacketInformation.GetHashCode()\n  fullName: IPPacketInformation.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Returns the hash code for this instance.\n  remarks: The hash code is constructed from the values of the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> properties.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An Int32 hash code.\n  overload: System.Net.Sockets.IPPacketInformation.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.Interface\n  commentId: P:System.Net.Sockets.IPPacketInformation.Interface\n  id: Interface\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: Interface\n  nameWithType: IPPacketInformation.Interface\n  fullName: IPPacketInformation.Interface\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets the network interface information that is associated with a call to <xref href=\"System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref> or <xref href=\"System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\"></xref>.\n  syntax:\n    content: public int Interface { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value, which represents the index of the network interface. You can use this index with <xref href=\"System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\"></xref> to get more information about the relevant interface.\n  overload: System.Net.Sockets.IPPacketInformation.Interface*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  commentId: M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  id: op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: op_Equality(IPPacketInformation, IPPacketInformation)\n  nameWithType: IPPacketInformation.op_Equality(IPPacketInformation, IPPacketInformation)\n  fullName: IPPacketInformation.op_Equality(IPPacketInformation, IPPacketInformation)\n  type: Operator\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are equivalent.\n  remarks: \"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.  \\n  \\n The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (System.Net.Sockets.IPPacketInformation packetInformation1, System.Net.Sockets.IPPacketInformation packetInformation2);\n    parameters:\n    - id: packetInformation1\n      type: System.Net.Sockets.IPPacketInformation\n      description: The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the equality operator.\n    - id: packetInformation2\n      type: System.Net.Sockets.IPPacketInformation\n      description: The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are equal; otherwise, `false`.'\n  overload: System.Net.Sockets.IPPacketInformation.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  commentId: M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  id: op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  parent: System.Net.Sockets.IPPacketInformation\n  langs:\n  - csharp\n  name: op_Inequality(IPPacketInformation, IPPacketInformation)\n  nameWithType: IPPacketInformation.op_Inequality(IPPacketInformation, IPPacketInformation)\n  fullName: IPPacketInformation.op_Inequality(IPPacketInformation, IPPacketInformation)\n  type: Operator\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Tests whether two specified <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instances are not equal.\n  remarks: \"This operator tests both the <xref:System.Net.Sockets.IPPacketInformation.Address%2A> and <xref:System.Net.Sockets.IPPacketInformation.Interface%2A> values for both arguments.  \\n  \\n The equivalent method for this operator is <xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (System.Net.Sockets.IPPacketInformation packetInformation1, System.Net.Sockets.IPPacketInformation packetInformation2);\n    parameters:\n    - id: packetInformation1\n      type: System.Net.Sockets.IPPacketInformation\n      description: The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the left of the inequality operator.\n    - id: packetInformation2\n      type: System.Net.Sockets.IPPacketInformation\n      description: The <xref href=\"System.Net.Sockets.IPPacketInformation\"></xref> instance that is to the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>packetInformation1</code> and <code>packetInformation2</code> are unequal; otherwise, `false`.'\n  overload: System.Net.Sockets.IPPacketInformation.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Net.Sockets.IPPacketInformation.Address\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Address\n  nameWithType: IPPacketInformation.Address\n  fullName: IPPacketInformation.Address\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Net.Sockets.IPPacketInformation.Equals(System.Object)\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: IPPacketInformation.Equals(Object)\n  fullName: IPPacketInformation.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.Sockets.IPPacketInformation.GetHashCode\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: IPPacketInformation.GetHashCode()\n  fullName: IPPacketInformation.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.IPPacketInformation.Interface\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Interface\n  nameWithType: IPPacketInformation.Interface\n  fullName: IPPacketInformation.Interface\n- uid: System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: op_Equality(IPPacketInformation, IPPacketInformation)\n  nameWithType: IPPacketInformation.op_Equality(IPPacketInformation, IPPacketInformation)\n  fullName: IPPacketInformation.op_Equality(IPPacketInformation, IPPacketInformation)\n- uid: System.Net.Sockets.IPPacketInformation\n  parent: System.Net.Sockets\n  isExternal: false\n  name: IPPacketInformation\n  nameWithType: IPPacketInformation\n  fullName: System.Net.Sockets.IPPacketInformation\n- uid: System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: op_Inequality(IPPacketInformation, IPPacketInformation)\n  nameWithType: IPPacketInformation.op_Inequality(IPPacketInformation, IPPacketInformation)\n  fullName: IPPacketInformation.op_Inequality(IPPacketInformation, IPPacketInformation)\n- uid: System.Net.Sockets.IPPacketInformation.Address*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Address\n  nameWithType: IPPacketInformation.Address\n  fullName: IPPacketInformation.Address\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n- uid: System.Net.Sockets.IPPacketInformation.Equals*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Equals\n  nameWithType: IPPacketInformation.Equals\n  fullName: IPPacketInformation.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n- uid: System.Net.Sockets.IPPacketInformation.GetHashCode*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: GetHashCode\n  nameWithType: IPPacketInformation.GetHashCode\n  fullName: IPPacketInformation.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n- uid: System.Net.Sockets.IPPacketInformation.Interface*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: Interface\n  nameWithType: IPPacketInformation.Interface\n  fullName: IPPacketInformation.Interface\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n- uid: System.Net.Sockets.IPPacketInformation.op_Equality*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: op_Equality\n  nameWithType: IPPacketInformation.op_Equality\n  fullName: IPPacketInformation.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n- uid: System.Net.Sockets.IPPacketInformation.op_Inequality*\n  parent: System.Net.Sockets.IPPacketInformation\n  isExternal: false\n  name: op_Inequality\n  nameWithType: IPPacketInformation.op_Inequality\n  fullName: IPPacketInformation.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/IPPacketInformation.xml\n"}