{"nodes":[{"content":"Represents the encrypted key encrypting credentials. These are usually used as data encrypting credentials to encrypt things like tokens.","nodes":[{"pos":[0,137],"content":"Represents the encrypted key encrypting credentials. These are usually used as data encrypting credentials to encrypt things like tokens.","nodes":[{"content":"Represents the encrypted key encrypting credentials. These are usually used as data encrypting credentials to encrypt things like tokens.","pos":[0,137],"nodes":[{"content":"Represents the encrypted key encrypting credentials.","pos":[0,52]},{"content":"These are usually used as data encrypting credentials to encrypt things like tokens.","pos":[53,137]}]}]}],"pos":[1074,1212],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"&gt;&lt;/xref&gt;</ph> class based on the specified X.509 certificate.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate."}],"pos":[3310,3475],"yaml":true},{"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively.","nodes":[{"pos":[0,192],"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively.","nodes":[{"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively.","pos":[0,192]}]}],"pos":[3486,3679],"yaml":true,"extradata":"MT"},{"content":"The certificate used to encrypt the key.","nodes":[{"pos":[0,40],"content":"The certificate used to encrypt the key.","nodes":[{"content":"The certificate used to encrypt the key.","pos":[0,40]}]}],"pos":[3953,3994],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> object, key size, and encryption algorithm.","nodes":[{"pos":[0,260],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"&gt;&lt;/xref&gt;</ph> class based on the specified <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;&lt;/xref&gt;</ph> object, key size, and encryption algorithm.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> object, key size, and encryption algorithm."}],"pos":[5564,5825],"yaml":true},{"content":"Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential.","nodes":[{"pos":[0,156],"content":"Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential.","nodes":[{"content":"Use this constructor if you already have an <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;</ph> object and you want to use it as a wrapping credential.","pos":[0,156],"source":"Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential."}]}],"pos":[5836,5993],"yaml":true,"extradata":"MT"},{"content":"The key wrapping credentials used to encrypt the session key.","nodes":[{"pos":[0,61],"content":"The key wrapping credentials used to encrypt the session key.","nodes":[{"content":"The key wrapping credentials used to encrypt the session key.","pos":[0,61]}]}],"pos":[6304,6366],"yaml":true},{"content":"The key size of the wrapped session key.","nodes":[{"pos":[0,40],"content":"The key size of the wrapped session key.","nodes":[{"content":"The key size of the wrapped session key.","pos":[0,40]}]}],"pos":[6434,6475],"yaml":true},{"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","nodes":[{"pos":[0,118],"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","nodes":[{"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","pos":[0,118],"nodes":[{"content":"A URI that represents the encryption algorithm when the session key is used.","pos":[0,76]},{"content":"This should be a symmetric key algorithm.","pos":[77,118]}]}]}],"pos":[6550,6669],"yaml":true},{"content":"<code>wrappingCredentials</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;wrappingCredentials&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>wrappingCredentials</code> is `null`."}],"pos":[6866,6910],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm.","nodes":[{"pos":[0,220],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"&gt;&lt;/xref&gt;</ph> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm."}],"pos":[8472,8693],"yaml":true},{"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm.","nodes":[{"pos":[0,148],"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm.","nodes":[{"content":"Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm.","pos":[0,148]}]}],"pos":[8704,8853],"yaml":true,"extradata":"MT"},{"content":"The certificate used to encrypt the key.","nodes":[{"pos":[0,40],"content":"The certificate used to encrypt the key.","nodes":[{"content":"The certificate used to encrypt the key.","pos":[0,40]}]}],"pos":[9203,9244],"yaml":true},{"content":"A URI that represents the key wrapping algorithm. This should be an asymmetric algorithm.","nodes":[{"pos":[0,89],"content":"A URI that represents the key wrapping algorithm. This should be an asymmetric algorithm.","nodes":[{"content":"A URI that represents the key wrapping algorithm. This should be an asymmetric algorithm.","pos":[0,89],"nodes":[{"content":"A URI that represents the key wrapping algorithm.","pos":[0,49]},{"content":"This should be an asymmetric algorithm.","pos":[50,89]}]}]}],"pos":[9320,9410],"yaml":true},{"content":"The key size of the wrapped session key.","nodes":[{"pos":[0,40],"content":"The key size of the wrapped session key.","nodes":[{"content":"The key size of the wrapped session key.","pos":[0,40]}]}],"pos":[9478,9519],"yaml":true},{"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","nodes":[{"pos":[0,118],"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","nodes":[{"content":"A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.","pos":[0,118],"nodes":[{"content":"A URI that represents the encryption algorithm when the session key is used.","pos":[0,76]},{"content":"This should be a symmetric key algorithm.","pos":[77,118]}]}]}],"pos":[9594,9713],"yaml":true},{"content":"Gets the key wrapping credentials used to encrypt the session key; for example, <xref href=\"System.IdentityModel.Tokens.X509EncryptingCredentials\"></xref>.","nodes":[{"pos":[0,155],"content":"Gets the key wrapping credentials used to encrypt the session key; for example, <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509EncryptingCredentials\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the key wrapping credentials used to encrypt the session key; for example, <xref href=\"System.IdentityModel.Tokens.X509EncryptingCredentials\"></xref>."}],"pos":[10930,11086],"yaml":true},{"content":"An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the session key.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;&lt;/xref&gt;</ph> that represents the credentials used to encrypt the session key.","source":"An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the session key."}],"pos":[11288,11427],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  commentId: T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  id: EncryptedKeyEncryptingCredentials\n  children:\n  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)\n  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)\n  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials\n  langs:\n  - csharp\n  name: EncryptedKeyEncryptingCredentials\n  nameWithType: EncryptedKeyEncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents the encrypted key encrypting credentials. These are usually used as data encrypting credentials to encrypt things like tokens.\n  syntax:\n    content: 'public class EncryptedKeyEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.EncryptingCredentials\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  langs:\n  - csharp\n  name: EncryptedKeyEncryptingCredentials(X509Certificate2)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate.\n  remarks: Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively.\n  syntax:\n    content: public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The certificate used to encrypt the key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)\n  id: '#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  langs:\n  - csharp\n  name: EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> object, key size, and encryption algorithm.\n  remarks: Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential.\n  syntax:\n    content: public EncryptedKeyEncryptingCredentials (System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int keySizeInBits, string encryptionAlgorithm);\n    parameters:\n    - id: wrappingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The key wrapping credentials used to encrypt the session key.\n    - id: keySizeInBits\n      type: System.Int32\n      description: The key size of the wrapped session key.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.\n  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wrappingCredentials</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  langs:\n  - csharp\n  name: EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\"></xref> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm.\n  remarks: Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm.\n  syntax:\n    content: public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int keySizeInBits, string encryptionAlgorithm);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The certificate used to encrypt the key.\n    - id: keyWrappingAlgorithm\n      type: System.String\n      description: A URI that represents the key wrapping algorithm. This should be an asymmetric algorithm.\n    - id: keySizeInBits\n      type: System.Int32\n      description: The key size of the wrapped session key.\n    - id: encryptionAlgorithm\n      type: System.String\n      description: A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm.\n  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials\n  commentId: P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials\n  id: WrappingCredentials\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  langs:\n  - csharp\n  name: WrappingCredentials\n  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials\n  fullName: EncryptedKeyEncryptingCredentials.WrappingCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key wrapping credentials used to encrypt the session key; for example, <xref href=\"System.IdentityModel.Tokens.X509EncryptingCredentials\"></xref>.\n  syntax:\n    content: public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }\n    return:\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> that represents the credentials used to encrypt the session key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: EncryptedKeyEncryptingCredentials(X509Certificate2)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials, Int32, String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2, String, Int32, String)\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: WrappingCredentials\n  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials\n  fullName: EncryptedKeyEncryptingCredentials.WrappingCredentials\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: EncryptedKeyEncryptingCredentials\n  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials\n  fullName: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials*\n  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials\n  isExternal: false\n  name: WrappingCredentials\n  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials\n  fullName: EncryptedKeyEncryptingCredentials.WrappingCredentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyEncryptingCredentials.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: Algorithm\n  nameWithType: EncryptingCredentials.Algorithm\n  fullName: EncryptingCredentials.Algorithm\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKey\n  nameWithType: EncryptingCredentials.SecurityKey\n  fullName: EncryptingCredentials.SecurityKey\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: EncryptingCredentials.SecurityKeyIdentifier\n  fullName: EncryptingCredentials.SecurityKeyIdentifier\n"}