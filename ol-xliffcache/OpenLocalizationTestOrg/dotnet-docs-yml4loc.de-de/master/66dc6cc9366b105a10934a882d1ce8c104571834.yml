### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
  id: TypeConverter
  children:
  - System.ComponentModel.TypeConverter.#ctor
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  langs:
  - csharp
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
  type: Class
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.
  remarks: "The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.  \n  \n> [!NOTE]\n>  For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the code examples provided.  \n  \n **Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>. For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.  \n  \n Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation. Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)."
  example:
  - "The following code example shows how to create an instance of a type converter and bind it to a class. The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]\n [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]\n [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  \n  \n When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property. The next code example requires that an enumeration called `MyPropertyEnum` has been declared.  \n  \n [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]\n [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]\n [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  \n  \n Another common type converter usage is to convert an object to a string. The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.  \n  \n [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]\n [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]\n [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  \n  \n You can also use a type converter to convert a value from its name, as shown in the next code example.  \n  \n [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]\n [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]\n [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  \n  \n In the following code example, you can use a type converter to print out the set of standard values that the object supports.  \n  \n [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]\n [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]\n [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TypeConverter
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter
  - Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  - System.UriTypeConverter
  - System.Activities.XamlIntegration.AssemblyReferenceConverter
  - System.Activities.XamlIntegration.DynamicUpdateMapConverter
  - System.Activities.XamlIntegration.DynamicUpdateMapItemConverter
  - System.Activities.XamlIntegration.ImplementationVersionConverter
  - System.Activities.XamlIntegration.TypeConverterBase
  - System.Activities.XamlIntegration.WorkflowIdentityConverter
  - System.ComponentModel.BaseNumberConverter
  - System.ComponentModel.BooleanConverter
  - System.ComponentModel.CharConverter
  - System.ComponentModel.CollectionConverter
  - System.ComponentModel.CultureInfoConverter
  - System.ComponentModel.DateTimeConverter
  - System.ComponentModel.DateTimeOffsetConverter
  - System.ComponentModel.EnumConverter
  - System.ComponentModel.ExpandableObjectConverter
  - System.ComponentModel.GuidConverter
  - System.ComponentModel.MultilineStringConverter
  - System.ComponentModel.NullableConverter
  - System.ComponentModel.ReferenceConverter
  - System.ComponentModel.StringConverter
  - System.ComponentModel.TimeSpanConverter
  - System.ComponentModel.TypeListConverter
  - System.Configuration.ConfigurationConverterBase
  - System.Diagnostics.Design.LogConverter
  - System.Drawing.ColorConverter
  - System.Drawing.FontConverter.FontNameConverter
  - System.Drawing.FontConverter
  - System.Drawing.ImageConverter
  - System.Drawing.ImageFormatConverter
  - System.Drawing.PointConverter
  - System.Drawing.RectangleConverter
  - System.Drawing.SizeConverter
  - System.Drawing.SizeFConverter
  - System.Resources.ResXFileRef.Converter
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter
  - System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter
  - System.ServiceModel.XamlIntegration.EndpointIdentityConverter
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter
  - System.Web.Configuration.LowerCaseStringConverter
  - System.Web.UI.Design.DataBindingCollectionConverter
  - System.Web.UI.Design.DataColumnSelectionConverter
  - System.Web.UI.Design.DataFieldConverter
  - System.Web.UI.Design.DataMemberConverter
  - System.Web.UI.Design.DataSourceConverter
  - System.Web.UI.Design.DataSourceViewSchemaConverter
  - System.Web.UI.Design.ExpressionsCollectionConverter
  - System.Web.UI.Design.SkinIDTypeConverter
  - System.Web.UI.Design.MobileControls.Converters.DataFieldConverter
  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter
  - System.Web.UI.Design.WebControls.DataSourceIDConverter
  - System.Web.UI.WebControls.FontNamesConverter
  - System.Web.UI.WebControls.FontUnitConverter
  - System.Web.UI.WebControls.StringArrayConverter
  - System.Web.UI.WebControls.UnitConverter
  - System.Windows.CornerRadiusConverter
  - System.Windows.CultureInfoIetfLanguageTagConverter
  - System.Windows.DeferrableContentConverter
  - System.Windows.DialogResultConverter
  - System.Windows.DurationConverter
  - System.Windows.DynamicResourceExtensionConverter
  - System.Windows.ExpressionConverter
  - System.Windows.FigureLengthConverter
  - System.Windows.FontSizeConverter
  - System.Windows.FontStretchConverter
  - System.Windows.FontStyleConverter
  - System.Windows.FontWeightConverter
  - System.Windows.GridLengthConverter
  - System.Windows.Int32RectConverter
  - System.Windows.KeySplineConverter
  - System.Windows.KeyTimeConverter
  - System.Windows.LengthConverter
  - System.Windows.PointConverter
  - System.Windows.PropertyPathConverter
  - System.Windows.RectConverter
  - System.Windows.SizeConverter
  - System.Windows.StrokeCollectionConverter
  - System.Windows.TemplateBindingExpressionConverter
  - System.Windows.TemplateBindingExtensionConverter
  - System.Windows.TextDecorationCollectionConverter
  - System.Windows.ThicknessConverter
  - System.Windows.VectorConverter
  - System.Windows.Controls.DataGridLengthConverter
  - System.Windows.Controls.VirtualizationCacheLengthConverter
  - System.Windows.Controls.Ribbon.RibbonControlLengthConverter
  - System.Windows.Controls.Ribbon.StringCollectionConverter
  - System.Windows.Forms.AxHost.StateConverter
  - System.Windows.Forms.CursorConverter
  - System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter
  - System.Windows.Forms.DataGridViewCellStyleConverter
  - System.Windows.Forms.KeysConverter
  - System.Windows.Forms.LinkArea.LinkAreaConverter
  - System.Windows.Forms.LinkConverter
  - System.Windows.Forms.ListBindingConverter
  - System.Windows.Forms.OpacityConverter
  - System.Windows.Forms.PaddingConverter
  - System.Windows.Forms.ScrollableControl.DockPaddingEdgesConverter
  - System.Windows.Forms.SelectionRangeConverter
  - System.Windows.Forms.TreeNodeConverter
  - System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter
  - System.Windows.Input.CommandConverter
  - System.Windows.Input.CursorConverter
  - System.Windows.Input.InputScopeConverter
  - System.Windows.Input.InputScopeNameConverter
  - System.Windows.Input.KeyConverter
  - System.Windows.Input.KeyGestureConverter
  - System.Windows.Input.ModifierKeysConverter
  - System.Windows.Input.MouseActionConverter
  - System.Windows.Input.MouseGestureConverter
  - System.Windows.Markup.DependencyPropertyConverter
  - System.Windows.Markup.EventSetterHandlerConverter
  - System.Windows.Markup.NameReferenceConverter
  - System.Windows.Markup.RoutedEventConverter
  - System.Windows.Markup.SetterTriggerConditionValueConverter
  - System.Windows.Markup.TemplateKeyConverter
  - System.Windows.Markup.XmlLanguageConverter
  - System.Windows.Media.BrushConverter
  - System.Windows.Media.CacheModeConverter
  - System.Windows.Media.ColorConverter
  - System.Windows.Media.DoubleCollectionConverter
  - System.Windows.Media.FontFamilyConverter
  - System.Windows.Media.GeometryConverter
  - System.Windows.Media.ImageSourceConverter
  - System.Windows.Media.Int32CollectionConverter
  - System.Windows.Media.MatrixConverter
  - System.Windows.Media.PathFigureCollectionConverter
  - System.Windows.Media.PixelFormatConverter
  - System.Windows.Media.PointCollectionConverter
  - System.Windows.Media.RequestCachePolicyConverter
  - System.Windows.Media.TransformConverter
  - System.Windows.Media.VectorCollectionConverter
  - System.Windows.Media.Animation.RepeatBehaviorConverter
  - System.Windows.Media.Converters.BaseIListConverter
  - System.Windows.Media.Media3D.Matrix3DConverter
  - System.Windows.Media.Media3D.Point3DCollectionConverter
  - System.Windows.Media.Media3D.Point3DConverter
  - System.Windows.Media.Media3D.Point4DConverter
  - System.Windows.Media.Media3D.QuaternionConverter
  - System.Windows.Media.Media3D.Rect3DConverter
  - System.Windows.Media.Media3D.Size3DConverter
  - System.Windows.Media.Media3D.Vector3DCollectionConverter
  - System.Windows.Media.Media3D.Vector3DConverter
  - System.Workflow.ComponentModel.Design.ActivityBindTypeConverter
  - System.Xaml.Schema.XamlTypeTypeConverter
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.#ctor
  commentId: M:System.ComponentModel.TypeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: TypeConverter.TypeConverter()
  type: Constructor
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.TypeConverter"></xref> class.
  syntax:
    content: public TypeConverter ();
    parameters: []
  overload: System.ComponentModel.TypeConverter.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  id: CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: TypeConverter.CanConvertFrom(Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert an object of the given type to the type of this converter.
  remarks: As implemented in this class, this method always returns `false`. It never returns `true`.
  syntax:
    content: public bool CanConvertFrom (Type sourceType);
    parameters:
    - id: sourceType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type you want to convert from.
    return:
      type: System.Boolean
      description: '`true` if this converter can perform the conversion; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
  remarks: As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.
  syntax:
    content: public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: sourceType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type you want to convert from.
    return:
      type: System.Boolean
      description: '`true` if this converter can perform the conversion; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  id: CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: TypeConverter.CanConvertTo(Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert the object to the specified type.
  remarks: If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.
  syntax:
    content: public bool CanConvertTo (Type destinationType);
    parameters:
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type you want to convert to.
    return:
      type: System.Boolean
      description: '`true` if this converter can perform the conversion; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this converter can convert the object to the specified type, using the specified context.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`."
  syntax:
    content: public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type you want to convert to.
    return:
      type: System.Boolean
      description: '`true` if this converter can perform the conversion; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  id: ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: TypeConverter.ConvertFrom(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given value to the type of this converter.
  syntax:
    content: public object ConvertFrom (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given object to the type of this converter, using the specified context and culture information.
  remarks: "Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.  \n  \n For XAML purposes, you do not typically provide branching implementations based on `culture`. This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)."
  syntax:
    content: public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo"></xref> to use as the current culture.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  id: ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: TypeConverter.ConvertFromInvariantString(String)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given string to the type of this converter, using the invariant culture.
  remarks: The default implementation always returns `null`.
  syntax:
    content: public object ConvertFromInvariantString (string text);
    parameters:
    - id: text
      type: System.String
      description: The <xref href="System.String"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted text.
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given string to the type of this converter, using the invariant culture and the specified context.
  remarks: "An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`."
  syntax:
    content: public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: text
      type: System.String
      description: The <xref href="System.String"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted text.
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given text to an object, using the specified context and culture information.
  remarks: "An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref>. If `null` is passed, the current culture is assumed.
    - id: text
      type: System.String
      description: The <xref href="System.String"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted text.
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: TypeConverter.ConvertFromString(String)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the specified text to an object.
  remarks: The default implementation always returns `null`.
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public object ConvertFromString (string text);
    parameters:
    - id: text
      type: System.String
      description: The text representation of the object to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted text.
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The string cannot be converted into the appropriate object.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given text to an object, using the specified context.
  remarks: "An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: text
      type: System.String
      description: The <xref href="System.String"></xref> to convert.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted text.
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(Object, Type)
  nameWithType: TypeConverter.ConvertTo(Object, Type)
  fullName: TypeConverter.ConvertTo(Object, Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given value object to the specified type, using the arguments.
  remarks: The most common type to convert to and from is a string object. This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.
  syntax:
    content: public object ConvertTo (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    - id: destinationType
      type: System.Type
      description: The <xref href="System.Type"></xref> to convert the <code>value</code> parameter to.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>destinationType</code> parameter is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given value object to the specified type, using the specified context and culture information.
  remarks: "The most common types to convert are to and from a string object. This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.  \n  \n Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone. In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>. For more information, see <xref:System.Windows.Markup.ValueSerializer>."
  syntax:
    content: public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref>. If `null` is passed, the current culture is assumed.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    - id: destinationType
      type: System.Type
      description: The <xref href="System.Type"></xref> to convert the <code>value</code> parameter to.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>destinationType</code> parameter is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  id: ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: TypeConverter.ConvertToInvariantString(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the specified value to a culture-invariant string representation.
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object."
  syntax:
    content: public string ConvertToInvariantString (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the specified value to a culture-invariant string representation, using the specified context.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object."
  syntax:
    content: public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given value to a string representation, using the specified context and culture information.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref>. If `null` is passed, the current culture is assumed.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.String
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: TypeConverter.ConvertToString(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the specified value to a string representation.
  remarks: Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public string ConvertToString (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.String
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Converts the given value to a string representation, using the given context.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert.
    return:
      type: System.String
      description: An <xref href="System.Object"></xref> that represents the converted value.
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The conversion cannot be performed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext, IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Creates an instance of the type that this <xref href="System.ComponentModel.TypeConverter"></xref> is associated with, using the specified context, given a set of property values for the object.
  remarks: Use this method for objects that are immutable, but for which you want to provide changeable properties.
  syntax:
    content: public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: propertyValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of new property values.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> representing the given <xref href="System.Collections.IDictionary"></xref>, or `null` if the object cannot be created. This method always returns `null`.
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  id: CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: TypeConverter.CreateInstance(IDictionary)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Re-creates an <xref href="System.Object"></xref> given a set of property values for the object.
  remarks: "Use this method for objects that are immutable, but for which you want to provide changeable properties.  \n  \n The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>."
  syntax:
    content: public object CreateInstance (System.Collections.IDictionary propertyValues);
    parameters:
    - id: propertyValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> that represents a dictionary of new property values.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> representing the given <xref href="System.Collections.IDictionary"></xref>, or `null` if the object cannot be created. This method always returns `null`.
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: TypeConverter.GetConvertFromException(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns an exception to throw when a conversion cannot be performed.
  syntax:
    content: protected Exception GetConvertFromException (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert, or `null` if the object is not available.
    return:
      type: System.Exception
      description: An <xref href="System.Exception"></xref> that represents the exception to throw when a conversion cannot be performed.
  overload: System.ComponentModel.TypeConverter.GetConvertFromException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Automatically thrown by this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertToException(Object, Type)
  nameWithType: TypeConverter.GetConvertToException(Object, Type)
  fullName: TypeConverter.GetConvertToException(Object, Type)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns an exception to throw when a conversion cannot be performed.
  syntax:
    content: protected Exception GetConvertToException (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to convert, or `null` if the object is not available.
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type the conversion was trying to convert to.
    return:
      type: System.Exception
      description: An <xref href="System.Exception"></xref> that represents the exception to throw when a conversion cannot be performed.
  overload: System.ComponentModel.TypeConverter.GetConvertToException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Automatically thrown by this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  id: GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: TypeConverter.GetCreateInstanceSupported()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether changing a value on this object requires a call to the <xref href="System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></xref> method to create a new value.
  syntax:
    content: public bool GetCreateInstanceSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if changing a property on this object requires a call to <xref href="System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></xref> to create a new value; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether changing a value on this object requires a call to <xref href="System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></xref> to create a new value, using the specified context.
  remarks: As implemented in this class, this method always returns `false`.
  syntax:
    content: public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    return:
      type: System.Boolean
      description: '`true` if changing a property on this object requires a call to <xref href="System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></xref> to create a new value; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: TypeConverter.GetProperties(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns a collection of properties for the type of array specified by the value parameter.
  remarks: "As implemented in this class, this method always returns `null`.  \n  \n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: An <xref href="System.Object"></xref> that specifies the type of array for which to get properties.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns a collection of properties for the type of array specified by the value parameter, using the specified context.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n As implemented in this class, this method always returns `null`.  \n  \n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: value
      type: System.Object
      description: An <xref href="System.Object"></xref> that specifies the type of array for which to get properties.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
  remarks: As implemented in this class, this method always returns `null`.
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: value
      type: System.Object
      description: An <xref href="System.Object"></xref> that specifies the type of array for which to get properties.
    - id: attributes
      type: System.Attribute[]
      description: An array of type <xref href="System.Attribute"></xref> that is used as a filter.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this object supports properties, using the specified context.
  remarks: As implemented in this class, this method always returns `false`.
  syntax:
    content: public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    return:
      type: System.Boolean
      description: '`true` if <xref href="System.ComponentModel.TypeConverter.GetProperties(System.Object)"></xref> should be called to find the properties of this object; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported
  id: GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: TypeConverter.GetPropertiesSupported()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this object supports properties.
  remarks: As implemented in this class, this method always returns `false`.
  syntax:
    content: public bool GetPropertiesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if <xref href="System.ComponentModel.TypeConverter.GetProperties(System.Object)"></xref> should be called to find the properties of this object; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues
  id: GetStandardValues
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: TypeConverter.GetStandardValues()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns a collection of standard values from the default context for the data type this type converter is designed for.
  remarks: As implemented in this class, this method always returns `null`.
  syntax:
    content: public System.Collections.ICollection GetStandardValues ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: A <xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"></xref> containing a standard set of valid values, or `null` if the data type does not support a standard set of values.
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
  remarks: As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.
    return:
      type: System.ComponentModel.TypeConverter+StandardValuesCollection
      description: A <xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values.
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  id: GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: TypeConverter.GetStandardValuesExclusive()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether the collection of standard values returned from <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> is an exclusive list.
  remarks: "As implemented in this class, this method always returns `false`.  \n  \n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited."
  syntax:
    content: public bool GetStandardValuesExclusive ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"></xref> returned from <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> is an exhaustive list of possible values; `false` if other values are possible.'
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether the collection of standard values returned from <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> is an exclusive list of possible values, using the specified context.
  remarks: "As implemented in this class, this method always returns `false`.  \n  \n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited."
  syntax:
    content: public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"></xref> returned from <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> is an exhaustive list of possible values; `false` if other values are possible.'
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported
  id: GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: TypeConverter.GetStandardValuesSupported()
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this object supports a standard set of values that can be picked from a list.
  syntax:
    content: public bool GetStandardValuesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> should be called to find a common set of values the object supports; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
  remarks: "As implemented in this class, this method always returns `false`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`."
  syntax:
    content: public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    return:
      type: System.Boolean
      description: '`true` if <xref href="System.ComponentModel.TypeConverter.GetStandardValues"></xref> should be called to find a common set of values the object supports; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether the given value object is valid for this type and for the specified context.
  remarks: "Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \n  \n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \n  \n```xml  \n<configuration>  \n  <appSettings>  \n    <add key=\"UseCompatibleTypeConverterBehavior\" value=\"true\" />  \n  </appSettings>  \n</configuration>  \n```"
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> that provides a format context.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the specified value is valid for this object; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: TypeConverter.IsValid(Object)
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Returns whether the given value object is valid for this type.
  remarks: "Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \n  \n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \n  \n```xml  \n<configuration>  \n  <appSettings>  \n    <add key=\"UseCompatibleTypeConverterBehavior\" value=\"true\" />  \n  </appSettings>  \n</configuration>  \n```"
  syntax:
    content: public bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the specified value is valid for this object; otherwise, `false`.'
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  id: SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: SortProperties(PropertyDescriptorCollection, String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
  type: Method
  assemblies:
  - System.ComponentModel.TypeConverter
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Sorts a collection of properties.
  remarks: All properties in the collection that are not already in the array of names are added alphabetically to the end. If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.
  syntax:
    content: protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);
    parameters:
    - id: props
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection"></xref> that has the properties to sort.
    - id: names
      type: System.String[]
      description: An array of names in the order you want the properties to appear in the collection.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: A <xref href="System.ComponentModel.PropertyDescriptorCollection"></xref> that contains the sorted properties.
  overload: System.ComponentModel.TypeConverter.SortProperties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.TypeConverter.#ctor
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: TypeConverter.TypeConverter()
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: TypeConverter.CanConvertFrom(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: TypeConverter.CanConvertTo(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: TypeConverter.ConvertFrom(Object)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: TypeConverter.ConvertFromInvariantString(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: TypeConverter.ConvertFromString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(Object, Type)
  nameWithType: TypeConverter.ConvertTo(Object, Type)
  fullName: TypeConverter.ConvertTo(Object, Type)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: TypeConverter.ConvertToInvariantString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: TypeConverter.ConvertToString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext, IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: TypeConverter.CreateInstance(IDictionary)
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: TypeConverter.GetConvertFromException(Object)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException(Object, Type)
  nameWithType: TypeConverter.GetConvertToException(Object, Type)
  fullName: TypeConverter.GetConvertToException(Object, Type)
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: TypeConverter.GetCreateInstanceSupported()
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: TypeConverter.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
- uid: System.Attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute[]
  parent: System
  isExternal: false
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: TypeConverter.GetPropertiesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: TypeConverter.GetStandardValues()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: TypeConverter.GetStandardValuesExclusive()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: TypeConverter.GetStandardValuesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: TypeConverter.IsValid(Object)
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties(PropertyDescriptorCollection, String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.#ctor*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter.TypeConverter
  fullName: TypeConverter.TypeConverter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeConverter.CanConvertFrom
  fullName: TypeConverter.CanConvertFrom
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.CanConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeConverter.CanConvertTo
  fullName: TypeConverter.CanConvertTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeConverter.ConvertFrom
  fullName: TypeConverter.ConvertFrom
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString
  nameWithType: TypeConverter.ConvertFromInvariantString
  fullName: TypeConverter.ConvertFromInvariantString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertFromString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString
  nameWithType: TypeConverter.ConvertFromString
  fullName: TypeConverter.ConvertFromString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeConverter.ConvertTo
  fullName: TypeConverter.ConvertTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString
  nameWithType: TypeConverter.ConvertToInvariantString
  fullName: TypeConverter.ConvertToInvariantString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.ConvertToString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString
  nameWithType: TypeConverter.ConvertToString
  fullName: TypeConverter.ConvertToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.CreateInstance*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance
  nameWithType: TypeConverter.CreateInstance
  fullName: TypeConverter.CreateInstance
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetConvertFromException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException
  nameWithType: TypeConverter.GetConvertFromException
  fullName: TypeConverter.GetConvertFromException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetConvertToException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException
  nameWithType: TypeConverter.GetConvertToException
  fullName: TypeConverter.GetConvertToException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: TypeConverter.GetCreateInstanceSupported
  fullName: TypeConverter.GetCreateInstanceSupported
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties
  nameWithType: TypeConverter.GetProperties
  fullName: TypeConverter.GetProperties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: TypeConverter.GetPropertiesSupported
  fullName: TypeConverter.GetPropertiesSupported
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetStandardValues*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeConverter.GetStandardValues
  fullName: TypeConverter.GetStandardValues
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeConverter.GetStandardValuesExclusive
  fullName: TypeConverter.GetStandardValuesExclusive
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeConverter.GetStandardValuesSupported
  fullName: TypeConverter.GetStandardValuesSupported
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.IsValid*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid
  nameWithType: TypeConverter.IsValid
  fullName: TypeConverter.IsValid
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.ComponentModel.TypeConverter.SortProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties
  nameWithType: TypeConverter.SortProperties
  fullName: TypeConverter.SortProperties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
