<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">018017adfbfb2170527e8a575ff35128233334e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Description.IEndpointBehavior.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc918269818ea47512f725a7a188aa82f0a8c2a8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">299d1d3f5c3d03a2eddd546c6cde2411f0a49190</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to pass custom data at runtime to enable bindings to support custom behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to an endpoint in a client application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method to confirm that a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> meets specific requirements.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> methods pass a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> object as a parameter.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter is for examination only; if you modify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> object the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects are typically used to access the various properties of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=fullName&gt;</ph>, and <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=fullName&gt;</ph> objects in a service application and the <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=fullName&gt;</ph> and <ph id="ph7">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=fullName&gt;</ph> in a client application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can access the properties of duplex clients and services using the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=fullName&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of the various properties and customizations available, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a customization has been decided upon (and the customization interface implemented if necessary) and the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> has been decided is the appropriate scope of customization, the customization must be inserted into the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime by implementing <ph id="ph3">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> and adding the endpoint behavior to the runtime.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to add the behavior to the runtime:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Programmatically add the custom endpoint behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configure the behavior using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;behaviorExtensions<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform the service customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=fullName&gt;</ph> property prior to the construction of the service runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method is called on <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a client customization task, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=fullName&gt;</ph> property before calling the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName&gt;</ph> method or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method on <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement to pass data at runtime to bindings to support custom behavior.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A&gt;</ph> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return no value if no modifications are required.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The endpoint to modify.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The objects that binding elements require to support the behavior.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Implements a modification or extension of the client across an endpoint.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> if the behavior is only intended for use in a service application.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The endpoint that is to be customized.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The client runtime to be customized.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Implements a modification or extension of the service across an endpoint.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about what customizations you can do in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are iterating through operations, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=fullName&gt;</ph> and what is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=fullName&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The endpoint that exposes the contract.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The endpoint dispatcher to be modified or extended.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Implement to confirm that the endpoint meets some intended criteria.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method to examine the structure to confirm any set of criteria.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to perform any customizations in <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A&gt;</ph> to make use of this method.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the endpoint passes validation, return; otherwise, throw an exception.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A&gt;</ph> method can be use to ensure that all endpoints use an approved corporate binding.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The endpoint to validate.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>