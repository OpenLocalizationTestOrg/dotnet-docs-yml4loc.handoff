{"nodes":[{"content":"Interoperates with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).","nodes":[{"pos":[0,115],"content":"Interoperates with the <bpt id=\"p1\">[</bpt>IDispatch interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.","source":"Interoperates with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)."}],"pos":[1635,1751],"yaml":true},{"content":"The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5). <xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods. Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object. The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.","nodes":[{"pos":[0,688],"content":"The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5). <xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods. Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object. The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.IReflect&gt;</ph> interface is used to interoperate with the <bpt id=\"p1\">[</bpt>IDispatch interface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.","pos":[0,173],"source":"The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.IReflect&gt;</ph> defines a subset of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> reflection methods.","pos":[174,270],"source":" <xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods."},{"content":"Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id=\"ph1\">`IDispatch`</ph> object.","pos":[271,408],"source":" Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> class can be used to marshal an object that implements <ph id=\"ph2\">&lt;xref:System.Reflection.IReflect&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> as a COM <ph id=\"ph4\">`IDispatch`</ph> object, and vice versa.","pos":[409,688],"source":" The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa."}]}],"pos":[1762,2451],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.Reflection.FieldInfo\"></xref> object that corresponds to the specified field and binding flag.","nodes":[{"pos":[0,125],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object that corresponds to the specified field and binding flag.","source":"Returns the <xref href=\"System.Reflection.FieldInfo\"></xref> object that corresponds to the specified field and binding flag."}],"pos":[4287,4413],"yaml":true},{"content":"The name of the field to find.","nodes":[{"pos":[0,30],"content":"The name of the field to find.","nodes":[{"content":"The name of the field to find.","pos":[0,30]}]}],"pos":[4615,4646],"yaml":true},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[4730,4781],"yaml":true},{"content":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>.","nodes":[{"pos":[0,184],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>."}],"pos":[4852,5037],"yaml":true},{"content":"The object implements multiple fields with the same name.","nodes":[{"pos":[0,57],"content":"The object implements multiple fields with the same name.","nodes":[{"content":"The object implements multiple fields with the same name.","pos":[0,57]}]}],"pos":[5228,5286],"yaml":true},{"content":"Returns an array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects that correspond to all fields of the current class.","nodes":[{"pos":[0,128],"content":"Returns an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> objects that correspond to all fields of the current class.","source":"Returns an array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects that correspond to all fields of the current class."}],"pos":[6519,6648],"yaml":true},{"content":"The match is based upon a name. Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that non-public methods are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public methods are included in the search.","nodes":[{"pos":[0,331],"content":"The match is based upon a name. Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that non-public methods are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public methods are included in the search.","nodes":[{"content":"The match is based upon a name. Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that non-public methods are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public methods are included in the search.","pos":[0,331],"nodes":[{"content":"The match is based upon a name.","pos":[0,31]},{"content":"Each field must have a unique name.","pos":[32,67]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph> flag specifies that non-public methods are included in the search.","pos":[68,201],"source":" The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that non-public methods are included in the search."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph> flag specifies that public methods are included in the search.","pos":[202,331],"source":" The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public methods are included in the search."}]}]}],"pos":[6659,6991],"yaml":true,"extradata":"MT"},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[7207,7258],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>.","nodes":[{"pos":[0,205],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>."}],"pos":[7331,7537],"yaml":true},{"content":"Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects corresponding to all public members or to all members that match a specified name.","nodes":[{"pos":[0,162],"content":"Retrieves an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects corresponding to all public members or to all members that match a specified name.","source":"Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects corresponding to all public members or to all members that match a specified name."}],"pos":[8903,9066],"yaml":true},{"content":"The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name. The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags?displayProperty=fullName>.","nodes":[{"pos":[0,383],"content":"The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name. The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name. The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags?displayProperty=fullName>.","pos":[0,383],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> method retrieves an array of <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.","pos":[0,248],"source":"The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name."},{"content":"The case of the specified name is observed or ignored, as specified by <ph id=\"ph1\">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph>.","pos":[249,383],"source":" The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags?displayProperty=fullName>."}]}]}],"pos":[9077,9461],"yaml":true,"extradata":"MT"},{"content":"The name of the member to find.","nodes":[{"pos":[0,31],"content":"The name of the member to find.","nodes":[{"content":"The name of the member to find.","pos":[0,31]}]}],"pos":[9667,9699],"yaml":true},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[9783,9834],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects matching the <code>name</code> parameter.","nodes":[{"pos":[0,111],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects matching the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects matching the <code>name</code> parameter."}],"pos":[9908,10020],"yaml":true},{"content":"Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects that correspond either to all public members or to all members of the current class.","nodes":[{"pos":[0,164],"content":"Retrieves an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects that correspond either to all public members or to all members of the current class.","source":"Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects that correspond either to all public members or to all members of the current class."}],"pos":[11326,11491],"yaml":true},{"content":"This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class. It returns an array of all of the members defined for this object.","nodes":[{"pos":[0,261],"content":"This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class. It returns an array of all of the members defined for this object.","nodes":[{"content":"This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class. It returns an array of all of the members defined for this object.","pos":[0,261],"nodes":[{"content":"This method retrieves an array of <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.","pos":[0,194],"source":"This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class."},{"content":"It returns an array of all of the members defined for this object.","pos":[195,261]}]}]}],"pos":[11502,11764],"yaml":true,"extradata":"MT"},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[11982,12033],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects containing all the member information for this reflection object.","nodes":[{"pos":[0,135],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects containing all the member information for this reflection object.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects containing all the member information for this reflection object."}],"pos":[12107,12243],"yaml":true},{"content":"Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds to a specified method under specified search constraints.","nodes":[{"pos":[0,143],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object that corresponds to a specified method under specified search constraints.","source":"Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds to a specified method under specified search constraints."}],"pos":[13610,13754],"yaml":true},{"content":"The name of the member to find.","nodes":[{"pos":[0,31],"content":"The name of the member to find.","nodes":[{"content":"The name of the member to find.","pos":[0,31]}]}],"pos":[13958,13990],"yaml":true},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[14074,14125],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>.","nodes":[{"pos":[0,201],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>."}],"pos":[14197,14399],"yaml":true},{"content":"The object implements multiple methods with the same name.","nodes":[{"pos":[0,58],"content":"The object implements multiple methods with the same name.","nodes":[{"content":"The object implements multiple methods with the same name.","pos":[0,58]}]}],"pos":[14591,14650],"yaml":true},{"content":"Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object corresponding to a specified method, using a <xref href=\"System.Type\"></xref> array to choose from among overloaded methods.","nodes":[{"pos":[0,193],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object corresponding to a specified method, using a <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> array to choose from among overloaded methods.","source":"Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object corresponding to a specified method, using a <xref href=\"System.Type\"></xref> array to choose from among overloaded methods."}],"pos":[16291,16485],"yaml":true},{"content":"The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.","nodes":[{"pos":[0,274],"content":"The return value is a match based on the method name, <ph id=\"ph1\">&lt;xref:System.Reflection.BindingFlags&gt;</ph> enum member, the kind of type conversion specified by the <ph id=\"ph2\">`binder`</ph> parameter, the overload, and the <ph id=\"ph3\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> that describes the signature of the method.","source":"The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method."}],"pos":[16496,16771],"yaml":true,"extradata":"MT"},{"content":"The name of the member to find.","nodes":[{"pos":[0,31],"content":"The name of the member to find.","nodes":[{"content":"The name of the member to find.","pos":[0,31]}]}],"pos":[17071,17103],"yaml":true},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[17187,17238],"yaml":true},{"content":"An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.","nodes":[{"pos":[0,118],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph>, containing properties related to this method.","source":"An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method."}],"pos":[17311,17430],"yaml":true},{"content":"An array used to choose among overloaded methods.","nodes":[{"pos":[0,49],"content":"An array used to choose among overloaded methods.","nodes":[{"content":"An array used to choose among overloaded methods.","pos":[0,49]}]}],"pos":[17491,17541],"yaml":true},{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","nodes":[{"pos":[0,122],"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","nodes":[{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","pos":[0,122]}]}],"pos":[17630,17753],"yaml":true},{"content":"The requested method that matches all the specified parameters.","nodes":[{"pos":[0,63],"content":"The requested method that matches all the specified parameters.","nodes":[{"content":"The requested method that matches all the specified parameters.","pos":[0,63]}]}],"pos":[17825,17889],"yaml":true},{"content":"The object implements multiple methods with the same name.","nodes":[{"pos":[0,58],"content":"The object implements multiple methods with the same name.","nodes":[{"content":"The object implements multiple methods with the same name.","pos":[0,58]}]}],"pos":[18081,18140],"yaml":true},{"content":"Retrieves an array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects with all public methods or all methods of the current class.","nodes":[{"pos":[0,140],"content":"Retrieves an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects with all public methods or all methods of the current class.","source":"Retrieves an array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects with all public methods or all methods of the current class."}],"pos":[19379,19520],"yaml":true},{"content":"The non-public attribute of `bindingAttr` is indicated only if public methods are returned.","nodes":[{"pos":[0,91],"content":"The non-public attribute of <ph id=\"ph1\">`bindingAttr`</ph> is indicated only if public methods are returned.","source":"The non-public attribute of `bindingAttr` is indicated only if public methods are returned."}],"pos":[19531,19623],"yaml":true,"extradata":"MT"},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[19841,19892],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects containing all the methods defined for this reflection object that meet the search constraints specified in <code>bindingAttr</code>.","nodes":[{"pos":[0,203],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects containing all the methods defined for this reflection object that meet the search constraints specified in <code>bindingAttr</code>."}],"pos":[19966,20170],"yaml":true},{"content":"Retrieves an array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects corresponding to all public properties or to all properties of the current class.","nodes":[{"pos":[0,163],"content":"Retrieves an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> objects corresponding to all public properties or to all properties of the current class.","source":"Retrieves an array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects corresponding to all public properties or to all properties of the current class."}],"pos":[21495,21659],"yaml":true},{"content":"The binding attribute used to control the search.","nodes":[{"pos":[0,49],"content":"The binding attribute used to control the search.","nodes":[{"content":"The binding attribute used to control the search.","pos":[0,49]}]}],"pos":[21882,21932],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects for all the properties defined on the reflection object.","nodes":[{"pos":[0,128],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> objects for all the properties defined on the reflection object.","source":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects for all the properties defined on the reflection object."}],"pos":[22008,22137],"yaml":true},{"content":"Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object corresponding to a specified property under specified search constraints.","nodes":[{"pos":[0,144],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object corresponding to a specified property under specified search constraints.","source":"Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object corresponding to a specified property under specified search constraints."}],"pos":[23519,23664],"yaml":true},{"content":"The name of the property to find.","nodes":[{"pos":[0,33],"content":"The name of the property to find.","nodes":[{"content":"The name of the property to find.","pos":[0,33]}]}],"pos":[23872,23906],"yaml":true},{"content":"The binding attributes used to control the search.","nodes":[{"pos":[0,50],"content":"The binding attributes used to control the search.","nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]}],"pos":[23990,24041],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or `null` if the property was not located.","nodes":[{"pos":[0,201],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object for the located property that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph3\">`null`</ph> if the property was not located.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or `null` if the property was not located."}],"pos":[24115,24317],"yaml":true},{"content":"The object implements multiple fields with the same name.","nodes":[{"pos":[0,57],"content":"The object implements multiple fields with the same name.","nodes":[{"content":"The object implements multiple fields with the same name.","pos":[0,57]}]}],"pos":[24511,24569],"yaml":true},{"content":"Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object that corresponds to a specified property with specified search constraints.","nodes":[{"pos":[0,146],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object that corresponds to a specified property with specified search constraints.","source":"Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object that corresponds to a specified property with specified search constraints."}],"pos":[26276,26423],"yaml":true},{"content":"This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints. A type array is used to choose from among overloaded methods.","nodes":[{"pos":[0,204],"content":"This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints. A type array is used to choose from among overloaded methods.","nodes":[{"content":"This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints. A type array is used to choose from among overloaded methods.","pos":[0,204],"nodes":[{"content":"This method retrieves a <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object corresponding to a specified property under specified search constraints.","pos":[0,142],"source":"This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints."},{"content":"A type array is used to choose from among overloaded methods.","pos":[143,204]}]}]}],"pos":[26434,26639],"yaml":true,"extradata":"MT"},{"content":"The name of the member to find.","nodes":[{"pos":[0,31],"content":"The name of the member to find.","nodes":[{"content":"The name of the member to find.","pos":[0,31]}]}],"pos":[26960,26992],"yaml":true},{"content":"The binding attribute used to control the search.","nodes":[{"pos":[0,49],"content":"The binding attribute used to control the search.","nodes":[{"content":"The binding attribute used to control the search.","pos":[0,49]}]}],"pos":[27076,27126],"yaml":true},{"content":"An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.","nodes":[{"pos":[0,118],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph>, containing properties related to this method.","source":"An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method."}],"pos":[27199,27318],"yaml":true},{"content":"The type of the property.","nodes":[{"pos":[0,25],"content":"The type of the property.","nodes":[{"content":"The type of the property.","pos":[0,25]}]}],"pos":[27382,27408],"yaml":true},{"content":"An array used to choose among overloaded methods with the same name.","nodes":[{"pos":[0,68],"content":"An array used to choose among overloaded methods with the same name.","nodes":[{"content":"An array used to choose among overloaded methods with the same name.","pos":[0,68]}]}],"pos":[27469,27538],"yaml":true},{"content":"An array used to choose the parameter modifiers.","nodes":[{"pos":[0,48],"content":"An array used to choose the parameter modifiers.","nodes":[{"content":"An array used to choose the parameter modifiers.","pos":[0,48]}]}],"pos":[27627,27676],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property, if a property with the specified name was located in this reflection object, or `null` if the property was not located.","nodes":[{"pos":[0,206],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id=\"ph2\">`null`</ph> if the property was not located.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property, if a property with the specified name was located in this reflection object, or `null` if the property was not located."}],"pos":[27750,27957],"yaml":true},{"content":"Invokes a specified member.","nodes":[{"pos":[0,27],"content":"Invokes a specified member.","nodes":[{"content":"Invokes a specified member.","pos":[0,27]}]}],"pos":[29979,30007],"yaml":true},{"content":"The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.  \n  \n A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.  \n  \n> [!NOTE]\n>  The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier. Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.  \n  \n The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on). The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder. After the method is selected, it is invoked, and accessibility is checked at that point. The search may control which set of methods is searched based upon the accessibility attribute associated with the method. <xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked. The default binder selects the most specific match.  \n  \n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.","nodes":[{"pos":[0,194],"content":"The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.","nodes":[{"content":"The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.","pos":[0,194]}]},{"pos":[201,428],"content":"A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.","nodes":[{"content":"A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.","pos":[0,227]}]},{"pos":[436,725],"content":"[!NOTE]\n The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier. Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.","leadings":["","> "],"nodes":[{"content":" The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier. Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.","pos":[8,287],"nodes":[{"content":"The array of parameter modifiers passed to the <ph id=\"ph1\">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> method must contain a single parameter modifier.","pos":[1,146],"source":" The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier."},{"content":"Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.","pos":[147,279]}]}]},{"pos":[732,1412],"content":"The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on). The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder. After the method is selected, it is invoked, and accessibility is checked at that point. The search may control which set of methods is searched based upon the accessibility attribute associated with the method. <xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked. The default binder selects the most specific match.","nodes":[{"content":"The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on). The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder. After the method is selected, it is invoked, and accessibility is checked at that point. The search may control which set of methods is searched based upon the accessibility attribute associated with the method. <xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked. The default binder selects the most specific match.","pos":[0,680],"nodes":[{"content":"The binder finds all matching methods, in accordance with the type of binding requested (<ph id=\"ph1\">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>, and so on).","pos":[0,216],"source":"The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on)."},{"content":"The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.","pos":[217,334]},{"content":"After the method is selected, it is invoked, and accessibility is checked at that point.","pos":[335,423]},{"content":"The search may control which set of methods is searched based upon the accessibility attribute associated with the method.","pos":[424,546]},{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> selects the method to be invoked.","pos":[547,628],"source":" <xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked."},{"content":"The default binder selects the most specific match.","pos":[629,680]}]}]},{"pos":[1419,1620],"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.","nodes":[{"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.","pos":[0,201],"nodes":[{"content":"Access restrictions are ignored for fully trusted code.","pos":[0,55]},{"content":"That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.","pos":[56,201]}]}]}],"pos":[30018,31650],"yaml":true,"extradata":"MT"},{"content":"The name of the member to find.","nodes":[{"pos":[0,31],"content":"The name of the member to find.","nodes":[{"content":"The name of the member to find.","pos":[0,31]}]}],"pos":[32607,32639],"yaml":true},{"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes. The <code>invokeAttr</code> parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (\"\") as the name of the member.","nodes":[{"pos":[0,321],"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes. The <code>invokeAttr</code> parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (\"\") as the name of the member.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> invocation attributes.","pos":[0,85],"source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes."},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">invokeAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter may be a constructor, method, property, or field.","pos":[86,173],"source":" The <code>invokeAttr</code> parameter may be a constructor, method, property, or field."},{"content":"A suitable invocation attribute must be specified.","pos":[174,224]},{"content":"Invoke the default member of a class by passing the empty string (\"\") as the name of the member.","pos":[225,321]}]}],"pos":[32722,33044],"yaml":true},{"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags. Implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.","nodes":[{"pos":[0,177],"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags. Implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> bit flags.","pos":[0,73],"source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags."},{"content":"Implements <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph>, containing properties related to this method.","pos":[74,177],"source":" Implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method."}]}],"pos":[33117,33295],"yaml":true},{"content":"The object on which to invoke the specified member. This parameter is ignored for static members.","nodes":[{"pos":[0,97],"content":"The object on which to invoke the specified member. This parameter is ignored for static members.","nodes":[{"content":"The object on which to invoke the specified member. This parameter is ignored for static members.","pos":[0,97],"nodes":[{"content":"The object on which to invoke the specified member.","pos":[0,51]},{"content":"This parameter is ignored for static members.","pos":[52,97]}]}]}],"pos":[33357,33455],"yaml":true},{"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.","nodes":[{"pos":[0,159],"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.","nodes":[{"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.","pos":[0,159],"nodes":[{"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked.","pos":[0,108]},{"content":"This is an empty array if there are no parameters.","pos":[109,159]}]}]}],"pos":[33517,33677],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects. This array has the same length as the <code>args</code> parameter, representing the invoked member's argument attributes in the metadata. A parameter can have the following attributes: `pdIn`, `pdOut`, `pdRetval`, `pdOptional`, and `pdHasDefault`. These represent [In], [Out], [retval], [optional], and a default parameter, respectively. These attributes are used by various interoperability services.","nodes":[{"pos":[0,479],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects. This array has the same length as the <code>args</code> parameter, representing the invoked member's argument attributes in the metadata. A parameter can have the following attributes: `pdIn`, `pdOut`, `pdRetval`, `pdOptional`, and `pdHasDefault`. These represent [In], [Out], [retval], [optional], and a default parameter, respectively. These attributes are used by various interoperability services.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,77],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects."},{"content":"This array has the same length as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, representing the invoked member's argument attributes in the metadata.","pos":[78,215],"source":" This array has the same length as the <code>args</code> parameter, representing the invoked member's argument attributes in the metadata."},{"content":"A parameter can have the following attributes: <ph id=\"ph1\">`pdIn`</ph>, <ph id=\"ph2\">`pdOut`</ph>, <ph id=\"ph3\">`pdRetval`</ph>, <ph id=\"ph4\">`pdOptional`</ph>, and <ph id=\"ph5\">`pdHasDefault`</ph>.","pos":[216,325],"source":" A parameter can have the following attributes: `pdIn`, `pdOut`, `pdRetval`, `pdOptional`, and `pdHasDefault`."},{"content":"These represent [In], [Out], [retval], [optional], and a default parameter, respectively.","pos":[326,415]},{"content":"These attributes are used by various interoperability services.","pos":[416,479]}]}],"pos":[33766,34250],"yaml":true},{"content":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. For example, <code>culture</code> converts a `String` that represents 1000 to a `Double` value, since 1000 is represented differently by different cultures. If this parameter is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,382],"content":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. For example, <code>culture</code> converts a `String` that represents 1000 to a `Double` value, since 1000 is represented differently by different cultures. If this parameter is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,106],"source":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"For example, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> converts a <ph id=\"ph2\">`String`</ph> that represents 1000 to a <ph id=\"ph3\">`Double`</ph> value, since 1000 is represented differently by different cultures.","pos":[107,263],"source":" For example, <code>culture</code> converts a `String` that represents 1000 to a `Double` value, since 1000 is represented differently by different cultures."},{"content":"If this parameter is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[264,382],"source":" If this parameter is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[34332,34715],"yaml":true},{"content":"A `String` array of parameters.","nodes":[{"pos":[0,31],"content":"A <ph id=\"ph1\">`String`</ph> array of parameters.","source":"A `String` array of parameters."}],"pos":[34788,34820],"yaml":true},{"content":"The specified member.","nodes":[{"pos":[0,21],"content":"The specified member.","nodes":[{"content":"The specified member.","pos":[0,21]}]}],"pos":[34877,34899],"yaml":true},{"content":"More than one argument is specified for a field `set`.","nodes":[{"pos":[0,54],"content":"More than one argument is specified for a field <ph id=\"ph1\">`set`</ph>.","source":"More than one argument is specified for a field `set`."}],"pos":[35060,35115],"yaml":true},{"content":"The field or property cannot be found.","nodes":[{"pos":[0,38],"content":"The field or property cannot be found.","nodes":[{"content":"The field or property cannot be found.","pos":[0,38]}]}],"pos":[35217,35256],"yaml":true},{"content":"The method cannot be found.","nodes":[{"pos":[0,27],"content":"The method cannot be found.","nodes":[{"content":"The method cannot be found.","pos":[0,27]}]}],"pos":[35360,35388],"yaml":true},{"content":"A private member is invoked without the necessary <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref>.","nodes":[{"pos":[0,120],"content":"A private member is invoked without the necessary <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.ReflectionPermission\"&gt;&lt;/xref&gt;</ph>.","source":"A private member is invoked without the necessary <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref>."}],"pos":[35500,35621],"yaml":true},{"content":"Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object.","nodes":[{"pos":[0,100],"content":"Gets the underlying type that represents the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object."}],"pos":[36784,36885],"yaml":true},{"content":"The underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object.","nodes":[{"pos":[0,95],"content":"The underlying type that represents the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;&lt;/xref&gt;</ph> object.","source":"The underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object."}],"pos":[37005,37101],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.IReflect\n  commentId: T:System.Reflection.IReflect\n  id: IReflect\n  children:\n  - System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Reflection.IReflect.UnderlyingSystemType\n  langs:\n  - csharp\n  name: IReflect\n  nameWithType: IReflect\n  fullName: System.Reflection.IReflect\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Interoperates with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).\n  remarks: The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5). <xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods. Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object. The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"AFBF15E5-C37C-11d2-B88E-00A0C9B471B8\")]\n\n      public interface IReflect\n  derivedClasses:\n  - Microsoft.JScript.ScriptObject\n  - Microsoft.JScript.TypedArray\n  - System.Type\n  - System.Runtime.InteropServices.Expando.IExpando\n  - System.Windows.Forms.AccessibleObject\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetField(String, BindingFlags)\n  nameWithType: IReflect.GetField(String, BindingFlags)\n  fullName: IReflect.GetField(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the <xref href=\"System.Reflection.FieldInfo\"></xref> object that corresponds to the specified field and binding flag.\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref href=\"System.Reflection.FieldInfo\"></xref> object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>.\n  overload: System.Reflection.IReflect.GetField*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple fields with the same name.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: IReflect.GetFields(BindingFlags)\n  fullName: IReflect.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects that correspond to all fields of the current class.\n  remarks: The match is based upon a name. Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that non-public methods are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public methods are included in the search.\n  syntax:\n    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>.\n  overload: System.Reflection.IReflect.GetFields*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetMember(String, BindingFlags)\n  nameWithType: IReflect.GetMember(String, BindingFlags)\n  fullName: IReflect.GetMember(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects corresponding to all public members or to all members that match a specified name.\n  remarks: The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name. The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags?displayProperty=fullName>.\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects matching the <code>name</code> parameter.\n  overload: System.Reflection.IReflect.GetMember*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)\n  id: GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetMembers(BindingFlags)\n  nameWithType: IReflect.GetMembers(BindingFlags)\n  fullName: IReflect.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves an array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects that correspond either to all public members or to all members of the current class.\n  remarks: This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class. It returns an array of all of the members defined for this object.\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects containing all the member information for this reflection object.\n  overload: System.Reflection.IReflect.GetMembers*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)\n  id: GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags)\n  nameWithType: IReflect.GetMethod(String, BindingFlags)\n  fullName: IReflect.GetMethod(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds to a specified method under specified search constraints.\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>.\n  overload: System.Reflection.IReflect.GetMethod*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple methods with the same name.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: IReflect.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: IReflect.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves a <xref href=\"System.Reflection.MethodInfo\"></xref> object corresponding to a specified method, using a <xref href=\"System.Type\"></xref> array to choose from among overloaded methods.\n  remarks: The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.\n    - id: types\n      type: System.Type[]\n      description: An array used to choose among overloaded methods.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.\n    return:\n      type: System.Reflection.MethodInfo\n      description: The requested method that matches all the specified parameters.\n  overload: System.Reflection.IReflect.GetMethod*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple methods with the same name.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: IReflect.GetMethods(BindingFlags)\n  fullName: IReflect.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves an array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects with all public methods or all methods of the current class.\n  remarks: The non-public attribute of `bindingAttr` is indicated only if public methods are returned.\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects containing all the methods defined for this reflection object that meet the search constraints specified in <code>bindingAttr</code>.\n  overload: System.Reflection.IReflect.GetMethods*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)\n  id: GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetProperties(BindingFlags)\n  nameWithType: IReflect.GetProperties(BindingFlags)\n  fullName: IReflect.GetProperties(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves an array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects corresponding to all public properties or to all properties of the current class.\n  syntax:\n    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attribute used to control the search.\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects for all the properties defined on the reflection object.\n  overload: System.Reflection.IReflect.GetProperties*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)\n  id: GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetProperty(String, BindingFlags)\n  nameWithType: IReflect.GetProperty(String, BindingFlags)\n  fullName: IReflect.GetProperty(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object corresponding to a specified property under specified search constraints.\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or `null` if the property was not located.\n  overload: System.Reflection.IReflect.GetProperty*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple fields with the same name.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType: IReflect.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: IReflect.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Retrieves a <xref href=\"System.Reflection.PropertyInfo\"></xref> object that corresponds to a specified property with specified search constraints.\n  remarks: This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints. A type array is used to choose from among overloaded methods.\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attribute used to control the search.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.\n    - id: returnType\n      type: System.Type\n      description: The type of the property.\n    - id: types\n      type: System.Type[]\n      description: An array used to choose among overloaded methods with the same name.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array used to choose the parameter modifiers.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object for the located property, if a property with the specified name was located in this reflection object, or `null` if the property was not located.\n  overload: System.Reflection.IReflect.GetProperty*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  commentId: M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  nameWithType: IReflect.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  fullName: IReflect.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Invokes a specified member.\n  remarks: \"The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.  \\n  \\n A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.  \\n  \\n> [!NOTE]\\n>  The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier. Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.  \\n  \\n The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on). The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder. After the method is selected, it is invoked, and accessibility is checked at that point. The search may control which set of methods is searched based upon the accessibility attribute associated with the method. <xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked. The default binder selects the most specific match.  \\n  \\n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.\"\n  example:\n  - \"The following example obtains the value of the <xref:System.DateTime.Now%2A> property.  \\n  \\n [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]\\n [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]\"\n  syntax:\n    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes. The <code>invokeAttr</code> parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (\"\") as the name of the member.\n    - id: binder\n      type: System.Reflection.Binder\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags. Implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.\n    - id: target\n      type: System.Object\n      description: The object on which to invoke the specified member. This parameter is ignored for static members.\n    - id: args\n      type: System.Object[]\n      description: An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: \"An array of <xref href=\\\"System.Reflection.ParameterModifier\\\"></xref> objects. This array has the same length as the <code>args</code> parameter, representing the invoked member's argument attributes in the metadata. A parameter can have the following attributes: `pdIn`, `pdOut`, `pdRetval`, `pdOptional`, and `pdHasDefault`. These represent [In], [Out], [retval], [optional], and a default parameter, respectively. These attributes are used by various interoperability services.\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. For example, <code>culture</code> converts a `String` that represents 1000 to a `Double` value, since 1000 is represented differently by different cultures. If this parameter is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    - id: namedParameters\n      type: System.String[]\n      description: A `String` array of parameters.\n    return:\n      type: System.Object\n      description: The specified member.\n  overload: System.Reflection.IReflect.InvokeMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one argument is specified for a field `set`.\n  - type: System.MissingFieldException\n    commentId: T:System.MissingFieldException\n    description: The field or property cannot be found.\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: The method cannot be found.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A private member is invoked without the necessary <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.IReflect.UnderlyingSystemType\n  commentId: P:System.Reflection.IReflect.UnderlyingSystemType\n  id: UnderlyingSystemType\n  parent: System.Reflection.IReflect\n  langs:\n  - csharp\n  name: UnderlyingSystemType\n  nameWithType: IReflect.UnderlyingSystemType\n  fullName: IReflect.UnderlyingSystemType\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object.\n  syntax:\n    content: public Type UnderlyingSystemType { get; }\n    return:\n      type: System.Type\n      description: The underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object.\n  overload: System.Reflection.IReflect.UnderlyingSystemType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.AmbiguousMatchException\n  parent: System.Reflection\n  isExternal: false\n  name: AmbiguousMatchException\n  nameWithType: AmbiguousMatchException\n  fullName: System.Reflection.AmbiguousMatchException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.MissingFieldException\n  parent: System\n  isExternal: false\n  name: MissingFieldException\n  nameWithType: MissingFieldException\n  fullName: System.MissingFieldException\n- uid: System.MissingMethodException\n  parent: System\n  isExternal: false\n  name: MissingMethodException\n  nameWithType: MissingMethodException\n  fullName: System.MissingMethodException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetField(String, BindingFlags)\n  nameWithType: IReflect.GetField(String, BindingFlags)\n  fullName: IReflect.GetField(String, BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: IReflect.GetFields(BindingFlags)\n  fullName: IReflect.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo[]\n  nameWithType: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMember(String, BindingFlags)\n  nameWithType: IReflect.GetMember(String, BindingFlags)\n  fullName: IReflect.GetMember(String, BindingFlags)\n- uid: System.Reflection.MemberInfo\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo[]\n  nameWithType: MemberInfo[]\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: System.Reflection.MemberInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMembers(BindingFlags)\n  nameWithType: IReflect.GetMembers(BindingFlags)\n  fullName: IReflect.GetMembers(BindingFlags)\n- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMethod(String, BindingFlags)\n  nameWithType: IReflect.GetMethod(String, BindingFlags)\n  fullName: IReflect.GetMethod(String, BindingFlags)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: IReflect.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: IReflect.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.ParameterModifier\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier\n- uid: System.Reflection.ParameterModifier[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier[]\n  nameWithType: ParameterModifier[]\n  fullName: System.Reflection.ParameterModifier[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    nameWithType: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: IReflect.GetMethods(BindingFlags)\n  fullName: IReflect.GetMethods(BindingFlags)\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo[]\n  nameWithType: MethodInfo[]\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetProperties(BindingFlags)\n  nameWithType: IReflect.GetProperties(BindingFlags)\n  fullName: IReflect.GetProperties(BindingFlags)\n- uid: System.Reflection.PropertyInfo\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Reflection.PropertyInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo[]\n  nameWithType: PropertyInfo[]\n  fullName: System.Reflection.PropertyInfo[]\n  spec.csharp:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetProperty(String, BindingFlags)\n  nameWithType: IReflect.GetProperty(String, BindingFlags)\n  fullName: IReflect.GetProperty(String, BindingFlags)\n- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType: IReflect.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: IReflect.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n- uid: System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  nameWithType: IReflect.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  fullName: IReflect.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.IReflect.UnderlyingSystemType\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: IReflect.UnderlyingSystemType\n  fullName: IReflect.UnderlyingSystemType\n- uid: System.Reflection.IReflect.GetField*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetField\n  nameWithType: IReflect.GetField\n  fullName: IReflect.GetField\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetFields*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetFields\n  nameWithType: IReflect.GetFields\n  fullName: IReflect.GetFields\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetMember*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMember\n  nameWithType: IReflect.GetMember\n  fullName: IReflect.GetMember\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetMembers*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMembers\n  nameWithType: IReflect.GetMembers\n  fullName: IReflect.GetMembers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetMethod*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMethod\n  nameWithType: IReflect.GetMethod\n  fullName: IReflect.GetMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetMethods*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetMethods\n  nameWithType: IReflect.GetMethods\n  fullName: IReflect.GetMethods\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetProperties*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetProperties\n  nameWithType: IReflect.GetProperties\n  fullName: IReflect.GetProperties\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.GetProperty*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: GetProperty\n  nameWithType: IReflect.GetProperty\n  fullName: IReflect.GetProperty\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.InvokeMember*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: InvokeMember\n  nameWithType: IReflect.InvokeMember\n  fullName: IReflect.InvokeMember\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n- uid: System.Reflection.IReflect.UnderlyingSystemType*\n  parent: System.Reflection.IReflect\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: IReflect.UnderlyingSystemType\n  fullName: IReflect.UnderlyingSystemType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/IReflect.xml\n"}