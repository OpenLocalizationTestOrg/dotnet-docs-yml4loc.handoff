{"nodes":[{"content":"Defines the interface for an STL/CLR [list](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac) object.","nodes":[{"pos":[0,123],"content":"Defines the interface for an STL/CLR <bpt id=\"p1\">[</bpt>list<ept id=\"p1\">](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac)</ept> object.","source":"Defines the interface for an STL/CLR [list](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac) object."}],"pos":[3963,4087],"yaml":true},{"content":"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]","nodes":[],"pos":[4098,4156],"yaml":true,"extradata":"MT"},{"content":"The type of a list element.","nodes":[{"pos":[0,27],"content":"The type of a list element.","nodes":[{"content":"The type of a list element.","pos":[0,27]}]}],"pos":[4379,4407],"yaml":true},{"content":"Replaces the controlled sequence with the sequence that is designated by the given enumerator.","nodes":[{"pos":[0,94],"content":"Replaces the controlled sequence with the sequence that is designated by the given enumerator.","nodes":[{"content":"Replaces the controlled sequence with the sequence that is designated by the given enumerator.","pos":[0,94]}]}],"pos":[5830,5925],"yaml":true},{"content":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.","source":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)."}],"pos":[5936,6060],"yaml":true,"extradata":"MT"},{"content":"The enumeration whose elements are to be inserted into the container.","nodes":[{"pos":[0,69],"content":"The enumeration whose elements are to be inserted into the container.","nodes":[{"content":"The enumeration whose elements are to be inserted into the container.","pos":[0,69]}]}],"pos":[6238,6308],"yaml":true},{"content":"Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>.","nodes":[{"pos":[0,131],"content":"Replaces the controlled sequence with the sequence <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">[</ph><ept id=\"p1\">&lt;/code&gt;</ept><bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">_First</ph><ept id=\"p2\">&lt;/code&gt;</ept><bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">,</ph><ept id=\"p3\">&lt;/code&gt;</ept><bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">_Last</ph><ept id=\"p4\">&lt;/code&gt;</ept><bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph5\">)</ph><ept id=\"p5\">&lt;/code&gt;</ept>.","source":"Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>."}],"pos":[7681,7813],"yaml":true},{"content":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.","source":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)."}],"pos":[7824,7948],"yaml":true,"extradata":"MT"},{"content":"The beginning position of the range of elements to insert into the container.","nodes":[{"pos":[0,77],"content":"The beginning position of the range of elements to insert into the container.","nodes":[{"content":"The beginning position of the range of elements to insert into the container.","pos":[0,77]}]}],"pos":[8233,8311],"yaml":true},{"content":"The first position beyond the range of elements to insert into the container.","nodes":[{"pos":[0,77],"content":"The first position beyond the range of elements to insert into the container.","nodes":[{"content":"The first position beyond the range of elements to insert into the container.","pos":[0,77]}]}],"pos":[8408,8486],"yaml":true},{"content":"Replaces the controlled sequence with the specified number of the given element.","nodes":[{"pos":[0,80],"content":"Replaces the controlled sequence with the specified number of the given element.","nodes":[{"content":"Replaces the controlled sequence with the specified number of the given element.","pos":[0,80]}]}],"pos":[9496,9577],"yaml":true},{"content":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.","source":"For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)."}],"pos":[9588,9712],"yaml":true,"extradata":"MT"},{"content":"The number of elements to insert into the container.","nodes":[{"pos":[0,52],"content":"The number of elements to insert into the container.","nodes":[{"content":"The number of elements to insert into the container.","pos":[0,52]}]}],"pos":[9858,9911],"yaml":true},{"content":"The value of the elements to insert into the container.","nodes":[{"pos":[0,55],"content":"The value of the elements to insert into the container.","nodes":[{"content":"The value of the elements to insert into the container.","pos":[0,55]}]}],"pos":[9964,10020],"yaml":true},{"content":"Accesses the last element of the container.","nodes":[{"pos":[0,43],"content":"Accesses the last element of the container.","nodes":[{"content":"Accesses the last element of the container.","pos":[0,43]}]}],"pos":[10928,10972],"yaml":true},{"content":"For more information, see [list::back (STL/CLR)](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07)</ept>.","source":"For more information, see [list::back (STL/CLR)](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07)."}],"pos":[10983,11105],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,69],"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The last element of the controlled sequence, which must be non-empty.","pos":[0,69]}]}],"pos":[11221,11291],"yaml":true},{"content":"Accesses the last element of the container.","nodes":[{"pos":[0,43],"content":"Accesses the last element of the container.","nodes":[{"content":"Accesses the last element of the container.","pos":[0,43]}]}],"pos":[12223,12267],"yaml":true},{"content":"For more information, see [list::back_item (STL/CLR)](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::back_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a)</ept>.","source":"For more information, see [list::back_item (STL/CLR)](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a)."}],"pos":[12278,12405],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,69],"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The last element of the controlled sequence, which must be non-empty.","pos":[0,69]}]}],"pos":[12516,12586],"yaml":true},{"content":"Designates the beginning of the controlled sequence.","nodes":[{"pos":[0,52],"content":"Designates the beginning of the controlled sequence.","nodes":[{"content":"Designates the beginning of the controlled sequence.","pos":[0,52]}]}],"pos":[13827,13880],"yaml":true},{"content":"For more information, see [list::begin (STL/CLR)](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::begin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646)</ept>.","source":"For more information, see [list::begin (STL/CLR)](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646)."}],"pos":[13891,14014],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[14423,14436],"yaml":true},{"content":"Removes all elements from the container.","nodes":[{"pos":[0,40],"content":"Removes all elements from the container.","nodes":[{"content":"Removes all elements from the container.","pos":[0,40]}]}],"pos":[15349,15390],"yaml":true},{"content":"For more information, see [list::clear (STL/CLR)](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::clear (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20)</ept>.","source":"For more information, see [list::clear (STL/CLR)](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20)."}],"pos":[15401,15524],"yaml":true,"extradata":"MT"},{"content":"Tests whether the container has no elements.","nodes":[{"pos":[0,44],"content":"Tests whether the container has no elements.","nodes":[{"content":"Tests whether the container has no elements.","pos":[0,44]}]}],"pos":[16501,16546],"yaml":true},{"content":"For more information, see [list::empty (STL/CLR)](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::empty (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8)</ept>.","source":"For more information, see [list::empty (STL/CLR)](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8)."}],"pos":[16557,16680],"yaml":true,"extradata":"MT"},{"content":"`true` if the container has no elements; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the container has no elements; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the container has no elements; otherwise, `false`."}],"pos":[16802,16865],"yaml":true},{"content":"Designates the end of the controlled sequence.","nodes":[{"pos":[0,46],"content":"Designates the end of the controlled sequence.","nodes":[{"content":"Designates the end of the controlled sequence.","pos":[0,46]}]}],"pos":[18090,18137],"yaml":true},{"content":"For more information, see [list::end (STL/CLR)](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e).","nodes":[{"pos":[0,120],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::end (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e)</ept>.","source":"For more information, see [list::end (STL/CLR)](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e)."}],"pos":[18148,18269],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[18676,18689],"yaml":true},{"content":"Accesses the first element of the container.","nodes":[{"pos":[0,44],"content":"Accesses the first element of the container.","nodes":[{"content":"Accesses the first element of the container.","pos":[0,44]}]}],"pos":[24381,24426],"yaml":true},{"content":"For more information, see [list::front (STL/CLR)](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad)</ept>.","source":"For more information, see [list::front (STL/CLR)](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad)."}],"pos":[24437,24560],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,70],"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The first element of the controlled sequence, which must be non-empty.","pos":[0,70]}]}],"pos":[24677,24748],"yaml":true},{"content":"Accesses the first element of the container.","nodes":[{"pos":[0,44],"content":"Accesses the first element of the container.","nodes":[{"content":"Accesses the first element of the container.","pos":[0,44]}]}],"pos":[25687,25732],"yaml":true},{"content":"For more information, see [list::front_item (STL/CLR)](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::front_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610)</ept>.","source":"For more information, see [list::front_item (STL/CLR)](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610)."}],"pos":[25743,25871],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,70],"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The first element of the controlled sequence, which must be non-empty.","pos":[0,70]}]}],"pos":[25983,26054],"yaml":true},{"content":"Merges two ordered controlled sequences.","nodes":[{"pos":[0,40],"content":"Merges two ordered controlled sequences.","nodes":[{"content":"Merges two ordered controlled sequences.","pos":[0,40]}]}],"pos":[35285,35326],"yaml":true},{"content":"For more information, see [list::merge (STL/CLR)](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::merge (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6)</ept>.","source":"For more information, see [list::merge (STL/CLR)](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6)."}],"pos":[35337,35460],"yaml":true,"extradata":"MT"},{"content":"The container to merge into this container.","nodes":[{"pos":[0,43],"content":"The container to merge into this container.","nodes":[{"content":"The container to merge into this container.","pos":[0,43]}]}],"pos":[35714,35758],"yaml":true},{"content":"The Boolean functor for comparing pairs of elements.","nodes":[{"pos":[0,52],"content":"The Boolean functor for comparing pairs of elements.","nodes":[{"content":"The Boolean functor for comparing pairs of elements.","pos":[0,52]}]}],"pos":[35875,35928],"yaml":true},{"content":"Removes the last element from the container.","nodes":[{"pos":[0,44],"content":"Removes the last element from the container.","nodes":[{"content":"Removes the last element from the container.","pos":[0,44]}]}],"pos":[36859,36904],"yaml":true},{"content":"For more information, see [list::pop_back (STL/CLR)](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::pop_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb)</ept>.","source":"For more information, see [list::pop_back (STL/CLR)](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb)."}],"pos":[36915,37041],"yaml":true,"extradata":"MT"},{"content":"Removes the first element from the container.","nodes":[{"pos":[0,45],"content":"Removes the first element from the container.","nodes":[{"content":"Removes the first element from the container.","pos":[0,45]}]}],"pos":[38048,38094],"yaml":true},{"content":"For more information, see [list::pop_front (STL/CLR)](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::pop_front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574)</ept>.","source":"For more information, see [list::pop_front (STL/CLR)](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574)."}],"pos":[38105,38232],"yaml":true,"extradata":"MT"},{"content":"Adds a new element to the end of the container.","nodes":[{"pos":[0,47],"content":"Adds a new element to the end of the container.","nodes":[{"content":"Adds a new element to the end of the container.","pos":[0,47]}]}],"pos":[39271,39319],"yaml":true},{"content":"For more information, see [list::push_back (STL/CLR)](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::push_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e)</ept>.","source":"For more information, see [list::push_back (STL/CLR)](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e)."}],"pos":[39330,39457],"yaml":true,"extradata":"MT"},{"content":"The value of the element to append to the container.","nodes":[{"pos":[0,52],"content":"The value of the element to append to the container.","nodes":[{"content":"The value of the element to append to the container.","pos":[0,52]}]}],"pos":[39586,39639],"yaml":true},{"content":"Adds a new element to the beginning of the container.","nodes":[{"pos":[0,53],"content":"Adds a new element to the beginning of the container.","nodes":[{"content":"Adds a new element to the beginning of the container.","pos":[0,53]}]}],"pos":[40616,40670],"yaml":true},{"content":"For more information, see [list::push_front (STL/CLR)](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::push_front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0)</ept>.","source":"For more information, see [list::push_front (STL/CLR)](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0)."}],"pos":[40681,40809],"yaml":true,"extradata":"MT"},{"content":"The value of the element to insert at the beginning of the container.","nodes":[{"pos":[0,69],"content":"The value of the element to insert at the beginning of the container.","nodes":[{"content":"The value of the element to insert at the beginning of the container.","pos":[0,69]}]}],"pos":[40939,41009],"yaml":true},{"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"pos":[0,61],"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"content":"Designates the beginning of the reversed controlled sequence.","pos":[0,61]}]}],"pos":[42245,42307],"yaml":true},{"content":"For more information, see [list::rbegin (STL/CLR)](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::rbegin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba)</ept>.","source":"For more information, see [list::rbegin (STL/CLR)](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba)."}],"pos":[42318,42442],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[42848,42861],"yaml":true},{"content":"Removes an element that has a specified value from the container.","nodes":[{"pos":[0,65],"content":"Removes an element that has a specified value from the container.","nodes":[{"content":"Removes an element that has a specified value from the container.","pos":[0,65]}]}],"pos":[43811,43877],"yaml":true},{"content":"For more information, see [list::remove (STL/CLR)](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::remove (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51)</ept>.","source":"For more information, see [list::remove (STL/CLR)](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51)."}],"pos":[43888,44012],"yaml":true,"extradata":"MT"},{"content":"The value of the element to remove from the container.","nodes":[{"pos":[0,54],"content":"The value of the element to remove from the container.","nodes":[{"content":"The value of the element to remove from the container.","pos":[0,54]}]}],"pos":[44138,44193],"yaml":true},{"content":"Designates the end of the reversed controlled sequence.","nodes":[{"pos":[0,55],"content":"Designates the end of the reversed controlled sequence.","nodes":[{"content":"Designates the end of the reversed controlled sequence.","pos":[0,55]}]}],"pos":[45413,45469],"yaml":true},{"content":"For more information, see [list::rend (STL/CLR)](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::rend (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921)</ept>.","source":"For more information, see [list::rend (STL/CLR)](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921)."}],"pos":[45480,45602],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[46006,46019],"yaml":true},{"content":"Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.","nodes":[{"pos":[0,167],"content":"Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.","nodes":[{"content":"Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.","pos":[0,167],"nodes":[{"content":"Changes the number of elements in the container to the specified size.","pos":[0,70]},{"content":"If the new size is larger than the old size, the given values will be appended to the container.","pos":[71,167]}]}]}],"pos":[47027,47195],"yaml":true},{"content":"For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.","source":"For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)."}],"pos":[47206,47330],"yaml":true,"extradata":"MT"},{"content":"The new size of the container.","nodes":[{"pos":[0,30],"content":"The new size of the container.","nodes":[{"content":"The new size of the container.","pos":[0,30]}]}],"pos":[47480,47511],"yaml":true},{"content":"The value of the padding elements.","nodes":[{"pos":[0,34],"content":"The value of the padding elements.","nodes":[{"content":"The value of the padding elements.","pos":[0,34]}]}],"pos":[47564,47599],"yaml":true},{"content":"Changes the number of elements in the container to the specified size.","nodes":[{"pos":[0,70],"content":"Changes the number of elements in the container to the specified size.","nodes":[{"content":"Changes the number of elements in the container to the specified size.","pos":[0,70]}]}],"pos":[48576,48647],"yaml":true},{"content":"For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.","source":"For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)."}],"pos":[48658,48782],"yaml":true,"extradata":"MT"},{"content":"The new size of the container.","nodes":[{"pos":[0,30],"content":"The new size of the container.","nodes":[{"content":"The new size of the container.","pos":[0,30]}]}],"pos":[48919,48950],"yaml":true},{"content":"Reverses the elements of the controlled sequence.","nodes":[{"pos":[0,49],"content":"Reverses the elements of the controlled sequence.","nodes":[{"content":"Reverses the elements of the controlled sequence.","pos":[0,49]}]}],"pos":[49876,49926],"yaml":true},{"content":"For more information, see [list::reverse (STL/CLR)](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::reverse (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f)</ept>.","source":"For more information, see [list::reverse (STL/CLR)](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f)."}],"pos":[49937,50062],"yaml":true,"extradata":"MT"},{"content":"Counts the number of elements in the container.","nodes":[{"pos":[0,47],"content":"Counts the number of elements in the container.","nodes":[{"content":"Counts the number of elements in the container.","pos":[0,47]}]}],"pos":[51037,51085],"yaml":true},{"content":"For more information, see [list::size (STL/CLR)](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::size (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293)</ept>.","source":"For more information, see [list::size (STL/CLR)](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293)."}],"pos":[51096,51218],"yaml":true,"extradata":"MT"},{"content":"The length of the controlled sequence.","nodes":[{"pos":[0,38],"content":"The length of the controlled sequence.","nodes":[{"content":"The length of the controlled sequence.","pos":[0,38]}]}],"pos":[51336,51375],"yaml":true},{"content":"Orders the controlled sequence.","nodes":[{"pos":[0,31],"content":"Orders the controlled sequence.","nodes":[{"content":"Orders the controlled sequence.","pos":[0,31]}]}],"pos":[52581,52613],"yaml":true},{"content":"For more information, see [list::sort (STL/CLR)](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::sort (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0)</ept>.","source":"For more information, see [list::sort (STL/CLR)](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0)."}],"pos":[52624,52746],"yaml":true,"extradata":"MT"},{"content":"The operator that will be used to compare elements for ordering.","nodes":[{"pos":[0,64],"content":"The operator that will be used to compare elements for ordering.","nodes":[{"content":"The operator that will be used to compare elements for ordering.","pos":[0,64]}]}],"pos":[52988,53053],"yaml":true},{"content":"Swaps the contents of two containers.","nodes":[{"pos":[0,37],"content":"Swaps the contents of two containers.","nodes":[{"content":"Swaps the contents of two containers.","pos":[0,37]}]}],"pos":[60857,60895],"yaml":true},{"content":"For more information, see [list::swap (STL/CLR)](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::swap (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd)</ept>.","source":"For more information, see [list::swap (STL/CLR)](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd)."}],"pos":[60906,61028],"yaml":true,"extradata":"MT"},{"content":"The container to swap contents with.","nodes":[{"pos":[0,36],"content":"The container to swap contents with.","nodes":[{"content":"The container to swap contents with.","pos":[0,36]}]}],"pos":[61214,61251],"yaml":true},{"content":"Removes adjacent elements that pass a specified test.","nodes":[{"pos":[0,53],"content":"Removes adjacent elements that pass a specified test.","nodes":[{"content":"Removes adjacent elements that pass a specified test.","pos":[0,53]}]}],"pos":[62469,62523],"yaml":true},{"content":"For more information, see [list::unique (STL/CLR)](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>list::unique (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132)</ept>.","source":"For more information, see [list::unique (STL/CLR)](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132)."}],"pos":[62534,62658],"yaml":true,"extradata":"MT"},{"content":"The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.","nodes":[{"pos":[0,128],"content":"The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.","nodes":[{"content":"The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.","pos":[0,128],"nodes":[{"content":"The comparer that determines whether element pairs are unique.","pos":[0,62]},{"content":"An element that is not unique will be removed from the container.","pos":[63,128]}]}]}],"pos":[62902,63031],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IList`1\n  commentId: T:Microsoft.VisualC.StlClr.IList`1\n  id: IList`1\n  children:\n  - Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IList`1.back\n  - Microsoft.VisualC.StlClr.IList`1.back_item\n  - Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IList`1.clear\n  - Microsoft.VisualC.StlClr.IList`1.empty\n  - Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IList`1.front\n  - Microsoft.VisualC.StlClr.IList`1.front_item\n  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)\n  - Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  - Microsoft.VisualC.StlClr.IList`1.pop_back\n  - Microsoft.VisualC.StlClr.IList`1.pop_front\n  - Microsoft.VisualC.StlClr.IList`1.push_back(`0)\n  - Microsoft.VisualC.StlClr.IList`1.push_front(`0)\n  - Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IList`1.remove(`0)\n  - Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)\n  - Microsoft.VisualC.StlClr.IList`1.reverse\n  - Microsoft.VisualC.StlClr.IList`1.size\n  - Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})\n  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})\n  - Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  langs:\n  - csharp\n  name: IList<TValue>\n  nameWithType: IList<TValue>\n  fullName: Microsoft.VisualC.StlClr.IList<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Defines the interface for an STL/CLR [list](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac) object.\n  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'\n  syntax:\n    content: 'public interface IList<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection'\n    typeParameters:\n    - id: TValue\n      description: The type of a list element.\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer{TValue}\n  - System.Collections.ICollection\n  - System.ICloneable\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)\n  id: assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: assign(IEnumerable)\n  nameWithType: IList<TValue>.assign(IEnumerable)\n  fullName: IList<TValue>.assign(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces the controlled sequence with the sequence that is designated by the given enumerator.\n  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).\n  syntax:\n    content: public void assign (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: The enumeration whose elements are to be inserted into the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>.\n  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The beginning position of the range of elements to insert into the container.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The first position beyond the range of elements to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)\n  id: assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: assign(Int32, TValue)\n  nameWithType: IList<TValue>.assign(Int32, TValue)\n  fullName: IList<TValue>.assign(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces the controlled sequence with the specified number of the given element.\n  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).\n  syntax:\n    content: public void assign (int _Count, TValue _Val);\n    parameters:\n    - id: _Count\n      type: System.Int32\n      description: The number of elements to insert into the container.\n    - id: _Val\n      type: TValue\n      description: The value of the elements to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.back\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IList<TValue>.back()\n  fullName: IList<TValue>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of the container.\n  remarks: For more information, see [list::back (STL/CLR)](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07).\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The last element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IList`1.back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.back_item\n  commentId: P:Microsoft.VisualC.StlClr.IList`1.back_item\n  id: back_item\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: back_item\n  nameWithType: IList<TValue>.back_item\n  fullName: IList<TValue>.back_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of the container.\n  remarks: For more information, see [list::back_item (STL/CLR)](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a).\n  syntax:\n    content: public TValue back_item { get; set; }\n    return:\n      type: TValue\n      description: The last element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IList`1.back_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the controlled sequence.\n  remarks: For more information, see [list::begin (STL/CLR)](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IList`1.begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.clear\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IList<TValue>.clear()\n  fullName: IList<TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes all elements from the container.\n  remarks: For more information, see [list::clear (STL/CLR)](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20).\n  syntax:\n    content: public void clear ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IList`1.clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.empty\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IList<TValue>.empty()\n  fullName: IList<TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Tests whether the container has no elements.\n  remarks: For more information, see [list::empty (STL/CLR)](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8).\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the container has no elements; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.IList`1.empty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the controlled sequence.\n  remarks: For more information, see [list::end (STL/CLR)](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IList`1.end*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.front\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IList<TValue>.front()\n  fullName: IList<TValue>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of the container.\n  remarks: For more information, see [list::front (STL/CLR)](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad).\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The first element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IList`1.front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.front_item\n  commentId: P:Microsoft.VisualC.StlClr.IList`1.front_item\n  id: front_item\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: front_item\n  nameWithType: IList<TValue>.front_item\n  fullName: IList<TValue>.front_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of the container.\n  remarks: For more information, see [list::front_item (STL/CLR)](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610).\n  syntax:\n    content: public TValue front_item { get; set; }\n    return:\n      type: TValue\n      description: The first element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IList`1.front_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator, IEnumerable)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where_iter, System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Where_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator, Int32, TValue)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, int _Count, TValue _Val);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Count\n      type: System.Int32\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  id: merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Merges two ordered controlled sequences.\n  remarks: For more information, see [list::merge (STL/CLR)](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6).\n  syntax:\n    content: public void merge (Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IList`1\n      description: The container to merge into this container.\n    - id: _Pred\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: The Boolean functor for comparing pairs of elements.\n  overload: Microsoft.VisualC.StlClr.IList`1.merge*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_back\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.pop_back\n  id: pop_back\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: pop_back()\n  nameWithType: IList<TValue>.pop_back()\n  fullName: IList<TValue>.pop_back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the last element from the container.\n  remarks: For more information, see [list::pop_back (STL/CLR)](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb).\n  syntax:\n    content: public void pop_back ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IList`1.pop_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_front\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.pop_front\n  id: pop_front\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: pop_front()\n  nameWithType: IList<TValue>.pop_front()\n  fullName: IList<TValue>.pop_front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the first element from the container.\n  remarks: For more information, see [list::pop_front (STL/CLR)](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574).\n  syntax:\n    content: public void pop_front ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IList`1.pop_front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)\n  id: push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: push_back(TValue)\n  nameWithType: IList<TValue>.push_back(TValue)\n  fullName: IList<TValue>.push_back(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds a new element to the end of the container.\n  remarks: For more information, see [list::push_back (STL/CLR)](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e).\n  syntax:\n    content: public void push_back (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The value of the element to append to the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.push_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)\n  id: push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: push_front(TValue)\n  nameWithType: IList<TValue>.push_front(TValue)\n  fullName: IList<TValue>.push_front(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds a new element to the beginning of the container.\n  remarks: For more information, see [list::push_front (STL/CLR)](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0).\n  syntax:\n    content: public void push_front (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The value of the element to insert at the beginning of the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.push_front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the reversed controlled sequence.\n  remarks: For more information, see [list::rbegin (STL/CLR)](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IList`1.rbegin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.remove(`0)\n  id: remove(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: remove(TValue)\n  nameWithType: IList<TValue>.remove(TValue)\n  fullName: IList<TValue>.remove(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes an element that has a specified value from the container.\n  remarks: For more information, see [list::remove (STL/CLR)](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51).\n  syntax:\n    content: public void remove (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The value of the element to remove from the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the reversed controlled sequence.\n  remarks: For more information, see [list::rend (STL/CLR)](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IList`1.rend*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)\n  id: resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: resize(Int32, TValue)\n  nameWithType: IList<TValue>.resize(Int32, TValue)\n  fullName: IList<TValue>.resize(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.\n  remarks: For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).\n  syntax:\n    content: public void resize (int _Newsize, TValue _Val);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the container.\n    - id: _Val\n      type: TValue\n      description: The value of the padding elements.\n  overload: Microsoft.VisualC.StlClr.IList`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)\n  id: resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: resize(Int32)\n  nameWithType: IList<TValue>.resize(Int32)\n  fullName: IList<TValue>.resize(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements in the container to the specified size.\n  remarks: For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).\n  syntax:\n    content: public void resize (int _Newsize);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.reverse\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.reverse\n  id: reverse\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: reverse()\n  nameWithType: IList<TValue>.reverse()\n  fullName: IList<TValue>.reverse()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Reverses the elements of the controlled sequence.\n  remarks: For more information, see [list::reverse (STL/CLR)](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f).\n  syntax:\n    content: public void reverse ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IList`1.reverse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.size\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IList<TValue>.size()\n  fullName: IList<TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Counts the number of elements in the container.\n  remarks: For more information, see [list::size (STL/CLR)](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293).\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The length of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IList`1.size*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  id: sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: sort(BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Orders the controlled sequence.\n  remarks: For more information, see [list::sort (STL/CLR)](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0).\n  syntax:\n    content: public void sort (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);\n    parameters:\n    - id: _Pred\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: The operator that will be used to compare elements for ordering.\n  overload: Microsoft.VisualC.StlClr.IList`1.sort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})\n  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: splice(ContainerBidirectionalIterator, IList<TValue>)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IList`1\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.splice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IList`1\n      description: ''\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.splice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IList`1\n      description: ''\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IList`1.splice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})\n  id: swap(Microsoft.VisualC.StlClr.IList{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: swap(IList<TValue>)\n  nameWithType: IList<TValue>.swap(IList<TValue>)\n  fullName: IList<TValue>.swap(IList<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Swaps the contents of two containers.\n  remarks: For more information, see [list::swap (STL/CLR)](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd).\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IList<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IList`1\n      description: The container to swap contents with.\n  overload: Microsoft.VisualC.StlClr.IList`1.swap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  commentId: M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  id: unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  langs:\n  - csharp\n  name: unique(BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes adjacent elements that pass a specified test.\n  remarks: For more information, see [list::unique (STL/CLR)](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132).\n  syntax:\n    content: public void unique (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);\n    parameters:\n    - id: _Pred\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.\n  overload: Microsoft.VisualC.StlClr.IList`1.unique*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: assign(IEnumerable)\n  nameWithType: IList<TValue>.assign(IEnumerable)\n  fullName: IList<TValue>.assign(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: assign(Int32, TValue)\n  nameWithType: IList<TValue>.assign(Int32, TValue)\n  fullName: IList<TValue>.assign(Int32, TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IList`1.back\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: back()\n  nameWithType: IList<TValue>.back()\n  fullName: IList<TValue>.back()\n- uid: Microsoft.VisualC.StlClr.IList`1.back_item\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: back_item\n  nameWithType: IList<TValue>.back_item\n  fullName: IList<TValue>.back_item\n- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IList`1.clear\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: clear()\n  nameWithType: IList<TValue>.clear()\n  fullName: IList<TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IList`1.empty\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: empty()\n  nameWithType: IList<TValue>.empty()\n  fullName: IList<TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.IList`1.front\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: front()\n  nameWithType: IList<TValue>.front()\n  fullName: IList<TValue>.front()\n- uid: Microsoft.VisualC.StlClr.IList`1.front_item\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: front_item\n  nameWithType: IList<TValue>.front_item\n  fullName: IList<TValue>.front_item\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator, IEnumerable)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator, Int32, TValue)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n  fullName: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)\n- uid: Microsoft.VisualC.StlClr.IList`1\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IList<TValue>\n  nameWithType: IList<TValue>\n  fullName: Microsoft.VisualC.StlClr.IList<TValue>\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n  name: BinaryDelegate<TArg1,TArg2,TResult>\n  nameWithType: BinaryDelegate<TArg1,TArg2,TResult>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TArg1,TArg2,TResult>\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TValue,TValue,Boolean>\n  nameWithType: BinaryDelegate<TValue,TValue,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n    name: BinaryDelegate\n    nameWithType: BinaryDelegate\n    fullName: Microsoft.VisualC.StlClr.BinaryDelegate\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_back\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: pop_back()\n  nameWithType: IList<TValue>.pop_back()\n  fullName: IList<TValue>.pop_back()\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_front\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: pop_front()\n  nameWithType: IList<TValue>.pop_front()\n  fullName: IList<TValue>.pop_front()\n- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: push_back(TValue)\n  nameWithType: IList<TValue>.push_back(TValue)\n  fullName: IList<TValue>.push_back(TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: push_front(TValue)\n  nameWithType: IList<TValue>.push_front(TValue)\n  fullName: IList<TValue>.push_front(TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: remove(TValue)\n  nameWithType: IList<TValue>.remove(TValue)\n  fullName: IList<TValue>.remove(TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: resize(Int32, TValue)\n  nameWithType: IList<TValue>.resize(Int32, TValue)\n  fullName: IList<TValue>.resize(Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: resize(Int32)\n  nameWithType: IList<TValue>.resize(Int32)\n  fullName: IList<TValue>.resize(Int32)\n- uid: Microsoft.VisualC.StlClr.IList`1.reverse\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: reverse()\n  nameWithType: IList<TValue>.reverse()\n  fullName: IList<TValue>.reverse()\n- uid: Microsoft.VisualC.StlClr.IList`1.size\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: size()\n  nameWithType: IList<TValue>.size()\n  fullName: IList<TValue>.size()\n- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: sort(BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: splice(ContainerBidirectionalIterator, IList<TValue>)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: swap(IList<TValue>)\n  nameWithType: IList<TValue>.swap(IList<TValue>)\n  fullName: IList<TValue>.swap(IList<TValue>)\n- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: unique(BinaryDelegate<TValue,TValue,Boolean>)\n  nameWithType: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)\n  fullName: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)\n- uid: Microsoft.VisualC.StlClr.IList`1.assign*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: assign\n  nameWithType: IList<TValue>.assign\n  fullName: IList<TValue>.assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.erase*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: erase\n  nameWithType: IList<TValue>.erase\n  fullName: IList<TValue>.erase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.insert*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: insert\n  nameWithType: IList<TValue>.insert\n  fullName: IList<TValue>.insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.resize*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: resize\n  nameWithType: IList<TValue>.resize\n  fullName: IList<TValue>.resize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.splice*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: splice\n  nameWithType: IList<TValue>.splice\n  fullName: IList<TValue>.splice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.back*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: back\n  nameWithType: IList<TValue>.back\n  fullName: IList<TValue>.back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.back_item*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: back_item\n  nameWithType: IList<TValue>.back_item\n  fullName: IList<TValue>.back_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.begin*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: begin\n  nameWithType: IList<TValue>.begin\n  fullName: IList<TValue>.begin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.clear*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: clear\n  nameWithType: IList<TValue>.clear\n  fullName: IList<TValue>.clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.empty*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: empty\n  nameWithType: IList<TValue>.empty\n  fullName: IList<TValue>.empty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.end*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: end\n  nameWithType: IList<TValue>.end\n  fullName: IList<TValue>.end\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.front*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: front\n  nameWithType: IList<TValue>.front\n  fullName: IList<TValue>.front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.front_item*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: front_item\n  nameWithType: IList<TValue>.front_item\n  fullName: IList<TValue>.front_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.merge*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: merge\n  nameWithType: IList<TValue>.merge\n  fullName: IList<TValue>.merge\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_back*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: pop_back\n  nameWithType: IList<TValue>.pop_back\n  fullName: IList<TValue>.pop_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.pop_front*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: pop_front\n  nameWithType: IList<TValue>.pop_front\n  fullName: IList<TValue>.pop_front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.push_back*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: push_back\n  nameWithType: IList<TValue>.push_back\n  fullName: IList<TValue>.push_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.push_front*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: push_front\n  nameWithType: IList<TValue>.push_front\n  fullName: IList<TValue>.push_front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.rbegin*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: rbegin\n  nameWithType: IList<TValue>.rbegin\n  fullName: IList<TValue>.rbegin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.remove*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: remove\n  nameWithType: IList<TValue>.remove\n  fullName: IList<TValue>.remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.rend*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: rend\n  nameWithType: IList<TValue>.rend\n  fullName: IList<TValue>.rend\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.reverse*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: reverse\n  nameWithType: IList<TValue>.reverse\n  fullName: IList<TValue>.reverse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.size*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: size\n  nameWithType: IList<TValue>.size\n  fullName: IList<TValue>.size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.sort*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: sort\n  nameWithType: IList<TValue>.sort\n  fullName: IList<TValue>.sort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.swap*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: swap\n  nameWithType: IList<TValue>.swap\n  fullName: IList<TValue>.swap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: Microsoft.VisualC.StlClr.IList`1.unique*\n  parent: Microsoft.VisualC.StlClr.IList`1\n  isExternal: false\n  name: unique\n  nameWithType: IList<TValue>.unique\n  fullName: IList<TValue>.unique\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalContainer<TValue>\n  nameWithType: IBidirectionalContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}