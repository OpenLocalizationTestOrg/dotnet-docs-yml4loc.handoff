{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object. Typically, the options apply to search operations of the underlying directory store. The supported options are provider-specific.","nodes":[{"pos":[0,320],"content":"The <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object. Typically, the options apply to search operations of the underlying directory store. The supported options are provider-specific.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"&gt;&lt;/xref&gt;</ph> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object.","pos":[0,190],"source":"The <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object."},{"content":"Typically, the options apply to search operations of the underlying directory store.","pos":[191,275]},{"content":"The supported options are provider-specific.","pos":[276,320]}]}],"pos":[1081,1402],"yaml":true},{"content":"Gets the host name of the server for the current binding to this directory object.","nodes":[{"pos":[0,82],"content":"Gets the host name of the server for the current binding to this directory object.","nodes":[{"content":"Gets the host name of the server for the current binding to this directory object.","pos":[0,82]}]}],"pos":[2912,2995],"yaml":true},{"content":"The name of the server.","nodes":[{"pos":[0,23],"content":"The name of the server.","nodes":[{"content":"The name of the server.","pos":[0,23]}]}],"pos":[3133,3157],"yaml":true},{"content":"Determines if mutual authentication is performed by the SSPI layer.","nodes":[{"pos":[0,67],"content":"Determines if mutual authentication is performed by the SSPI layer.","nodes":[{"content":"Determines if mutual authentication is performed by the SSPI layer.","pos":[0,67]}]}],"pos":[4381,4449],"yaml":true},{"content":"`true` if mutual authentication has been performed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if mutual authentication has been performed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if mutual authentication has been performed; otherwise, `false`."}],"pos":[4589,4663],"yaml":true},{"content":"Gets or sets the page size in a paged search.","nodes":[{"pos":[0,45],"content":"Gets or sets the page size in a paged search.","nodes":[{"content":"Gets or sets the page size in a paged search.","pos":[0,45]}]}],"pos":[5796,5842],"yaml":true},{"content":"The number of entries in a page.","nodes":[{"pos":[0,32],"content":"The number of entries in a page.","nodes":[{"content":"The number of entries in a page.","pos":[0,32]}]}],"pos":[5955,5988],"yaml":true},{"content":"Gets or sets the password encoding method.","nodes":[{"pos":[0,42],"content":"Gets or sets the password encoding method.","nodes":[{"content":"Gets or sets the password encoding method.","pos":[0,42]}]}],"pos":[7154,7197],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.PasswordEncodingMethod\"></xref> enumeration members that indicates the type of password encoding.","nodes":[{"pos":[0,145],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PasswordEncodingMethod\"&gt;&lt;/xref&gt;</ph> enumeration members that indicates the type of password encoding.","source":"One of the <xref href=\"System.DirectoryServices.PasswordEncodingMethod\"></xref> enumeration members that indicates the type of password encoding."}],"pos":[7397,7543],"yaml":true},{"content":"Gets or sets the port number to use to establish an SSL connection when the password is set or changed.","nodes":[{"pos":[0,103],"content":"Gets or sets the port number to use to establish an SSL connection when the password is set or changed.","nodes":[{"content":"Gets or sets the port number to use to establish an SSL connection when the password is set or changed.","pos":[0,103]}]}],"pos":[8693,8797],"yaml":true},{"content":"By default, port 636 is used to establish an SSL connection when setting or changing a password.","nodes":[{"pos":[0,96],"content":"By default, port 636 is used to establish an SSL connection when setting or changing a password.","nodes":[{"content":"By default, port 636 is used to establish an SSL connection when setting or changing a password.","pos":[0,96]}]}],"pos":[8808,8905],"yaml":true,"extradata":"MT"},{"content":"The port number to use to establish an SSL connection when the password is set or changed.","nodes":[{"pos":[0,90],"content":"The port number to use to establish an SSL connection when the password is set or changed.","nodes":[{"content":"The port number to use to establish an SSL connection when the password is set or changed.","pos":[0,90]}]}],"pos":[9022,9113],"yaml":true},{"content":"Gets or sets a value that determines if and how referral chasing is pursued.","nodes":[{"pos":[0,76],"content":"Gets or sets a value that determines if and how referral chasing is pursued.","nodes":[{"content":"Gets or sets a value that determines if and how referral chasing is pursued.","pos":[0,76]}]}],"pos":[10235,10312],"yaml":true},{"content":"A combination of one or more of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> enumeration members that specifies if and how referral chasing is pursued.","nodes":[{"pos":[0,178],"content":"A combination of one or more of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ReferralChasingOption\"&gt;&lt;/xref&gt;</ph> enumeration members that specifies if and how referral chasing is pursued.","source":"A combination of one or more of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> enumeration members that specifies if and how referral chasing is pursued."}],"pos":[10502,10681],"yaml":true},{"content":"Gets or sets a security mask to use with <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref>.","nodes":[{"pos":[0,115],"content":"Gets or sets a security mask to use with <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a security mask to use with <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref>."}],"pos":[11829,11945],"yaml":true},{"content":"A combination of one or more of the <xref href=\"System.DirectoryServices.SecurityMasks\"></xref> enumeration members that specifies the security mask.","nodes":[{"pos":[0,149],"content":"A combination of one or more of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.SecurityMasks\"&gt;&lt;/xref&gt;</ph> enumeration members that specifies the security mask.","source":"A combination of one or more of the <xref href=\"System.DirectoryServices.SecurityMasks\"></xref> enumeration members that specifies the security mask."}],"pos":[12124,12274],"yaml":true},{"content":"Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned.","nodes":[{"pos":[0,122],"content":"Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned.","nodes":[{"content":"Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned.","pos":[0,122]}]}],"pos":[13542,13665],"yaml":true},{"content":"The account name that is being set to allow queries on its principal name.","nodes":[{"pos":[0,74],"content":"The account name that is being set to allow queries on its principal name.","nodes":[{"content":"The account name that is being set to allow queries on its principal name.","pos":[0,74]}]}],"pos":[13827,13902],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryEntryConfiguration\n  commentId: T:System.DirectoryServices.DirectoryEntryConfiguration\n  id: DirectoryEntryConfiguration\n  children:\n  - System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName\n  - System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  - System.DirectoryServices.DirectoryEntryConfiguration.PageSize\n  - System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding\n  - System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort\n  - System.DirectoryServices.DirectoryEntryConfiguration.Referral\n  - System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks\n  - System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)\n  langs:\n  - csharp\n  name: DirectoryEntryConfiguration\n  nameWithType: DirectoryEntryConfiguration\n  fullName: System.DirectoryServices.DirectoryEntryConfiguration\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object. Typically, the options apply to search operations of the underlying directory store. The supported options are provider-specific.\n  syntax:\n    content: public class DirectoryEntryConfiguration\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName\n  commentId: M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName\n  id: GetCurrentServerName\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: GetCurrentServerName()\n  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName()\n  fullName: DirectoryEntryConfiguration.GetCurrentServerName()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the host name of the server for the current binding to this directory object.\n  syntax:\n    content: public string GetCurrentServerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the server.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  commentId: M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  id: IsMutuallyAuthenticated\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: IsMutuallyAuthenticated()\n  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated()\n  fullName: DirectoryEntryConfiguration.IsMutuallyAuthenticated()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines if mutual authentication is performed by the SSPI layer.\n  syntax:\n    content: public bool IsMutuallyAuthenticated ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if mutual authentication has been performed; otherwise, `false`.'\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize\n  commentId: P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize\n  id: PageSize\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: PageSize\n  nameWithType: DirectoryEntryConfiguration.PageSize\n  fullName: DirectoryEntryConfiguration.PageSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the page size in a paged search.\n  syntax:\n    content: public int PageSize { get; set; }\n    return:\n      type: System.Int32\n      description: The number of entries in a page.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.PageSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding\n  commentId: P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding\n  id: PasswordEncoding\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: PasswordEncoding\n  nameWithType: DirectoryEntryConfiguration.PasswordEncoding\n  fullName: DirectoryEntryConfiguration.PasswordEncoding\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the password encoding method.\n  syntax:\n    content: public System.DirectoryServices.PasswordEncodingMethod PasswordEncoding { get; set; }\n    return:\n      type: System.DirectoryServices.PasswordEncodingMethod\n      description: One of the <xref href=\"System.DirectoryServices.PasswordEncodingMethod\"></xref> enumeration members that indicates the type of password encoding.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort\n  commentId: P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort\n  id: PasswordPort\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: PasswordPort\n  nameWithType: DirectoryEntryConfiguration.PasswordPort\n  fullName: DirectoryEntryConfiguration.PasswordPort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the port number to use to establish an SSL connection when the password is set or changed.\n  remarks: By default, port 636 is used to establish an SSL connection when setting or changing a password.\n  syntax:\n    content: public int PasswordPort { get; set; }\n    return:\n      type: System.Int32\n      description: The port number to use to establish an SSL connection when the password is set or changed.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral\n  commentId: P:System.DirectoryServices.DirectoryEntryConfiguration.Referral\n  id: Referral\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: Referral\n  nameWithType: DirectoryEntryConfiguration.Referral\n  fullName: DirectoryEntryConfiguration.Referral\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value that determines if and how referral chasing is pursued.\n  syntax:\n    content: public System.DirectoryServices.ReferralChasingOption Referral { get; set; }\n    return:\n      type: System.DirectoryServices.ReferralChasingOption\n      description: A combination of one or more of the <xref href=\"System.DirectoryServices.ReferralChasingOption\"></xref> enumeration members that specifies if and how referral chasing is pursued.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.Referral*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks\n  commentId: P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks\n  id: SecurityMasks\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: SecurityMasks\n  nameWithType: DirectoryEntryConfiguration.SecurityMasks\n  fullName: DirectoryEntryConfiguration.SecurityMasks\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a security mask to use with <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref>.\n  syntax:\n    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }\n    return:\n      type: System.DirectoryServices.SecurityMasks\n      description: A combination of one or more of the <xref href=\"System.DirectoryServices.SecurityMasks\"></xref> enumeration members that specifies the security mask.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)\n  commentId: M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)\n  id: SetUserNameQueryQuota(System.String)\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  langs:\n  - csharp\n  name: SetUserNameQueryQuota(String)\n  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)\n  fullName: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned.\n  syntax:\n    content: public void SetUserNameQueryQuota (string accountName);\n    parameters:\n    - id: accountName\n      type: System.String\n      description: The account name that is being set to allow queries on its principal name.\n  overload: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: GetCurrentServerName()\n  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName()\n  fullName: DirectoryEntryConfiguration.GetCurrentServerName()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: IsMutuallyAuthenticated()\n  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated()\n  fullName: DirectoryEntryConfiguration.IsMutuallyAuthenticated()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PageSize\n  nameWithType: DirectoryEntryConfiguration.PageSize\n  fullName: DirectoryEntryConfiguration.PageSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PasswordEncoding\n  nameWithType: DirectoryEntryConfiguration.PasswordEncoding\n  fullName: DirectoryEntryConfiguration.PasswordEncoding\n- uid: System.DirectoryServices.PasswordEncodingMethod\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PasswordEncodingMethod\n  nameWithType: PasswordEncodingMethod\n  fullName: System.DirectoryServices.PasswordEncodingMethod\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PasswordPort\n  nameWithType: DirectoryEntryConfiguration.PasswordPort\n  fullName: DirectoryEntryConfiguration.PasswordPort\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: Referral\n  nameWithType: DirectoryEntryConfiguration.Referral\n  fullName: DirectoryEntryConfiguration.Referral\n- uid: System.DirectoryServices.ReferralChasingOption\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ReferralChasingOption\n  nameWithType: ReferralChasingOption\n  fullName: System.DirectoryServices.ReferralChasingOption\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: DirectoryEntryConfiguration.SecurityMasks\n  fullName: DirectoryEntryConfiguration.SecurityMasks\n- uid: System.DirectoryServices.SecurityMasks\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: SecurityMasks\n  fullName: System.DirectoryServices.SecurityMasks\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: SetUserNameQueryQuota(String)\n  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)\n  fullName: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: GetCurrentServerName\n  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName\n  fullName: DirectoryEntryConfiguration.GetCurrentServerName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: IsMutuallyAuthenticated\n  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  fullName: DirectoryEntryConfiguration.IsMutuallyAuthenticated\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PageSize\n  nameWithType: DirectoryEntryConfiguration.PageSize\n  fullName: DirectoryEntryConfiguration.PageSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PasswordEncoding\n  nameWithType: DirectoryEntryConfiguration.PasswordEncoding\n  fullName: DirectoryEntryConfiguration.PasswordEncoding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: PasswordPort\n  nameWithType: DirectoryEntryConfiguration.PasswordPort\n  fullName: DirectoryEntryConfiguration.PasswordPort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: Referral\n  nameWithType: DirectoryEntryConfiguration.Referral\n  fullName: DirectoryEntryConfiguration.Referral\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: SecurityMasks\n  nameWithType: DirectoryEntryConfiguration.SecurityMasks\n  fullName: DirectoryEntryConfiguration.SecurityMasks\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota*\n  parent: System.DirectoryServices.DirectoryEntryConfiguration\n  isExternal: false\n  name: SetUserNameQueryQuota\n  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota\n  fullName: DirectoryEntryConfiguration.SetUserNameQueryQuota\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/DirectoryEntryConfiguration.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}