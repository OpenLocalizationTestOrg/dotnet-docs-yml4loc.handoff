{"nodes":[{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a bevel which raises the surface of the image according to a specified curve.","nodes":[{"pos":[0,211],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a bevel which raises the surface of the image according to a specified curve.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Creates a bevel which raises the surface of the image according to a specified curve.","pos":[126,211]}]}],"pos":[1532,1746],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.  \n  \n The type of bevel (bevel curve) is determined by the <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property.  \n  \n <xref:System.Windows.Media.Effects.BevelBitmapEffect> is one of several effects that are shipped with the SDK. Other effects include:  \n  \n-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>  \n  \n-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  \n  \n-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  \n  \n-   <xref:System.Windows.Media.Effects.EmbossBitmapEffect>  \n  \n The following illustration shows a <xref:System.Windows.Media.Effects.BevelBitmapEffect> applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Button>).  \n  \n ![Screenshot: Compare normal and bevelled buttons](~/add/media/effects-bevelsimple1.png \"Screenshot: Compare normal and bevelled buttons\")  \n  \n The following illustrations show the effect of several basic properties of <xref:System.Windows.Media.Effects.BevelBitmapEffect>.  \n  \n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A> property specifies how wide the bevel is:  \n  \n ![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \"Screenshot: Compare BevelWidth values\")  \n  \n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property specifies the curve of the bevel:  \n  \n ![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \"Screenshot: Compare values of EdgeProfile\")  \n  \n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> property specifies the relief of the bevel:  \n  \n ![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \"Screenshot: Compare relief properties\")  \n  \n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> property specifies how smooth the shadows of the bevel are:  \n  \n ![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \"Screenshot: Compare Smoothness property values\")  \n  \n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> property specifies from which direction the \"virtual light\" is coming from that creates the shadows of the bevel:  \n  \n ![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \"Screenshot: Compare light angles\")","nodes":[{"pos":[2,280],"content":"[!NOTE]\n [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.","leadings":["","> "],"nodes":[{"content":" [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.","pos":[8,276],"nodes":[{"content":"<ph id=\"ph1\"> [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> bitmap effects are software rendered.","pos":[0,98],"source":" [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered."},{"content":"Any object that applies an effect will also be rendered in software.","pos":[99,167]},{"content":"Bitmap effects should not be applied to large visuals or animations as this can degrade performance.","pos":[168,268]}]}]},{"pos":[287,418],"content":"The type of bevel (bevel curve) is determined by the <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property.","nodes":[{"content":"The type of bevel (bevel curve) is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A&gt;</ph> property.","pos":[0,131],"source":"The type of bevel (bevel curve) is determined by the <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property."}]},{"pos":[425,558],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect> is one of several effects that are shipped with the SDK. Other effects include:","nodes":[{"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect> is one of several effects that are shipped with the SDK. Other effects include:","pos":[0,133],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect&gt;</ph> is one of several effects that are shipped with the SDK.","pos":[0,110],"source":"<xref:System.Windows.Media.Effects.BevelBitmapEffect> is one of several effects that are shipped with the SDK."},{"content":"Other effects include:","pos":[111,133]}]}]},{"pos":[568,625],"content":"<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>","nodes":[]},{"pos":[635,687],"content":"<xref:System.Windows.Media.Effects.BlurBitmapEffect>","nodes":[]},{"pos":[697,755],"content":"<xref:System.Windows.Media.Effects.DropShadowBitmapEffect>","nodes":[]},{"pos":[765,819],"content":"<xref:System.Windows.Media.Effects.EmbossBitmapEffect>","nodes":[]},{"pos":[826,1008],"content":"The following illustration shows a <xref:System.Windows.Media.Effects.BevelBitmapEffect> applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Button>).","nodes":[{"content":"The following illustration shows a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect&gt;</ph> applied to a visual object (in this case applied to a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>).","pos":[0,182],"source":"The following illustration shows a <xref:System.Windows.Media.Effects.BevelBitmapEffect> applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Button>)."}]},{"pos":[1015,1153],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare normal and bevelled buttons<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelsimple1.png \"</bpt>Screenshot: Compare normal and bevelled buttons<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare normal and bevelled buttons](~/add/media/effects-bevelsimple1.png \"Screenshot: Compare normal and bevelled buttons\")"},{"pos":[1160,1289],"content":"The following illustrations show the effect of several basic properties of <xref:System.Windows.Media.Effects.BevelBitmapEffect>.","nodes":[{"content":"The following illustrations show the effect of several basic properties of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect&gt;</ph>.","pos":[0,129],"source":"The following illustrations show the effect of several basic properties of <xref:System.Windows.Media.Effects.BevelBitmapEffect>."}]},{"pos":[1296,1409],"content":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A> property specifies how wide the bevel is:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A&gt;</ph> property specifies how wide the bevel is:","pos":[0,113],"source":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A> property specifies how wide the bevel is:"}]},{"pos":[1416,1537],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare BevelWidth values<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelbevelwidth.png \"</bpt>Screenshot: Compare BevelWidth values<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \"Screenshot: Compare BevelWidth values\")"},{"pos":[1544,1659],"content":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property specifies the curve of the bevel:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A&gt;</ph> property specifies the curve of the bevel:","pos":[0,115],"source":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property specifies the curve of the bevel:"}]},{"pos":[1666,1796],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare values of EdgeProfile<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-beveledgeprofile.png \"</bpt>Screenshot: Compare values of EdgeProfile<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \"Screenshot: Compare values of EdgeProfile\")"},{"pos":[1803,1914],"content":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> property specifies the relief of the bevel:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A&gt;</ph> property specifies the relief of the bevel:","pos":[0,111],"source":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> property specifies the relief of the bevel:"}]},{"pos":[1921,2038],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare relief properties<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelrelief.png \"</bpt>Screenshot: Compare relief properties<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \"Screenshot: Compare relief properties\")"},{"pos":[2045,2176],"content":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> property specifies how smooth the shadows of the bevel are:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A&gt;</ph> property specifies how smooth the shadows of the bevel are:","pos":[0,131],"source":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> property specifies how smooth the shadows of the bevel are:"}]},{"pos":[2183,2322],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare Smoothness property values<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelsmoothness.png \"</bpt>Screenshot: Compare Smoothness property values<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \"Screenshot: Compare Smoothness property values\")"},{"pos":[2329,2514],"content":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> property specifies from which direction the \"virtual light\" is coming from that creates the shadows of the bevel:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A&gt;</ph> property specifies from which direction the \"virtual light\" is coming from that creates the shadows of the bevel:","pos":[0,185],"source":"The <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> property specifies from which direction the \"virtual light\" is coming from that creates the shadows of the bevel:"}]},{"pos":[2521,2632],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare light angles<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevellightangle.png \"</bpt>Screenshot: Compare light angles<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \"Screenshot: Compare light angles\")"}],"pos":[1757,4445],"yaml":true,"extradata":"MT"},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> class.","nodes":[{"pos":[0,234],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> class.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"&gt;&lt;/xref&gt;</ph> class.","pos":[126,234],"source":" Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> class."}]}],"pos":[10058,10295],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the width of the bevel.","nodes":[{"pos":[0,162],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the width of the bevel.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the width of the bevel.","pos":[126,162]}]}],"pos":[11432,11597],"yaml":true},{"content":"The following illustration demonstrates the effect of this property:  \n  \n ![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \"Screenshot: Compare BevelWidth values\")  \n  \n<a name=\"dependencyPropertyInfo_BevelWidth\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,68],"content":"The following illustration demonstrates the effect of this property:","nodes":[{"content":"The following illustration demonstrates the effect of this property:","pos":[0,68]}]},{"pos":[75,196],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare BevelWidth values<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelbevelwidth.png \"</bpt>Screenshot: Compare BevelWidth values<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \"Screenshot: Compare BevelWidth values\")"},{"pos":[257,288],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[309,325],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[326,398],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>","nodes":[]},{"pos":[403,436],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[437,441],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[11608,12067],"yaml":true,"extradata":"MT"},{"content":"The width of the bevel. The default value is <code>5</code>.","nodes":[{"pos":[0,60],"content":"The width of the bevel. The default value is <code>5</code>.","nodes":[{"content":"The width of the bevel.","pos":[0,23]},{"content":"The default value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">5</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[24,60],"source":" The default value is <code>5</code>."}]}],"pos":[12186,12247],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\"></xref> dependency property.","nodes":[{"pos":[0,240],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\"></xref> dependency property.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\"&gt;&lt;/xref&gt;</ph> dependency property.","pos":[126,240],"source":" Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\"></xref> dependency property."}]}],"pos":[13363,13606],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,445],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","pos":[126,273],"source":" Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[274,445]}]}],"pos":[14738,15190],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,207],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.","pos":[0,207],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version.","pos":[148,207]}]}]},{"pos":[214,306],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[15201,15512],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true.`</ph>","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`"}]}],"pos":[15708,15947],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are","nodes":[{"pos":[0,384],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.","pos":[126,288],"source":" Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are","pos":[289,384]}]}],"pos":[17037,17428],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,207],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.","pos":[0,207],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version.","pos":[148,207]}]}]},{"pos":[214,318],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}],"pos":[17439,17762],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true`</ph>.","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`."}]}],"pos":[17970,18209],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the curve of the bevel.","nodes":[{"pos":[0,162],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the curve of the bevel.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the curve of the bevel.","pos":[126,162]}]}],"pos":[21959,22124],"yaml":true},{"content":"The following illustration demonstrates the effect of this property:  \n  \n ![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \"Screenshot: Compare values of EdgeProfile\")  \n  \n<a name=\"dependencyPropertyInfo_EdgeProfile\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,68],"content":"The following illustration demonstrates the effect of this property:","nodes":[{"content":"The following illustration demonstrates the effect of this property:","pos":[0,68]}]},{"pos":[75,205],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare values of EdgeProfile<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-beveledgeprofile.png \"</bpt>Screenshot: Compare values of EdgeProfile<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \"Screenshot: Compare values of EdgeProfile\")"},{"pos":[267,298],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[319,335],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[336,409],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>","nodes":[]},{"pos":[414,447],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[448,452],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[22135,22605],"yaml":true,"extradata":"MT"},{"content":"The curve of the bevel. The default value is <xref href=\"System.Windows.Media.Effects.EdgeProfile.Linear\"></xref>.","nodes":[{"pos":[0,114],"content":"The curve of the bevel. The default value is <xref href=\"System.Windows.Media.Effects.EdgeProfile.Linear\"></xref>.","nodes":[{"content":"The curve of the bevel.","pos":[0,23]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.EdgeProfile.Linear\"&gt;&lt;/xref&gt;</ph>.","pos":[24,114],"source":" The default value is <xref href=\"System.Windows.Media.Effects.EdgeProfile.Linear\"></xref>."}]}],"pos":[22786,22901],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\"></xref> dependency property.","nodes":[{"pos":[0,241],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\"></xref> dependency property.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\"&gt;&lt;/xref&gt;</ph> dependency property.","pos":[126,241],"source":" Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\"></xref> dependency property."}]}],"pos":[24024,24268],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the direction the \"virtual light\" is coming from that creates the shadows of the bevel.","nodes":[{"pos":[0,226],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the direction the \"virtual light\" is coming from that creates the shadows of the bevel.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the direction the \"virtual light\" is coming from that creates the shadows of the bevel.","pos":[126,226]}]}],"pos":[25427,25656],"yaml":true},{"content":"The following diagram shows what direction light comes from for a given value of this property. Shadows of the bevel are cast on the opposite side from the light angle.  \n  \n ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \"Diagram: DropShadow direction\")  \n  \n The following illustration demonstrates the effect of this property:  \n  \n ![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \"Screenshot: Compare light angles\")  \n  \n<a name=\"dependencyPropertyInfo_LightAngle\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,168],"content":"The following diagram shows what direction light comes from for a given value of this property. Shadows of the bevel are cast on the opposite side from the light angle.","nodes":[{"content":"The following diagram shows what direction light comes from for a given value of this property. Shadows of the bevel are cast on the opposite side from the light angle.","pos":[0,168],"nodes":[{"content":"The following diagram shows what direction light comes from for a given value of this property.","pos":[0,95]},{"content":"Shadows of the bevel are cast on the opposite side from the light angle.","pos":[96,168]}]}]},{"pos":[175,285],"content":"<bpt id=\"p1\">![</bpt>Diagram: DropShadow direction<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-dropshadowdirection2.png \"</bpt>Diagram: DropShadow direction<ept id=\"p2\">\")</ept>","source":"![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \"Diagram: DropShadow direction\")"},{"pos":[292,360],"content":"The following illustration demonstrates the effect of this property:","nodes":[{"content":"The following illustration demonstrates the effect of this property:","pos":[0,68]}]},{"pos":[367,478],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare light angles<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevellightangle.png \"</bpt>Screenshot: Compare light angles<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \"Screenshot: Compare light angles\")"},{"pos":[539,570],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[591,607],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[608,680],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>","nodes":[]},{"pos":[685,718],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[719,723],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[25667,26414],"yaml":true,"extradata":"MT"},{"content":"The direction of the virtual light source. The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The shadows of the bevel are on the opposite side of where the light is cast. The default value is <code>135</code>.","nodes":[{"pos":[0,317],"content":"The direction of the virtual light source. The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The shadows of the bevel are on the opposite side of where the light is cast. The default value is <code>135</code>.","nodes":[{"content":"The direction of the virtual light source.","pos":[0,42]},{"content":"The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object.","pos":[43,200]},{"content":"The shadows of the bevel are on the opposite side of where the light is cast.","pos":[201,278]},{"content":"The default value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">135</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[279,317],"source":" The default value is <code>135</code>."}]}],"pos":[26533,26851],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\"></xref> dependency property.","nodes":[{"pos":[0,240],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\"></xref> dependency property.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\"&gt;&lt;/xref&gt;</ph> dependency property.","pos":[126,240],"source":" Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\"></xref> dependency property."}]}],"pos":[27967,28210],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the height of the relief of the bevel.","nodes":[{"pos":[0,177],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the height of the relief of the bevel.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the height of the relief of the bevel.","pos":[126,177]}]}],"pos":[29366,29546],"yaml":true},{"content":"The following illustration demonstrates the effect of this property:  \n  \n ![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \"Screenshot: Compare relief properties\")  \n  \n<a name=\"dependencyPropertyInfo_Relief\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,68],"content":"The following illustration demonstrates the effect of this property:","nodes":[{"content":"The following illustration demonstrates the effect of this property:","pos":[0,68]}]},{"pos":[75,192],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare relief properties<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelrelief.png \"</bpt>Screenshot: Compare relief properties<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \"Screenshot: Compare relief properties\")"},{"pos":[249,280],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[301,317],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[318,386],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>","nodes":[]},{"pos":[391,424],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[425,429],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[29557,30004],"yaml":true,"extradata":"MT"},{"content":"The height of the relief of the bevel. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> having the most relief (darkest shadows). The default value is <code>0.3</code>.","nodes":[{"pos":[0,200],"content":"The height of the relief of the bevel. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> having the most relief (darkest shadows). The default value is <code>0.3</code>.","nodes":[{"content":"The height of the relief of the bevel.","pos":[0,38]},{"content":"The valid range is between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">0</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">1</ph><ept id=\"p2\">&lt;/code&gt;</ept> with <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">1</ph><ept id=\"p3\">&lt;/code&gt;</ept> having the most relief (darkest shadows).","pos":[39,161],"source":" The valid range is between <code>0</code> and <code>1</code> with <code>1</code> having the most relief (darkest shadows)."},{"content":"The default value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">0.3</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[162,200],"source":" The default value is <code>0.3</code>."}]}],"pos":[30119,30320],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Relief\"></xref> dependency property.","nodes":[{"pos":[0,236],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Relief\"></xref> dependency property.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Relief\"&gt;&lt;/xref&gt;</ph> dependency property.","pos":[126,236],"source":" Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Relief\"></xref> dependency property."}]}],"pos":[31408,31647],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets how smooth the shadows of the bevel are.","nodes":[{"pos":[0,179],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets how smooth the shadows of the bevel are.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets how smooth the shadows of the bevel are.","pos":[126,179]}]}],"pos":[32823,33005],"yaml":true},{"content":"The following illustration demonstrates the effect of this property:  \n  \n ![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \"Screenshot: Compare Smoothness property values\")  \n  \n<a name=\"dependencyPropertyInfo_Smoothness\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,68],"content":"The following illustration demonstrates the effect of this property:","nodes":[{"content":"The following illustration demonstrates the effect of this property:","pos":[0,68]}]},{"pos":[75,214],"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare Smoothness property values<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-bevelsmoothness.png \"</bpt>Screenshot: Compare Smoothness property values<ept id=\"p2\">\")</ept>","source":"![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \"Screenshot: Compare Smoothness property values\")"},{"pos":[275,306],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[327,343],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[344,416],"content":"<xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>","nodes":[]},{"pos":[421,454],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[455,459],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[33016,33493],"yaml":true,"extradata":"MT"},{"content":"Value indicating how smooth the bevel shadows are. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> being the smoothest. The default value is <code>0.2</code>.","nodes":[{"pos":[0,191],"content":"Value indicating how smooth the bevel shadows are. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> being the smoothest. The default value is <code>0.2</code>.","nodes":[{"content":"Value indicating how smooth the bevel shadows are.","pos":[0,50]},{"content":"The valid range is between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">0</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">1</ph><ept id=\"p2\">&lt;/code&gt;</ept> with <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">1</ph><ept id=\"p3\">&lt;/code&gt;</ept> being the smoothest.","pos":[51,152],"source":" The valid range is between <code>0</code> and <code>1</code> with <code>1</code> being the smoothest."},{"content":"The default value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">0.2</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[153,191],"source":" The default value is <code>0.2</code>."}]}],"pos":[33612,33804],"yaml":true},{"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\"></xref> dependency property.","nodes":[{"pos":[0,240],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\"></xref> dependency property.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;&lt;/xref&gt;</ph>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\"&gt;&lt;/xref&gt;</ph> dependency property.","pos":[126,240],"source":" Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\"></xref> dependency property."}]}],"pos":[34920,35163],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Effects.BevelBitmapEffect\n  commentId: T:System.Windows.Media.Effects.BevelBitmapEffect\n  id: BevelBitmapEffect\n  children:\n  - System.Windows.Media.Effects.BevelBitmapEffect.#ctor\n  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\n  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty\n  - System.Windows.Media.Effects.BevelBitmapEffect.Clone\n  - System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue\n  - System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore\n  - System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect\n  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\n  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty\n  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\n  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty\n  - System.Windows.Media.Effects.BevelBitmapEffect.Relief\n  - System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty\n  - System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\n  - System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty\n  - System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  langs:\n  - csharp\n  name: BevelBitmapEffect\n  nameWithType: BevelBitmapEffect\n  fullName: System.Windows.Media.Effects.BevelBitmapEffect\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a bevel which raises the surface of the image according to a specified curve.'\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.  \\n  \\n The type of bevel (bevel curve) is determined by the <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property.  \\n  \\n <xref:System.Windows.Media.Effects.BevelBitmapEffect> is one of several effects that are shipped with the SDK. Other effects include:  \\n  \\n-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.EmbossBitmapEffect>  \\n  \\n The following illustration shows a <xref:System.Windows.Media.Effects.BevelBitmapEffect> applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Button>).  \\n  \\n ![Screenshot: Compare normal and bevelled buttons](~/add/media/effects-bevelsimple1.png \\\"Screenshot: Compare normal and bevelled buttons\\\")  \\n  \\n The following illustrations show the effect of several basic properties of <xref:System.Windows.Media.Effects.BevelBitmapEffect>.  \\n  \\n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A> property specifies how wide the bevel is:  \\n  \\n ![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \\\"Screenshot: Compare BevelWidth values\\\")  \\n  \\n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> property specifies the curve of the bevel:  \\n  \\n ![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \\\"Screenshot: Compare values of EdgeProfile\\\")  \\n  \\n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> property specifies the relief of the bevel:  \\n  \\n ![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \\\"Screenshot: Compare relief properties\\\")  \\n  \\n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> property specifies how smooth the shadows of the bevel are:  \\n  \\n ![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \\\"Screenshot: Compare Smoothness property values\\\")  \\n  \\n The <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> property specifies from which direction the \\\"virtual light\\\" is coming from that creates the shadows of the bevel:  \\n  \\n ![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \\\"Screenshot: Compare light angles\\\")\"\n  syntax:\n    content: 'public sealed class BevelBitmapEffect : System.Windows.Media.Effects.BitmapEffect'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Effects.BitmapEffect\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: BevelBitmapEffect()\n  nameWithType: BevelBitmapEffect.BevelBitmapEffect()\n  fullName: BevelBitmapEffect.BevelBitmapEffect()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect\"></xref> class.'\n  syntax:\n    content: public BevelBitmapEffect ();\n    parameters: []\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\n  commentId: P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\n  id: BevelWidth\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: BevelWidth\n  nameWithType: BevelBitmapEffect.BevelWidth\n  fullName: BevelBitmapEffect.BevelWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the width of the bevel.'\n  remarks: \"The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare BevelWidth values](~/add/media/effects-bevelbevelwidth.png \\\"Screenshot: Compare BevelWidth values\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_BevelWidth\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double BevelWidth { get; set; }\n    return:\n      type: System.Double\n      description: The width of the bevel. The default value is <code>5</code>.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty\n  commentId: F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty\n  id: BevelWidthProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: BevelWidthProperty\n  nameWithType: BevelBitmapEffect.BevelWidthProperty\n  fullName: BevelBitmapEffect.BevelWidthProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\"></xref> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BevelWidthProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.Clone\n  id: Clone\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BevelBitmapEffect.Clone()\n  fullName: BevelBitmapEffect.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: \"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\\\"System.Windows.Media.Effects.Effect\\\"></xref>. Creates a modifiable clone of this <xref href=\\\"System.Windows.Media.Effects.BevelBitmapEffect\\\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\"\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Effects.BevelBitmapEffect Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BevelBitmapEffect\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: BevelBitmapEffect.CloneCurrentValue()\n  fullName: BevelBitmapEffect.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: \"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\\\"System.Windows.Media.Effects.Effect\\\"></xref>. Creates a modifiable clone of this <xref href=\\\"System.Windows.Media.Effects.BevelBitmapEffect\\\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are\"\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Effects.BevelBitmapEffect CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BevelBitmapEffect\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BevelBitmapEffect.CreateInstanceCore()\n  fullName: BevelBitmapEffect.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect\n  id: CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: CreateUnmanagedEffect()\n  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()\n  fullName: BevelBitmapEffect.CreateUnmanagedEffect()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: >-\n      [System.Obsolete(\"BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.\")]\n\n      protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.SafeHandle\n      description: ''\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\n  commentId: P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\n  id: EdgeProfile\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: EdgeProfile\n  nameWithType: BevelBitmapEffect.EdgeProfile\n  fullName: BevelBitmapEffect.EdgeProfile\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the curve of the bevel.'\n  remarks: \"The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare values of EdgeProfile](~/add/media/effects-beveledgeprofile.png \\\"Screenshot: Compare values of EdgeProfile\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_EdgeProfile\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.Effects.EdgeProfile EdgeProfile { get; set; }\n    return:\n      type: System.Windows.Media.Effects.EdgeProfile\n      description: The curve of the bevel. The default value is <xref href=\"System.Windows.Media.Effects.EdgeProfile.Linear\"></xref>.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty\n  commentId: F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty\n  id: EdgeProfileProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: EdgeProfileProperty\n  nameWithType: BevelBitmapEffect.EdgeProfileProperty\n  fullName: BevelBitmapEffect.EdgeProfileProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\"></xref> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EdgeProfileProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\n  commentId: P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\n  id: LightAngle\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: LightAngle\n  nameWithType: BevelBitmapEffect.LightAngle\n  fullName: BevelBitmapEffect.LightAngle\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the direction the \"virtual light\" is coming from that creates the shadows of the bevel.'\n  remarks: \"The following diagram shows what direction light comes from for a given value of this property. Shadows of the bevel are cast on the opposite side from the light angle.  \\n  \\n ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \\\"Diagram: DropShadow direction\\\")  \\n  \\n The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare light angles](~/add/media/effects-bevellightangle.png \\\"Screenshot: Compare light angles\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_LightAngle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double LightAngle { get; set; }\n    return:\n      type: System.Double\n      description: The direction of the virtual light source. The valid range is from 0-360 (degrees) with 0 specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The shadows of the bevel are on the opposite side of where the light is cast. The default value is <code>135</code>.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty\n  commentId: F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty\n  id: LightAngleProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: LightAngleProperty\n  nameWithType: BevelBitmapEffect.LightAngleProperty\n  fullName: BevelBitmapEffect.LightAngleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\"></xref> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief\n  commentId: P:System.Windows.Media.Effects.BevelBitmapEffect.Relief\n  id: Relief\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: Relief\n  nameWithType: BevelBitmapEffect.Relief\n  fullName: BevelBitmapEffect.Relief\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the height of the relief of the bevel.'\n  remarks: \"The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare relief properties](~/add/media/effects-bevelrelief.png \\\"Screenshot: Compare relief properties\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_Relief\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Relief { get; set; }\n    return:\n      type: System.Double\n      description: The height of the relief of the bevel. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> having the most relief (darkest shadows). The default value is <code>0.3</code>.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.Relief*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty\n  commentId: F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty\n  id: ReliefProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: ReliefProperty\n  nameWithType: BevelBitmapEffect.ReliefProperty\n  fullName: BevelBitmapEffect.ReliefProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Relief\"></xref> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ReliefProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\n  commentId: P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\n  id: Smoothness\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: Smoothness\n  nameWithType: BevelBitmapEffect.Smoothness\n  fullName: BevelBitmapEffect.Smoothness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets how smooth the shadows of the bevel are.'\n  remarks: \"The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare Smoothness property values](~/add/media/effects-bevelsmoothness.png \\\"Screenshot: Compare Smoothness property values\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_Smoothness\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Smoothness { get; set; }\n    return:\n      type: System.Double\n      description: Value indicating how smooth the bevel shadows are. The valid range is between <code>0</code> and <code>1</code> with <code>1</code> being the smoothest. The default value is <code>0.2</code>.\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty\n  commentId: F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty\n  id: SmoothnessProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: SmoothnessProperty\n  nameWithType: BevelBitmapEffect.SmoothnessProperty\n  fullName: BevelBitmapEffect.SmoothnessProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref href=\"System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\"></xref> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SmoothnessProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  langs:\n  - csharp\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: >-\n      [System.Obsolete(\"BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.\")]\n\n      [System.Security.SecurityCritical]\n\n      [System.Security.SecurityTreatAsSafe]\n\n      protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);\n    parameters:\n    - id: unmanagedEffect\n      type: System.Runtime.InteropServices.SafeHandle\n      description: ''\n  overload: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  - type: System.Security.SecurityCriticalAttribute\n  - type: System.Security.SecurityTreatAsSafeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\nreferences:\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: BevelBitmapEffect()\n  nameWithType: BevelBitmapEffect.BevelBitmapEffect()\n  fullName: BevelBitmapEffect.BevelBitmapEffect()\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: BevelWidth\n  nameWithType: BevelBitmapEffect.BevelWidth\n  fullName: BevelBitmapEffect.BevelWidth\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: BevelWidthProperty\n  nameWithType: BevelBitmapEffect.BevelWidthProperty\n  fullName: BevelBitmapEffect.BevelWidthProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Clone()\n  nameWithType: BevelBitmapEffect.Clone()\n  fullName: BevelBitmapEffect.Clone()\n- uid: System.Windows.Media.Effects.BevelBitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BevelBitmapEffect\n  nameWithType: BevelBitmapEffect\n  fullName: System.Windows.Media.Effects.BevelBitmapEffect\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: BevelBitmapEffect.CloneCurrentValue()\n  fullName: BevelBitmapEffect.CloneCurrentValue()\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BevelBitmapEffect.CreateInstanceCore()\n  fullName: BevelBitmapEffect.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CreateUnmanagedEffect()\n  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()\n  fullName: BevelBitmapEffect.CreateUnmanagedEffect()\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: EdgeProfile\n  nameWithType: BevelBitmapEffect.EdgeProfile\n  fullName: BevelBitmapEffect.EdgeProfile\n- uid: System.Windows.Media.Effects.EdgeProfile\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: EdgeProfile\n  nameWithType: EdgeProfile\n  fullName: System.Windows.Media.Effects.EdgeProfile\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: EdgeProfileProperty\n  nameWithType: BevelBitmapEffect.EdgeProfileProperty\n  fullName: BevelBitmapEffect.EdgeProfileProperty\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: LightAngle\n  nameWithType: BevelBitmapEffect.LightAngle\n  fullName: BevelBitmapEffect.LightAngle\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: LightAngleProperty\n  nameWithType: BevelBitmapEffect.LightAngleProperty\n  fullName: BevelBitmapEffect.LightAngleProperty\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Relief\n  nameWithType: BevelBitmapEffect.Relief\n  fullName: BevelBitmapEffect.Relief\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: ReliefProperty\n  nameWithType: BevelBitmapEffect.ReliefProperty\n  fullName: BevelBitmapEffect.ReliefProperty\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Smoothness\n  nameWithType: BevelBitmapEffect.Smoothness\n  fullName: BevelBitmapEffect.Smoothness\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: SmoothnessProperty\n  nameWithType: BevelBitmapEffect.SmoothnessProperty\n  fullName: BevelBitmapEffect.SmoothnessProperty\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: BevelBitmapEffect\n  nameWithType: BevelBitmapEffect.BevelBitmapEffect\n  fullName: BevelBitmapEffect.BevelBitmapEffect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: BevelWidth\n  nameWithType: BevelBitmapEffect.BevelWidth\n  fullName: BevelBitmapEffect.BevelWidth\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Clone\n  nameWithType: BevelBitmapEffect.Clone\n  fullName: BevelBitmapEffect.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: BevelBitmapEffect.CloneCurrentValue\n  fullName: BevelBitmapEffect.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BevelBitmapEffect.CreateInstanceCore\n  fullName: BevelBitmapEffect.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: CreateUnmanagedEffect\n  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect\n  fullName: BevelBitmapEffect.CreateUnmanagedEffect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: EdgeProfile\n  nameWithType: BevelBitmapEffect.EdgeProfile\n  fullName: BevelBitmapEffect.EdgeProfile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: LightAngle\n  nameWithType: BevelBitmapEffect.LightAngle\n  fullName: BevelBitmapEffect.LightAngle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Relief\n  nameWithType: BevelBitmapEffect.Relief\n  fullName: BevelBitmapEffect.Relief\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: Smoothness\n  nameWithType: BevelBitmapEffect.Smoothness\n  fullName: BevelBitmapEffect.Smoothness\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*\n  parent: System.Windows.Media.Effects.BevelBitmapEffect\n  isExternal: false\n  name: UpdateUnmanagedPropertyState\n  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState\n  fullName: BevelBitmapEffect.UpdateUnmanagedPropertyState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Effects/BevelBitmapEffect.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: CreateBitmapEffectOuter()\n  nameWithType: BitmapEffect.CreateBitmapEffectOuter()\n  fullName: BitmapEffect.CreateBitmapEffectOuter()\n- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: GetOutput(BitmapEffectInput)\n  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)\n  fullName: BitmapEffect.GetOutput(BitmapEffectInput)\n- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: InitializeBitmapEffect(SafeHandle, SafeHandle)\n  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle, SafeHandle)\n  fullName: BitmapEffect.InitializeBitmapEffect(SafeHandle, SafeHandle)\n- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: SetValue(SafeHandle, String, Object)\n  nameWithType: BitmapEffect.SetValue(SafeHandle, String, Object)\n  fullName: BitmapEffect.SetValue(SafeHandle, String, Object)\n"}