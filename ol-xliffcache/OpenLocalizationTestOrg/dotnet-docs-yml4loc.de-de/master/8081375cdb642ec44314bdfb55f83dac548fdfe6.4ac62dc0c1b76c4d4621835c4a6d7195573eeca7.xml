{"nodes":[{"content":"Configures the location of a custom implementation of the role service.","nodes":[{"pos":[0,71],"content":"Configures the location of a custom implementation of the role service.","nodes":[{"content":"Configures the location of a custom implementation of the role service.","pos":[0,71]}]}],"pos":[512,584],"yaml":true},{"content":"The <xref:System.Web.UI.RoleServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.  \n  \n To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.  \n  \n To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.  \n  \n The following example shows the basic class structure that must be implemented in a custom role Web service class.  \n  \n  \n  \n To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"true\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service.","nodes":[{"pos":[0,221],"content":"The <xref:System.Web.UI.RoleServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager&gt;</ph> class corresponds to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RoleService%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[0,221],"source":"The <xref:System.Web.UI.RoleServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control."}]},{"pos":[228,564],"content":"The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.","nodes":[{"content":"The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.","pos":[0,336],"nodes":[{"content":"The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call.","pos":[0,164]},{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager&gt;</ph> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.","pos":[165,336],"source":" You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service."}]}]},{"pos":[571,833],"content":"To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.","nodes":[{"content":"To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.","pos":[0,262],"nodes":[{"content":"To use the role service in your application, you must enable it in the configuration file and declare it in the page.","pos":[0,117]},{"content":"If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.","pos":[118,262]}]}]},{"pos":[840,1085],"content":"To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.","nodes":[{"content":"To create a custom role service, you must implement a Web service that has two methods: <ph id=\"ph1\">`GetRolesForCurrentUser`</ph> and <ph id=\"ph2\">`IsCurrentUserInRole`</ph>.","pos":[0,139],"source":"To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`."},{"content":"These methods must have the same signature as the corresponding methods of the built-in role Web service.","pos":[140,245]}]},{"pos":[1092,1206],"content":"The following example shows the basic class structure that must be implemented in a custom role Web service class.","nodes":[{"content":"The following example shows the basic class structure that must be implemented in a custom role Web service class.","pos":[0,114]}]},{"pos":[1219,1425],"content":"To use a custom role Web service, you can add the service declaratively in markup by putting a <ph id=\"ph1\">`RoleService`</ph> element inside the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control, as shown in the following example.","source":"To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example."},{"pos":[1579,1707],"content":"You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service.","nodes":[{"content":"You can also programmatically set the <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> property to use a custom role Web service.","pos":[0,128],"source":"You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service."}]}],"pos":[595,2333],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.RoleServiceManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> class."}],"pos":[3840,3935],"yaml":true},{"content":"Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.","nodes":[{"pos":[0,113],"content":"Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.","nodes":[{"content":"Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.","pos":[0,113]}]}],"pos":[4975,5089],"yaml":true},{"content":"If the <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.  \n  \n> [!NOTE]\n>  When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.  \n  \n The <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser.","nodes":[{"pos":[0,318],"content":"If the <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.LoadRoles%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the list of roles is retrieved by the <ph id=\"ph3\">&lt;xref:System.Web.UI.RoleServiceManager&gt;</ph> class by using the <ph id=\"ph4\">&lt;xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,268],"source":"If the <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method."},{"content":"The list is then serialized into the page markup.","pos":[269,318]}]},{"pos":[326,577],"content":"[!NOTE]\n When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.","leadings":["","> "],"nodes":[{"content":" When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.","pos":[8,249],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.LoadRoles%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, all the roles that the current authenticated user belongs to are sent to the browser.","pos":[1,155],"source":" When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser."},{"content":"Because users can potentially see the role information, this can be a security issue.","pos":[156,241]}]}]},{"pos":[584,1136],"content":"The <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.LoadRoles%2A&gt;</ph> property can be specified in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[0,201],"source":"The <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.LoadRoles%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph> for a proxy instance, the list of roles is retrieved and added to the page.","pos":[202,350],"source":" If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is set to `true` for a proxy instance, the list of roles is retrieved and added to the page."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.LoadRoles%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, the roles are not added to the page markup.","pos":[351,462],"source":" If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `false`, the roles are not added to the page markup."},{"content":"In that case, you can use the  method to store role information in memory in the browser.","pos":[463,552]}]}],"pos":[5100,6244],"yaml":true,"extradata":"MT"},{"content":"`true` if the list of roles must be retrieved; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,90],"content":"`true` if the list of roles must be retrieved; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the list of roles must be retrieved; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,66],"source":"`true` if the list of roles must be retrieved; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[67,90],"source":" The default is `false`."}]}],"pos":[6361,6454],"yaml":true},{"content":"Gets or sets the path of the role service.","nodes":[{"pos":[0,42],"content":"Gets or sets the path of the role service.","nodes":[{"content":"Gets or sets the path of the role service.","pos":[0,42]}]}],"pos":[7413,7456],"yaml":true},{"content":"If the <xref:System.Web.UI.RoleServiceManager.Path%2A> property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set <xref:System.Web.UI.RoleServiceManager.Path%2A> to an empty string or to `null`.  \n  \n <xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:  \n  \n-   If there are multiple proxy objects in the control hierarchy, <xref:System.Web.UI.RoleServiceManager.Path%2A> does not have to be set for each proxy instance.  \n  \n-   If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.","nodes":[{"pos":[0,403],"content":"If the <xref:System.Web.UI.RoleServiceManager.Path%2A> property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set <xref:System.Web.UI.RoleServiceManager.Path%2A> to an empty string or to `null`.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> property is not set, the return value is <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph>.","pos":[0,142],"source":"If the <xref:System.Web.UI.RoleServiceManager.Path%2A> property is not set, the return value is <xref:System.String?displayProperty=fullName>."},{"content":"In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc.","pos":[143,286]},{"content":"The same behavior occurs if you set <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> to an empty string or to <ph id=\"ph2\">`null`</ph>.","pos":[287,403],"source":" The same behavior occurs if you set <xref:System.Web.UI.RoleServiceManager.Path%2A> to an empty string or to `null`."}]},{"pos":[410,742],"content":"<xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:","nodes":[{"content":"<xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:","pos":[0,332],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> can be specified in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[0,183],"source":"<xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> is set at the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> level, the following conditions are true:","pos":[184,332],"source":" When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:"}]}]},{"pos":[752,910],"content":"If there are multiple proxy objects in the control hierarchy, <xref:System.Web.UI.RoleServiceManager.Path%2A> does not have to be set for each proxy instance.","nodes":[{"content":"If there are multiple proxy objects in the control hierarchy, <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> does not have to be set for each proxy instance.","pos":[0,158],"source":"If there are multiple proxy objects in the control hierarchy, <xref:System.Web.UI.RoleServiceManager.Path%2A> does not have to be set for each proxy instance."}]},{"pos":[920,1231],"content":"If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.","nodes":[{"content":"If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.","pos":[0,311],"nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager.Path%2A&gt;</ph> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for.","pos":[0,174],"source":"If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for."},{"content":"If you set different paths for different proxy objects in the control hierarchy, an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> exception is thrown.","pos":[175,311],"source":" If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown."}]}]}],"pos":[7467,8707],"yaml":true,"extradata":"MT"},{"content":"The path of the custom role Web service.","nodes":[{"pos":[0,40],"content":"The path of the custom role Web service.","nodes":[{"content":"The path of the custom role Web service.","pos":[0,40]}]}],"pos":[8820,8861],"yaml":true},{"content":"More than one unique path was set in the control hierarchy.","nodes":[{"pos":[0,59],"content":"More than one unique path was set in the control hierarchy.","nodes":[{"content":"More than one unique path was set in the control hierarchy.","pos":[0,59]}]}],"pos":[9020,9080],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.RoleServiceManager\n  commentId: T:System.Web.UI.RoleServiceManager\n  id: RoleServiceManager\n  children:\n  - System.Web.UI.RoleServiceManager.#ctor\n  - System.Web.UI.RoleServiceManager.LoadRoles\n  - System.Web.UI.RoleServiceManager.Path\n  langs:\n  - csharp\n  name: RoleServiceManager\n  nameWithType: RoleServiceManager\n  fullName: System.Web.UI.RoleServiceManager\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Configures the location of a custom implementation of the role service.\n  remarks: \"The <xref:System.Web.UI.RoleServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.  \\n  \\n To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.  \\n  \\n To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.  \\n  \\n The following example shows the basic class structure that must be implemented in a custom role Web service class.  \\n  \\n  \\n  \\n To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <RoleService Path=\\\"MyRoleService.asmx\\\" LoadRoles=\\\"true\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]\n\n      public class RoleServiceManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.RoleServiceManager.#ctor\n  commentId: M:System.Web.UI.RoleServiceManager.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: RoleServiceManager()\n  nameWithType: RoleServiceManager.RoleServiceManager()\n  fullName: RoleServiceManager.RoleServiceManager()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> class.\n  syntax:\n    content: public RoleServiceManager ();\n    parameters: []\n  overload: System.Web.UI.RoleServiceManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.RoleServiceManager.LoadRoles\n  commentId: P:System.Web.UI.RoleServiceManager.LoadRoles\n  id: LoadRoles\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n  fullName: RoleServiceManager.LoadRoles\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.\n  remarks: \"If the <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.  \\n  \\n> [!NOTE]\\n>  When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.  \\n  \\n The <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser.\"\n  syntax:\n    content: public bool LoadRoles { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the list of roles must be retrieved; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.RoleServiceManager.LoadRoles*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.RoleServiceManager.Path\n  commentId: P:System.Web.UI.RoleServiceManager.Path\n  id: Path\n  parent: System.Web.UI.RoleServiceManager\n  langs:\n  - csharp\n  name: Path\n  nameWithType: RoleServiceManager.Path\n  fullName: RoleServiceManager.Path\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the path of the role service.\n  remarks: \"If the <xref:System.Web.UI.RoleServiceManager.Path%2A> property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set <xref:System.Web.UI.RoleServiceManager.Path%2A> to an empty string or to `null`.  \\n  \\n <xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:  \\n  \\n-   If there are multiple proxy objects in the control hierarchy, <xref:System.Web.UI.RoleServiceManager.Path%2A> does not have to be set for each proxy instance.  \\n  \\n-   If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown.\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of the custom role Web service.\n  overload: System.Web.UI.RoleServiceManager.Path*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one unique path was set in the control hierarchy.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Web.UI.RoleServiceManager.#ctor\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: RoleServiceManager()\n  nameWithType: RoleServiceManager.RoleServiceManager()\n  fullName: RoleServiceManager.RoleServiceManager()\n- uid: System.Web.UI.RoleServiceManager.LoadRoles\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n  fullName: RoleServiceManager.LoadRoles\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.RoleServiceManager.Path\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: RoleServiceManager.Path\n  fullName: RoleServiceManager.Path\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.RoleServiceManager.#ctor*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: RoleServiceManager\n  nameWithType: RoleServiceManager.RoleServiceManager\n  fullName: RoleServiceManager.RoleServiceManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n- uid: System.Web.UI.RoleServiceManager.LoadRoles*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: LoadRoles\n  nameWithType: RoleServiceManager.LoadRoles\n  fullName: RoleServiceManager.LoadRoles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n- uid: System.Web.UI.RoleServiceManager.Path*\n  parent: System.Web.UI.RoleServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: RoleServiceManager.Path\n  fullName: RoleServiceManager.Path\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}