{"nodes":[{"content":"Compares data points.","nodes":[{"pos":[0,21],"content":"Compares data points.","nodes":[{"content":"Compares data points.","pos":[0,21]}]}],"pos":[851,873],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"></xref> class with the specified data series, sort order and sort value.","nodes":[{"pos":[0,178],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"&gt;&lt;/xref&gt;</ph> class with the specified data series, sort order and sort value.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"></xref> class with the specified data series, sort order and sort value."}],"pos":[2959,3138],"yaml":true},{"content":"Data series.","nodes":[{"pos":[0,12],"content":"Data series.","nodes":[{"content":"Data series.","pos":[0,12]}]}],"pos":[3438,3451],"yaml":true},{"content":"Sort order.","nodes":[{"pos":[0,11],"content":"Sort order.","nodes":[{"content":"Sort order.","pos":[0,11]}]}],"pos":[3558,3570],"yaml":true},{"content":"Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.","nodes":[{"pos":[0,73],"content":"Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.","nodes":[{"content":"Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.","pos":[0,73]}]}],"pos":[3632,3706],"yaml":true},{"content":"Compares two data points.","nodes":[{"pos":[0,25],"content":"Compares two data points.","nodes":[{"content":"Compares two data points.","pos":[0,25]}]}],"pos":[5197,5223],"yaml":true},{"content":"First data point.","nodes":[{"pos":[0,17],"content":"First data point.","nodes":[{"content":"First data point.","pos":[0,17]}]}],"pos":[5485,5503],"yaml":true},{"content":"Second data point.","nodes":[{"pos":[0,18],"content":"Second data point.","nodes":[{"content":"Second data point.","pos":[0,18]}]}],"pos":[5597,5616],"yaml":true},{"content":"An `integer` value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer.","nodes":[{"pos":[0,207],"content":"An `integer` value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer.","nodes":[{"content":"An <ph id=\"ph1\">`integer`</ph> value.","pos":[0,19],"source":"An `integer` value."},{"content":"Returns zero (0) if the two values are equal.","pos":[20,65]},{"content":"Returns a positive integer if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, returns a negative integer.","pos":[66,207],"source":" Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer."}]}],"pos":[5672,5880],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  commentId: T:System.Web.UI.DataVisualization.Charting.DataPointComparer\n  id: DataPointComparer\n  children:\n  - System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  - System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  langs:\n  - csharp\n  name: DataPointComparer\n  nameWithType: DataPointComparer\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  type: Class\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Compares data points.\n  syntax:\n    content: 'public class DataPointComparer : System.Collections.Generic.IComparer<System.Web.UI.DataVisualization.Charting.DataPoint>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/DataPointComparer.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  commentId: M:System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  id: '#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)'\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  langs:\n  - csharp\n  name: DataPointComparer(Series, PointSortOrder, String)\n  nameWithType: DataPointComparer.DataPointComparer(Series, PointSortOrder, String)\n  fullName: DataPointComparer.DataPointComparer(Series, PointSortOrder, String)\n  type: Constructor\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"></xref> class with the specified data series, sort order and sort value.\n  syntax:\n    content: public DataPointComparer (System.Web.UI.DataVisualization.Charting.Series series, System.Web.UI.DataVisualization.Charting.PointSortOrder sortOrder, string sortBy);\n    parameters:\n    - id: series\n      type: System.Web.UI.DataVisualization.Charting.Series\n      description: Data series.\n    - id: sortOrder\n      type: System.Web.UI.DataVisualization.Charting.PointSortOrder\n      description: Sort order.\n    - id: sortBy\n      type: System.String\n      description: Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.\n  overload: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/DataPointComparer.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  commentId: M:System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  id: Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  langs:\n  - csharp\n  name: Compare(DataPoint, DataPoint)\n  nameWithType: DataPointComparer.Compare(DataPoint, DataPoint)\n  fullName: DataPointComparer.Compare(DataPoint, DataPoint)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Compares two data points.\n  syntax:\n    content: public int Compare (System.Web.UI.DataVisualization.Charting.DataPoint x, System.Web.UI.DataVisualization.Charting.DataPoint y);\n    parameters:\n    - id: x\n      type: System.Web.UI.DataVisualization.Charting.DataPoint\n      description: First data point.\n    - id: y\n      type: System.Web.UI.DataVisualization.Charting.DataPoint\n      description: Second data point.\n    return:\n      type: System.Int32\n      description: An `integer` value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer.\n  overload: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/DataPointComparer.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: mblythe\n  manager: mblythe\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: DataPointComparer(Series, PointSortOrder, String)\n  nameWithType: DataPointComparer.DataPointComparer(Series, PointSortOrder, String)\n  fullName: DataPointComparer.DataPointComparer(Series, PointSortOrder, String)\n- uid: System.Web.UI.DataVisualization.Charting.Series\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: Series\n  nameWithType: Series\n  fullName: System.Web.UI.DataVisualization.Charting.Series\n- uid: System.Web.UI.DataVisualization.Charting.PointSortOrder\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: PointSortOrder\n  nameWithType: PointSortOrder\n  fullName: System.Web.UI.DataVisualization.Charting.PointSortOrder\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: Compare(DataPoint, DataPoint)\n  nameWithType: DataPointComparer.Compare(DataPoint, DataPoint)\n  fullName: DataPointComparer.Compare(DataPoint, DataPoint)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.DataVisualization.Charting.DataPoint\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: DataPoint\n  nameWithType: DataPoint\n  fullName: System.Web.UI.DataVisualization.Charting.DataPoint\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor*\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: DataPointComparer\n  nameWithType: DataPointComparer.DataPointComparer\n  fullName: DataPointComparer.DataPointComparer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/DataPointComparer.xml\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare*\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: Compare\n  nameWithType: DataPointComparer.Compare\n  fullName: DataPointComparer.Compare\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/DataPointComparer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.IComparer`1\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<DataPoint>\n  nameWithType: IComparer<DataPoint>\n  fullName: System.Collections.Generic.IComparer<System.Web.UI.DataVisualization.Charting.DataPoint>\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.DataVisualization.Charting.DataPoint\n    name: DataPoint\n    nameWithType: DataPoint\n    fullName: System.Web.UI.DataVisualization.Charting.DataPoint\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}