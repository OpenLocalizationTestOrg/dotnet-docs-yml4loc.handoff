{"nodes":[{"content":"Provides data for the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Inserting\"></xref> event.","nodes":[{"pos":[0,100],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource.Inserting\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Inserting\"></xref> event."}],"pos":[919,1020],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.  \n  \n You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source. You can then validate the data, examine validation errors from the data class, or change a value before the update. You can also cancel the insert operation.  \n  \n If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class. You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property. If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`. If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.","nodes":[{"pos":[0,307],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.","pos":[0,307],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object is passed to any event handler for the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.","pos":[0,177],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property contains the data that will be inserted.","pos":[178,307],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted."}]}]},{"pos":[314,637],"content":"You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source. You can then validate the data, examine validation errors from the data class, or change a value before the update. You can also cancel the insert operation.","nodes":[{"content":"You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source. You can then validate the data, examine validation errors from the data class, or change a value before the update. You can also cancel the insert operation.","pos":[0,323],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object to examine the data before the insert operation is executed in the data source.","pos":[0,165],"source":"You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source."},{"content":"You can then validate the data, examine validation errors from the data class, or change a value before the update.","pos":[166,281]},{"content":"You can also cancel the insert operation.","pos":[282,323]}]}]},{"pos":[644,1435],"content":"If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class. You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property. If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`. If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.","nodes":[{"content":"If the object that represents the data source throws a validation exception before it inserts the data, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property contains an instance of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.","pos":[0,294],"source":"If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class."},{"content":"You can retrieve all the validation exceptions through the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.","pos":[295,449],"source":" You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property."},{"content":"If no validation exception is thrown, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property contains <ph id=\"ph2\">`null`</ph>.","pos":[450,593],"source":" If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`."},{"content":"If you handle the validation exceptions and do not want the exception to be re-thrown, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[594,791],"source":" If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`."}]}],"pos":[1031,2473],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class."}],"pos":[6196,6314],"yaml":true},{"content":"An object that contains the data to insert.","nodes":[{"pos":[0,43],"content":"An object that contains the data to insert.","nodes":[{"content":"An object that contains the data to insert.","pos":[0,43]}]}],"pos":[6475,6519],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class and specifies the provided exception.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"&gt;&lt;/xref&gt;</ph> class and specifies the provided exception.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class and specifies the provided exception."}],"pos":[7998,8153],"yaml":true},{"content":"The exception that occurred when the data to insert was being validated.","nodes":[{"pos":[0,72],"content":"The exception that occurred when the data to insert was being validated.","nodes":[{"content":"The exception that occurred when the data to insert was being validated.","pos":[0,72]}]}],"pos":[8413,8486],"yaml":true},{"content":"Gets the exception that was thrown while the data was being validated before the insert operation.","nodes":[{"pos":[0,98],"content":"Gets the exception that was thrown while the data was being validated before the insert operation.","nodes":[{"content":"Gets the exception that was thrown while the data was being validated before the insert operation.","pos":[0,98]}]}],"pos":[9624,9723],"yaml":true},{"content":"If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.","nodes":[{"pos":[0,409],"content":"If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.","nodes":[{"content":"If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.","pos":[0,409],"nodes":[{"content":"If a validation exception is thrown before the insert operation is performed, the exception is stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property.","pos":[0,194],"source":"If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property."},{"content":"In a handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the exception through the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property.","pos":[195,409],"source":" In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property."}]}]}],"pos":[9734,10144],"yaml":true,"extradata":"MT"},{"content":"The exception, if an error occurred; otherwise, `null`.","nodes":[{"pos":[0,55],"content":"The exception, if an error occurred; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The exception, if an error occurred; otherwise, `null`."}],"pos":[11580,11636],"yaml":true},{"content":"Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.","nodes":[{"pos":[0,109],"content":"Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.","nodes":[{"content":"Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.","pos":[0,109]}]}],"pos":[12820,12930],"yaml":true},{"content":"You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation. If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`. If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.","nodes":[{"pos":[0,558],"content":"You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation. If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`. If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.","nodes":[{"content":"You can create event handlers for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to examine validation exceptions that occurred before the insert operation.","pos":[0,177],"source":"You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation."},{"content":"If you handle the exception and do not want it to be thrown again, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[178,355],"source":" If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`."},{"content":"If you do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>, the exception will be propagated to the next event handler in the call stack.","pos":[356,558],"source":" If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack."}]}],"pos":[12941,13500],"yaml":true,"extradata":"MT"},{"content":"`true` if the exception was handled; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the exception was handled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the exception was handled; otherwise, `false`."}],"pos":[14855,14914],"yaml":true},{"content":"Gets the object that contains the data to insert.","nodes":[{"pos":[0,49],"content":"Gets the object that contains the data to insert.","nodes":[{"content":"Gets the object that contains the data to insert.","pos":[0,49]}]}],"pos":[16063,16113],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source. Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>. You can cast this object to the type of the class that represents the data.","nodes":[{"pos":[0,459],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source. Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source. Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.","pos":[0,459],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property contains the data that will be inserted into the data source.","pos":[0,150],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source."},{"content":"Create a handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event and retrieve the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.","pos":[151,459],"source":" Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed."}]}]},{"pos":[466,678],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>. You can cast this object to the type of the class that represents the data.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>. You can cast this object to the type of the class that represents the data.","pos":[0,212],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property returns an object of type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","pos":[0,136],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>."},{"content":"You can cast this object to the type of the class that represents the data.","pos":[137,212]}]}]}],"pos":[16124,16807],"yaml":true,"extradata":"MT"},{"content":"An object that contains the data to insert.","nodes":[{"pos":[0,43],"content":"An object that contains the data to insert.","nodes":[{"content":"An object that contains the data to insert.","pos":[0,43]}]}],"pos":[17662,17706],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  commentId: T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  id: LinqDataSourceInsertEventArgs\n  children:\n  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)\n  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)\n  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception\n  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled\n  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject\n  langs:\n  - csharp\n  name: LinqDataSourceInsertEventArgs\n  nameWithType: LinqDataSourceInsertEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Inserting\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.  \\n  \\n You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source. You can then validate the data, examine validation errors from the data class, or change a value before the update. You can also cancel the insert operation.  \\n  \\n If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class. You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property. If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`. If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.\"\n  example:\n  - \"The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  \\n  \\n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceInsertEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message + \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Inserting(object sender,   \\n        LinqDataSourceInsertEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: 'public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.CancelEventArgs.Cancel\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  langs:\n  - csharp\n  name: LinqDataSourceInsertEventArgs(Object)\n  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)\n  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class.\n  syntax:\n    content: public LinqDataSourceInsertEventArgs (object newObject);\n    parameters:\n    - id: newObject\n      type: System.Object\n      description: An object that contains the data to insert.\n  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)\n  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  langs:\n  - csharp\n  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\"></xref> class and specifies the provided exception.\n  syntax:\n    content: public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);\n    parameters:\n    - id: exception\n      type: System.Web.UI.WebControls.LinqDataSourceValidationException\n      description: The exception that occurred when the data to insert was being validated.\n  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception\n  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception\n  id: Exception\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: LinqDataSourceInsertEventArgs.Exception\n  fullName: LinqDataSourceInsertEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the exception that was thrown while the data was being validated before the insert operation.\n  remarks: If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.\n  example:\n  - \"The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceInsertEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message + \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Inserting(object sender,   \\n        LinqDataSourceInsertEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }\n    return:\n      type: System.Web.UI.WebControls.LinqDataSourceValidationException\n      description: The exception, if an error occurred; otherwise, `null`.\n  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled\n  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled\n  id: ExceptionHandled\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  langs:\n  - csharp\n  name: ExceptionHandled\n  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled\n  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.\n  remarks: You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation. If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`. If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceInsertEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message + \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Inserting(object sender,   \\n        LinqDataSourceInsertEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public bool ExceptionHandled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the exception was handled; otherwise, `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject\n  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject\n  id: NewObject\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  langs:\n  - csharp\n  name: NewObject\n  nameWithType: LinqDataSourceInsertEventArgs.NewObject\n  fullName: LinqDataSourceInsertEventArgs.NewObject\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the object that contains the data to insert.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source. Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>. You can cast this object to the type of the class that represents the data.\"\n  example:\n  - \"The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]\"\n  syntax:\n    content: public object NewObject { get; }\n    return:\n      type: System.Object\n      description: An object that contains the data to insert.\n  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: LinqDataSourceInsertEventArgs(Object)\n  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)\n  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: LinqDataSourceValidationException\n  nameWithType: LinqDataSourceValidationException\n  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: LinqDataSourceInsertEventArgs.Exception\n  fullName: LinqDataSourceInsertEventArgs.Exception\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled\n  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: NewObject\n  nameWithType: LinqDataSourceInsertEventArgs.NewObject\n  fullName: LinqDataSourceInsertEventArgs.NewObject\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: LinqDataSourceInsertEventArgs\n  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs\n  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: LinqDataSourceInsertEventArgs.Exception\n  fullName: LinqDataSourceInsertEventArgs.Exception\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled\n  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*\n  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  isExternal: false\n  name: NewObject\n  nameWithType: LinqDataSourceInsertEventArgs.NewObject\n  fullName: LinqDataSourceInsertEventArgs.NewObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.CancelEventArgs.Cancel\n  parent: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CancelEventArgs.Cancel\n  fullName: CancelEventArgs.Cancel\n"}