{"nodes":[{"content":"Serves as the base class for all the health-monitoring error events.","nodes":[{"pos":[0,68],"content":"Serves as the base class for all the health-monitoring error events.","nodes":[{"content":"Serves as the base class for all the health-monitoring error events.","pos":[0,68]}]}],"pos":[751,820],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n The <xref:System.Web.Management.WebBaseErrorEvent> class is the base class for the health-monitoring events that represent error conditions. ASP.NET uses <xref:System.Web.Management.WebBaseErrorEvent> and its derived types to indicate error conditions during the lifetime of a Web application.  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebBaseErrorEvent> class, see the example provided in this topic.","nodes":[{"pos":[0,378],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,378],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]}]}]},{"pos":[385,678],"content":"The <xref:System.Web.Management.WebBaseErrorEvent> class is the base class for the health-monitoring events that represent error conditions. ASP.NET uses <xref:System.Web.Management.WebBaseErrorEvent> and its derived types to indicate error conditions during the lifetime of a Web application.","nodes":[{"content":"The <xref:System.Web.Management.WebBaseErrorEvent> class is the base class for the health-monitoring events that represent error conditions. ASP.NET uses <xref:System.Web.Management.WebBaseErrorEvent> and its derived types to indicate error conditions during the lifetime of a Web application.","pos":[0,293],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseErrorEvent&gt;</ph> class is the base class for the health-monitoring events that represent error conditions.","pos":[0,140],"source":"The <xref:System.Web.Management.WebBaseErrorEvent> class is the base class for the health-monitoring events that represent error conditions."},{"content":"ASP.NET uses <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseErrorEvent&gt;</ph> and its derived types to indicate error conditions during the lifetime of a Web application.","pos":[141,293],"source":" ASP.NET uses <xref:System.Web.Management.WebBaseErrorEvent> and its derived types to indicate error conditions during the lifetime of a Web application."}]}]},{"pos":[686,1136],"content":"[!NOTE]\n In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebBaseErrorEvent> class, see the example provided in this topic.","leadings":["","> "],"nodes":[{"content":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebBaseErrorEvent> class, see the example provided in this topic.","pos":[8,448],"nodes":[{"content":"In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the <ph id=\"ph1\">`healthMonitoring`</ph> configuration section.","pos":[1,209],"source":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[210,310]},{"content":"For an example of deriving from the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseErrorEvent&gt;</ph> class, see the example provided in this topic.","pos":[311,440],"source":" For an example of deriving from the <xref:System.Web.Management.WebBaseErrorEvent> class, see the example provided in this topic."}]}]}],"pos":[831,1975],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebBaseErrorEvent\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class."}],"pos":[6738,6840],"yaml":true},{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"pos":[0,175],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","pos":[0,175],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You can call this constructor when implementing your own event type that inherits from this class.","pos":[77,175]}]}]}],"pos":[6851,7027],"yaml":true,"extradata":"MT"},{"content":"The event description.","nodes":[{"pos":[0,22],"content":"The event description.","nodes":[{"content":"The event description.","pos":[0,22]}]}],"pos":[7797,7820],"yaml":true},{"content":"The object that is the source of the event.","nodes":[{"pos":[0,43],"content":"The object that is the source of the event.","nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]}],"pos":[7887,7931],"yaml":true},{"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"pos":[0,180],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;&lt;/xref&gt;</ph>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]}],"pos":[7995,8176],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> associated with the error.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> associated with the error.","source":"The <xref href=\"System.Exception\"></xref> associated with the error."}],"pos":[8236,8305],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebBaseErrorEvent\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class."}],"pos":[9680,9782],"yaml":true},{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"pos":[0,175],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.","pos":[0,175],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You can call this constructor when implementing your own event type that inherits from this class.","pos":[77,175]}]}]}],"pos":[9793,9969],"yaml":true,"extradata":"MT"},{"content":"The event description.","nodes":[{"pos":[0,22],"content":"The event description.","nodes":[{"content":"The event description.","pos":[0,22]}]}],"pos":[10760,10783],"yaml":true},{"content":"The object that is the source of the event.","nodes":[{"pos":[0,43],"content":"The object that is the source of the event.","nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]}],"pos":[10850,10894],"yaml":true},{"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"pos":[0,180],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;&lt;/xref&gt;</ph>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]}],"pos":[10958,11139],"yaml":true},{"content":"The detailed identifier for the event.","nodes":[{"pos":[0,38],"content":"The detailed identifier for the event.","nodes":[{"content":"The detailed identifier for the event.","pos":[0,38]}]}],"pos":[11209,11248],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> associated with the error.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> associated with the error.","source":"The <xref href=\"System.Exception\"></xref> associated with the error."}],"pos":[11308,11377],"yaml":true},{"content":"Gets the <xref href=\"System.Exception\"></xref> associated with the error.","nodes":[{"pos":[0,73],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> associated with the error.","source":"Gets the <xref href=\"System.Exception\"></xref> associated with the error."}],"pos":[12426,12500],"yaml":true},{"content":"If you implement a custom <xref:System.Web.Management.WebBaseErrorEvent>, you must ensure that your custom error event handles this exception.","nodes":[{"pos":[0,142],"content":"If you implement a custom <xref:System.Web.Management.WebBaseErrorEvent>, you must ensure that your custom error event handles this exception.","nodes":[{"content":"If you implement a custom <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseErrorEvent&gt;</ph>, you must ensure that your custom error event handles this exception.","pos":[0,142],"source":"If you implement a custom <xref:System.Web.Management.WebBaseErrorEvent>, you must ensure that your custom error event handles this exception."}]}],"pos":[12511,12654],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Exception\"></xref> associated with the error.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> associated with the error.","source":"The <xref href=\"System.Exception\"></xref> associated with the error."}],"pos":[12778,12847],"yaml":true},{"content":"Increments the event-error performance-related counters.","nodes":[{"pos":[0,56],"content":"Increments the event-error performance-related counters.","nodes":[{"content":"Increments the event-error performance-related counters.","pos":[0,56]}]}],"pos":[13951,14008],"yaml":true},{"content":"This method increments the following performance counters:  \n  \n-   Infrastructure Error Events Raised. This is a global counter that tracks the error events raised.  \n  \n-   Error Events Raised. This is an application-specific counter that tracks the number of error events raised since the application started.  \n  \n This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter. This counter tracks the total number of events raised.  \n  \n To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in the IIS documentation on MSDN.","nodes":[{"pos":[0,58],"content":"This method increments the following performance counters:","nodes":[{"content":"This method increments the following performance counters:","pos":[0,58]}]},{"pos":[68,165],"content":"Infrastructure Error Events Raised. This is a global counter that tracks the error events raised.","nodes":[{"content":"Infrastructure Error Events Raised. This is a global counter that tracks the error events raised.","pos":[0,97],"nodes":[{"content":"Infrastructure Error Events Raised.","pos":[0,35]},{"content":"This is a global counter that tracks the error events raised.","pos":[36,97]}]}]},{"pos":[175,312],"content":"Error Events Raised. This is an application-specific counter that tracks the number of error events raised since the application started.","nodes":[{"content":"Error Events Raised. This is an application-specific counter that tracks the number of error events raised since the application started.","pos":[0,137],"nodes":[{"content":"Error Events Raised.","pos":[0,20]},{"content":"This is an application-specific counter that tracks the number of error events raised since the application started.","pos":[21,137]}]}]},{"pos":[319,519],"content":"This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter. This counter tracks the total number of events raised.","nodes":[{"content":"This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter. This counter tracks the total number of events raised.","pos":[0,200],"nodes":[{"content":"This method also calls the parent <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A&gt;</ph>, which increments the Events Raised counter.","pos":[0,145],"source":"This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter."},{"content":"This counter tracks the total number of events raised.","pos":[146,200]}]}]},{"pos":[526,945],"content":"To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in the IIS documentation on MSDN.","nodes":[{"content":"To view these performance counters in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window select <bpt id=\"p2\">**</bpt>ASP.NET<ept id=\"p2\">**</ept> in the <bpt id=\"p3\">**</bpt>Performance object<ept id=\"p3\">**</ept> drop-down list, select the performance counter you want to view, and click the <bpt id=\"p4\">**</bpt>Add<ept id=\"p4\">**</ept> button.","pos":[0,238],"source":"To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the System Monitor (PerfMon) with ASP.NET Applications<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=36882&amp;clcid=0x409)</ept> in the IIS documentation on MSDN.","pos":[239,419],"source":" For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in the IIS documentation on MSDN."}]}],"pos":[14019,14975],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebBaseErrorEvent\n  commentId: T:System.Web.Management.WebBaseErrorEvent\n  id: WebBaseErrorEvent\n  children:\n  - System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)\n  - System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)\n  - System.Web.Management.WebBaseErrorEvent.ErrorException\n  - System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters\n  langs:\n  - csharp\n  name: WebBaseErrorEvent\n  nameWithType: WebBaseErrorEvent\n  fullName: System.Web.Management.WebBaseErrorEvent\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Serves as the base class for all the health-monitoring error events.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n The <xref:System.Web.Management.WebBaseErrorEvent> class is the base class for the health-monitoring events that represent error conditions. ASP.NET uses <xref:System.Web.Management.WebBaseErrorEvent> and its derived types to indicate error conditions during the lifetime of a Web application.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebBaseErrorEvent> class, see the example provided in this topic.\"\n  example:\n  - \"The following code example has two parts. The first is an excerpt of a configuration file that enables ASP.NET health monitoring to use an event derived from the <xref:System.Web.Management.WebBaseErrorEvent> class. The second shows how to derive from the <xref:System.Web.Management.WebBaseErrorEvent> class to create the custom event.  \\n  \\n```  \\n<healthMonitoring   \\n  enabled=\\\"true\\\" heartBeatInterval=\\\"0\\\">  \\n  \\n  <providers>  \\n    <!-- Define the custom provider that   \\n         processes custom Web request events. -->  \\n    <add name=\\\"SampleWebEventProvider\\\"   \\n      type=\\\"SamplesAspNet.SampleEventProvider,  \\n      webeventprovider,Version=1.0.1573.18094,   \\n      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   \\n      processorArchitecture=MSIL\\\"/>  \\n  </providers>  \\n  \\n  <eventMappings>  \\n  \\n    <!--  Define the event source that issues custom events.   -->  \\n    <add  name=\\\"SampleWebBaseErrorEvent\\\"      \\n      type=\\\"SamplesAspNet.SampleWebBaseErrorEvent,  \\n      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     \\n      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL\\\"/>  \\n  </eventMappings>  \\n  \\n  <rules>  \\n    <!-- Associate custom event with related   \\n      custom provider -->  \\n    <add   \\n       name=\\\"Custom Web Base Errors\\\"  \\n       eventName=\\\"SampleWebBaseErrorEvent\\\"   \\n       provider=\\\"SampleWebEventProvider\\\"   \\n       profile=\\\"Custom\\\"/>    \\n  </rules>  \\n  \\n</healthMonitoring>  \\n```  \\n  \\n The following code shows how to derive from the <xref:System.Web.Management.WebBaseErrorEvent> class to create a custom event.  \\n  \\n [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]\\n [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]\"\n  syntax:\n    content: 'public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  derivedClasses:\n  - System.Web.Management.WebErrorEvent\n  - System.Web.Management.WebRequestErrorEvent\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)\n  commentId: M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Exception)'\n  parent: System.Web.Management.WebBaseErrorEvent\n  langs:\n  - csharp\n  name: WebBaseErrorEvent(String, Object, Int32, Exception)\n  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Exception)\n  fullName: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.\n  example:\n  - \"The following code example shows how to call this constructor from a constructor for the `SampleWebBaseErrorEvent` class, a class that derives from the <xref:System.Web.Management.WebBaseErrorEvent> class.  \\n  \\n [!code-csharp[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#2)]\\n [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#2)]\"\n  syntax:\n    content: protected WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: e\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> associated with the error.\n  overload: System.Web.Management.WebBaseErrorEvent.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)\n  commentId: M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)'\n  parent: System.Web.Management.WebBaseErrorEvent\n  langs:\n  - csharp\n  name: WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n  fullName: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebBaseErrorEvent\"></xref> class.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class.\n  example:\n  - \"The following code example shows how to call this constructor from a constructor for the `SampleWebBaseErrorEvent` class, a class that derives from the <xref:System.Web.Management.WebBaseErrorEvent> class.  \\n  \\n [!code-csharp[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#3)]\\n [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#3)]\"\n  syntax:\n    content: protected WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: eventDetailCode\n      type: System.Int32\n      description: The detailed identifier for the event.\n    - id: e\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> associated with the error.\n  overload: System.Web.Management.WebBaseErrorEvent.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebBaseErrorEvent.ErrorException\n  commentId: P:System.Web.Management.WebBaseErrorEvent.ErrorException\n  id: ErrorException\n  parent: System.Web.Management.WebBaseErrorEvent\n  langs:\n  - csharp\n  name: ErrorException\n  nameWithType: WebBaseErrorEvent.ErrorException\n  fullName: WebBaseErrorEvent.ErrorException\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the <xref href=\"System.Exception\"></xref> associated with the error.\n  remarks: If you implement a custom <xref:System.Web.Management.WebBaseErrorEvent>, you must ensure that your custom error event handles this exception.\n  syntax:\n    content: public Exception ErrorException { get; }\n    return:\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> associated with the error.\n  overload: System.Web.Management.WebBaseErrorEvent.ErrorException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters\n  commentId: M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters\n  id: IncrementPerfCounters\n  parent: System.Web.Management.WebBaseErrorEvent\n  langs:\n  - csharp\n  name: IncrementPerfCounters()\n  nameWithType: WebBaseErrorEvent.IncrementPerfCounters()\n  fullName: WebBaseErrorEvent.IncrementPerfCounters()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Increments the event-error performance-related counters.\n  remarks: \"This method increments the following performance counters:  \\n  \\n-   Infrastructure Error Events Raised. This is a global counter that tracks the error events raised.  \\n  \\n-   Error Events Raised. This is an application-specific counter that tracks the number of error events raised since the application started.  \\n  \\n This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter. This counter tracks the total number of events raised.  \\n  \\n To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in the IIS documentation on MSDN.\"\n  syntax:\n    content: protected override void IncrementPerfCounters ();\n    parameters: []\n  overload: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Management.WebManagementEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebManagementEvent\n  nameWithType: WebManagementEvent\n  fullName: System.Web.Management.WebManagementEvent\n- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: WebBaseErrorEvent(String, Object, Int32, Exception)\n  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Exception)\n  fullName: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Exception)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n  fullName: WebBaseErrorEvent.WebBaseErrorEvent(String, Object, Int32, Int32, Exception)\n- uid: System.Web.Management.WebBaseErrorEvent.ErrorException\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: ErrorException\n  nameWithType: WebBaseErrorEvent.ErrorException\n  fullName: WebBaseErrorEvent.ErrorException\n- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: IncrementPerfCounters()\n  nameWithType: WebBaseErrorEvent.IncrementPerfCounters()\n  fullName: WebBaseErrorEvent.IncrementPerfCounters()\n- uid: System.Web.Management.WebBaseErrorEvent.#ctor*\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: WebBaseErrorEvent\n  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent\n  fullName: WebBaseErrorEvent.WebBaseErrorEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n- uid: System.Web.Management.WebBaseErrorEvent.ErrorException*\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: ErrorException\n  nameWithType: WebBaseErrorEvent.ErrorException\n  fullName: WebBaseErrorEvent.ErrorException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters*\n  parent: System.Web.Management.WebBaseErrorEvent\n  isExternal: false\n  name: IncrementPerfCounters\n  nameWithType: WebBaseErrorEvent.IncrementPerfCounters\n  fullName: WebBaseErrorEvent.IncrementPerfCounters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebBaseErrorEvent.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Web.Management.WebBaseEvent.ToString\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ToString()\n  nameWithType: WebBaseEvent.ToString()\n  fullName: WebBaseEvent.ToString()\n- uid: System.Web.Management.WebBaseEvent.ApplicationInformation\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ApplicationInformation\n  nameWithType: WebBaseEvent.ApplicationInformation\n  fullName: WebBaseEvent.ApplicationInformation\n- uid: System.Web.Management.WebBaseEvent.EventCode\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventCode\n  nameWithType: WebBaseEvent.EventCode\n  fullName: WebBaseEvent.EventCode\n- uid: System.Web.Management.WebBaseEvent.EventDetailCode\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventDetailCode\n  nameWithType: WebBaseEvent.EventDetailCode\n  fullName: WebBaseEvent.EventDetailCode\n- uid: System.Web.Management.WebBaseEvent.EventID\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventID\n  nameWithType: WebBaseEvent.EventID\n  fullName: WebBaseEvent.EventID\n- uid: System.Web.Management.WebBaseEvent.EventOccurrence\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventOccurrence\n  nameWithType: WebBaseEvent.EventOccurrence\n  fullName: WebBaseEvent.EventOccurrence\n- uid: System.Web.Management.WebBaseEvent.EventSequence\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventSequence\n  nameWithType: WebBaseEvent.EventSequence\n  fullName: WebBaseEvent.EventSequence\n- uid: System.Web.Management.WebBaseEvent.EventSource\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventSource\n  nameWithType: WebBaseEvent.EventSource\n  fullName: WebBaseEvent.EventSource\n- uid: System.Web.Management.WebBaseEvent.EventTime\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventTime\n  nameWithType: WebBaseEvent.EventTime\n  fullName: WebBaseEvent.EventTime\n- uid: System.Web.Management.WebBaseEvent.EventTimeUtc\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventTimeUtc\n  nameWithType: WebBaseEvent.EventTimeUtc\n  fullName: WebBaseEvent.EventTimeUtc\n- uid: System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: FormatCustomEventDetails(WebEventFormatter)\n  nameWithType: WebBaseEvent.FormatCustomEventDetails(WebEventFormatter)\n  fullName: WebBaseEvent.FormatCustomEventDetails(WebEventFormatter)\n- uid: System.Web.Management.WebBaseEvent.Message\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Message\n  nameWithType: WebBaseEvent.Message\n  fullName: WebBaseEvent.Message\n- uid: System.Web.Management.WebBaseEvent.Raise\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Raise()\n  nameWithType: WebBaseEvent.Raise()\n  fullName: WebBaseEvent.Raise()\n- uid: System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Raise(WebBaseEvent)\n  nameWithType: WebBaseEvent.Raise(WebBaseEvent)\n  fullName: WebBaseEvent.Raise(WebBaseEvent)\n- uid: System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ToString(Boolean, Boolean)\n  nameWithType: WebBaseEvent.ToString(Boolean, Boolean)\n  fullName: WebBaseEvent.ToString(Boolean, Boolean)\n- uid: System.Web.Management.WebManagementEvent.ProcessInformation\n  parent: System.Web.Management.WebManagementEvent\n  isExternal: false\n  name: ProcessInformation\n  nameWithType: WebManagementEvent.ProcessInformation\n  fullName: WebManagementEvent.ProcessInformation\n"}