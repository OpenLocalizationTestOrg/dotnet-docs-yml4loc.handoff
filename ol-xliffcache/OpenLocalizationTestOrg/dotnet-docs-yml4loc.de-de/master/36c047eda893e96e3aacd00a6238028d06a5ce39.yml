### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  commentId: T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  id: IRandomAccessIterator`1
  children:
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)
  langs:
  - csharp
  name: IRandomAccessIterator<TValue>
  nameWithType: IRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>
  type: Interface
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: 'Defines the interface for a random access iterator. Random access iterators support the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.'
  syntax:
    content: 'public interface IRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'
    typeParameters:
    - id: TValue
      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'
  derivedClasses:
  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1
  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{TValue}
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  langs:
  - csharp
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: IRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: IRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.
  syntax:
    content: public int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Int32
      description: The distance, in number of elements, between the element that the current iterator is pointing to and the element that <code>_Right</code> is pointing to. This number is negative if <code>_Right</code> points to an element that is before the element that the current iterator points to.
  overload: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  langs:
  - csharp
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: IRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: IRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the current iterator is pointing to an element in the container that precedes the element that the given iterator points to.
  syntax:
    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Boolean
      description: '`true` if the current iterator is pointing to an element that comes before the element that <code>_Right</code> is pointing to; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)
  id: move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  langs:
  - csharp
  name: move(Int32)
  nameWithType: IRandomAccessIterator<TValue>.move(Int32)
  fullName: IRandomAccessIterator<TValue>.move(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Moves the iterator by the given number of elements.
  syntax:
    content: public int move (int _Offset);
    parameters:
    - id: _Offset
      type: System.Int32
      description: The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.
    return:
      type: System.Int32
      description: The actual number of elements traversed. This number will differ from <code>_Offset</code> if the beginning or end of the container is reached before iterating the desired number of elements.
  overload: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: IRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: IRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IRandomAccessIterator<TValue>
  nameWithType: IRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: IRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: IRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: move(Int32)
  nameWithType: IRandomAccessIterator<TValue>.move(Int32)
  fullName: IRandomAccessIterator<TValue>.move(Int32)
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance*
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: distance
  nameWithType: IRandomAccessIterator<TValue>.distance
  fullName: IRandomAccessIterator<TValue>.distance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than*
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: less_than
  nameWithType: IRandomAccessIterator<TValue>.less_than
  fullName: IRandomAccessIterator<TValue>.less_than
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move*
  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  isExternal: false
  name: move
  nameWithType: IRandomAccessIterator<TValue>.move
  fullName: IRandomAccessIterator<TValue>.move
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IBidirectionalIterator<TValue>
  nameWithType: IBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>
