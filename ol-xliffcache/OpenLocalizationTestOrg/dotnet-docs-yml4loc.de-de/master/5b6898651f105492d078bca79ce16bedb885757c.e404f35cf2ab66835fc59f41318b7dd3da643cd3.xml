{"nodes":[{"content":"Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.","nodes":[{"pos":[0,87],"content":"Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.","nodes":[{"content":"Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.","pos":[0,87]}]}],"pos":[3613,3701],"yaml":true},{"content":"When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.  \n  \n The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).  \n  \n The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.  \n  \n For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.  \n  \n You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"pos":[0,823],"content":"When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.","nodes":[{"content":"When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.","pos":[0,823],"nodes":[{"content":"When present in the ASP.NET pipeline, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) processes session cookies in WS-Federation scenarios.","pos":[0,166],"source":"When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios."},{"content":"It uses the cookie handler specified by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property to read the raw session cookie from the HTTP request and write it to the HTTP response.","pos":[167,389],"source":" It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response."},{"content":"It uses the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that is configured for an application to deserialize the raw session cookie into <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> objects.","pos":[390,610],"source":" It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects."},{"content":"The session security token contains the claims (<ph id=\"ph1\">&lt;xref:System.Security.Claims.Claim&gt;</ph>) and principal (<ph id=\"ph2\">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) associated with the entity for which the request is being served.","pos":[611,823],"source":" The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served."}]}]},{"pos":[830,1485],"content":"The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.","nodes":[{"content":"The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.","pos":[0,655],"nodes":[{"content":"The SAM adds its <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> event handler to the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName&gt;</ph> event in the ASP.NET pipeline.","pos":[0,237],"source":"The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline."},{"content":"This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=fullName&gt;</ph> properties to the claims principal contained in the session token.","pos":[238,575],"source":" This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token."},{"content":"It invokes several of the other methods exposed by the SAM during this process.","pos":[576,655]}]}]},{"pos":[1492,1681],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).","pos":[0,189],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file)."}]},{"pos":[1688,2585],"content":"The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.","nodes":[{"content":"The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.","pos":[0,897],"nodes":[{"content":"The SAM exposes several events that provide access to its processing pipeline.","pos":[0,78]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> events enable you to modify session tokens that are read from cookies or created during processing.","pos":[79,373],"source":" The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing."},{"content":"Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.","pos":[374,480]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> events provide hooks into the processing of sign-out requests.","pos":[481,782],"source":" The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests."},{"content":"For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.","pos":[783,897]}]}]},{"pos":[2592,3070],"content":"For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.","nodes":[{"content":"For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.","pos":[0,478],"nodes":[{"content":"For more complicated scenarios, you can derive from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> to implement a custom SAM.","pos":[0,143],"source":"For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM."},{"content":"To this end, many of the methods that are invoked during <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.","pos":[144,478],"source":" To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle."}]}]},{"pos":[3077,3503],"content":"You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"content":"You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the <ph id=\"ph1\">`&lt;system.webServer&gt;`</ph> element for IIS version 7 and later or under the <ph id=\"ph2\">`&lt;system.web&gt;`</ph> element for versions prior to IIS 7.","pos":[0,239],"source":"You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7."},{"content":"The cookie handler used by the SAM can be configured with the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;cookieHandler<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.","pos":[240,426],"source":" The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element."}]}],"pos":[3712,7230],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule\"></xref> class.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule\"></xref> class."}],"pos":[9971,10091],"yaml":true},{"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> property is set to `false` and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized to a default instance of the <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> class.","nodes":[{"pos":[0,346],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized to a default instance of the <ph id=\"ph4\">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> class.","source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> property is set to `false` and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized to a default instance of the <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> class."}],"pos":[10102,10449],"yaml":true,"extradata":"MT"},{"content":"Authenticates the incoming request by validating the incoming session token. Upon successful validation, it updates the current HTTP context and thread principal with the specified  <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","nodes":[{"pos":[0,252],"content":"Authenticates the incoming request by validating the incoming session token. Upon successful validation, it updates the current HTTP context and thread principal with the specified  <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.","nodes":[{"content":"Authenticates the incoming request by validating the incoming session token.","pos":[0,76]},{"content":"Upon successful validation, it updates the current HTTP context and thread principal with the specified  <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[77,252],"source":" Upon successful validation, it updates the current HTTP context and thread principal with the specified  <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>."}]}],"pos":[12090,12343],"yaml":true},{"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method. It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties. If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie.","nodes":[{"pos":[0,748],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method. It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties. If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method is called from the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.","pos":[0,228],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method."},{"content":"It calls the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> method to validate the incoming token and update the <ph id=\"ph2\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=fullName&gt;</ph> properties.","pos":[229,550],"source":" It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties."},{"content":"If the <ph id=\"ph1\">`writeCookie`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> method is invoked to write the session token to a cookie.","pos":[551,748],"source":" If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie."}]}],"pos":[12354,13103],"yaml":true,"extradata":"MT"},{"content":"The session security token to use to authenticate the incoming HTTP request.","nodes":[{"pos":[0,76],"content":"The session security token to use to authenticate the incoming HTTP request.","nodes":[{"content":"The session security token to use to authenticate the incoming HTTP request.","pos":[0,76]}]}],"pos":[13381,13458],"yaml":true},{"content":"`true` to write the session cookie; otherwise `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> to write the session cookie; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` to write the session cookie; otherwise `false`."}],"pos":[13526,13583],"yaml":true},{"content":"Determines whether a session cookie is in the specified cookie collection.","nodes":[{"pos":[0,74],"content":"Determines whether a session cookie is in the specified cookie collection.","nodes":[{"content":"Determines whether a session cookie is in the specified cookie collection.","pos":[0,74]}]}],"pos":[15011,15086],"yaml":true},{"content":"The collection of cookies in which to search.","nodes":[{"pos":[0,45],"content":"The collection of cookies in which to search.","nodes":[{"content":"The collection of cookies in which to search.","pos":[0,45]}]}],"pos":[15314,15360],"yaml":true},{"content":"`true` if a session cookie is found; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if a session cookie is found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a session cookie is found; otherwise, `false`."}],"pos":[15418,15477],"yaml":true},{"content":"<code>httpCookieCollection</code> is null","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;httpCookieCollection&lt;/code&gt;</ph> is null","source":"<code>httpCookieCollection</code> is null"}],"pos":[15691,15733],"yaml":true},{"content":"Gets the active <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> for the current <xref href=\"System.Web.HttpContext\"></xref>.","nodes":[{"pos":[0,146],"content":"Gets the active <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> for the current <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the active <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> for the current <xref href=\"System.Web.HttpContext\"></xref>."}],"pos":[16883,17030],"yaml":true},{"content":"The active session security token.","nodes":[{"pos":[0,34],"content":"The active session security token.","nodes":[{"content":"The active session security token.","pos":[0,34]}]}],"pos":[17246,17281],"yaml":true},{"content":"Gets the cookie handler that is used to read, write, and delete session cookies.","nodes":[{"pos":[0,80],"content":"Gets the cookie handler that is used to read, write, and delete session cookies.","nodes":[{"content":"Gets the cookie handler that is used to read, write, and delete session cookies.","pos":[0,80]}]}],"pos":[18463,18544],"yaml":true},{"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method. This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can set the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"pos":[0,728],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method. This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can set the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> method.","pos":[0,230],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method."},{"content":"This method initializes the property based on the cookie handler specified on the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> object that is set on the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName&gt;</ph> property.","pos":[231,536],"source":" This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property."},{"content":"You can set the cookie handler in a configuration file through the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;cookieHandler<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.","pos":[537,728],"source":" You can set the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element."}]}],"pos":[18555,19284],"yaml":true,"extradata":"MT"},{"content":"The cookie handler.","nodes":[{"pos":[0,19],"content":"The cookie handler.","nodes":[{"content":"The cookie handler.","pos":[0,19]}]}],"pos":[19473,19493],"yaml":true},{"content":"Creates a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified parameters by using the configured session token handler.","nodes":[{"pos":[0,156],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> from the specified parameters by using the configured session token handler.","source":"Creates a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified parameters by using the configured session token handler."}],"pos":[21202,21359],"yaml":true},{"content":"The principal to be captured in the token.","nodes":[{"pos":[0,42],"content":"The principal to be captured in the token.","nodes":[{"content":"The principal to be captured in the token.","pos":[0,42]}]}],"pos":[21696,21739],"yaml":true},{"content":"An application-defined context string.","nodes":[{"pos":[0,38],"content":"An application-defined context string.","nodes":[{"content":"An application-defined context string.","pos":[0,38]}]}],"pos":[21802,21841],"yaml":true},{"content":"The first instant in which this token is valid.","nodes":[{"pos":[0,47],"content":"The first instant in which this token is valid.","nodes":[{"content":"The first instant in which this token is valid.","pos":[0,47]}]}],"pos":[21908,21956],"yaml":true},{"content":"The last instant in which this token is valid.","nodes":[{"pos":[0,46],"content":"The last instant in which this token is valid.","nodes":[{"content":"The last instant in which this token is valid.","pos":[0,46]}]}],"pos":[22021,22068],"yaml":true},{"content":"`true` if the value should be persisted by the user agent; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the value should be persisted by the user agent; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value should be persisted by the user agent; otherwise, `false`."}],"pos":[22137,22218],"yaml":true},{"content":"The session token.","nodes":[{"pos":[0,18],"content":"The session token.","nodes":[{"content":"The session token.","pos":[0,18]}]}],"pos":[22310,22329],"yaml":true},{"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"pos":[0,273],"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"content":"There is not a valid session token handler configured.","pos":[0,54]},{"content":"(There is no <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> configured in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"&gt;&lt;/xref&gt;</ph> property.)","pos":[55,273],"source":" (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)"}]}],"pos":[22551,22825],"yaml":true},{"content":"Deletes the session cookie and removes it from the cache.","nodes":[{"pos":[0,57],"content":"Deletes the session cookie and removes it from the cache.","nodes":[{"content":"Deletes the session cookie and removes it from the cache.","pos":[0,57]}]}],"pos":[23961,24019],"yaml":true},{"content":"Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property. This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.","nodes":[{"pos":[0,292],"content":"Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property. This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.","nodes":[{"content":"Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property. This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.","pos":[0,292],"nodes":[{"content":"Deletes the session cookie by using the cookie handler specified by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.","pos":[0,163],"source":"Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property."},{"content":"This method is called during sign-out by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.","pos":[164,292],"source":" This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method."}]}]}],"pos":[24030,24323],"yaml":true,"extradata":"MT"},{"content":"Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object.","nodes":[{"pos":[0,141],"content":"Initializes the module and prepares it to handle events from the module's <ph id=\"ph1\">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> application object.","source":"Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object."}],"pos":[25736,25878],"yaml":true},{"content":"Adds the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handlers to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> and <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> events of the application object specified by the `context` parameter.","nodes":[{"pos":[0,453],"content":"Adds the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handlers to the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName&gt;</ph> events of the application object specified by the <ph id=\"ph5\">`context`</ph> parameter.","source":"Adds the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handlers to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> and <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> events of the application object specified by the `context` parameter."}],"pos":[25889,26343],"yaml":true,"extradata":"MT"},{"content":"The HTTP application object that contains this module.","nodes":[{"pos":[0,54],"content":"The HTTP application object that contains this module.","nodes":[{"content":"The HTTP application object that contains this module.","pos":[0,54]}]}],"pos":[26537,26592],"yaml":true},{"content":"Initializes the module properties based on definitions in the configuration file.","nodes":[{"pos":[0,81],"content":"Initializes the module properties based on definitions in the configuration file.","nodes":[{"content":"Initializes the module properties based on definitions in the configuration file.","pos":[0,81]}]}],"pos":[27911,27993],"yaml":true},{"content":"Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can specify the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"pos":[0,602],"content":"Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can specify the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.","nodes":[{"content":"Initializes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property from the handler specified in configuration by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName&gt;</ph> object that is set on the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,406],"source":"Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property."},{"content":"You can specify the cookie handler in a configuration file through the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;cookieHandler<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.","pos":[407,602],"source":" You can specify the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element."}]}],"pos":[28004,28607],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.","nodes":[{"pos":[0,239],"content":"Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.","nodes":[{"content":"Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.","pos":[0,239]}]}],"pos":[29919,30159],"yaml":true},{"content":"In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>). The issued cookie just contains a context identifier that is used to retrieve the token from the cache.  \n  \n> [!IMPORTANT]\n>  To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName> property on the Session Authentication Module.","nodes":[{"pos":[0,307],"content":"In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>). The issued cookie just contains a context identifier that is used to retrieve the token from the cache.","nodes":[{"content":"In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>). The issued cookie just contains a context identifier that is used to retrieve the token from the cache.","pos":[0,307],"nodes":[{"content":"In reference mode, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> is stored in a server-side cache (an object that derives from <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).","pos":[0,203],"source":"In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>)."},{"content":"The issued cookie just contains a context identifier that is used to retrieve the token from the cache.","pos":[204,307]}]}]},{"pos":[315,1122],"content":"[!IMPORTANT]\n To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName> property on the Session Authentication Module.","leadings":["","> "],"nodes":[{"content":" To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName> property on the Session Authentication Module.","pos":[13,805],"nodes":[{"content":"To operate in reference mode, Microsoft recommends providing a handler for the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName&gt;</ph> event in the global.asax.cs file and setting the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName&gt;</ph> property on the token passed in the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName&gt;</ph> property.","pos":[1,512],"source":" To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property."},{"content":"This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName&gt;</ph> property on the Session Authentication Module.","pos":[513,792],"source":" This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName> property on the Session Authentication Module."}]}]}],"pos":[30170,31298],"yaml":true,"extradata":"MT"},{"content":"`true` if issued cookies are in reference mode; otherwise, `false`. The default is `false`, which specifies that issued cookies are not in reference mode.","nodes":[{"pos":[0,154],"content":"`true` if issued cookies are in reference mode; otherwise, `false`. The default is `false`, which specifies that issued cookies are not in reference mode.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if issued cookies are in reference mode; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,67],"source":"`true` if issued cookies are in reference mode; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>, which specifies that issued cookies are not in reference mode.","pos":[68,154],"source":" The default is `false`, which specifies that issued cookies are not in reference mode."}]}],"pos":[31421,31578],"yaml":true},{"content":"Handles the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.","nodes":[{"pos":[0,152],"content":"Handles the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event from the <ph id=\"ph2\">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.","source":"Handles the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline."}],"pos":[32947,33100],"yaml":true},{"content":"This method does the following:  \n  \n1.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present.  \n  \n2.  If a session security token cannot be read (most likely because a session has not been established), return.  \n  \n3.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event. This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled. The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> property.  \n  \n4.  If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event. This provides opportunity for the token to again be modified. The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property in the event handler.  \n  \n5.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user. If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> property of the incoming token.  \n  \n6.  If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.","nodes":[{"pos":[0,31],"content":"This method does the following:","nodes":[{"content":"This method does the following:","pos":[0,31]}]},{"pos":[41,267],"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present.","nodes":[{"content":"Invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> method to read a <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> from the session cookie, if one is present.","pos":[0,226],"source":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present."}]},{"pos":[277,385],"content":"If a session security token cannot be read (most likely because a session has not been established), return.","nodes":[{"content":"If a session security token cannot be read (most likely because a session has not been established), return.","pos":[0,108]}]},{"pos":[395,946],"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event. This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled. The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> property.","nodes":[{"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event. This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled. The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> property.","pos":[0,551],"nodes":[{"content":"Invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> method to raise the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event.","pos":[0,231],"source":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event."},{"content":"This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.","pos":[232,345]},{"content":"The handler can also specify that the token should be reissued, by setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName&gt;</ph> property.","pos":[346,551],"source":" The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> property."}]}]},{"pos":[956,1518],"content":"If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event. This provides opportunity for the token to again be modified. The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property in the event handler.","nodes":[{"content":"If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event. This provides opportunity for the token to again be modified. The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property in the event handler.","pos":[0,562],"nodes":[{"content":"If the token is to be reissued, removes it from the cache and invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> method to raise the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event.","pos":[0,291],"source":"If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event."},{"content":"This provides opportunity for the token to again be modified.","pos":[292,353]},{"content":"The reissue behavior can also be modified by setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName&gt;</ph> property in the event handler.","pos":[354,562],"source":" The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property in the event handler."}]}]},{"pos":[1528,1982],"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user. If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> property of the incoming token.","nodes":[{"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user. If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> property of the incoming token.","pos":[0,454],"nodes":[{"content":"Invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method to authenticate the user.","pos":[0,145],"source":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user."},{"content":"If successful, this has the effect of setting the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</ph> property to the principal that is contained in the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName&gt;</ph> property of the incoming token.","pos":[146,454],"source":" If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> property of the incoming token."}]}]},{"pos":[1992,2115],"content":"If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.","nodes":[{"content":"If the session has expired, invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.","pos":[0,123],"source":"If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method."}]},{"pos":[2122,2440],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method is added to the handlers for the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName&gt;</ph> event in the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.","pos":[0,318],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method."}]}],"pos":[33111,35568],"yaml":true,"extradata":"MT"},{"content":"The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.","nodes":[{"pos":[0,97],"content":"The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.","nodes":[{"content":"The source for the event.","pos":[0,25]},{"content":"This will be an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> object.","pos":[26,97],"source":" This will be an <xref href=\"System.Web.HttpApplication\"></xref> object."}]}],"pos":[35752,35850],"yaml":true},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[35918,35942],"yaml":true},{"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"pos":[0,273],"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"content":"There is not a valid session token handler configured.","pos":[0,54]},{"content":"(There is no <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> configured in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"&gt;&lt;/xref&gt;</ph> property.)","pos":[55,273],"source":" (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)"}]}],"pos":[36159,36433],"yaml":true},{"content":"Handles the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.","nodes":[{"pos":[0,156],"content":"Handles the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event from the <ph id=\"ph2\">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.","source":"Handles the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline."}],"pos":[37722,37879],"yaml":true},{"content":"The default implementation is empty.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.","nodes":[{"pos":[0,36],"content":"The default implementation is empty.","nodes":[{"content":"The default implementation is empty.","pos":[0,36]}]},{"pos":[43,370],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handler is added to the handlers for the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName&gt;</ph> event in the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.","pos":[0,327],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method."}]}],"pos":[37890,38265],"yaml":true,"extradata":"MT"},{"content":"The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.","nodes":[{"pos":[0,97],"content":"The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.","nodes":[{"content":"The source for the event.","pos":[0,25]},{"content":"This will be an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> object.","pos":[26,97],"source":" This will be an <xref href=\"System.Web.HttpApplication\"></xref> object."}]}],"pos":[38445,38543],"yaml":true},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[38603,38627],"yaml":true},{"content":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\"></xref> event.","nodes":[{"pos":[0,124],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\"></xref> event."}],"pos":[40219,40344],"yaml":true},{"content":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.","nodes":[{"pos":[0,113],"content":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.","nodes":[{"content":"Called from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.","pos":[0,113],"source":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method."}]}],"pos":[40355,40469],"yaml":true,"extradata":"MT"},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[40749,40773],"yaml":true},{"content":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\"></xref> event.","nodes":[{"pos":[0,125],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\"></xref> event."}],"pos":[42381,42507],"yaml":true},{"content":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.","nodes":[{"pos":[0,113],"content":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.","nodes":[{"content":"Called from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.","pos":[0,113],"source":"Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method."}]}],"pos":[42518,42632],"yaml":true,"extradata":"MT"},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[42915,42939],"yaml":true},{"content":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\"></xref> event.","nodes":[{"pos":[0,106],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\"></xref> event."}],"pos":[44197,44304],"yaml":true},{"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted.","nodes":[{"pos":[0,193],"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted.","nodes":[{"content":"This method is invoked from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method after the sign-out has been performed and the session cookie has been deleted.","pos":[0,193],"source":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted."}]}],"pos":[44315,44509],"yaml":true,"extradata":"MT"},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[44658,44682],"yaml":true},{"content":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\"></xref> event.","nodes":[{"pos":[0,107],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\"></xref> event."}],"pos":[46056,46164],"yaml":true},{"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.","nodes":[{"pos":[0,187],"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.","nodes":[{"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.","pos":[0,187],"nodes":[{"content":"This method is invoked from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method to perform sign-out.","pos":[0,135],"source":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out."},{"content":"It is invoked before the session cookie is deleted.","pos":[136,187]}]}]}],"pos":[46175,46363],"yaml":true,"extradata":"MT"},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[46586,46610],"yaml":true},{"content":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\"></xref> event.","nodes":[{"pos":[0,109],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\"></xref> event."}],"pos":[47967,48077],"yaml":true},{"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out.","nodes":[{"pos":[0,150],"content":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out.","nodes":[{"content":"This method is invoked from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method if an error occurs during sign-out.","pos":[0,150],"source":"This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out."}]}],"pos":[48088,48239],"yaml":true,"extradata":"MT"},{"content":"The data for the event.","nodes":[{"pos":[0,23],"content":"The data for the event.","nodes":[{"content":"The data for the event.","pos":[0,23]}]}],"pos":[48454,48478],"yaml":true},{"content":"Reads a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified session cookie.","nodes":[{"pos":[0,112],"content":"Reads a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> from the specified session cookie.","source":"Reads a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified session cookie."}],"pos":[49792,49905],"yaml":true},{"content":"The cookie, in raw form, that contains the session token.","nodes":[{"pos":[0,57],"content":"The cookie, in raw form, that contains the session token.","nodes":[{"content":"The cookie, in raw form, that contains the session token.","pos":[0,57]}]}],"pos":[50120,50178],"yaml":true},{"content":"The session token that was read from the cookie.","nodes":[{"pos":[0,48],"content":"The session token that was read from the cookie.","nodes":[{"content":"The session token that was read from the cookie.","pos":[0,48]}]}],"pos":[50270,50319],"yaml":true},{"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"pos":[0,273],"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"content":"There is not a valid session token handler configured.","pos":[0,54]},{"content":"(There is no <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> configured in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"&gt;&lt;/xref&gt;</ph> property.)","pos":[55,273],"source":" (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)"}]}],"pos":[50541,50815],"yaml":true},{"content":"Occurs when a session security token has been created.","nodes":[{"pos":[0,54],"content":"Occurs when a session security token has been created.","nodes":[{"content":"Occurs when a session security token has been created.","pos":[0,54]}]}],"pos":[51962,52017],"yaml":true},{"content":"You can use this event to modify the session security token before it is written to a cookie.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created. This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.  \n  \n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).  \n  \n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property to `true`. Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event.","nodes":[{"pos":[0,93],"content":"You can use this event to modify the session security token before it is written to a cookie.","nodes":[{"content":"You can use this event to modify the session security token before it is written to a cookie.","pos":[0,93]}]},{"pos":[100,598],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created. This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.","nodes":[{"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created. This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.","pos":[0,498],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event is raised from within the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been created.","pos":[0,323],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created."},{"content":"This happens, for example, if an event handler for the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event modifies the token.","pos":[324,498],"source":" This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token."}]}]},{"pos":[605,782],"content":"You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).","nodes":[{"content":"You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).","pos":[0,177]}]},{"pos":[789,1439],"content":"In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property to `true`. Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event.","nodes":[{"content":"In an event handler, you can access the token through the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,182],"source":"In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property."},{"content":"After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[183,418],"source":" After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property to `true`."},{"content":"Unlike, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> is not a cancelable event.","pos":[419,650],"source":" Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event."}]}],"pos":[52028,53476],"yaml":true,"extradata":"MT"},{"content":"Occurs when a session security token has been read from a cookie.","nodes":[{"pos":[0,65],"content":"Occurs when a session security token has been read from a cookie.","nodes":[{"content":"Occurs when a session security token has been read from a cookie.","pos":[0,65]}]}],"pos":[55440,55506],"yaml":true},{"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.  \n  \n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.  \n  \n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request.","nodes":[{"pos":[0,358],"content":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is raised from within the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been successfully read from the session cookie.","pos":[0,358],"source":"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie."}]},{"pos":[365,1166],"content":"You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.","nodes":[{"content":"You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).","pos":[0,177]},{"content":"One of the most common scenarios involves modifying the session expiration time (accessible through the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName&gt;</ph> property) to override the session expiration time set in configuration through the <ph id=\"ph2\">`lifetime`</ph> attribute of the <bpt id=\"p1\">[</bpt><ph id=\"ph3\">\\&amp;</ph>lt;sessionTokenRequirement<ph id=\"ph4\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element.","pos":[178,629],"source":" One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element."},{"content":"By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.","pos":[630,801]}]},{"pos":[1173,1925],"content":"In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request.","nodes":[{"content":"In an event handler, you can access the token through the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,183],"source":"In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property."},{"content":"After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName&gt;</ph> to <ph id=\"ph2\">`true`</ph>.","pos":[184,406],"source":" After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`."},{"content":"Finally, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is a cancelable event, and you can set the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> to abort further processing of the request.","pos":[407,752],"source":" Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request."}]}],"pos":[55517,57451],"yaml":true,"extradata":"MT"},{"content":"Sets the principal on the <xref href=\"System.Web.HttpContext\"></xref> and <xref href=\"System.Threading.Thread\"></xref> to the principal that is contained in the specified session token.","nodes":[{"pos":[0,185],"content":"Sets the principal on the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Threading.Thread\"&gt;&lt;/xref&gt;</ph> to the principal that is contained in the specified session token.","source":"Sets the principal on the <xref href=\"System.Web.HttpContext\"></xref> and <xref href=\"System.Threading.Thread\"></xref> to the principal that is contained in the specified session token."}],"pos":[59636,59822],"yaml":true},{"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> using the identities that are returned.  \n  \n This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.","nodes":[{"pos":[0,394],"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> using the identities that are returned.","nodes":[{"content":"Invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> method and sets the <ph id=\"ph2\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</ph> property and the <ph id=\"ph3\">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph4\">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=fullName&gt;</ph> using the identities that are returned.","pos":[0,394],"source":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> using the identities that are returned."}]},{"pos":[401,540],"content":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.","nodes":[{"content":"This method is called from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.","pos":[0,139],"source":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method."}]}],"pos":[59833,60378],"yaml":true,"extradata":"MT"},{"content":"The session token from which to set the principal.","nodes":[{"pos":[0,50],"content":"The session token from which to set the principal.","nodes":[{"content":"The session token from which to set the principal.","pos":[0,50]}]}],"pos":[60653,60704],"yaml":true},{"content":"Occurs after the user is signed out.","nodes":[{"pos":[0,36],"content":"Occurs after the user is signed out.","nodes":[{"content":"Occurs after the user is signed out.","pos":[0,36]}]}],"pos":[61860,61897],"yaml":true},{"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.  \n  \n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"pos":[0,225],"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.","nodes":[{"content":"Raised from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just after the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.","pos":[0,225],"source":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked."}]},{"pos":[232,464],"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[0,232],"nodes":[{"content":"This event is not guaranteed to be called for every session.","pos":[0,60]},{"content":"For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[61,232]}]}]}],"pos":[61908,62377],"yaml":true,"extradata":"MT"},{"content":"Occurs before deleting the sign-in session.","nodes":[{"pos":[0,43],"content":"Occurs before deleting the sign-in session.","nodes":[{"content":"Occurs before deleting the sign-in session.","pos":[0,43]}]}],"pos":[64061,64105],"yaml":true},{"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.  \n  \n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"pos":[0,226],"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.","nodes":[{"content":"Raised from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just before the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.","pos":[0,226],"source":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked."}]},{"pos":[233,465],"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[0,232],"nodes":[{"content":"This event is not guaranteed to be called for every session.","pos":[0,60]},{"content":"For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[61,232]}]}]}],"pos":[64116,64586],"yaml":true,"extradata":"MT"},{"content":"Signs the current user out and raises the associated events.","nodes":[{"pos":[0,60],"content":"Signs the current user out and raises the associated events.","nodes":[{"content":"Signs the current user out and raises the associated events.","pos":[0,60]}]}],"pos":[66363,66424],"yaml":true},{"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event. You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.  \n  \n You can override this method to add application-specific behavior.","nodes":[{"pos":[0,804],"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event. You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.","nodes":[{"content":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event. You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.","pos":[0,804],"nodes":[{"content":"Invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> methods to perform sign-out.","pos":[0,300],"source":"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out."},{"content":"If an exception occurs, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> method is invoked to raise the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event.","pos":[301,527],"source":" If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event."},{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.","pos":[528,804],"source":" You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client."}]}]},{"pos":[811,877],"content":"You can override this method to add application-specific behavior.","nodes":[{"content":"You can override this method to add application-specific behavior.","pos":[0,66]}]}],"pos":[66435,67317],"yaml":true,"extradata":"MT"},{"content":"Occurs when there is an error during sign-out.","nodes":[{"pos":[0,46],"content":"Occurs when there is an error during sign-out.","nodes":[{"content":"Occurs when there is an error during sign-out.","pos":[0,46]}]}],"pos":[69006,69053],"yaml":true},{"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out.  \n  \n In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> property. You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`.  \n  \n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"pos":[0,136],"content":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out.","nodes":[{"content":"Raised from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method when an error occurs during sign-out.","pos":[0,136],"source":"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out."}]},{"pos":[143,608],"content":"In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> property. You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`.","nodes":[{"content":"In an event handler, you can get the exception that resulted in the event being raised from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,195],"source":"In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> property."},{"content":"You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> to <ph id=\"ph3\">`true`</ph>.","pos":[196,465],"source":" You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`."}]},{"pos":[615,847],"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","nodes":[{"content":"This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[0,232],"nodes":[{"content":"This event is not guaranteed to be called for every session.","pos":[0,60]},{"content":"For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.","pos":[61,232]}]}]}],"pos":[69064,69918],"yaml":true,"extradata":"MT"},{"content":"Attempts to read a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from a session cookie and returns a value that indicates whether the session cookie was successfully read.","nodes":[{"pos":[0,195],"content":"Attempts to read a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> from a session cookie and returns a value that indicates whether the session cookie was successfully read.","source":"Attempts to read a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from a session cookie and returns a value that indicates whether the session cookie was successfully read."}],"pos":[72034,72230],"yaml":true},{"content":"Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie.","nodes":[{"pos":[0,319],"content":"Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie.","nodes":[{"content":"Reads the cookie by using the cookie handler that is configured in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property and then invokes the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> method to read the token from the cookie.","pos":[0,319],"source":"Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie."}]}],"pos":[72241,72561],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the session security token that was read from the session cookie.","nodes":[{"pos":[0,100],"content":"When this method returns, contains the session security token that was read from the session cookie.","nodes":[{"content":"When this method returns, contains the session security token that was read from the session cookie.","pos":[0,100]}]}],"pos":[72814,72915],"yaml":true},{"content":"`true` if the session cookie was successfully read from the request; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the session cookie was successfully read from the request; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the session cookie was successfully read from the request; otherwise, `false`."}],"pos":[72973,73064],"yaml":true},{"content":"Validates the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> and returns its identities.","nodes":[{"pos":[0,121],"content":"Validates the specified <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> and returns its identities.","source":"Validates the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> and returns its identities."}],"pos":[74504,74626],"yaml":true},{"content":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method. It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName> method of the configured session token handler to validate the token and extract its identities.","nodes":[{"pos":[0,356],"content":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method. It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName> method of the configured session token handler to validate the token and extract its identities.","nodes":[{"content":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method. It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName> method of the configured session token handler to validate the token and extract its identities.","pos":[0,356],"nodes":[{"content":"This method is called from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.","pos":[0,139],"source":"This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method."},{"content":"It invokes the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName&gt;</ph> method of the configured session token handler to validate the token and extract its identities.","pos":[140,356],"source":" It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName> method of the configured session token handler to validate the token and extract its identities."}]}]}],"pos":[74637,74994],"yaml":true,"extradata":"MT"},{"content":"The token to validate.","nodes":[{"pos":[0,22],"content":"The token to validate.","nodes":[{"content":"The token to validate.","pos":[0,22]}]}],"pos":[75337,75360],"yaml":true},{"content":"The collection of identities that are contained in the token.","nodes":[{"pos":[0,61],"content":"The collection of identities that are contained in the token.","nodes":[{"content":"The collection of identities that are contained in the token.","pos":[0,61]}]}],"pos":[75492,75554],"yaml":true},{"content":"The token has expired.","nodes":[{"pos":[0,22],"content":"The token has expired.","nodes":[{"content":"The token has expired.","pos":[0,22]}]}],"pos":[75830,75853],"yaml":true},{"content":"The token start time is not yet valid.","nodes":[{"pos":[0,38],"content":"The token start time is not yet valid.","nodes":[{"content":"The token start time is not yet valid.","pos":[0,38]}]}],"pos":[75997,76036],"yaml":true},{"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"pos":[0,273],"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"content":"There is not a valid session token handler configured.","pos":[0,54]},{"content":"(There is no <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> configured in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"&gt;&lt;/xref&gt;</ph> property.)","pos":[55,273],"source":" (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)"}]}],"pos":[76146,76420],"yaml":true},{"content":"Writes the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> to a session cookie.","nodes":[{"pos":[0,111],"content":"Writes the specified <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"&gt;&lt;/xref&gt;</ph> to a session cookie.","source":"Writes the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> to a session cookie."}],"pos":[77772,77884],"yaml":true},{"content":"Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.","nodes":[{"pos":[0,163],"content":"Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.","nodes":[{"content":"Writes the cookie by using the cookie handler that is configured in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.","pos":[0,163],"source":"Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property."}]}],"pos":[77895,78059],"yaml":true,"extradata":"MT"},{"content":"The session security token to write.","nodes":[{"pos":[0,36],"content":"The session security token to write.","nodes":[{"content":"The session security token to write.","pos":[0,36]}]}],"pos":[78304,78341],"yaml":true},{"content":"<code>sessionToken</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;sessionToken&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>sessionToken</code> is `null`."}],"pos":[78554,78591],"yaml":true},{"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"pos":[0,273],"content":"There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)","nodes":[{"content":"There is not a valid session token handler configured.","pos":[0,54]},{"content":"(There is no <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> configured in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"&gt;&lt;/xref&gt;</ph> property.)","pos":[55,273],"source":" (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)"}]}],"pos":[78701,78975],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.SessionAuthenticationModule\n  commentId: T:System.IdentityModel.Services.SessionAuthenticationModule\n  id: SessionAuthenticationModule\n  children:\n  - System.IdentityModel.Services.SessionAuthenticationModule.#ctor\n  - System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)\n  - System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)\n  - System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken\n  - System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler\n  - System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)\n  - System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie\n  - System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)\n  - System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  - System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)\n  - System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])\n  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\n  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\n  - System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\n  - System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\n  - System.IdentityModel.Services.SessionAuthenticationModule.SignOut\n  - System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\n  - System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)\n  - System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)\n  langs:\n  - csharp\n  name: SessionAuthenticationModule\n  nameWithType: SessionAuthenticationModule\n  fullName: System.IdentityModel.Services.SessionAuthenticationModule\n  type: Class\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.\n  remarks: \"When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.  \\n  \\n The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.  \\n  \\n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).  \\n  \\n The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.  \\n  \\n For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.  \\n  \\n You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\\\&lt;cookieHandler\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.\"\n  example:\n  - \"[!code-csharp[WifSAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#1)]  \\n  \\n The following XML shows how to configure the SAM in the ASP.NET pipeline. Many other elements that are present in a typical configuration are omitted here for brevity.  \\n  \\n```xml  \\n<configuration>  \\n  <system.webServer>  \\n    <modules>  \\n      <!--WIF 4.5 modules -->  \\n      <add name=\\\"SessionAuthenticationModule\\\" type=\\\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\"/>  \\n      <add name=\\\"WsFederationAuthenticationModule\\\" type=\\\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\"/>  \\n    </modules>  \\n  </system.webServer>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Services.HttpModuleBase\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Services.HttpModuleBase.Dispose\n  - System.IdentityModel.Services.HttpModuleBase.FederationConfiguration\n  - System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SessionAuthenticationModule()\n  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()\n  fullName: SessionAuthenticationModule.SessionAuthenticationModule()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule\"></xref> class.\n  remarks: The <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> property is set to `false` and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized to a default instance of the <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> class.\n  syntax:\n    content: public SessionAuthenticationModule ();\n    parameters: []\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)\n  id: AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n  fullName: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Authenticates the incoming request by validating the incoming session token. Upon successful validation, it updates the current HTTP context and thread principal with the specified  <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.\n  remarks: The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method. It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties. If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie.\n  syntax:\n    content: public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);\n    parameters:\n    - id: sessionToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session security token to use to authenticate the incoming HTTP request.\n    - id: writeCookie\n      type: System.Boolean\n      description: '`true` to write the session cookie; otherwise `false`.'\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)\n  id: ContainsSessionTokenCookie(System.Web.HttpCookieCollection)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: ContainsSessionTokenCookie(HttpCookieCollection)\n  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)\n  fullName: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Determines whether a session cookie is in the specified cookie collection.\n  syntax:\n    content: public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);\n    parameters:\n    - id: httpCookieCollection\n      type: System.Web.HttpCookieCollection\n      description: The collection of cookies in which to search.\n    return:\n      type: System.Boolean\n      description: '`true` if a session cookie is found; otherwise, `false`.'\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>httpCookieCollection</code> is null\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken\n  commentId: P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken\n  id: ContextSessionSecurityToken\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: ContextSessionSecurityToken\n  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken\n  fullName: SessionAuthenticationModule.ContextSessionSecurityToken\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets the active <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> for the current <xref href=\"System.Web.HttpContext\"></xref>.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The active session security token.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler\n  commentId: P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler\n  id: CookieHandler\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: CookieHandler\n  nameWithType: SessionAuthenticationModule.CookieHandler\n  fullName: SessionAuthenticationModule.CookieHandler\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets the cookie handler that is used to read, write, and delete session cookies.\n  remarks: The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method. This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can set the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.\n  syntax:\n    content: public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }\n    return:\n      type: System.IdentityModel.Services.CookieHandler\n      description: The cookie handler.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)\n  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n  fullName: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Creates a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified parameters by using the configured session token handler.\n  syntax:\n    content: public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: The principal to be captured in the token.\n    - id: context\n      type: System.String\n      description: An application-defined context string.\n    - id: validFrom\n      type: System.DateTime\n      description: The first instant in which this token is valid.\n    - id: validTo\n      type: System.DateTime\n      description: The last instant in which this token is valid.\n    - id: isPersistent\n      type: System.Boolean\n      description: '`true` if the value should be persisted by the user agent; otherwise, `false`.'\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session token.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie\n  id: DeleteSessionTokenCookie\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: DeleteSessionTokenCookie()\n  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()\n  fullName: SessionAuthenticationModule.DeleteSessionTokenCookie()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Deletes the session cookie and removes it from the cache.\n  remarks: Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property. This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.\n  syntax:\n    content: public void DeleteSessionTokenCookie ();\n    parameters: []\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)\n  id: InitializeModule(System.Web.HttpApplication)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: InitializeModule(HttpApplication)\n  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)\n  fullName: SessionAuthenticationModule.InitializeModule(HttpApplication)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object.\n  remarks: Adds the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handlers to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> and <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> events of the application object specified by the `context` parameter.\n  syntax:\n    content: protected override void InitializeModule (System.Web.HttpApplication context);\n    parameters:\n    - id: context\n      type: System.Web.HttpApplication\n      description: The HTTP application object that contains this module.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  id: InitializePropertiesFromConfiguration\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: InitializePropertiesFromConfiguration()\n  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()\n  fullName: SessionAuthenticationModule.InitializePropertiesFromConfiguration()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes the module properties based on definitions in the configuration file.\n  remarks: Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. You can specify the cookie handler in a configuration file through the [\\&lt;cookieHandler\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.\n  syntax:\n    content: protected override void InitializePropertiesFromConfiguration ();\n    parameters: []\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode\n  commentId: P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode\n  id: IsReferenceMode\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: IsReferenceMode\n  nameWithType: SessionAuthenticationModule.IsReferenceMode\n  fullName: SessionAuthenticationModule.IsReferenceMode\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.\n  remarks: \"In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>). The issued cookie just contains a context identifier that is used to retrieve the token from the cache.  \\n  \\n> [!IMPORTANT]\\n>  To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName> property on the Session Authentication Module.\"\n  syntax:\n    content: public bool IsReferenceMode { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if issued cookies are in reference mode; otherwise, `false`. The default is `false`, which specifies that issued cookies are not in reference mode.'\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)\n  id: OnAuthenticateRequest(System.Object,System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnAuthenticateRequest(Object, EventArgs)\n  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object, EventArgs)\n  fullName: SessionAuthenticationModule.OnAuthenticateRequest(Object, EventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Handles the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.\n  remarks: \"This method does the following:  \\n  \\n1.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present.  \\n  \\n2.  If a session security token cannot be read (most likely because a session has not been established), return.  \\n  \\n3.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event. This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled. The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> property.  \\n  \\n4.  If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event. This provides opportunity for the token to again be modified. The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property in the event handler.  \\n  \\n5.  Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user. If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> property of the incoming token.  \\n  \\n6.  If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.  \\n  \\n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.\"\n  syntax:\n    content: protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.\n    - id: eventArgs\n      type: System.EventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)\n  id: OnPostAuthenticateRequest(System.Object,System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnPostAuthenticateRequest(Object, EventArgs)\n  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object, EventArgs)\n  fullName: SessionAuthenticationModule.OnPostAuthenticateRequest(Object, EventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Handles the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.\n  remarks: \"The default implementation is empty.  \\n  \\n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.\"\n  syntax:\n    content: protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source for the event. This will be an <xref href=\"System.Web.HttpApplication\"></xref> object.\n    - id: e\n      type: System.EventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)\n  id: OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\"></xref> event.\n  remarks: Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.\n  syntax:\n    content: protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);\n    parameters:\n    - id: args\n      type: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)\n  id: OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\"></xref> event.\n  remarks: Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.\n  syntax:\n    content: protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);\n    parameters:\n    - id: args\n      type: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)\n  id: OnSignedOut(System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnSignedOut(EventArgs)\n  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)\n  fullName: SessionAuthenticationModule.OnSignedOut(EventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\"></xref> event.\n  remarks: This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted.\n  syntax:\n    content: protected virtual void OnSignedOut (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)\n  id: OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnSigningOut(SigningOutEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)\n  fullName: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\"></xref> event.\n  remarks: This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.\n  syntax:\n    content: protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);\n    parameters:\n    - id: e\n      type: System.IdentityModel.Services.SigningOutEventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)\n  id: OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: OnSignOutError(ErrorEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)\n  fullName: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Raises the <xref href=\"System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\"></xref> event.\n  remarks: This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out.\n  syntax:\n    content: protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);\n    parameters:\n    - id: e\n      type: System.IdentityModel.Services.ErrorEventArgs\n      description: The data for the event.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])\n  id: ReadSessionTokenFromCookie(System.Byte[])\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: ReadSessionTokenFromCookie(Byte[])\n  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])\n  fullName: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Reads a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from the specified session cookie.\n  syntax:\n    content: public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);\n    parameters:\n    - id: sessionCookie\n      type: System.Byte[]\n      description: The cookie, in raw form, that contains the session token.\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session token that was read from the cookie.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\n  commentId: E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\n  id: SessionSecurityTokenCreated\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SessionSecurityTokenCreated\n  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated\n  fullName: SessionAuthenticationModule.SessionSecurityTokenCreated\n  type: Event\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Occurs when a session security token has been created.\n  remarks: \"You can use this event to modify the session security token before it is written to a cookie.  \\n  \\n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created. This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.  \\n  \\n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).  \\n  \\n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> property to `true`. Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event.\"\n  example:\n  - \"The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#6)]\"\n  syntax:\n    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> SessionSecurityTokenCreated;\n    return:\n      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\n  commentId: E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\n  id: SessionSecurityTokenReceived\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SessionSecurityTokenReceived\n  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived\n  fullName: SessionAuthenticationModule.SessionSecurityTokenReceived\n  type: Event\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Occurs when a session security token has been read from a cookie.\n  remarks: \"The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.  \\n  \\n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\\\&lt;sessionTokenRequirement\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.  \\n  \\n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request.\"\n  example:\n  - \"The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#5)]\"\n  syntax:\n    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> SessionSecurityTokenReceived;\n    return:\n      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  id: SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SetPrincipalFromSessionToken(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Sets the principal on the <xref href=\"System.Web.HttpContext\"></xref> and <xref href=\"System.Threading.Thread\"></xref> to the principal that is contained in the specified session token.\n  remarks: \"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> using the identities that are returned.  \\n  \\n This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.\"\n  syntax:\n    content: protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);\n    parameters:\n    - id: sessionSecurityToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session token from which to set the principal.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\n  commentId: E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\n  id: SignedOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SignedOut\n  nameWithType: SessionAuthenticationModule.SignedOut\n  fullName: SessionAuthenticationModule.SignedOut\n  type: Event\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Occurs after the user is signed out.\n  remarks: \"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.  \\n  \\n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.\"\n  example:\n  - \"The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut> event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#3)]\"\n  syntax:\n    content: public event EventHandler SignedOut;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\n  commentId: E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\n  id: SigningOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SigningOut\n  nameWithType: SessionAuthenticationModule.SigningOut\n  fullName: SessionAuthenticationModule.SigningOut\n  type: Event\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Occurs before deleting the sign-in session.\n  remarks: \"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.  \\n  \\n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.\"\n  example:\n  - \"The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut> event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#4)]\"\n  syntax:\n    content: public event EventHandler<System.IdentityModel.Services.SigningOutEventArgs> SigningOut;\n    return:\n      type: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut\n  id: SignOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SignOut()\n  nameWithType: SessionAuthenticationModule.SignOut()\n  fullName: SessionAuthenticationModule.SignOut()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Signs the current user out and raises the associated events.\n  remarks: \"Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event. You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.  \\n  \\n You can override this method to add application-specific behavior.\"\n  example:\n  - \"The following code shows code for invoking the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#7)]\"\n  syntax:\n    content: public virtual void SignOut ();\n    parameters: []\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\n  commentId: E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\n  id: SignOutError\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: SignOutError\n  nameWithType: SessionAuthenticationModule.SignOutError\n  fullName: SessionAuthenticationModule.SignOutError\n  type: Event\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Occurs when there is an error during sign-out.\n  remarks: \"Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out.  \\n  \\n In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> property. You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`.  \\n  \\n This event is not guaranteed to be called for every session. For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.\"\n  example:\n  - \"The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \\n  \\n [!code-csharp[WifSAM#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#2)]\"\n  syntax:\n    content: public event EventHandler<System.IdentityModel.Services.ErrorEventArgs> SignOutError;\n    return:\n      type: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)\n  id: TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: TryReadSessionTokenFromCookie(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Attempts to read a <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> from a session cookie and returns a value that indicates whether the session cookie was successfully read.\n  remarks: Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie.\n  syntax:\n    content: public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);\n    parameters:\n    - id: sessionToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: When this method returns, contains the session security token that was read from the session cookie.\n    return:\n      type: System.Boolean\n      description: '`true` if the session cookie was successfully read from the request; otherwise, `false`.'\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  id: ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: ValidateSessionToken(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Validates the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> and returns its identities.\n  remarks: This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method. It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName> method of the configured session token handler to validate the token and extract its identities.\n  syntax:\n    content: protected System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);\n    parameters:\n    - id: sessionSecurityToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token to validate.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The collection of identities that are contained in the token.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*\n  exceptions:\n  - type: System.IdentityModel.Services.FederatedSessionExpiredException\n    commentId: T:System.IdentityModel.Services.FederatedSessionExpiredException\n    description: The token has expired.\n  - type: System.IdentityModel.Services.FederationException\n    commentId: T:System.IdentityModel.Services.FederationException\n    description: The token start time is not yet valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)\n  commentId: M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)\n  id: WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  langs:\n  - csharp\n  name: WriteSessionTokenToCookie(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Writes the specified <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref> to a session cookie.\n  remarks: Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.\n  syntax:\n    content: public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);\n    parameters:\n    - id: sessionToken\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session security token to write.\n  overload: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sessionToken</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is not a valid session token handler configured. (There is no <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler\"></xref> configured in the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\"></xref> property.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Services.HttpModuleBase\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: HttpModuleBase\n  nameWithType: HttpModuleBase\n  fullName: System.IdentityModel.Services.HttpModuleBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IdentityModel.Services.FederatedSessionExpiredException\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: FederatedSessionExpiredException\n  nameWithType: FederatedSessionExpiredException\n  fullName: System.IdentityModel.Services.FederatedSessionExpiredException\n- uid: System.IdentityModel.Services.FederationException\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: FederationException\n  nameWithType: FederationException\n  fullName: System.IdentityModel.Services.FederationException\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SessionAuthenticationModule()\n  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()\n  fullName: SessionAuthenticationModule.SessionAuthenticationModule()\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n  fullName: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken, Boolean)\n- uid: System.IdentityModel.Tokens.SessionSecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityToken\n  nameWithType: SessionSecurityToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityToken\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ContainsSessionTokenCookie(HttpCookieCollection)\n  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)\n  fullName: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)\n- uid: System.Web.HttpCookieCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpCookieCollection\n  nameWithType: HttpCookieCollection\n  fullName: System.Web.HttpCookieCollection\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ContextSessionSecurityToken\n  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken\n  fullName: SessionAuthenticationModule.ContextSessionSecurityToken\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: CookieHandler\n  nameWithType: SessionAuthenticationModule.CookieHandler\n  fullName: SessionAuthenticationModule.CookieHandler\n- uid: System.IdentityModel.Services.CookieHandler\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: CookieHandler\n  nameWithType: CookieHandler\n  fullName: System.IdentityModel.Services.CookieHandler\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n  fullName: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal, String, DateTime, DateTime, Boolean)\n- uid: System.Security.Claims.ClaimsPrincipal\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsPrincipal\n  nameWithType: ClaimsPrincipal\n  fullName: System.Security.Claims.ClaimsPrincipal\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: DeleteSessionTokenCookie()\n  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()\n  fullName: SessionAuthenticationModule.DeleteSessionTokenCookie()\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: InitializeModule(HttpApplication)\n  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)\n  fullName: SessionAuthenticationModule.InitializeModule(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: InitializePropertiesFromConfiguration()\n  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()\n  fullName: SessionAuthenticationModule.InitializePropertiesFromConfiguration()\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: IsReferenceMode\n  nameWithType: SessionAuthenticationModule.IsReferenceMode\n  fullName: SessionAuthenticationModule.IsReferenceMode\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnAuthenticateRequest(Object, EventArgs)\n  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object, EventArgs)\n  fullName: SessionAuthenticationModule.OnAuthenticateRequest(Object, EventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnPostAuthenticateRequest(Object, EventArgs)\n  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object, EventArgs)\n  fullName: SessionAuthenticationModule.OnPostAuthenticateRequest(Object, EventArgs)\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)\n- uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: SessionSecurityTokenCreatedEventArgs\n  nameWithType: SessionSecurityTokenCreatedEventArgs\n  fullName: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)\n- uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: SessionSecurityTokenReceivedEventArgs\n  nameWithType: SessionSecurityTokenReceivedEventArgs\n  fullName: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSignedOut(EventArgs)\n  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)\n  fullName: SessionAuthenticationModule.OnSignedOut(EventArgs)\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSigningOut(SigningOutEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)\n  fullName: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)\n- uid: System.IdentityModel.Services.SigningOutEventArgs\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: SigningOutEventArgs\n  nameWithType: SigningOutEventArgs\n  fullName: System.IdentityModel.Services.SigningOutEventArgs\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSignOutError(ErrorEventArgs)\n  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)\n  fullName: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)\n- uid: System.IdentityModel.Services.ErrorEventArgs\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: ErrorEventArgs\n  nameWithType: ErrorEventArgs\n  fullName: System.IdentityModel.Services.ErrorEventArgs\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ReadSessionTokenFromCookie(Byte[])\n  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])\n  fullName: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SessionSecurityTokenCreated\n  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated\n  fullName: SessionAuthenticationModule.SessionSecurityTokenCreated\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<SessionSecurityTokenCreatedEventArgs>\n  nameWithType: EventHandler<SessionSecurityTokenCreatedEventArgs>\n  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs\n    name: SessionSecurityTokenCreatedEventArgs\n    nameWithType: SessionSecurityTokenCreatedEventArgs\n    fullName: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SessionSecurityTokenReceived\n  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived\n  fullName: SessionAuthenticationModule.SessionSecurityTokenReceived\n- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<SessionSecurityTokenReceivedEventArgs>\n  nameWithType: EventHandler<SessionSecurityTokenReceivedEventArgs>\n  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs\n    name: SessionSecurityTokenReceivedEventArgs\n    nameWithType: SessionSecurityTokenReceivedEventArgs\n    fullName: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SetPrincipalFromSessionToken(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SignedOut\n  nameWithType: SessionAuthenticationModule.SignedOut\n  fullName: SessionAuthenticationModule.SignedOut\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SigningOut\n  nameWithType: SessionAuthenticationModule.SigningOut\n  fullName: SessionAuthenticationModule.SigningOut\n- uid: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<SigningOutEventArgs>\n  nameWithType: EventHandler<SigningOutEventArgs>\n  fullName: System.EventHandler<System.IdentityModel.Services.SigningOutEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Services.SigningOutEventArgs\n    name: SigningOutEventArgs\n    nameWithType: SigningOutEventArgs\n    fullName: System.IdentityModel.Services.SigningOutEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SignOut()\n  nameWithType: SessionAuthenticationModule.SignOut()\n  fullName: SessionAuthenticationModule.SignOut()\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SignOutError\n  nameWithType: SessionAuthenticationModule.SignOutError\n  fullName: SessionAuthenticationModule.SignOutError\n- uid: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<ErrorEventArgs>\n  nameWithType: EventHandler<ErrorEventArgs>\n  fullName: System.EventHandler<System.IdentityModel.Services.ErrorEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Services.ErrorEventArgs\n    name: ErrorEventArgs\n    nameWithType: ErrorEventArgs\n    fullName: System.IdentityModel.Services.ErrorEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: TryReadSessionTokenFromCookie(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ValidateSessionToken(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Security.Claims.ClaimsIdentity\n  name: ClaimsIdentity\n  nameWithType: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: WriteSessionTokenToCookie(SessionSecurityToken)\n  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)\n  fullName: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SessionAuthenticationModule\n  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule\n  fullName: SessionAuthenticationModule.SessionAuthenticationModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: AuthenticateSessionSecurityToken\n  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken\n  fullName: SessionAuthenticationModule.AuthenticateSessionSecurityToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ContainsSessionTokenCookie\n  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie\n  fullName: SessionAuthenticationModule.ContainsSessionTokenCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ContextSessionSecurityToken\n  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken\n  fullName: SessionAuthenticationModule.ContextSessionSecurityToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: CookieHandler\n  nameWithType: SessionAuthenticationModule.CookieHandler\n  fullName: SessionAuthenticationModule.CookieHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: CreateSessionSecurityToken\n  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken\n  fullName: SessionAuthenticationModule.CreateSessionSecurityToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: DeleteSessionTokenCookie\n  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie\n  fullName: SessionAuthenticationModule.DeleteSessionTokenCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: InitializeModule\n  nameWithType: SessionAuthenticationModule.InitializeModule\n  fullName: SessionAuthenticationModule.InitializeModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: InitializePropertiesFromConfiguration\n  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  fullName: SessionAuthenticationModule.InitializePropertiesFromConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: IsReferenceMode\n  nameWithType: SessionAuthenticationModule.IsReferenceMode\n  fullName: SessionAuthenticationModule.IsReferenceMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnAuthenticateRequest\n  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest\n  fullName: SessionAuthenticationModule.OnAuthenticateRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnPostAuthenticateRequest\n  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest\n  fullName: SessionAuthenticationModule.OnPostAuthenticateRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSessionSecurityTokenCreated\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSessionSecurityTokenReceived\n  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived\n  fullName: SessionAuthenticationModule.OnSessionSecurityTokenReceived\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSignedOut\n  nameWithType: SessionAuthenticationModule.OnSignedOut\n  fullName: SessionAuthenticationModule.OnSignedOut\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSigningOut\n  nameWithType: SessionAuthenticationModule.OnSigningOut\n  fullName: SessionAuthenticationModule.OnSigningOut\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: OnSignOutError\n  nameWithType: SessionAuthenticationModule.OnSignOutError\n  fullName: SessionAuthenticationModule.OnSignOutError\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ReadSessionTokenFromCookie\n  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie\n  fullName: SessionAuthenticationModule.ReadSessionTokenFromCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SetPrincipalFromSessionToken\n  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken\n  fullName: SessionAuthenticationModule.SetPrincipalFromSessionToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: SignOut\n  nameWithType: SessionAuthenticationModule.SignOut\n  fullName: SessionAuthenticationModule.SignOut\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: TryReadSessionTokenFromCookie\n  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie\n  fullName: SessionAuthenticationModule.TryReadSessionTokenFromCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: ValidateSessionToken\n  nameWithType: SessionAuthenticationModule.ValidateSessionToken\n  fullName: SessionAuthenticationModule.ValidateSessionToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*\n  parent: System.IdentityModel.Services.SessionAuthenticationModule\n  isExternal: false\n  name: WriteSessionTokenToCookie\n  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie\n  fullName: SessionAuthenticationModule.WriteSessionTokenToCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/SessionAuthenticationModule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Services.HttpModuleBase.Dispose\n  parent: System.IdentityModel.Services.HttpModuleBase\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpModuleBase.Dispose()\n  fullName: HttpModuleBase.Dispose()\n- uid: System.IdentityModel.Services.HttpModuleBase.FederationConfiguration\n  parent: System.IdentityModel.Services.HttpModuleBase\n  isExternal: false\n  name: FederationConfiguration\n  nameWithType: HttpModuleBase.FederationConfiguration\n  fullName: HttpModuleBase.FederationConfiguration\n- uid: System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)\n  parent: System.IdentityModel.Services.HttpModuleBase\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: HttpModuleBase.Init(HttpApplication)\n  fullName: HttpModuleBase.Init(HttpApplication)\n"}