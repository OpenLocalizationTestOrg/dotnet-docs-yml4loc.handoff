{"nodes":[{"content":"Stores options that configure the operation of methods on the <xref href=\"System.Threading.Tasks.Parallel\"></xref> class.","nodes":[{"pos":[0,121],"content":"Stores options that configure the operation of methods on the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Parallel\"&gt;&lt;/xref&gt;</ph> class.","source":"Stores options that configure the operation of methods on the <xref href=\"System.Threading.Tasks.Parallel\"></xref> class."}],"pos":[670,792],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ParallelOptions\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> class."}],"pos":[2450,2551],"yaml":true},{"content":"This constructor initializes the instance with default values. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default).  \n  \n All of these defaults may be overwritten using the property set accessors on the instance.","nodes":[{"pos":[0,485],"content":"This constructor initializes the instance with default values. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default).","nodes":[{"content":"This constructor initializes the instance with default values. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default).","pos":[0,485],"nodes":[{"content":"This constructor initializes the instance with default values.","pos":[0,62]},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A&gt;</ph> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed.","pos":[63,244],"source":" <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed."},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A&gt;</ph> is initialized to a non-cancelable token, and <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A&gt;</ph> is initialized to the default scheduler (TaskScheduler.Default).","pos":[245,485],"source":" <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default)."}]}]},{"pos":[492,582],"content":"All of these defaults may be overwritten using the property set accessors on the instance.","nodes":[{"content":"All of these defaults may be overwritten using the property set accessors on the instance.","pos":[0,90]}]}],"pos":[2562,3149],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Threading.CancellationToken\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance.","nodes":[{"pos":[0,163],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.ParallelOptions\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the <xref href=\"System.Threading.CancellationToken\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance."}],"pos":[4586,4750],"yaml":true},{"content":"Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early. Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>.","nodes":[{"pos":[0,325],"content":"Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early. Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>.","nodes":[{"content":"Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early. Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>.","pos":[0,325],"nodes":[{"content":"Providing a <ph id=\"ph1\">&lt;xref:System.Threading.CancellationToken&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> method enables the operation to be exited early.","pos":[0,146],"source":"Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early."},{"content":"Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <ph id=\"ph1\">&lt;xref:System.OperationCanceledException&gt;</ph>.","pos":[147,325],"source":" Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>."}]}]}],"pos":[4761,5087],"yaml":true,"extradata":"MT"},{"content":"The token that is associated with this instance.","nodes":[{"pos":[0,48],"content":"The token that is associated with this instance.","nodes":[{"content":"The token that is associated with this instance.","pos":[0,48]}]}],"pos":[5262,5311],"yaml":true},{"content":"Gets or sets the maximum number of concurrent tasks enabled by this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance.","nodes":[{"pos":[0,137],"content":"Gets or sets the maximum number of concurrent tasks enabled by this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ParallelOptions\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the maximum number of concurrent tasks enabled by this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance."}],"pos":[6721,6859],"yaml":true},{"content":"The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance. A positive property value limits the number of concurrent operations to the set value. If it is -1,  there is no limit on the number of concurrently running operations.  \n  \n By default, <xref:System.Threading.Tasks.Parallel.For%2A> and <xref:System.Threading.Tasks.Parallel.ForEach%2A> will utilize however many threads the underlying scheduler provides, so changing <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> from the default only limits how many concurrent tasks will be used.  \n  \n Generally, you do not need to modify this setting. However, you may choose to set it explicitly in advanced usage scenarios such as these:  \n  \n-   When you know that a particular algorithm you're using won't scale beyond a certain number of cores. You can set the property to avoid wasting cycles on additional cores.  \n  \n-   When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize. You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each.  \n  \n-   When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads. For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance. In this case, you can set the property to ensure that you don't use more than a reasonable number of threads.","nodes":[{"pos":[0,433],"content":"The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance. A positive property value limits the number of concurrent operations to the set value. If it is -1,  there is no limit on the number of concurrently running operations.","nodes":[{"content":"The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance. A positive property value limits the number of concurrent operations to the set value. If it is -1,  there is no limit on the number of concurrently running operations.","pos":[0,433],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A&gt;</ph> property affects the number of concurrent operations run by <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Parallel&gt;</ph> method calls that are passed this <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.ParallelOptions&gt;</ph> instance.","pos":[0,264],"source":"The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance."},{"content":"A positive property value limits the number of concurrent operations to the set value.","pos":[265,351]},{"content":"If it is -1,  there is no limit on the number of concurrently running operations.","pos":[352,433]}]}]},{"pos":[440,773],"content":"By default, <xref:System.Threading.Tasks.Parallel.For%2A> and <xref:System.Threading.Tasks.Parallel.ForEach%2A> will utilize however many threads the underlying scheduler provides, so changing <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> from the default only limits how many concurrent tasks will be used.","nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel.For%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A&gt;</ph> will utilize however many threads the underlying scheduler provides, so changing <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A&gt;</ph> from the default only limits how many concurrent tasks will be used.","pos":[0,333],"source":"By default, <xref:System.Threading.Tasks.Parallel.For%2A> and <xref:System.Threading.Tasks.Parallel.ForEach%2A> will utilize however many threads the underlying scheduler provides, so changing <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> from the default only limits how many concurrent tasks will be used."}]},{"pos":[780,918],"content":"Generally, you do not need to modify this setting. However, you may choose to set it explicitly in advanced usage scenarios such as these:","nodes":[{"content":"Generally, you do not need to modify this setting. However, you may choose to set it explicitly in advanced usage scenarios such as these:","pos":[0,138],"nodes":[{"content":"Generally, you do not need to modify this setting.","pos":[0,50]},{"content":"However, you may choose to set it explicitly in advanced usage scenarios such as these:","pos":[51,138]}]}]},{"pos":[928,1098],"content":"When you know that a particular algorithm you're using won't scale beyond a certain number of cores. You can set the property to avoid wasting cycles on additional cores.","nodes":[{"content":"When you know that a particular algorithm you're using won't scale beyond a certain number of cores. You can set the property to avoid wasting cycles on additional cores.","pos":[0,170],"nodes":[{"content":"When you know that a particular algorithm you're using won't scale beyond a certain number of cores.","pos":[0,100]},{"content":"You can set the property to avoid wasting cycles on additional cores.","pos":[101,170]}]}]},{"pos":[1108,1341],"content":"When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize. You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each.","nodes":[{"content":"When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize. You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each.","pos":[0,233],"nodes":[{"content":"When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize.","pos":[0,131]},{"content":"You can set a <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A&gt;</ph> value for each.","pos":[132,233],"source":" You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each."}]}]},{"pos":[1351,1839],"content":"When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads. For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance. In this case, you can set the property to ensure that you don't use more than a reasonable number of threads.","nodes":[{"content":"When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads. For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance. In this case, you can set the property to ensure that you don't use more than a reasonable number of threads.","pos":[0,488],"nodes":[{"content":"When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads.","pos":[0,136]},{"content":"For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance.","pos":[137,378]},{"content":"In this case, you can set the property to ensure that you don't use more than a reasonable number of threads.","pos":[379,488]}]}]}],"pos":[6870,8722],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the maximum degree of parallelism.","nodes":[{"pos":[0,61],"content":"An integer that represents the maximum degree of parallelism.","nodes":[{"content":"An integer that represents the maximum degree of parallelism.","pos":[0,61]}]}],"pos":[8849,8911],"yaml":true},{"content":"The property is being set to zero or to a value that is less than -1.","nodes":[{"pos":[0,69],"content":"The property is being set to zero or to a value that is less than -1.","nodes":[{"content":"The property is being set to zero or to a value that is less than -1.","pos":[0,69]}]}],"pos":[9114,9184],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance. Setting this property to null indicates that the current scheduler should be used.","nodes":[{"pos":[0,248],"content":"Gets or sets the <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance. Setting this property to null indicates that the current scheduler should be used.","nodes":[{"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskScheduler\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.ParallelOptions\"&gt;&lt;/xref&gt;</ph> instance.","pos":[0,165],"source":"Gets or sets the <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance."},{"content":"Setting this property to null indicates that the current scheduler should be used.","pos":[166,248]}]}],"pos":[10453,10702],"yaml":true},{"content":"The task scheduler that is associated with this instance.","nodes":[{"pos":[0,57],"content":"The task scheduler that is associated with this instance.","nodes":[{"content":"The task scheduler that is associated with this instance.","pos":[0,57]}]}],"pos":[10877,10935],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.ParallelOptions\n  commentId: T:System.Threading.Tasks.ParallelOptions\n  id: ParallelOptions\n  children:\n  - System.Threading.Tasks.ParallelOptions.#ctor\n  - System.Threading.Tasks.ParallelOptions.CancellationToken\n  - System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  - System.Threading.Tasks.ParallelOptions.TaskScheduler\n  langs:\n  - csharp\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n  type: Class\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Stores options that configure the operation of methods on the <xref href=\"System.Threading.Tasks.Parallel\"></xref> class.\n  syntax:\n    content: public class ParallelOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ParallelOptions.#ctor\n  commentId: M:System.Threading.Tasks.ParallelOptions.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  name: ParallelOptions()\n  nameWithType: ParallelOptions.ParallelOptions()\n  fullName: ParallelOptions.ParallelOptions()\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> class.\n  remarks: \"This constructor initializes the instance with default values. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default).  \\n  \\n All of these defaults may be overwritten using the property set accessors on the instance.\"\n  syntax:\n    content: public ParallelOptions ();\n    parameters: []\n  overload: System.Threading.Tasks.ParallelOptions.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ParallelOptions.CancellationToken\n  commentId: P:System.Threading.Tasks.ParallelOptions.CancellationToken\n  id: CancellationToken\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  name: CancellationToken\n  nameWithType: ParallelOptions.CancellationToken\n  fullName: ParallelOptions.CancellationToken\n  type: Property\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets or sets the <xref href=\"System.Threading.CancellationToken\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance.\n  remarks: Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early. Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>.\n  syntax:\n    content: public System.Threading.CancellationToken CancellationToken { get; set; }\n    return:\n      type: System.Threading.CancellationToken\n      description: The token that is associated with this instance.\n  overload: System.Threading.Tasks.ParallelOptions.CancellationToken*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  commentId: P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  id: MaxDegreeOfParallelism\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  name: MaxDegreeOfParallelism\n  nameWithType: ParallelOptions.MaxDegreeOfParallelism\n  fullName: ParallelOptions.MaxDegreeOfParallelism\n  type: Property\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets or sets the maximum number of concurrent tasks enabled by this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance.\n  remarks: \"The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance. A positive property value limits the number of concurrent operations to the set value. If it is -1,  there is no limit on the number of concurrently running operations.  \\n  \\n By default, <xref:System.Threading.Tasks.Parallel.For%2A> and <xref:System.Threading.Tasks.Parallel.ForEach%2A> will utilize however many threads the underlying scheduler provides, so changing <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> from the default only limits how many concurrent tasks will be used.  \\n  \\n Generally, you do not need to modify this setting. However, you may choose to set it explicitly in advanced usage scenarios such as these:  \\n  \\n-   When you know that a particular algorithm you're using won't scale beyond a certain number of cores. You can set the property to avoid wasting cycles on additional cores.  \\n  \\n-   When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize. You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each.  \\n  \\n-   When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads. For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance. In this case, you can set the property to ensure that you don't use more than a reasonable number of threads.\"\n  syntax:\n    content: public int MaxDegreeOfParallelism { get; set; }\n    return:\n      type: System.Int32\n      description: An integer that represents the maximum degree of parallelism.\n  overload: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is being set to zero or to a value that is less than -1.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler\n  commentId: P:System.Threading.Tasks.ParallelOptions.TaskScheduler\n  id: TaskScheduler\n  parent: System.Threading.Tasks.ParallelOptions\n  langs:\n  - csharp\n  name: TaskScheduler\n  nameWithType: ParallelOptions.TaskScheduler\n  fullName: ParallelOptions.TaskScheduler\n  type: Property\n  assemblies:\n  - System.Threading.Tasks.Parallel\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets or sets the <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\"></xref> instance. Setting this property to null indicates that the current scheduler should be used.\n  syntax:\n    content: public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: The task scheduler that is associated with this instance.\n  overload: System.Threading.Tasks.ParallelOptions.TaskScheduler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Threading.Tasks.ParallelOptions.#ctor\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: ParallelOptions()\n  nameWithType: ParallelOptions.ParallelOptions()\n  fullName: ParallelOptions.ParallelOptions()\n- uid: System.Threading.Tasks.ParallelOptions.CancellationToken\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: CancellationToken\n  nameWithType: ParallelOptions.CancellationToken\n  fullName: ParallelOptions.CancellationToken\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: MaxDegreeOfParallelism\n  nameWithType: ParallelOptions.MaxDegreeOfParallelism\n  fullName: ParallelOptions.MaxDegreeOfParallelism\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: ParallelOptions.TaskScheduler\n  fullName: ParallelOptions.TaskScheduler\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.ParallelOptions.#ctor*\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions.ParallelOptions\n  fullName: ParallelOptions.ParallelOptions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n- uid: System.Threading.Tasks.ParallelOptions.CancellationToken*\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: CancellationToken\n  nameWithType: ParallelOptions.CancellationToken\n  fullName: ParallelOptions.CancellationToken\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism*\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: MaxDegreeOfParallelism\n  nameWithType: ParallelOptions.MaxDegreeOfParallelism\n  fullName: ParallelOptions.MaxDegreeOfParallelism\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler*\n  parent: System.Threading.Tasks.ParallelOptions\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: ParallelOptions.TaskScheduler\n  fullName: ParallelOptions.TaskScheduler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}