{"nodes":[{"content":"Specifies the isolation level of a transaction.","nodes":[{"pos":[0,47],"content":"Specifies the isolation level of a transaction.","nodes":[{"content":"Specifies the isolation level of a transaction.","pos":[0,47]}]}],"pos":[781,829],"yaml":true},{"content":"The data affected by a transaction is called volatile. When you create a transaction, you can specify the isolation level that applies to the transaction. The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.  \n  \n The lowest isolation level, `ReadUncommitted`, allows many transactions to operate on a data store simultaneously and provides no protection against data corruption due to interruptive transactions. The highest isolation level, `Serializable`, provides a high degree of protection against interruptive transactions, but requires that each transaction complete before any other transactions are allowed to operate on the data.  \n  \n The isolation level of a transaction is determined when the transaction is created. By default, the <xref:System.Transactions> infrastructure creates `Serializable` transactions. You can determine the isolation level of an existing transaction using the <xref:System.Transactions.Transaction.IsolationLevel%2A> property of a transaction.","nodes":[{"pos":[0,296],"content":"The data affected by a transaction is called volatile. When you create a transaction, you can specify the isolation level that applies to the transaction. The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.","nodes":[{"content":"The data affected by a transaction is called volatile. When you create a transaction, you can specify the isolation level that applies to the transaction. The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.","pos":[0,296],"nodes":[{"content":"The data affected by a transaction is called volatile.","pos":[0,54]},{"content":"When you create a transaction, you can specify the isolation level that applies to the transaction.","pos":[55,154]},{"content":"The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.","pos":[155,296]}]}]},{"pos":[303,728],"content":"The lowest isolation level, `ReadUncommitted`, allows many transactions to operate on a data store simultaneously and provides no protection against data corruption due to interruptive transactions. The highest isolation level, `Serializable`, provides a high degree of protection against interruptive transactions, but requires that each transaction complete before any other transactions are allowed to operate on the data.","nodes":[{"content":"The lowest isolation level, <ph id=\"ph1\">`ReadUncommitted`</ph>, allows many transactions to operate on a data store simultaneously and provides no protection against data corruption due to interruptive transactions.","pos":[0,198],"source":"The lowest isolation level, `ReadUncommitted`, allows many transactions to operate on a data store simultaneously and provides no protection against data corruption due to interruptive transactions."},{"content":"The highest isolation level, <ph id=\"ph1\">`Serializable`</ph>, provides a high degree of protection against interruptive transactions, but requires that each transaction complete before any other transactions are allowed to operate on the data.","pos":[199,425],"source":" The highest isolation level, `Serializable`, provides a high degree of protection against interruptive transactions, but requires that each transaction complete before any other transactions are allowed to operate on the data."}]},{"pos":[735,1072],"content":"The isolation level of a transaction is determined when the transaction is created. By default, the <xref:System.Transactions> infrastructure creates `Serializable` transactions. You can determine the isolation level of an existing transaction using the <xref:System.Transactions.Transaction.IsolationLevel%2A> property of a transaction.","nodes":[{"content":"The isolation level of a transaction is determined when the transaction is created.","pos":[0,83]},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure creates <ph id=\"ph2\">`Serializable`</ph> transactions.","pos":[84,178],"source":" By default, the <xref:System.Transactions> infrastructure creates `Serializable` transactions."},{"content":"You can determine the isolation level of an existing transaction using the <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction.IsolationLevel%2A&gt;</ph> property of a transaction.","pos":[179,337],"source":" You can determine the isolation level of an existing transaction using the <xref:System.Transactions.Transaction.IsolationLevel%2A> property of a transaction."}]}],"pos":[840,1919],"yaml":true,"extradata":"MT"},{"content":"The pending changes from more highly isolated transactions cannot be overwritten.","nodes":[{"pos":[0,81],"content":"The pending changes from more highly isolated transactions cannot be overwritten.","nodes":[{"content":"The pending changes from more highly isolated transactions cannot be overwritten.","pos":[0,81]}]}],"pos":[3135,3217],"yaml":true},{"content":"Volatile data cannot be read during the transaction, but can be modified.","nodes":[{"pos":[0,73],"content":"Volatile data cannot be read during the transaction, but can be modified.","nodes":[{"content":"Volatile data cannot be read during the transaction, but can be modified.","pos":[0,73]}]}],"pos":[4433,4507],"yaml":true},{"content":"Volatile data can be read and modified during the transaction.","nodes":[{"pos":[0,62],"content":"Volatile data can be read and modified during the transaction.","nodes":[{"content":"Volatile data can be read and modified during the transaction.","pos":[0,62]}]}],"pos":[5743,5806],"yaml":true},{"content":"Volatile data can be read but not modified during the transaction. New data can be added during the transaction.","nodes":[{"pos":[0,112],"content":"Volatile data can be read but not modified during the transaction. New data can be added during the transaction.","nodes":[{"content":"Volatile data can be read but not modified during the transaction. New data can be added during the transaction.","pos":[0,112],"nodes":[{"content":"Volatile data can be read but not modified during the transaction.","pos":[0,66]},{"content":"New data can be added during the transaction.","pos":[67,112]}]}]}],"pos":[7038,7151],"yaml":true},{"content":"Volatile data can be read but not modified, and no new data can be added during the transaction.","nodes":[{"pos":[0,96],"content":"Volatile data can be read but not modified, and no new data can be added during the transaction.","nodes":[{"content":"Volatile data can be read but not modified, and no new data can be added during the transaction.","pos":[0,96]}]}],"pos":[8370,8467],"yaml":true},{"content":"Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.","nodes":[{"pos":[0,277],"content":"Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.","nodes":[{"content":"Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.","pos":[0,277],"nodes":[{"content":"Volatile data can be read.","pos":[0,26]},{"content":"Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read.","pos":[27,147]},{"content":"If the data has been updated, an error is raised.","pos":[148,197]},{"content":"This allows a transaction to get to the previously committed value of the data.","pos":[198,277]}]}]}],"pos":[9660,9938],"yaml":true},{"content":"When you try to promote a transaction that was created with this isolation level, an <xref:System.InvalidOperationException> is thrown with the error message \"Transactions with IsolationLevel Snapshot cannot be promoted\".","nodes":[{"pos":[0,221],"content":"When you try to promote a transaction that was created with this isolation level, an <xref:System.InvalidOperationException> is thrown with the error message \"Transactions with IsolationLevel Snapshot cannot be promoted\".","nodes":[{"content":"When you try to promote a transaction that was created with this isolation level, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown with the error message \"Transactions with IsolationLevel Snapshot cannot be promoted\".","pos":[0,221],"source":"When you try to promote a transaction that was created with this isolation level, an <xref:System.InvalidOperationException> is thrown with the error message \"Transactions with IsolationLevel Snapshot cannot be promoted\"."}]}],"pos":[9949,10171],"yaml":true,"extradata":"MT"},{"content":"A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.","nodes":[{"pos":[0,146],"content":"A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.","nodes":[{"content":"A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.","pos":[0,146],"nodes":[{"content":"A different isolation level than the one specified is being used, but the level cannot be determined.","pos":[0,101]},{"content":"An exception is thrown if this value is set.","pos":[102,146]}]}]}],"pos":[11378,11525],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.IsolationLevel\n  commentId: T:System.Transactions.IsolationLevel\n  id: IsolationLevel\n  children:\n  - System.Transactions.IsolationLevel.Chaos\n  - System.Transactions.IsolationLevel.ReadCommitted\n  - System.Transactions.IsolationLevel.ReadUncommitted\n  - System.Transactions.IsolationLevel.RepeatableRead\n  - System.Transactions.IsolationLevel.Serializable\n  - System.Transactions.IsolationLevel.Snapshot\n  - System.Transactions.IsolationLevel.Unspecified\n  langs:\n  - csharp\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n  type: Enum\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Specifies the isolation level of a transaction.\n  remarks: \"The data affected by a transaction is called volatile. When you create a transaction, you can specify the isolation level that applies to the transaction. The isolation level of a transaction determines what level of access other transactions have to volatile data before a transaction completes.  \\n  \\n The lowest isolation level, `ReadUncommitted`, allows many transactions to operate on a data store simultaneously and provides no protection against data corruption due to interruptive transactions. The highest isolation level, `Serializable`, provides a high degree of protection against interruptive transactions, but requires that each transaction complete before any other transactions are allowed to operate on the data.  \\n  \\n The isolation level of a transaction is determined when the transaction is created. By default, the <xref:System.Transactions> infrastructure creates `Serializable` transactions. You can determine the isolation level of an existing transaction using the <xref:System.Transactions.Transaction.IsolationLevel%2A> property of a transaction.\"\n  syntax:\n    content: public enum IsolationLevel\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.IsolationLevel.Chaos\n  commentId: F:System.Transactions.IsolationLevel.Chaos\n  id: Chaos\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: Chaos\n  nameWithType: IsolationLevel.Chaos\n  fullName: IsolationLevel.Chaos\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: The pending changes from more highly isolated transactions cannot be overwritten.\n  syntax:\n    content: Chaos\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.ReadCommitted\n  commentId: F:System.Transactions.IsolationLevel.ReadCommitted\n  id: ReadCommitted\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: ReadCommitted\n  nameWithType: IsolationLevel.ReadCommitted\n  fullName: IsolationLevel.ReadCommitted\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Volatile data cannot be read during the transaction, but can be modified.\n  syntax:\n    content: ReadCommitted\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.ReadUncommitted\n  commentId: F:System.Transactions.IsolationLevel.ReadUncommitted\n  id: ReadUncommitted\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: ReadUncommitted\n  nameWithType: IsolationLevel.ReadUncommitted\n  fullName: IsolationLevel.ReadUncommitted\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Volatile data can be read and modified during the transaction.\n  syntax:\n    content: ReadUncommitted\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.RepeatableRead\n  commentId: F:System.Transactions.IsolationLevel.RepeatableRead\n  id: RepeatableRead\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: RepeatableRead\n  nameWithType: IsolationLevel.RepeatableRead\n  fullName: IsolationLevel.RepeatableRead\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Volatile data can be read but not modified during the transaction. New data can be added during the transaction.\n  syntax:\n    content: RepeatableRead\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.Serializable\n  commentId: F:System.Transactions.IsolationLevel.Serializable\n  id: Serializable\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: Serializable\n  nameWithType: IsolationLevel.Serializable\n  fullName: IsolationLevel.Serializable\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Volatile data can be read but not modified, and no new data can be added during the transaction.\n  syntax:\n    content: Serializable\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.Snapshot\n  commentId: F:System.Transactions.IsolationLevel.Snapshot\n  id: Snapshot\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: Snapshot\n  nameWithType: IsolationLevel.Snapshot\n  fullName: IsolationLevel.Snapshot\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.\n  remarks: When you try to promote a transaction that was created with this isolation level, an <xref:System.InvalidOperationException> is thrown with the error message \"Transactions with IsolationLevel Snapshot cannot be promoted\".\n  syntax:\n    content: Snapshot\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\n- uid: System.Transactions.IsolationLevel.Unspecified\n  commentId: F:System.Transactions.IsolationLevel.Unspecified\n  id: Unspecified\n  parent: System.Transactions.IsolationLevel\n  langs:\n  - csharp\n  name: Unspecified\n  nameWithType: IsolationLevel.Unspecified\n  fullName: IsolationLevel.Unspecified\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.\n  syntax:\n    content: Unspecified\n    return:\n      type: System.Transactions.IsolationLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/IsolationLevel.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Transactions.IsolationLevel.Chaos\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: Chaos\n  nameWithType: IsolationLevel.Chaos\n  fullName: IsolationLevel.Chaos\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Transactions.IsolationLevel.ReadCommitted\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: ReadCommitted\n  nameWithType: IsolationLevel.ReadCommitted\n  fullName: IsolationLevel.ReadCommitted\n- uid: System.Transactions.IsolationLevel.ReadUncommitted\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: ReadUncommitted\n  nameWithType: IsolationLevel.ReadUncommitted\n  fullName: IsolationLevel.ReadUncommitted\n- uid: System.Transactions.IsolationLevel.RepeatableRead\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: RepeatableRead\n  nameWithType: IsolationLevel.RepeatableRead\n  fullName: IsolationLevel.RepeatableRead\n- uid: System.Transactions.IsolationLevel.Serializable\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: Serializable\n  nameWithType: IsolationLevel.Serializable\n  fullName: IsolationLevel.Serializable\n- uid: System.Transactions.IsolationLevel.Snapshot\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: Snapshot\n  nameWithType: IsolationLevel.Snapshot\n  fullName: IsolationLevel.Snapshot\n- uid: System.Transactions.IsolationLevel.Unspecified\n  parent: System.Transactions.IsolationLevel\n  isExternal: false\n  name: Unspecified\n  nameWithType: IsolationLevel.Unspecified\n  fullName: IsolationLevel.Unspecified\n"}