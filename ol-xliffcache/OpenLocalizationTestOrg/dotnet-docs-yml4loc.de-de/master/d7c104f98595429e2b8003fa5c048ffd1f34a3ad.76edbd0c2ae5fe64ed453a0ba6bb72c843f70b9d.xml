{"nodes":[{"content":"A class that represents a Uniform Resource Identifier (URI) template.","nodes":[{"pos":[0,69],"content":"A class that represents a Uniform Resource Identifier (URI) template.","nodes":[{"content":"A class that represents a Uniform Resource Identifier (URI) template.","pos":[0,69]}]}],"pos":[1508,1578],"yaml":true},{"content":"A URI template allows you to define a set of structurally similar URIs. Templates are composed of two parts, a path and a query. A path consists of a series of segments delimited by a slash (/). Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \"the rest of the path\"), which must appear at the end of the path. The query expression can be omitted entirely. If present, it specifies an unordered series of name/value pairs. Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}). Unpaired values are not permitted. The following examples show valid template strings:  \n  \n-   \"weather/WA/Seattle\"  \n  \n-   \"weather/{state}/{city}\"  \n  \n-   \"weather/*\"  \n  \n-   \"weather/{state}/{city}?forecast=today  \n  \n-   \"weather/{state}/{city}?forecast={day}  \n  \n The preceding URI templates might be used for organizing weather reports. Segments enclosed in curly braces are variables, everything else is a literal. You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values. For example, taking the template \"weather/{state}/{city}\" and putting in values for the variables \"{state}\" and \"{city}\" gives you \"weather/WA/Seattle\". Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>. You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.","nodes":[{"pos":[0,766],"content":"A URI template allows you to define a set of structurally similar URIs. Templates are composed of two parts, a path and a query. A path consists of a series of segments delimited by a slash (/). Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \"the rest of the path\"), which must appear at the end of the path. The query expression can be omitted entirely. If present, it specifies an unordered series of name/value pairs. Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}). Unpaired values are not permitted. The following examples show valid template strings:","nodes":[{"content":"A URI template allows you to define a set of structurally similar URIs. Templates are composed of two parts, a path and a query. A path consists of a series of segments delimited by a slash (/). Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \"the rest of the path\"), which must appear at the end of the path. The query expression can be omitted entirely. If present, it specifies an unordered series of name/value pairs. Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}). Unpaired values are not permitted. The following examples show valid template strings:","pos":[0,766],"nodes":[{"content":"A URI template allows you to define a set of structurally similar URIs.","pos":[0,71]},{"content":"Templates are composed of two parts, a path and a query.","pos":[72,128]},{"content":"A path consists of a series of segments delimited by a slash (/).","pos":[129,194]},{"content":"Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \"the rest of the path\"), which must appear at the end of the path.","pos":[195,469]},{"content":"The query expression can be omitted entirely.","pos":[470,515]},{"content":"If present, it specifies an unordered series of name/value pairs.","pos":[516,581]},{"content":"Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).","pos":[582,679]},{"content":"Unpaired values are not permitted.","pos":[680,714]},{"content":"The following examples show valid template strings:","pos":[715,766]}]}]},{"pos":[776,796],"content":"\"weather/WA/Seattle\"","nodes":[{"content":"\"weather/WA/Seattle\"","pos":[0,20]}]},{"pos":[806,830],"content":"\"weather/{state}/{city}\"","nodes":[{"content":"\"weather/{state}/{city}\"","pos":[0,24]}]},{"pos":[840,851],"content":"\"weather/*\"","nodes":[{"content":"\"weather/*\"","pos":[0,11]}]},{"pos":[861,899],"content":"\"weather/{state}/{city}?forecast=today","nodes":[{"content":"\"weather/{state}/{city}?forecast=today","pos":[0,38]}]},{"pos":[909,947],"content":"\"weather/{state}/{city}?forecast={day}","nodes":[{"content":"\"weather/{state}/{city}?forecast={day}","pos":[0,38]}]},{"pos":[954,1842],"content":"The preceding URI templates might be used for organizing weather reports. Segments enclosed in curly braces are variables, everything else is a literal. You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values. For example, taking the template \"weather/{state}/{city}\" and putting in values for the variables \"{state}\" and \"{city}\" gives you \"weather/WA/Seattle\". Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>. You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.","nodes":[{"content":"The preceding URI templates might be used for organizing weather reports. Segments enclosed in curly braces are variables, everything else is a literal. You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values. For example, taking the template \"weather/{state}/{city}\" and putting in values for the variables \"{state}\" and \"{city}\" gives you \"weather/WA/Seattle\". Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>. You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.","pos":[0,888],"nodes":[{"content":"The preceding URI templates might be used for organizing weather reports.","pos":[0,73]},{"content":"Segments enclosed in curly braces are variables, everything else is a literal.","pos":[74,152]},{"content":"You can convert a <ph id=\"ph1\">&lt;xref:System.UriTemplate&gt;</ph> instance into a <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> by replacing variables with actual values.","pos":[153,273],"source":" You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values."},{"content":"For example, taking the template \"weather/{state}/{city}\" and putting in values for the variables \"{state}\" and \"{city}\" gives you \"weather/WA/Seattle\".","pos":[274,426]},{"content":"Given a candidate URI, you can test whether it matches a given URI template by calling <ph id=\"ph1\">&lt;xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29&gt;</ph>.","pos":[427,575],"source":" Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>."},{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.UriTemplate&gt;</ph> instances to create a <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> from a set of variable values by calling <ph id=\"ph3\">&lt;xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29&gt;</ph>.","pos":[576,888],"source":" You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>."}]}]}],"pos":[1589,3464],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class with the specified template string.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> class with the specified template string.","source":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class with the specified template string."}],"pos":[5242,5358],"yaml":true},{"content":"The template.","nodes":[{"pos":[0,13],"content":"The template.","nodes":[{"content":"The template.","pos":[0,13]}]}],"pos":[5802,5816],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.","nodes":[{"pos":[0,80],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class."}],"pos":[6998,7079],"yaml":true},{"content":"When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI. For example, a template such as \"http://www.microsoft.com/customer/\" would match the following candidate URIs:  \n  \n-   \"http://www.microsoft.com/customer/\"  \n  \n-   \"http://www.microsoft.com/customer\"  \n  \n-   \"http://www.microsoft.com/customer/?wsdl\"  \n  \n-   \"http://www.microsoft.com/customer?wsdl\"","nodes":[{"pos":[0,242],"content":"When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI. For example, a template such as \"http://www.microsoft.com/customer/\" would match the following candidate URIs:","nodes":[{"content":"When the <ph id=\"ph1\">`ignoreTrailingSlash`</ph> is set to <ph id=\"ph2\">`true`</ph>, trailing slashes on the end of template are ignored when matching a candidate URI.","pos":[0,131],"source":"When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI."},{"content":"For example, a template such as \"http://www.microsoft.com/customer/\" would match the following candidate URIs:","pos":[132,242]}]},{"pos":[252,288],"content":"\"http://www.microsoft.com/customer/\"","nodes":[{"content":"\"http://www.microsoft.com/customer/\"","pos":[0,36]}]},{"pos":[298,333],"content":"\"http://www.microsoft.com/customer\"","nodes":[{"content":"\"http://www.microsoft.com/customer\"","pos":[0,35]}]},{"pos":[343,384],"content":"\"http://www.microsoft.com/customer/?wsdl\"","nodes":[{"content":"\"http://www.microsoft.com/customer/?wsdl\"","pos":[0,41]}]},{"pos":[394,434],"content":"\"http://www.microsoft.com/customer?wsdl\"","nodes":[{"content":"\"http://www.microsoft.com/customer?wsdl\"","pos":[0,40]}]}],"pos":[7090,7545],"yaml":true,"extradata":"MT"},{"content":"The template string.","nodes":[{"pos":[0,20],"content":"The template string.","nodes":[{"content":"The template string.","pos":[0,20]}]}],"pos":[7712,7733],"yaml":true},{"content":"A value that specifies whether trailing slash \"/\" characters should be ignored.","nodes":[{"pos":[0,79],"content":"A value that specifies whether trailing slash \"/\" characters should be ignored.","nodes":[{"content":"A value that specifies whether trailing slash \"/\" characters should be ignored.","pos":[0,79]}]}],"pos":[7809,7889],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.","nodes":[{"pos":[0,80],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class."}],"pos":[9287,9368],"yaml":true},{"content":"The template string.","nodes":[{"pos":[0,20],"content":"The template string.","nodes":[{"content":"The template string.","pos":[0,20]}]}],"pos":[9583,9604],"yaml":true},{"content":"A dictionary that contains a list of default values for the template parameters.","nodes":[{"pos":[0,80],"content":"A dictionary that contains a list of default values for the template parameters.","nodes":[{"content":"A dictionary that contains a list of default values for the template parameters.","pos":[0,80]}]}],"pos":[9732,9813],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.","nodes":[{"pos":[0,80],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class."}],"pos":[11283,11364],"yaml":true},{"content":"The template string.","nodes":[{"pos":[0,20],"content":"The template string.","nodes":[{"content":"The template string.","pos":[0,20]}]}],"pos":[11605,11626],"yaml":true},{"content":"`true` if the trailing slash \"/\" characters are ignored; otherwise `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the trailing slash \"/\" characters are ignored; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the trailing slash \"/\" characters are ignored; otherwise `false`."}],"pos":[11702,11780],"yaml":true},{"content":"A dictionary that contains a list of default values for the template parameters.","nodes":[{"pos":[0,80],"content":"A dictionary that contains a list of default values for the template parameters.","nodes":[{"content":"A dictionary that contains a list of default values for the template parameters.","pos":[0,80]}]}],"pos":[11908,11989],"yaml":true},{"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"pos":[0,69],"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"content":"Creates a new URI from the template and the collection of parameters.","pos":[0,69]}]}],"pos":[13374,13444],"yaml":true},{"content":"The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison.  \n  \n> [!NOTE]\n>  The name/value collection passed to this method must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \n  \n> [!IMPORTANT]\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","nodes":[{"pos":[0,257],"content":"The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison.","nodes":[{"content":"The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison.","pos":[0,257],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D&gt;</ph> parameter contains a collection of parameter name and value pairs.","pos":[0,151],"source":"The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs."},{"content":"The parameters are matched up against the variables within the template by a case-insensitive comparison.","pos":[152,257]}]}]},{"pos":[265,482],"content":"[!NOTE]\n The name/value collection passed to this method must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","leadings":["","> "],"nodes":[{"content":" The name/value collection passed to this method must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","pos":[8,215],"nodes":[{"content":"The name/value collection passed to this method must contain a key for every template variable.","pos":[1,96]},{"content":"Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","pos":[97,207]}]}]},{"pos":[490,713],"content":"[!IMPORTANT]\n It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","leadings":["","> "],"nodes":[{"content":" It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","pos":[13,221],"nodes":[{"content":"It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.","pos":[1,146]},{"content":"Examples of such text includes: '/', '..', '*', '{', and '}'.","pos":[147,208]}]}]}],"pos":[13455,14177],"yaml":true,"extradata":"MT"},{"content":"The base address.","nodes":[{"pos":[0,17],"content":"The base address.","nodes":[{"content":"The base address.","pos":[0,17]}]}],"pos":[14387,14405],"yaml":true},{"content":"A dictionary that contains a collection of parameter name/value pairs.","nodes":[{"pos":[0,70],"content":"A dictionary that contains a collection of parameter name/value pairs.","nodes":[{"content":"A dictionary that contains a collection of parameter name/value pairs.","pos":[0,70]}]}],"pos":[14525,14596],"yaml":true},{"content":"A URI.","nodes":[{"pos":[0,6],"content":"A URI.","nodes":[{"content":"A URI.","pos":[0,6]}]}],"pos":[14650,14657],"yaml":true},{"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"pos":[0,69],"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"content":"Creates a new URI from the template and the collection of parameters.","pos":[0,69]}]}],"pos":[15975,16045],"yaml":true},{"content":"The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison. Values passed in this collection are escaped.  \n  \n> [!NOTE]\n>  The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \n  \n> [!NOTE]\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","nodes":[{"pos":[0,276],"content":"The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison. Values passed in this collection are escaped.","nodes":[{"content":"The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison. Values passed in this collection are escaped.","pos":[0,276],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> parameter contains a collection of parameter name/value pairs.","pos":[0,124],"source":"The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs."},{"content":"The parameters are matched up against the variables within the template by a case-insensitive comparison.","pos":[125,230]},{"content":"Values passed in this collection are escaped.","pos":[231,276]}]}]},{"pos":[284,595],"content":"[!NOTE]\n The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","leadings":["","> "],"nodes":[{"content":" The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","pos":[8,309],"nodes":[{"content":"The name/value collection passed to <ph id=\"ph1\">&lt;xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> must contain a key for every template variable.","pos":[1,190],"source":" The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable."},{"content":"Extra name/value pairs that do not match template variables are appended to the query string of the final URI.","pos":[191,301]}]}]},{"pos":[603,821],"content":"[!NOTE]\n It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","leadings":["","> "],"nodes":[{"content":" It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.","pos":[8,216],"nodes":[{"content":"It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.","pos":[1,146]},{"content":"Examples of such text includes: '/', '..', '*', '{', and '}'.","pos":[147,208]}]}]}],"pos":[16056,16886],"yaml":true,"extradata":"MT"},{"content":"The base address.","nodes":[{"pos":[0,17],"content":"The base address.","nodes":[{"content":"The base address.","pos":[0,17]}]}],"pos":[17483,17501],"yaml":true},{"content":"The parameter values.","nodes":[{"pos":[0,21],"content":"The parameter values.","nodes":[{"content":"The parameter values.","pos":[0,21]}]}],"pos":[17604,17626],"yaml":true},{"content":"A new instance.","nodes":[{"pos":[0,15],"content":"A new instance.","nodes":[{"content":"A new instance.","pos":[0,15]}]}],"pos":[17680,17696],"yaml":true},{"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"pos":[0,69],"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"content":"Creates a new URI from the template and the collection of parameters.","pos":[0,69]}]}],"pos":[19158,19228],"yaml":true},{"content":"A URI that contains the base address.","nodes":[{"pos":[0,37],"content":"A URI that contains the base address.","nodes":[{"content":"A URI that contains the base address.","pos":[0,37]}]}],"pos":[19457,19495],"yaml":true},{"content":"A dictionary that contains a collection of parameter name/value pairs.","nodes":[{"pos":[0,70],"content":"A dictionary that contains a collection of parameter name/value pairs.","nodes":[{"content":"A dictionary that contains a collection of parameter name/value pairs.","pos":[0,70]}]}],"pos":[19615,19686],"yaml":true},{"content":"`true` is the default values are ignored; otherwise `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> is the default values are ignored; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` is the default values are ignored; otherwise `false`."}],"pos":[19755,19818],"yaml":true},{"content":"A URI.","nodes":[{"pos":[0,6],"content":"A URI.","nodes":[{"content":"A URI.","pos":[0,6]}]}],"pos":[19872,19879],"yaml":true},{"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"pos":[0,69],"content":"Creates a new URI from the template and the collection of parameters.","nodes":[{"content":"Creates a new URI from the template and the collection of parameters.","pos":[0,69]}]}],"pos":[21269,21339],"yaml":true},{"content":"The base address.","nodes":[{"pos":[0,17],"content":"The base address.","nodes":[{"content":"The base address.","pos":[0,17]}]}],"pos":[21565,21583],"yaml":true},{"content":"A collection of parameter name/value pairs.","nodes":[{"pos":[0,43],"content":"A collection of parameter name/value pairs.","nodes":[{"content":"A collection of parameter name/value pairs.","pos":[0,43]}]}],"pos":[21686,21730],"yaml":true},{"content":"`true` if the default values are ignored; otherwise `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the default values are ignored; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the default values are ignored; otherwise `false`."}],"pos":[21799,21862],"yaml":true},{"content":"A URI.","nodes":[{"pos":[0,6],"content":"A URI.","nodes":[{"content":"A URI.","pos":[0,6]}]}],"pos":[21916,21923],"yaml":true},{"content":"Creates a new URI from the template and an array of parameter values.","nodes":[{"pos":[0,69],"content":"Creates a new URI from the template and an array of parameter values.","nodes":[{"content":"Creates a new URI from the template and an array of parameter values.","pos":[0,69]}]}],"pos":[23127,23197],"yaml":true},{"content":"The parameter values are bound by position left to right. The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on. Variables passed to this method are escaped.  \n  \n> [!NOTE]\n>  The number of parameters passed in the values parameter must match the number of variables in the template. If not, a <xref:System.FormatException> is thrown.  \n  \n> [!NOTE]\n>  It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '.','..', '*', '{', and '}'. The following code demonstrates this.  \n  \n `UriTemplate template = new UriTemplate(\"far/{bat}/baz\");`  \n  \n `Uri uri = new Uri(\"http://localhost/Base\");`  \n  \n `Uri result = template.BindByPosition(uri, \".\");   // returns Base/form/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"..\");  // returns Base/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"x/y\");  // returns Base/form/x/y/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"{x}\");  // returns Base/form/{x}/baz`  \n  \n `Uri result = template.BindByPosition(uri, \"*\");  // returns Base/form/*/baz`","nodes":[{"pos":[0,247],"content":"The parameter values are bound by position left to right. The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on. Variables passed to this method are escaped.","nodes":[{"content":"The parameter values are bound by position left to right. The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on. Variables passed to this method are escaped.","pos":[0,247],"nodes":[{"content":"The parameter values are bound by position left to right.","pos":[0,57]},{"content":"The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.","pos":[58,202]},{"content":"Variables passed to this method are escaped.","pos":[203,247]}]}]},{"pos":[255,424],"content":"[!NOTE]\n The number of parameters passed in the values parameter must match the number of variables in the template. If not, a <xref:System.FormatException> is thrown.","leadings":["","> "],"nodes":[{"content":" The number of parameters passed in the values parameter must match the number of variables in the template. If not, a <xref:System.FormatException> is thrown.","pos":[8,167],"nodes":[{"content":"The number of parameters passed in the values parameter must match the number of variables in the template.","pos":[1,108]},{"content":"If not, a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> is thrown.","pos":[109,159],"source":" If not, a <xref:System.FormatException> is thrown."}]}]},{"pos":[432,699],"content":"[!NOTE]\n It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '.','..', '*', '{', and '}'. The following code demonstrates this.","leadings":["","> "],"nodes":[{"content":" It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '.','..', '*', '{', and '}'. The following code demonstrates this.","pos":[8,265],"nodes":[{"content":"It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.","pos":[1,153]},{"content":"Examples of such text includes: '/', '.','..', '*', '{', and '}'.","pos":[154,219]},{"content":"The following code demonstrates this.","pos":[220,257]}]}]}],"pos":[23208,24482],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> that contains the base address.","nodes":[{"pos":[0,65],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base address.","source":"A <xref href=\"System.Uri\"></xref> that contains the base address."}],"pos":[25003,25069],"yaml":true},{"content":"The parameter values.","nodes":[{"pos":[0,21],"content":"The parameter values.","nodes":[{"content":"The parameter values.","pos":[0,21]}]}],"pos":[25133,25155],"yaml":true},{"content":"A new <xref href=\"System.Uri\"></xref> instance.","nodes":[{"pos":[0,47],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> instance.","source":"A new <xref href=\"System.Uri\"></xref> instance."}],"pos":[25209,25257],"yaml":true},{"content":"Gets a collection of name/value pairs for any default parameter values.","nodes":[{"pos":[0,71],"content":"Gets a collection of name/value pairs for any default parameter values.","nodes":[{"content":"Gets a collection of name/value pairs for any default parameter values.","pos":[0,71]}]}],"pos":[26302,26374],"yaml":true},{"content":"A generic dictionary.","nodes":[{"pos":[0,21],"content":"A generic dictionary.","nodes":[{"content":"A generic dictionary.","pos":[0,21]}]}],"pos":[26587,26609],"yaml":true},{"content":"Specifies whether trailing slashes \"/\" in the template should be ignored when matching candidate URIs.","nodes":[{"pos":[0,102],"content":"Specifies whether trailing slashes \"/\" in the template should be ignored when matching candidate URIs.","nodes":[{"content":"Specifies whether trailing slashes \"/\" in the template should be ignored when matching candidate URIs.","pos":[0,102]}]}],"pos":[27714,27817],"yaml":true},{"content":"`true` if trailing slashes \"/\" should be ignored, otherwise `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if trailing slashes \"/\" should be ignored, otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if trailing slashes \"/\" should be ignored, otherwise `false`."}],"pos":[27939,28010],"yaml":true},{"content":"Indicates whether a <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another.","nodes":[{"pos":[0,98],"content":"Indicates whether a <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> is structurally equivalent to another.","source":"Indicates whether a <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another."}],"pos":[29193,29292],"yaml":true},{"content":"Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments. For example \"weather/{state}/{city}\" is equivalent to \"weather/{country}/{village}\".","nodes":[{"pos":[0,225],"content":"Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments. For example \"weather/{state}/{city}\" is equivalent to \"weather/{country}/{village}\".","nodes":[{"content":"Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments. For example \"weather/{state}/{city}\" is equivalent to \"weather/{country}/{village}\".","pos":[0,225],"nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.UriTemplate&gt;</ph> instances are equivalent if their literal strings are identical and the variables appear in the same segments.","pos":[0,140],"source":"Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments."},{"content":"For example \"weather/{state}/{city}\" is equivalent to \"weather/{country}/{village}\".","pos":[141,225]}]}]}],"pos":[29303,29529],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.UriTemplate\"></xref> to compare.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The <xref href=\"System.UriTemplate\"></xref> to compare."}],"pos":[30024,30080],"yaml":true},{"content":"`true` if the <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another; otherwise `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> is structurally equivalent to another; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another; otherwise `false`."}],"pos":[30138,30252],"yaml":true},{"content":"Attempts to match a <xref href=\"System.URI\"></xref> to a <xref href=\"System.UriTemplate\"></xref>.","nodes":[{"pos":[0,97],"content":"Attempts to match a <ph id=\"ph1\">&lt;xref href=\"System.URI\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph>.","source":"Attempts to match a <xref href=\"System.URI\"></xref> to a <xref href=\"System.UriTemplate\"></xref>."}],"pos":[31376,31474],"yaml":true},{"content":"If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI. If the match is unsuccessful, `null` is returned.","nodes":[{"pos":[0,231],"content":"If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI. If the match is unsuccessful, `null` is returned.","nodes":[{"content":"If the match is successful the <ph id=\"ph1\">&lt;xref:System.UriTemplateMatch&gt;</ph> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.","pos":[0,181],"source":"If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI."},{"content":"If the match is unsuccessful, <ph id=\"ph1\">`null`</ph> is returned.","pos":[182,231],"source":" If the match is unsuccessful, `null` is returned."}]}],"pos":[31485,31717],"yaml":true,"extradata":"MT"},{"content":"The base address.","nodes":[{"pos":[0,17],"content":"The base address.","nodes":[{"content":"The base address.","pos":[0,17]}]}],"pos":[32229,32247],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> to match against the template.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> to match against the template.","source":"The <xref href=\"System.Uri\"></xref> to match against the template."}],"pos":[32309,32376],"yaml":true},{"content":"An instance.","nodes":[{"pos":[0,12],"content":"An instance.","nodes":[{"content":"An instance.","pos":[0,12]}]}],"pos":[32443,32456],"yaml":true},{"content":"Gets a collection of variable names used within path segments in the template.","nodes":[{"pos":[0,78],"content":"Gets a collection of variable names used within path segments in the template.","nodes":[{"content":"Gets a collection of variable names used within path segments in the template.","pos":[0,78]}]}],"pos":[33588,33667],"yaml":true},{"content":"The collection excludes the names of variables that appear in the query portion of the template.","nodes":[{"pos":[0,96],"content":"The collection excludes the names of variables that appear in the query portion of the template.","nodes":[{"content":"The collection excludes the names of variables that appear in the query portion of the template.","pos":[0,96]}]}],"pos":[33678,33775],"yaml":true,"extradata":"MT"},{"content":"A collection of variable names that appear within the template's path segment.","nodes":[{"pos":[0,78],"content":"A collection of variable names that appear within the template's path segment.","nodes":[{"content":"A collection of variable names that appear within the template's path segment.","pos":[0,78]}]}],"pos":[34347,34426],"yaml":true},{"content":"Gets a collection of variable names used within the query string in the template.","nodes":[{"pos":[0,81],"content":"Gets a collection of variable names used within the query string in the template.","nodes":[{"content":"Gets a collection of variable names used within the query string in the template.","pos":[0,81]}]}],"pos":[35571,35653],"yaml":true},{"content":"This collection excludes variable names that appear in the path section of the template string.","nodes":[{"pos":[0,95],"content":"This collection excludes variable names that appear in the path section of the template string.","nodes":[{"content":"This collection excludes variable names that appear in the path section of the template string.","pos":[0,95]}]}],"pos":[35664,35760],"yaml":true,"extradata":"MT"},{"content":"A collection of template variable names that appear in the query portion of the template string.","nodes":[{"pos":[0,96],"content":"A collection of template variable names that appear in the query portion of the template string.","nodes":[{"content":"A collection of template variable names that appear in the query portion of the template string.","pos":[0,96]}]}],"pos":[36330,36427],"yaml":true},{"content":"Returns a string representation of the <xref href=\"System.UriTemplate\"></xref> instance.","nodes":[{"pos":[0,88],"content":"Returns a string representation of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a string representation of the <xref href=\"System.UriTemplate\"></xref> instance."}],"pos":[37485,37574],"yaml":true},{"content":"The representation of the <xref href=\"System.UriTemplate\"></xref> instance.","nodes":[{"pos":[0,75],"content":"The representation of the <ph id=\"ph1\">&lt;xref href=\"System.UriTemplate\"&gt;&lt;/xref&gt;</ph> instance.","source":"The representation of the <xref href=\"System.UriTemplate\"></xref> instance."}],"pos":[38042,38118],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.UriTemplate\n  commentId: T:System.UriTemplate\n  id: UriTemplate\n  children:\n  - System.UriTemplate.#ctor(System.String)\n  - System.UriTemplate.#ctor(System.String,System.Boolean)\n  - System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)\n  - System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)\n  - System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)\n  - System.UriTemplate.BindByPosition(System.Uri,System.String[])\n  - System.UriTemplate.Defaults\n  - System.UriTemplate.IgnoreTrailingSlash\n  - System.UriTemplate.IsEquivalentTo(System.UriTemplate)\n  - System.UriTemplate.Match(System.Uri,System.Uri)\n  - System.UriTemplate.PathSegmentVariableNames\n  - System.UriTemplate.QueryValueVariableNames\n  - System.UriTemplate.ToString\n  langs:\n  - csharp\n  name: UriTemplate\n  nameWithType: UriTemplate\n  fullName: System.UriTemplate\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: A class that represents a Uniform Resource Identifier (URI) template.\n  remarks: \"A URI template allows you to define a set of structurally similar URIs. Templates are composed of two parts, a path and a query. A path consists of a series of segments delimited by a slash (/). Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [*], which matches \\\"the rest of the path\\\"), which must appear at the end of the path. The query expression can be omitted entirely. If present, it specifies an unordered series of name/value pairs. Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}). Unpaired values are not permitted. The following examples show valid template strings:  \\n  \\n-   \\\"weather/WA/Seattle\\\"  \\n  \\n-   \\\"weather/{state}/{city}\\\"  \\n  \\n-   \\\"weather/*\\\"  \\n  \\n-   \\\"weather/{state}/{city}?forecast=today  \\n  \\n-   \\\"weather/{state}/{city}?forecast={day}  \\n  \\n The preceding URI templates might be used for organizing weather reports. Segments enclosed in curly braces are variables, everything else is a literal. You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values. For example, taking the template \\\"weather/{state}/{city}\\\" and putting in values for the variables \\\"{state}\\\" and \\\"{city}\\\" gives you \\\"weather/WA/Seattle\\\". Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>. You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.\"\n  example:\n  - \"The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.  \\n  \\n [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]\\n [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]\"\n  syntax:\n    content: public class UriTemplate\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.#ctor(System.String)\n  commentId: M:System.UriTemplate.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: UriTemplate(String)\n  nameWithType: UriTemplate.UriTemplate(String)\n  fullName: UriTemplate.UriTemplate(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class with the specified template string.\n  remarks: ''\n  example:\n  - \"The following example shows how to call the constructor.  \\n  \\n [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]\\n [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]\"\n  syntax:\n    content: public UriTemplate (string template);\n    parameters:\n    - id: template\n      type: System.String\n      description: The template.\n  overload: System.UriTemplate.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.#ctor(System.String,System.Boolean)\n  commentId: M:System.UriTemplate.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: UriTemplate(String, Boolean)\n  nameWithType: UriTemplate.UriTemplate(String, Boolean)\n  fullName: UriTemplate.UriTemplate(String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.\n  remarks: \"When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI. For example, a template such as \\\"http://www.microsoft.com/customer/\\\" would match the following candidate URIs:  \\n  \\n-   \\\"http://www.microsoft.com/customer/\\\"  \\n  \\n-   \\\"http://www.microsoft.com/customer\\\"  \\n  \\n-   \\\"http://www.microsoft.com/customer/?wsdl\\\"  \\n  \\n-   \\\"http://www.microsoft.com/customer?wsdl\\\"\"\n  syntax:\n    content: public UriTemplate (string template, bool ignoreTrailingSlash);\n    parameters:\n    - id: template\n      type: System.String\n      description: The template string.\n    - id: ignoreTrailingSlash\n      type: System.Boolean\n      description: A value that specifies whether trailing slash \"/\" characters should be ignored.\n  overload: System.UriTemplate.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  commentId: M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})'\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: UriTemplate(String, IDictionary<String,String>)\n  nameWithType: UriTemplate.UriTemplate(String, IDictionary<String,String>)\n  fullName: UriTemplate.UriTemplate(String, IDictionary<String,String>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.\n  syntax:\n    content: public UriTemplate (string template, System.Collections.Generic.IDictionary<string,string> additionalDefaults);\n    parameters:\n    - id: template\n      type: System.String\n      description: The template string.\n    - id: additionalDefaults\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary that contains a list of default values for the template parameters.\n  overload: System.UriTemplate.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})\n  commentId: M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: '#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})'\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: UriTemplate(String, Boolean, IDictionary<String,String>)\n  nameWithType: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)\n  fullName: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.UriTemplate\"></xref> class.\n  syntax:\n    content: public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary<string,string> additionalDefaults);\n    parameters:\n    - id: template\n      type: System.String\n      description: The template string.\n    - id: ignoreTrailingSlash\n      type: System.Boolean\n      description: '`true` if the trailing slash \"/\" characters are ignored; otherwise `false`.'\n    - id: additionalDefaults\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary that contains a list of default values for the template parameters.\n  overload: System.UriTemplate.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})\n  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: BindByName(Uri, IDictionary<String,String>)\n  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>)\n  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Creates a new URI from the template and the collection of parameters.\n  remarks: \"The <xref:System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D> parameter contains a collection of parameter name and value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison.  \\n  \\n> [!NOTE]\\n>  The name/value collection passed to this method must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \\n  \\n> [!IMPORTANT]\\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.\"\n  syntax:\n    content: public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary<string,string> parameters);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: The base address.\n    - id: parameters\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary that contains a collection of parameter name/value pairs.\n    return:\n      type: System.Uri\n      description: A URI.\n  overload: System.UriTemplate.BindByName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)\n  id: BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: BindByName(Uri, NameValueCollection)\n  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection)\n  fullName: UriTemplate.BindByName(Uri, NameValueCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Creates a new URI from the template and the collection of parameters.\n  remarks: \"The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs. The parameters are matched up against the variables within the template by a case-insensitive comparison. Values passed in this collection are escaped.  \\n  \\n> [!NOTE]\\n>  The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable. Extra name/value pairs that do not match template variables are appended to the query string of the final URI.  \\n  \\n> [!NOTE]\\n>  It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '..', '*', '{', and '}'.\"\n  example:\n  - \"The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.  \\n  \\n [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]\\n [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]\"\n  syntax:\n    content: public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: The base address.\n    - id: parameters\n      type: System.Collections.Specialized.NameValueCollection\n      description: The parameter values.\n    return:\n      type: System.Uri\n      description: A new instance.\n  overload: System.UriTemplate.BindByName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)\n  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)\n  id: BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: BindByName(Uri, IDictionary<String,String>, Boolean)\n  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)\n  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Creates a new URI from the template and the collection of parameters.\n  syntax:\n    content: public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary<string,string> parameters, bool omitDefaults);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: A URI that contains the base address.\n    - id: parameters\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary that contains a collection of parameter name/value pairs.\n    - id: omitDefaults\n      type: System.Boolean\n      description: '`true` is the default values are ignored; otherwise `false`.'\n    return:\n      type: System.Uri\n      description: A URI.\n  overload: System.UriTemplate.BindByName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)\n  commentId: M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)\n  id: BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: BindByName(Uri, NameValueCollection, Boolean)\n  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)\n  fullName: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Creates a new URI from the template and the collection of parameters.\n  syntax:\n    content: public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: The base address.\n    - id: parameters\n      type: System.Collections.Specialized.NameValueCollection\n      description: A collection of parameter name/value pairs.\n    - id: omitDefaults\n      type: System.Boolean\n      description: '`true` if the default values are ignored; otherwise `false`.'\n    return:\n      type: System.Uri\n      description: A URI.\n  overload: System.UriTemplate.BindByName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.BindByPosition(System.Uri,System.String[])\n  commentId: M:System.UriTemplate.BindByPosition(System.Uri,System.String[])\n  id: BindByPosition(System.Uri,System.String[])\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: BindByPosition(Uri, String[])\n  nameWithType: UriTemplate.BindByPosition(Uri, String[])\n  fullName: UriTemplate.BindByPosition(Uri, String[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Creates a new URI from the template and an array of parameter values.\n  remarks: \"The parameter values are bound by position left to right. The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on. Variables passed to this method are escaped.  \\n  \\n> [!NOTE]\\n>  The number of parameters passed in the values parameter must match the number of variables in the template. If not, a <xref:System.FormatException> is thrown.  \\n  \\n> [!NOTE]\\n>  It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it. Examples of such text includes: '/', '.','..', '*', '{', and '}'. The following code demonstrates this.  \\n  \\n `UriTemplate template = new UriTemplate(\\\"far/{bat}/baz\\\");`  \\n  \\n `Uri uri = new Uri(\\\"http://localhost/Base\\\");`  \\n  \\n `Uri result = template.BindByPosition(uri, \\\".\\\");   // returns Base/form/baz`  \\n  \\n `Uri result = template.BindByPosition(uri, \\\"..\\\");  // returns Base/baz`  \\n  \\n `Uri result = template.BindByPosition(uri, \\\"x/y\\\");  // returns Base/form/x/y/baz`  \\n  \\n `Uri result = template.BindByPosition(uri, \\\"{x}\\\");  // returns Base/form/{x}/baz`  \\n  \\n `Uri result = template.BindByPosition(uri, \\\"*\\\");  // returns Base/form/*/baz`\"\n  example:\n  - \"The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.  \\n  \\n [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]\\n [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]\"\n  syntax:\n    content: public Uri BindByPosition (Uri baseAddress, string[] values);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> that contains the base address.\n    - id: values\n      type: System.String[]\n      description: The parameter values.\n    return:\n      type: System.Uri\n      description: A new <xref href=\"System.Uri\"></xref> instance.\n  overload: System.UriTemplate.BindByPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.Defaults\n  commentId: P:System.UriTemplate.Defaults\n  id: Defaults\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: Defaults\n  nameWithType: UriTemplate.Defaults\n  fullName: UriTemplate.Defaults\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Gets a collection of name/value pairs for any default parameter values.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> Defaults { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A generic dictionary.\n  overload: System.UriTemplate.Defaults*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.IgnoreTrailingSlash\n  commentId: P:System.UriTemplate.IgnoreTrailingSlash\n  id: IgnoreTrailingSlash\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: IgnoreTrailingSlash\n  nameWithType: UriTemplate.IgnoreTrailingSlash\n  fullName: UriTemplate.IgnoreTrailingSlash\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Specifies whether trailing slashes \"/\" in the template should be ignored when matching candidate URIs.\n  syntax:\n    content: public bool IgnoreTrailingSlash { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if trailing slashes \"/\" should be ignored, otherwise `false`.'\n  overload: System.UriTemplate.IgnoreTrailingSlash*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.IsEquivalentTo(System.UriTemplate)\n  commentId: M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)\n  id: IsEquivalentTo(System.UriTemplate)\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: IsEquivalentTo(UriTemplate)\n  nameWithType: UriTemplate.IsEquivalentTo(UriTemplate)\n  fullName: UriTemplate.IsEquivalentTo(UriTemplate)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Indicates whether a <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another.\n  remarks: Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments. For example \"weather/{state}/{city}\" is equivalent to \"weather/{country}/{village}\".\n  example:\n  - \"The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.  \\n  \\n [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]\\n [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]\"\n  syntax:\n    content: public bool IsEquivalentTo (UriTemplate other);\n    parameters:\n    - id: other\n      type: System.UriTemplate\n      description: The <xref href=\"System.UriTemplate\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.UriTemplate\"></xref> is structurally equivalent to another; otherwise `false`.'\n  overload: System.UriTemplate.IsEquivalentTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.Match(System.Uri,System.Uri)\n  commentId: M:System.UriTemplate.Match(System.Uri,System.Uri)\n  id: Match(System.Uri,System.Uri)\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: Match(Uri, Uri)\n  nameWithType: UriTemplate.Match(Uri, Uri)\n  fullName: UriTemplate.Match(Uri, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Attempts to match a <xref href=\"System.URI\"></xref> to a <xref href=\"System.UriTemplate\"></xref>.\n  remarks: If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI. If the match is unsuccessful, `null` is returned.\n  example:\n  - \"The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.  \\n  \\n [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]\\n [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]\"\n  syntax:\n    content: public UriTemplateMatch Match (Uri baseAddress, Uri candidate);\n    parameters:\n    - id: baseAddress\n      type: System.Uri\n      description: The base address.\n    - id: candidate\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> to match against the template.\n    return:\n      type: System.UriTemplateMatch\n      description: An instance.\n  overload: System.UriTemplate.Match*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.PathSegmentVariableNames\n  commentId: P:System.UriTemplate.PathSegmentVariableNames\n  id: PathSegmentVariableNames\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: PathSegmentVariableNames\n  nameWithType: UriTemplate.PathSegmentVariableNames\n  fullName: UriTemplate.PathSegmentVariableNames\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Gets a collection of variable names used within path segments in the template.\n  remarks: The collection excludes the names of variables that appear in the query portion of the template.\n  example:\n  - \"The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.  \\n  \\n [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]\\n [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> PathSegmentVariableNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection of variable names that appear within the template's path segment.\n  overload: System.UriTemplate.PathSegmentVariableNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.QueryValueVariableNames\n  commentId: P:System.UriTemplate.QueryValueVariableNames\n  id: QueryValueVariableNames\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: QueryValueVariableNames\n  nameWithType: UriTemplate.QueryValueVariableNames\n  fullName: UriTemplate.QueryValueVariableNames\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Gets a collection of variable names used within the query string in the template.\n  remarks: This collection excludes variable names that appear in the path section of the template string.\n  example:\n  - \"The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.  \\n  \\n [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]\\n [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> QueryValueVariableNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection of template variable names that appear in the query portion of the template string.\n  overload: System.UriTemplate.QueryValueVariableNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.UriTemplate.ToString\n  commentId: M:System.UriTemplate.ToString\n  id: ToString\n  parent: System.UriTemplate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: UriTemplate.ToString()\n  fullName: UriTemplate.ToString()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  - System.ServiceModel.Web\n  namespace: System\n  summary: Returns a string representation of the <xref href=\"System.UriTemplate\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following example shows how to call the <xref:System.UriTemplate.ToString> method.  \\n  \\n [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]\\n [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The representation of the <xref href=\"System.UriTemplate\"></xref> instance.\n  overload: System.UriTemplate.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.UriTemplate.#ctor(System.String)\n  parent: System.UriTemplate\n  isExternal: false\n  name: UriTemplate(String)\n  nameWithType: UriTemplate.UriTemplate(String)\n  fullName: UriTemplate.UriTemplate(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.UriTemplate.#ctor(System.String,System.Boolean)\n  parent: System.UriTemplate\n  isExternal: false\n  name: UriTemplate(String, Boolean)\n  nameWithType: UriTemplate.UriTemplate(String, Boolean)\n  fullName: UriTemplate.UriTemplate(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.UriTemplate\n  isExternal: false\n  name: UriTemplate(String, IDictionary<String,String>)\n  nameWithType: UriTemplate.UriTemplate(String, IDictionary<String,String>)\n  fullName: UriTemplate.UriTemplate(String, IDictionary<String,String>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.UriTemplate\n  isExternal: false\n  name: UriTemplate(String, Boolean, IDictionary<String,String>)\n  nameWithType: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)\n  fullName: UriTemplate.UriTemplate(String, Boolean, IDictionary<String,String>)\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByName(Uri, IDictionary<String,String>)\n  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>)\n  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByName(Uri, NameValueCollection)\n  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection)\n  fullName: UriTemplate.BindByName(Uri, NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByName(Uri, IDictionary<String,String>, Boolean)\n  nameWithType: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)\n  fullName: UriTemplate.BindByName(Uri, IDictionary<String,String>, Boolean)\n- uid: System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByName(Uri, NameValueCollection, Boolean)\n  nameWithType: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)\n  fullName: UriTemplate.BindByName(Uri, NameValueCollection, Boolean)\n- uid: System.UriTemplate.BindByPosition(System.Uri,System.String[])\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByPosition(Uri, String[])\n  nameWithType: UriTemplate.BindByPosition(Uri, String[])\n  fullName: UriTemplate.BindByPosition(Uri, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.UriTemplate.Defaults\n  parent: System.UriTemplate\n  isExternal: false\n  name: Defaults\n  nameWithType: UriTemplate.Defaults\n  fullName: UriTemplate.Defaults\n- uid: System.UriTemplate.IgnoreTrailingSlash\n  parent: System.UriTemplate\n  isExternal: false\n  name: IgnoreTrailingSlash\n  nameWithType: UriTemplate.IgnoreTrailingSlash\n  fullName: UriTemplate.IgnoreTrailingSlash\n- uid: System.UriTemplate.IsEquivalentTo(System.UriTemplate)\n  parent: System.UriTemplate\n  isExternal: false\n  name: IsEquivalentTo(UriTemplate)\n  nameWithType: UriTemplate.IsEquivalentTo(UriTemplate)\n  fullName: UriTemplate.IsEquivalentTo(UriTemplate)\n- uid: System.UriTemplate\n  parent: System\n  isExternal: false\n  name: UriTemplate\n  nameWithType: UriTemplate\n  fullName: System.UriTemplate\n- uid: System.UriTemplate.Match(System.Uri,System.Uri)\n  parent: System.UriTemplate\n  isExternal: false\n  name: Match(Uri, Uri)\n  nameWithType: UriTemplate.Match(Uri, Uri)\n  fullName: UriTemplate.Match(Uri, Uri)\n- uid: System.UriTemplateMatch\n  parent: System\n  isExternal: false\n  name: UriTemplateMatch\n  nameWithType: UriTemplateMatch\n  fullName: System.UriTemplateMatch\n- uid: System.UriTemplate.PathSegmentVariableNames\n  parent: System.UriTemplate\n  isExternal: false\n  name: PathSegmentVariableNames\n  nameWithType: UriTemplate.PathSegmentVariableNames\n  fullName: UriTemplate.PathSegmentVariableNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.UriTemplate.QueryValueVariableNames\n  parent: System.UriTemplate\n  isExternal: false\n  name: QueryValueVariableNames\n  nameWithType: UriTemplate.QueryValueVariableNames\n  fullName: UriTemplate.QueryValueVariableNames\n- uid: System.UriTemplate.ToString\n  parent: System.UriTemplate\n  isExternal: false\n  name: ToString()\n  nameWithType: UriTemplate.ToString()\n  fullName: UriTemplate.ToString()\n- uid: System.UriTemplate.#ctor*\n  parent: System.UriTemplate\n  isExternal: false\n  name: UriTemplate\n  nameWithType: UriTemplate.UriTemplate\n  fullName: UriTemplate.UriTemplate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.BindByName*\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByName\n  nameWithType: UriTemplate.BindByName\n  fullName: UriTemplate.BindByName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.BindByPosition*\n  parent: System.UriTemplate\n  isExternal: false\n  name: BindByPosition\n  nameWithType: UriTemplate.BindByPosition\n  fullName: UriTemplate.BindByPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.Defaults*\n  parent: System.UriTemplate\n  isExternal: false\n  name: Defaults\n  nameWithType: UriTemplate.Defaults\n  fullName: UriTemplate.Defaults\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.IgnoreTrailingSlash*\n  parent: System.UriTemplate\n  isExternal: false\n  name: IgnoreTrailingSlash\n  nameWithType: UriTemplate.IgnoreTrailingSlash\n  fullName: UriTemplate.IgnoreTrailingSlash\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.IsEquivalentTo*\n  parent: System.UriTemplate\n  isExternal: false\n  name: IsEquivalentTo\n  nameWithType: UriTemplate.IsEquivalentTo\n  fullName: UriTemplate.IsEquivalentTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.Match*\n  parent: System.UriTemplate\n  isExternal: false\n  name: Match\n  nameWithType: UriTemplate.Match\n  fullName: UriTemplate.Match\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.PathSegmentVariableNames*\n  parent: System.UriTemplate\n  isExternal: false\n  name: PathSegmentVariableNames\n  nameWithType: UriTemplate.PathSegmentVariableNames\n  fullName: UriTemplate.PathSegmentVariableNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.QueryValueVariableNames*\n  parent: System.UriTemplate\n  isExternal: false\n  name: QueryValueVariableNames\n  nameWithType: UriTemplate.QueryValueVariableNames\n  fullName: UriTemplate.QueryValueVariableNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.UriTemplate.ToString*\n  parent: System.UriTemplate\n  isExternal: false\n  name: ToString\n  nameWithType: UriTemplate.ToString\n  fullName: UriTemplate.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriTemplate.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}