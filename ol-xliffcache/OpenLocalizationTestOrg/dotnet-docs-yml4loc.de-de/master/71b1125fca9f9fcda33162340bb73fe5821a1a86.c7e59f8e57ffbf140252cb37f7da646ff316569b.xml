{"nodes":[{"content":"Discovers the attributes of a class constructor and provides access to constructor metadata.","nodes":[{"pos":[0,92],"content":"Discovers the attributes of a class constructor and provides access to constructor metadata.","nodes":[{"content":"Discovers the attributes of a class constructor and provides access to constructor metadata.","pos":[0,92]}]}],"pos":[2572,2665],"yaml":true},{"content":"`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor. Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.  \n  \n> [!NOTE]\n>  <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods. In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.","nodes":[{"pos":[0,350],"content":"`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor. Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.","nodes":[{"content":"<ph id=\"ph1\">`ConstructorInfo`</ph> is used to discover the attributes of a constructor as well as to invoke a constructor.","pos":[0,105],"source":"`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor."},{"content":"Objects are created by calling <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</ph> on a <ph id=\"ph2\">`ConstructorInfo`</ph> returned by either the <ph id=\"ph3\">&lt;xref:System.Type.GetConstructors%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Type.GetConstructor%2A&gt;</ph> method of a <ph id=\"ph5\">&lt;xref:System.Type&gt;</ph> object.","pos":[106,350],"source":" Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object."}]},{"pos":[358,694],"content":"[!NOTE]\n <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods. In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.","leadings":["","> "],"nodes":[{"content":" <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods. In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.","pos":[8,334],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> inherits from <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase&gt;</ph> several members, such as <ph id=\"ph3\">&lt;xref:System.Reflection.MethodBase.IsGenericMethod%2A&gt;</ph>, that can be used to examine generic methods.","pos":[1,217],"source":" <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods."},{"content":"In the .NET Framework version 2.0 constructors cannot be generic, so these members return <ph id=\"ph1\">`false`</ph> or <ph id=\"ph2\">`null`</ph>.","pos":[218,326],"source":" In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`."}]}]}],"pos":[2676,3376],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.ConstructorInfo\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Reflection.ConstructorInfo\"></xref> class."}],"pos":[13576,13672],"yaml":true},{"content":"Represents the name of the class constructor method as it is stored in metadata. This name is always \".ctor\". This field is read-only.","nodes":[{"pos":[0,134],"content":"Represents the name of the class constructor method as it is stored in metadata. This name is always \".ctor\". This field is read-only.","nodes":[{"content":"Represents the name of the class constructor method as it is stored in metadata. This name is always \".ctor\". This field is read-only.","pos":[0,134],"nodes":[{"content":"Represents the name of the class constructor method as it is stored in metadata.","pos":[0,80]},{"content":"This name is always \".ctor\".","pos":[81,109]},{"content":"This field is read-only.","pos":[110,134]}]}]}],"pos":[15008,15143],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"pos":[0,84],"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]}],"pos":[16985,17070],"yaml":true},{"content":"An object to compare with this instance, or `null`.","nodes":[{"pos":[0,51],"content":"An object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance, or `null`."}],"pos":[17210,17262],"yaml":true},{"content":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals the type and value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`."}],"pos":[17320,17413],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[19005,19046],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[19180,19215],"yaml":true},{"content":"Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","nodes":[{"pos":[0,147],"content":"Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","nodes":[{"content":"Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.","pos":[0,147]}]}],"pos":[20857,21005],"yaml":true},{"content":"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance. Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.  \n  \n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \n  \n> [!NOTE]\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \n  \n This method is a convenience method for the following overloaded version, using default values. This method cannot be overridden.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \n>   \n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,309],"content":"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance. Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.","nodes":[{"content":"The number, type, and order of elements in the <ph id=\"ph1\">`parameters`</ph> array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","pos":[0,178],"source":"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance."},{"content":"Before calling the constructor, <ph id=\"ph1\">`Invoke`</ph> ensures that the caller has access permission and verifies that the parameters are valid.","pos":[179,309],"source":" Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid."}]},{"pos":[316,515],"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","nodes":[{"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","pos":[0,199],"nodes":[{"content":"Access restrictions are ignored for fully trusted code.","pos":[0,55]},{"content":"That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","pos":[56,199]}]}]},{"pos":[523,664],"content":"[!NOTE]\n To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.","leadings":["","> "],"nodes":[{"content":"To create an instance of a value type that has no instance constructors, use the <ph id=\"ph1\">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.","pos":[9,139],"source":" To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method."}]},{"pos":[671,800],"content":"This method is a convenience method for the following overloaded version, using default values. This method cannot be overridden.","nodes":[{"content":"This method is a convenience method for the following overloaded version, using default values. This method cannot be overridden.","pos":[0,129],"nodes":[{"content":"This method is a convenience method for the following overloaded version, using default values.","pos":[0,95]},{"content":"This method cannot be overridden.","pos":[96,129]}]}]},{"pos":[808,1378],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","pos":[8,568],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access non-public members if the caller has been granted <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof.","pos":[1,429],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Considerations for Reflection<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)","pos":[430,560],"source":" (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)"}]}]},{"pos":[1389,1516],"content":"To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","source":"To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}],"pos":[21016,22547],"yaml":true,"extradata":"MT"},{"content":"An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or `null`, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,559],"content":"An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or `null`, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.","pos":[0,144]},{"content":"If this constructor takes no parameters, then use either an array with zero elements or <ph id=\"ph1\">`null`</ph>, as in Object[] parameters = new Object[0].","pos":[145,283],"source":" If this constructor takes no parameters, then use either an array with zero elements or `null`, as in Object[] parameters = new Object[0]."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[284,409]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[410,460],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[461,559],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[22698,23258],"yaml":true},{"content":"An instance of the class associated with the constructor.","nodes":[{"pos":[0,57],"content":"An instance of the class associated with the constructor.","nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]}],"pos":[23315,23373],"yaml":true},{"content":"The class is abstract.  \n  \n -or-  \n  \n The constructor is a class initializer.","nodes":[{"pos":[0,22],"content":"The class is abstract.","nodes":[{"content":"The class is abstract.","pos":[0,22]}]},{"pos":[29,33],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[40,79],"content":"The constructor is a class initializer.","nodes":[{"content":"The constructor is a class initializer.","pos":[0,39]}]}],"pos":[23543,23629],"yaml":true},{"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>.","nodes":[{"pos":[0,349],"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead.","nodes":[{"content":"In the <bpt id=\"p1\">[</bpt>.NET for Windows Store apps<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id=\"p2\">[</bpt>Portable Class Library<ept id=\"p2\">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph>, instead.","pos":[47,349],"source":" In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead."}]},{"pos":[355,372],"content":"</p>\n    </block>","nodes":[]},{"pos":[379,528],"content":"The constructor is private or protected, and the caller lacks <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"&gt;&lt;/xref&gt;</ph>.","source":"The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>."}],"pos":[23731,24277],"yaml":true},{"content":"The <code>parameters</code> array does not contain values that match the types accepted by this constructor.","nodes":[{"pos":[0,108],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parameters</ph><ept id=\"p1\">&lt;/code&gt;</ept> array does not contain values that match the types accepted by this constructor.","source":"The <code>parameters</code> array does not contain values that match the types accepted by this constructor."}],"pos":[24371,24480],"yaml":true},{"content":"The invoked constructor throws an exception.","nodes":[{"pos":[0,44],"content":"The invoked constructor throws an exception.","nodes":[{"content":"The invoked constructor throws an exception.","pos":[0,44]}]}],"pos":[24612,24657],"yaml":true},{"content":"An incorrect number of parameters was passed.","nodes":[{"pos":[0,45],"content":"An incorrect number of parameters was passed.","nodes":[{"content":"An incorrect number of parameters was passed.","pos":[0,45]}]}],"pos":[24797,24843],"yaml":true},{"content":"Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported.","nodes":[{"pos":[0,174],"content":"Creation of <ph id=\"ph1\">&lt;xref href=\"System.TypedReference\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.ArgIterator\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.RuntimeArgumentHandle\"&gt;&lt;/xref&gt;</ph> types is not supported.","source":"Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported."}],"pos":[24945,25120],"yaml":true},{"content":"The caller does not have the necessary code access permission.","nodes":[{"pos":[0,62],"content":"The caller does not have the necessary code access permission.","nodes":[{"content":"The caller does not have the necessary code access permission.","pos":[0,62]}]}],"pos":[25232,25295],"yaml":true},{"content":"When implemented in a derived class, invokes the constructor reflected by this `ConstructorInfo` with the specified arguments, under the constraints of the specified `Binder`.","nodes":[{"pos":[0,175],"content":"When implemented in a derived class, invokes the constructor reflected by this <ph id=\"ph1\">`ConstructorInfo`</ph> with the specified arguments, under the constraints of the specified <ph id=\"ph2\">`Binder`</ph>.","source":"When implemented in a derived class, invokes the constructor reflected by this `ConstructorInfo` with the specified arguments, under the constraints of the specified `Binder`."}],"pos":[27228,27404],"yaml":true},{"content":"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.  \n  \n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \n  \n> [!NOTE]\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \n>   \n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,178],"content":"The number, type, and order of elements in the <ph id=\"ph1\">`parameters`</ph> array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","source":"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance."},{"pos":[185,338],"content":"Before calling the constructor, <ph id=\"ph1\">`Invoke`</ph> ensures that the caller has access permission and that the parameters are of the correct number, order and type.","source":"Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type."},{"pos":[345,544],"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","nodes":[{"content":"Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","pos":[0,199],"nodes":[{"content":"Access restrictions are ignored for fully trusted code.","pos":[0,55]},{"content":"That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.","pos":[56,199]}]}]},{"pos":[552,693],"content":"[!NOTE]\n To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.","leadings":["","> "],"nodes":[{"content":"To create an instance of a value type that has no instance constructors, use the <ph id=\"ph1\">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.","pos":[9,139],"source":" To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method."}]},{"pos":[701,1271],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","pos":[8,568],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access non-public members if the caller has been granted <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof.","pos":[1,429],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Considerations for Reflection<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)","pos":[430,560],"source":" (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)"}]}]},{"pos":[1282,1409],"content":"To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","source":"To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}],"pos":[27415,28839],"yaml":true,"extradata":"MT"},{"content":"One of the `BindingFlags` values that specifies the type of binding.","nodes":[{"pos":[0,68],"content":"One of the <ph id=\"ph1\">`BindingFlags`</ph> values that specifies the type of binding.","source":"One of the `BindingFlags` values that specifies the type of binding."}],"pos":[29132,29201],"yaml":true},{"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.","nodes":[{"pos":[0,212],"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.","nodes":[{"content":"A <ph id=\"ph1\">`Binder`</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,140],"source":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, then <ph id=\"ph3\">`Binder.DefaultBinding`</ph> is used.","pos":[141,212],"source":" If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used."}]}],"pos":[29274,29487],"yaml":true},{"content":"An array of type `Object` used to match the number, order and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,554],"content":"An array of type `Object` used to match the number, order and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of type <ph id=\"ph1\">`Object`</ph> used to match the number, order and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,152],"source":"An array of type `Object` used to match the number, order and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].","pos":[153,278]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[279,404]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[405,455],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[456,554],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[29555,30110],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,202],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,93],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"If this is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[94,202],"source":" If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[30192,30395],"yaml":true},{"content":"An instance of the class associated with the constructor.","nodes":[{"pos":[0,57],"content":"An instance of the class associated with the constructor.","nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]}],"pos":[30452,30510],"yaml":true},{"content":"The <code>parameters</code> array does not contain values that match the types accepted by this constructor, under the constraints of the <code>binder</code>.","nodes":[{"pos":[0,158],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parameters</ph><ept id=\"p1\">&lt;/code&gt;</ept> array does not contain values that match the types accepted by this constructor, under the constraints of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">binder</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>parameters</code> array does not contain values that match the types accepted by this constructor, under the constraints of the <code>binder</code>."}],"pos":[30672,30831],"yaml":true},{"content":"The invoked constructor throws an exception.","nodes":[{"pos":[0,44],"content":"The invoked constructor throws an exception.","nodes":[{"content":"The invoked constructor throws an exception.","pos":[0,44]}]}],"pos":[30963,31008],"yaml":true},{"content":"An incorrect number of parameters was passed.","nodes":[{"pos":[0,45],"content":"An incorrect number of parameters was passed.","nodes":[{"content":"An incorrect number of parameters was passed.","pos":[0,45]}]}],"pos":[31148,31194],"yaml":true},{"content":"Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported.","nodes":[{"pos":[0,174],"content":"Creation of <ph id=\"ph1\">&lt;xref href=\"System.TypedReference\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.ArgIterator\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.RuntimeArgumentHandle\"&gt;&lt;/xref&gt;</ph> types is not supported.","source":"Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported."}],"pos":[31296,31471],"yaml":true},{"content":"The caller does not have the necessary code access permissions.","nodes":[{"pos":[0,63],"content":"The caller does not have the necessary code access permissions.","nodes":[{"content":"The caller does not have the necessary code access permissions.","pos":[0,63]}]}],"pos":[31583,31647],"yaml":true},{"content":"The class is abstract.  \n  \n -or-  \n  \n The constructor is a class initializer.","nodes":[{"pos":[0,22],"content":"The class is abstract.","nodes":[{"content":"The class is abstract.","pos":[0,22]}]},{"pos":[29,33],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[40,79],"content":"The constructor is a class initializer.","nodes":[{"content":"The constructor is a class initializer.","pos":[0,39]}]}],"pos":[31749,31835],"yaml":true},{"content":"The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>.","nodes":[{"pos":[0,149],"content":"The constructor is private or protected, and the caller lacks <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"&gt;&lt;/xref&gt;</ph>.","source":"The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>."}],"pos":[31937,32087],"yaml":true},{"content":"Gets a <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor.","nodes":[{"pos":[0,109],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> value indicating that this member is a constructor.","source":"Gets a <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor."}],"pos":[33254,33364],"yaml":true},{"content":"This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>. Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects â€” for example, the array returned by <xref:System.Type.GetMembers%2A> â€” the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.","nodes":[{"pos":[0,390],"content":"This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>. Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects â€” for example, the array returned by <xref:System.Type.GetMembers%2A> â€” the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.","nodes":[{"content":"This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>. Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects â€” for example, the array returned by <xref:System.Type.GetMembers%2A> â€” the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.","pos":[0,390],"nodes":[{"content":"This property overrides <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph>.","pos":[0,74],"source":"This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>."},{"content":"Therefore, when you examine a set of <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects â€” for example, the array returned by <ph id=\"ph2\">&lt;xref:System.Type.GetMembers%2A&gt;</ph> â€” the <ph id=\"ph3\">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property returns <ph id=\"ph4\">&lt;xref:System.Reflection.MemberTypes.Constructor&gt;</ph> only when a given member is a constructor.","pos":[75,390],"source":" Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects â€” for example, the array returned by <xref:System.Type.GetMembers%2A> â€” the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor."}]}]}],"pos":[33375,33766],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> value indicating that this member is a constructor.","source":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor."}],"pos":[34670,34775],"yaml":true},{"content":"Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are equal.","nodes":[{"pos":[0,95],"content":"Indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are equal."}],"pos":[36529,36625],"yaml":true},{"content":"The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.","nodes":[{"pos":[0,76],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare."}],"pos":[36858,36935],"yaml":true},{"content":"The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.","nodes":[{"pos":[0,77],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare."}],"pos":[37016,37094],"yaml":true},{"content":"`true` if <code>left</code> is equal to <code>right</code>; otherwise `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>left</code> is equal to <code>right</code>; otherwise `false`."}],"pos":[37152,37233],"yaml":true},{"content":"Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are not equal.","nodes":[{"pos":[0,99],"content":"Indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> objects are not equal.","source":"Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are not equal."}],"pos":[38781,38881],"yaml":true},{"content":"The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.","nodes":[{"pos":[0,76],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare."}],"pos":[39116,39193],"yaml":true},{"content":"The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.","nodes":[{"pos":[0,77],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare."}],"pos":[39274,39352],"yaml":true},{"content":"`true` if <code>left</code> is not equal to <code>right</code>; otherwise `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>left</code> is not equal to <code>right</code>; otherwise `false`."}],"pos":[39410,39495],"yaml":true},{"content":"Represents the name of the type constructor method as it is stored in metadata. This name is always \".cctor\". This property is read-only.","nodes":[{"pos":[0,137],"content":"Represents the name of the type constructor method as it is stored in metadata. This name is always \".cctor\". This property is read-only.","nodes":[{"content":"Represents the name of the type constructor method as it is stored in metadata. This name is always \".cctor\". This property is read-only.","pos":[0,137],"nodes":[{"content":"Represents the name of the type constructor method as it is stored in metadata.","pos":[0,79]},{"content":"This name is always \".cctor\".","pos":[80,109]},{"content":"This property is read-only.","pos":[110,137]}]}]}],"pos":[40791,40929],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[43224,43292],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[43303,43490],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[43699,43742],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[43807,43846],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[43908,43941],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[44001,44053],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[44117,44191],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[44420,44503],"yaml":true},{"content":"Gets a <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type.","nodes":[{"pos":[0,124],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> type.","source":"Gets a <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type."}],"pos":[45650,45775],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> type.","source":"A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type."}],"pos":[45906,46026],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[47512,47627],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[47638,47823],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[48000,48032],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[48092,48140],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[48203,48264],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[48491,48574],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[49841,49934],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[49945,50135],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[50296,50397],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[50629,50712],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[52363,52427],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[52438,52618],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[52890,52913],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[52971,53014],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[53074,53126],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[53187,53229],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[53296,53456],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[53522,53580],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[53646,53706],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[53770,53821],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[54043,54126],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,244],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method."}],"pos":[55792,56037],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ConstructorInfo&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface."}]}]}],"pos":[56048,56267],"yaml":true,"extradata":"MT"},{"content":"The instance that created this method.","nodes":[{"pos":[0,38],"content":"The instance that created this method.","nodes":[{"content":"The instance that created this method.","pos":[0,38]}]}],"pos":[56551,56590],"yaml":true},{"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding.","nodes":[{"pos":[0,105],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the type of binding.","source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding."}],"pos":[56673,56779],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.","nodes":[{"pos":[0,272],"content":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,177],"source":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, then <ph id=\"ph3\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph> is used.","pos":[178,272],"source":" If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used."}]}],"pos":[56852,57125],"yaml":true},{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,506],"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,147],"source":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements.","pos":[148,230]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[231,356]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[357,407],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[408,506],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[57193,57700],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,202],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,93],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"If this is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[94,202],"source":" If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[57782,57985],"yaml":true},{"content":"An instance of the type.","nodes":[{"pos":[0,24],"content":"An instance of the type.","nodes":[{"content":"An instance of the type.","pos":[0,24]}]}],"pos":[58042,58067],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method."}],"pos":[59482,59638],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ConstructorInfo&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface."}]}]}],"pos":[59649,59868],"yaml":true,"extradata":"MT"},{"content":"The instance that created this method.","nodes":[{"pos":[0,38],"content":"The instance that created this method.","nodes":[{"content":"The instance that created this method.","pos":[0,38]}]}],"pos":[60034,60073],"yaml":true},{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,506],"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,147],"source":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements.","pos":[148,230]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[231,356]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[357,407],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[408,506],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[60141,60648],"yaml":true},{"content":"An instance of the type.","nodes":[{"pos":[0,24],"content":"An instance of the type.","nodes":[{"content":"An instance of the type.","pos":[0,24]}]}],"pos":[60705,60730],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,235],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method."}],"pos":[62451,62687],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ConstructorInfo&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface."}]}]}],"pos":[62698,62917],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding.","nodes":[{"pos":[0,105],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the type of binding.","source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding."}],"pos":[63213,63319],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.","nodes":[{"pos":[0,272],"content":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,177],"source":"A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, then <ph id=\"ph3\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph> is used.","pos":[178,272],"source":" If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used."}]}],"pos":[63392,63665],"yaml":true},{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,506],"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,147],"source":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements.","pos":[148,230]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[231,356]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[357,407],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[408,506],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[63733,64240],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,202],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,93],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"If this is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[94,202],"source":" If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[64322,64525],"yaml":true},{"content":"An instance of the type.","nodes":[{"pos":[0,24],"content":"An instance of the type.","nodes":[{"content":"An instance of the type.","pos":[0,24]}]}],"pos":[64582,64607],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Object[])\"></xref> method.","nodes":[{"pos":[0,146],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Object[])\"></xref> method."}],"pos":[65956,66103],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ConstructorInfo&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface."}]}]}],"pos":[66114,66333],"yaml":true,"extradata":"MT"},{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,506],"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,147],"source":"An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements.","pos":[148,230]},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[231,356]},{"content":"For reference-type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[357,407],"source":" For reference-type elements, this value is `null`."},{"content":"For value-type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[408,506],"source":" For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[66496,67003],"yaml":true},{"content":"An instance of the type.","nodes":[{"pos":[0,24],"content":"An instance of the type.","nodes":[{"content":"An instance of the type.","pos":[0,24]}]}],"pos":[67060,67085],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n  id: ConstructorInfo\n  children:\n  - System.Reflection.ConstructorInfo.#ctor\n  - System.Reflection.ConstructorInfo.ConstructorName\n  - System.Reflection.ConstructorInfo.Equals(System.Object)\n  - System.Reflection.ConstructorInfo.GetHashCode\n  - System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  - System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.ConstructorInfo.MemberType\n  - System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  - System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  - System.Reflection.ConstructorInfo.TypeConstructorName\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  langs:\n  - csharp\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  type: Class\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Discovers the attributes of a class constructor and provides access to constructor metadata.\n  remarks: \"`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor. Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.  \\n  \\n> [!NOTE]\\n>  <xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods. In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.\"\n  example:\n  - \"The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.  \\n  \\n [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]\\n [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]\\n [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  derivedClasses:\n  - Microsoft.JScript.JSConstructor\n  - System.Reflection.Emit.ConstructorBuilder\n  implements:\n  - System.Runtime.InteropServices._ConstructorInfo\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.Attributes\n  - System.Reflection.MethodBase.CallingConvention\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetGenericArguments\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.GetMethodImplementationFlags\n  - System.Reflection.MethodBase.GetParameters\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsSecurityCritical\n  - System.Reflection.MethodBase.IsSecuritySafeCritical\n  - System.Reflection.MethodBase.IsSecurityTransparent\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.MethodHandle\n  - System.Reflection.MethodBase.MethodImplementationFlags\n  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.#ctor\n  commentId: M:System.Reflection.ConstructorInfo.#ctor\n  id: '#ctor'\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: ConstructorInfo()\n  nameWithType: ConstructorInfo.ConstructorInfo()\n  fullName: ConstructorInfo.ConstructorInfo()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.ConstructorInfo\"></xref> class.\n  syntax:\n    content: protected ConstructorInfo ();\n    parameters: []\n  overload: System.Reflection.ConstructorInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.ConstructorName\n  commentId: F:System.Reflection.ConstructorInfo.ConstructorName\n  id: ConstructorName\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: ConstructorName\n  nameWithType: ConstructorInfo.ConstructorName\n  fullName: ConstructorInfo.ConstructorName\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents the name of the class constructor method as it is stored in metadata. This name is always \".ctor\". This field is read-only.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static readonly string ConstructorName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.Equals(System.Object)\n  commentId: M:System.Reflection.ConstructorInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ConstructorInfo.Equals(Object)\n  fullName: ConstructorInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'\n  overload: System.Reflection.ConstructorInfo.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.GetHashCode\n  commentId: M:System.Reflection.ConstructorInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ConstructorInfo.GetHashCode()\n  fullName: ConstructorInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Reflection.ConstructorInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  commentId: M:System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  id: Invoke(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke(Object[])\n  nameWithType: ConstructorInfo.Invoke(Object[])\n  fullName: ConstructorInfo.Invoke(Object[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.\n  remarks: \"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance. Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.  \\n  \\n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \\n  \\n> [!NOTE]\\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \\n  \\n This method is a convenience method for the following overloaded version, using default values. This method cannot be overridden.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \\n>   \\n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public object Invoke (object[] parameters);\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or `null`, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Reflection.ConstructorInfo.Invoke*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"The class is abstract.  \\n  \\n -or-  \\n  \\n The constructor is a class initializer.\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"<block subset=\\\"none\\\" type=\\\"note\\\">\\n      <p>  \\n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\\\"System.MemberAccessException\\\"></xref>, instead.  \\n  \\n</p>\\n    </block>  \\n  \\n The constructor is private or protected, and the caller lacks <xref href=\\\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>parameters</code> array does not contain values that match the types accepted by this constructor.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The invoked constructor throws an exception.\n  - type: System.Reflection.TargetParameterCountException\n    commentId: T:System.Reflection.TargetParameterCountException\n    description: An incorrect number of parameters was passed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the necessary code access permission.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: When implemented in a derived class, invokes the constructor reflected by this `ConstructorInfo` with the specified arguments, under the constraints of the specified `Binder`.\n  remarks: \"The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \\n  \\n Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.  \\n  \\n Access restrictions are ignored for fully trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.  \\n  \\n> [!NOTE]\\n>  To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the callerâ€™s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \\n>   \\n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the `BindingFlags` values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of type `Object` used to match the number, order and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Reflection.ConstructorInfo.Invoke*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>parameters</code> array does not contain values that match the types accepted by this constructor, under the constraints of the <code>binder</code>.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The invoked constructor throws an exception.\n  - type: System.Reflection.TargetParameterCountException\n    commentId: T:System.Reflection.TargetParameterCountException\n    description: An incorrect number of parameters was passed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Creation of <xref href=\"System.TypedReference\"></xref>, <xref href=\"System.ArgIterator\"></xref>, and <xref href=\"System.RuntimeArgumentHandle\"></xref> types is not supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the necessary code access permissions.\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"The class is abstract.  \\n  \\n -or-  \\n  \\n The constructor is a class initializer.\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: The constructor is private or protected, and the caller lacks <xref href=\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.MemberType\n  commentId: P:System.Reflection.ConstructorInfo.MemberType\n  id: MemberType\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: ConstructorInfo.MemberType\n  fullName: ConstructorInfo.MemberType\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor.\n  remarks: This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>. Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects â€” for example, the array returned by <xref:System.Type.GetMembers%2A> â€” the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.\n  example:\n  - \"The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.  \\n  \\n [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]\\n [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public override System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a constructor.\n  overload: System.Reflection.ConstructorInfo.MemberType*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  commentId: M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  id: op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: op_Equality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are equal.\n  syntax:\n    content: public static bool op_Equality (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);\n    parameters:\n    - id: left\n      type: System.Reflection.ConstructorInfo\n      description: The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.\n    - id: right\n      type: System.Reflection.ConstructorInfo\n      description: The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> is equal to <code>right</code>; otherwise `false`.'\n  overload: System.Reflection.ConstructorInfo.op_Equality*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  commentId: M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  id: op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: op_Inequality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Indicates whether two <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);\n    parameters:\n    - id: left\n      type: System.Reflection.ConstructorInfo\n      description: The first <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.\n    - id: right\n      type: System.Reflection.ConstructorInfo\n      description: The second <xref href=\"System.Reflection.ConstructorInfo\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> is not equal to <code>right</code>; otherwise `false`.'\n  overload: System.Reflection.ConstructorInfo.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.TypeConstructorName\n  commentId: F:System.Reflection.ConstructorInfo.TypeConstructorName\n  id: TypeConstructorName\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: TypeConstructorName\n  nameWithType: ConstructorInfo.TypeConstructorName\n  fullName: ConstructorInfo.TypeConstructorName\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents the name of the type constructor method as it is stored in metadata. This name is always \".cctor\". This property is read-only.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static readonly string TypeConstructorName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  id: System#Runtime#InteropServices#_ConstructorInfo#GetType\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.GetType()\n  nameWithType: ConstructorInfo._ConstructorInfo.GetType()\n  fullName: ConstructorInfo._ConstructorInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Gets a <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type.\n  syntax:\n    content: Type _ConstructorInfo.GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the <xref href=\"System.Reflection.ConstructorInfo\"></xref> type.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.GetTypeInfoCount(UInt32)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.\n  syntax:\n    content: object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the type.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.Invoke_3(Object, Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.\n  syntax:\n    content: object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    return:\n      type: System.Object\n      description: An instance of the type.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.\n  syntax:\n    content: object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A <xref href=\"System.Reflection.Binder\"></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then <xref href=\"System.Type.DefaultBinder\"></xref> is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the type.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  commentId: M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  id: System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  isEii: true\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  name: _ConstructorInfo.Invoke_5(Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Object[])\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.\n  syntax:\n    content: object _ConstructorInfo.Invoke_5 (object[] parameters);\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is `null`. For value-type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    return:\n      type: System.Object\n      description: An instance of the type.\n  overload: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  nameWithType: MemberAccessException\n  fullName: System.MemberAccessException\n- uid: System.MethodAccessException\n  parent: System\n  isExternal: false\n  name: MethodAccessException\n  nameWithType: MethodAccessException\n  fullName: System.MethodAccessException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Reflection.TargetInvocationException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetInvocationException\n  nameWithType: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n- uid: System.Reflection.TargetParameterCountException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetParameterCountException\n  nameWithType: TargetParameterCountException\n  fullName: System.Reflection.TargetParameterCountException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.ConstructorInfo.#ctor\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: ConstructorInfo()\n  nameWithType: ConstructorInfo.ConstructorInfo()\n  fullName: ConstructorInfo.ConstructorInfo()\n- uid: System.Reflection.ConstructorInfo.ConstructorName\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: ConstructorName\n  nameWithType: ConstructorInfo.ConstructorName\n  fullName: ConstructorInfo.ConstructorName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ConstructorInfo.Equals(System.Object)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConstructorInfo.Equals(Object)\n  fullName: ConstructorInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.ConstructorInfo.GetHashCode\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConstructorInfo.GetHashCode()\n  fullName: ConstructorInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Invoke(Object[])\n  nameWithType: ConstructorInfo.Invoke(Object[])\n  fullName: ConstructorInfo.Invoke(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.ConstructorInfo.MemberType\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: ConstructorInfo.MemberType\n  fullName: ConstructorInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Equality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Inequality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n- uid: System.Reflection.ConstructorInfo.TypeConstructorName\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: TypeConstructorName\n  nameWithType: ConstructorInfo.TypeConstructorName\n  fullName: ConstructorInfo.TypeConstructorName\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetType()\n  nameWithType: ConstructorInfo._ConstructorInfo.GetType()\n  fullName: ConstructorInfo._ConstructorInfo.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetTypeInfoCount(UInt32)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_3(Object, Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_5(Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n- uid: System.Reflection.ConstructorInfo.#ctor*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo.ConstructorInfo\n  fullName: ConstructorInfo.ConstructorInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.Equals*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Equals\n  nameWithType: ConstructorInfo.Equals\n  fullName: ConstructorInfo.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.GetHashCode*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ConstructorInfo.GetHashCode\n  fullName: ConstructorInfo.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.Invoke*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: ConstructorInfo.Invoke\n  fullName: ConstructorInfo.Invoke\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.MemberType*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: ConstructorInfo.MemberType\n  fullName: ConstructorInfo.MemberType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.op_Equality*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Equality\n  nameWithType: ConstructorInfo.op_Equality\n  fullName: ConstructorInfo.op_Equality\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.op_Inequality*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ConstructorInfo.op_Inequality\n  fullName: ConstructorInfo.op_Inequality\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.GetType\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetType\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.Invoke\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_2\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_2\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_3\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_3\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_3\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_4\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_4\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_4\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5*\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorInfo.Invoke_5\n  nameWithType: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_5\n  fullName: ConstructorInfo.System.Runtime.InteropServices._ConstructorInfo.Invoke_5\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ConstructorInfo.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  fullName: MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.DeclaringType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MemberInfo.DeclaringType\n  fullName: MemberInfo.DeclaringType\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  fullName: MemberInfo.GetCustomAttributesData()\n- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.IsDefined(Type, Boolean)\n  fullName: MemberInfo.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  fullName: MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  nameWithType: MemberInfo.Module\n  fullName: MemberInfo.Module\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  nameWithType: MemberInfo.Name\n  fullName: MemberInfo.Name\n- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Equality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Inequality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.ReflectedType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: MemberInfo.ReflectedType\n  fullName: MemberInfo.ReflectedType\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetType()\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  fullName: MemberInfo._MemberInfo.GetType()\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.MethodBase.Attributes\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Attributes\n  nameWithType: MethodBase.Attributes\n  fullName: MethodBase.Attributes\n- uid: System.Reflection.MethodBase.CallingConvention\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  fullName: MethodBase.CallingConvention\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  fullName: MethodBase.ContainsGenericParameters\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetCurrentMethod()\n  nameWithType: MethodBase.GetCurrentMethod()\n  fullName: MethodBase.GetCurrentMethod()\n- uid: System.Reflection.MethodBase.GetGenericArguments\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetGenericArguments()\n  nameWithType: MethodBase.GetGenericArguments()\n  fullName: MethodBase.GetGenericArguments()\n- uid: System.Reflection.MethodBase.GetMethodBody\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodBody()\n  nameWithType: MethodBase.GetMethodBody()\n  fullName: MethodBase.GetMethodBody()\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  fullName: MethodBase.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodBase.GetParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetParameters()\n  nameWithType: MethodBase.GetParameters()\n  fullName: MethodBase.GetParameters()\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Invoke(Object, Object[])\n  nameWithType: MethodBase.Invoke(Object, Object[])\n  fullName: MethodBase.Invoke(Object, Object[])\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  fullName: MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  fullName: MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  fullName: MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  nameWithType: MethodBase.IsFamily\n  fullName: MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  fullName: MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  fullName: MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  nameWithType: MethodBase.IsFinal\n  fullName: MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  fullName: MethodBase.IsGenericMethod\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  fullName: MethodBase.IsGenericMethodDefinition\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  fullName: MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  fullName: MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  nameWithType: MethodBase.IsPublic\n  fullName: MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  fullName: MethodBase.IsSecurityCritical\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  fullName: MethodBase.IsSecuritySafeCritical\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  fullName: MethodBase.IsSecurityTransparent\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  fullName: MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  nameWithType: MethodBase.IsStatic\n  fullName: MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  fullName: MethodBase.IsVirtual\n- uid: System.Reflection.MethodBase.MethodHandle\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodHandle\n  nameWithType: MethodBase.MethodHandle\n  fullName: MethodBase.MethodHandle\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  fullName: MethodBase.MethodImplementationFlags\n- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Equality(MethodBase, MethodBase)\n  nameWithType: MethodBase.op_Equality(MethodBase, MethodBase)\n  fullName: MethodBase.op_Equality(MethodBase, MethodBase)\n- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Inequality(MethodBase, MethodBase)\n  nameWithType: MethodBase.op_Inequality(MethodBase, MethodBase)\n  fullName: MethodBase.op_Inequality(MethodBase, MethodBase)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetType()\n  nameWithType: MethodBase._MethodBase.GetType()\n  fullName: MethodBase._MethodBase.GetType()\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n  fullName: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsAbstract\n  nameWithType: MethodBase._MethodBase.IsAbstract\n  fullName: MethodBase._MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsAssembly\n  nameWithType: MethodBase._MethodBase.IsAssembly\n  fullName: MethodBase._MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsConstructor\n  nameWithType: MethodBase._MethodBase.IsConstructor\n  fullName: MethodBase._MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamily\n  nameWithType: MethodBase._MethodBase.IsFamily\n  fullName: MethodBase._MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly\n  fullName: MethodBase._MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly\n  fullName: MethodBase._MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFinal\n  nameWithType: MethodBase._MethodBase.IsFinal\n  fullName: MethodBase._MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsHideBySig\n  nameWithType: MethodBase._MethodBase.IsHideBySig\n  fullName: MethodBase._MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsPrivate\n  nameWithType: MethodBase._MethodBase.IsPrivate\n  fullName: MethodBase._MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsPublic\n  nameWithType: MethodBase._MethodBase.IsPublic\n  fullName: MethodBase._MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsSpecialName\n  nameWithType: MethodBase._MethodBase.IsSpecialName\n  fullName: MethodBase._MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsStatic\n  nameWithType: MethodBase._MethodBase.IsStatic\n  fullName: MethodBase._MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsVirtual\n  nameWithType: MethodBase._MethodBase.IsVirtual\n  fullName: MethodBase._MethodBase.IsVirtual\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: GetMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: HasMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n- uid: System.Runtime.InteropServices._ConstructorInfo\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _ConstructorInfo\n  nameWithType: _ConstructorInfo\n  fullName: System.Runtime.InteropServices._ConstructorInfo\n"}