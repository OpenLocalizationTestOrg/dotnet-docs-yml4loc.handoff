{"nodes":[{"content":"Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.","nodes":[{"pos":[0,174],"content":"Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.","nodes":[{"content":"Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.","pos":[0,174],"nodes":[{"content":"Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches.","pos":[0,142]},{"content":"This class cannot be inherited.","pos":[143,174]}]}]}],"pos":[882,1057],"yaml":true},{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.  \n  \n Like any code group, <xref:System.Security.Policy.FirstMatchCodeGroup> only applies when its membership condition matches evidence for an assembly. If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs. The result of <xref:System.Security.Policy.FirstMatchCodeGroup> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.  \n  \n <xref:System.Security.Policy.FirstMatchCodeGroup> is intended for programmatic use by application domain hosts to set domain policy.","nodes":[{"pos":[0,515],"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","nodes":[{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","pos":[0,515],"nodes":[{"content":"Code groups are the building blocks of code access security policy.","pos":[0,67]},{"content":"Each policy level consists of a root code group that can have child code groups.","pos":[68,148]},{"content":"Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.","pos":[149,271]},{"content":"Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.","pos":[272,405]},{"content":"Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","pos":[406,515]}]}]},{"pos":[522,993],"content":"Like any code group, <xref:System.Security.Policy.FirstMatchCodeGroup> only applies when its membership condition matches evidence for an assembly. If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs. The result of <xref:System.Security.Policy.FirstMatchCodeGroup> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.","nodes":[{"content":"Like any code group, <xref:System.Security.Policy.FirstMatchCodeGroup> only applies when its membership condition matches evidence for an assembly. If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs. The result of <xref:System.Security.Policy.FirstMatchCodeGroup> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.","pos":[0,471],"nodes":[{"content":"Like any code group, <ph id=\"ph1\">&lt;xref:System.Security.Policy.FirstMatchCodeGroup&gt;</ph> only applies when its membership condition matches evidence for an assembly.","pos":[0,147],"source":"Like any code group, <xref:System.Security.Policy.FirstMatchCodeGroup> only applies when its membership condition matches evidence for an assembly."},{"content":"If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs.","pos":[148,264]},{"content":"The result of <ph id=\"ph1\">&lt;xref:System.Security.Policy.FirstMatchCodeGroup&gt;</ph> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.","pos":[265,471],"source":" The result of <xref:System.Security.Policy.FirstMatchCodeGroup> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches."}]}]},{"pos":[1000,1132],"content":"<xref:System.Security.Policy.FirstMatchCodeGroup> is intended for programmatic use by application domain hosts to set domain policy.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FirstMatchCodeGroup&gt;</ph> is intended for programmatic use by application domain hosts to set domain policy.","pos":[0,132],"source":"<xref:System.Security.Policy.FirstMatchCodeGroup> is intended for programmatic use by application domain hosts to set domain policy."}]}],"pos":[1068,2207],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.FirstMatchCodeGroup\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.FirstMatchCodeGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.FirstMatchCodeGroup\"></xref> class."}],"pos":[6221,6326],"yaml":true},{"content":"This constructor creates a basic code group and should be called from the constructors of custom code groups. Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.","nodes":[{"pos":[0,210],"content":"This constructor creates a basic code group and should be called from the constructors of custom code groups. Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.","nodes":[{"content":"This constructor creates a basic code group and should be called from the constructors of custom code groups. Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.","pos":[0,210],"nodes":[{"content":"This constructor creates a basic code group and should be called from the constructors of custom code groups.","pos":[0,109]},{"content":"Child code groups can be added using the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.","pos":[110,210],"source":" Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method."}]}]}],"pos":[6337,6548],"yaml":true,"extradata":"MT"},{"content":"A membership condition that tests evidence to determine whether this code group applies policy.","nodes":[{"pos":[0,95],"content":"A membership condition that tests evidence to determine whether this code group applies policy.","nodes":[{"content":"A membership condition that tests evidence to determine whether this code group applies policy.","pos":[0,95]}]}],"pos":[7621,7717],"yaml":true},{"content":"The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.","nodes":[{"pos":[0,139],"content":"The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.","nodes":[{"content":"The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.","pos":[0,139]}]}],"pos":[7804,7944],"yaml":true},{"content":"The type of the <code>membershipCondition</code> parameter is not valid.  \n  \n -or-  \n  \n The type of the <code>policy</code> parameter is not valid.","nodes":[{"pos":[0,72],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">membershipCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The type of the <code>membershipCondition</code> parameter is not valid."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,149],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">policy</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The type of the <code>policy</code> parameter is not valid."}],"pos":[8114,8270],"yaml":true},{"content":"Makes a deep copy of the code group.","nodes":[{"pos":[0,36],"content":"Makes a deep copy of the code group.","nodes":[{"content":"Makes a deep copy of the code group.","pos":[0,36]}]}],"pos":[9386,9423],"yaml":true},{"content":"This method makes a deep copy of the code group, meaning that copies of all objects it contains are made, as well.","nodes":[{"pos":[0,114],"content":"This method makes a deep copy of the code group, meaning that copies of all objects it contains are made, as well.","nodes":[{"content":"This method makes a deep copy of the code group, meaning that copies of all objects it contains are made, as well.","pos":[0,114]}]}],"pos":[9434,9549],"yaml":true,"extradata":"MT"},{"content":"An equivalent copy of the code group, including its membership conditions and child code groups.","nodes":[{"pos":[0,96],"content":"An equivalent copy of the code group, including its membership conditions and child code groups.","nodes":[{"content":"An equivalent copy of the code group, including its membership conditions and child code groups.","pos":[0,96]}]}],"pos":[10545,10642],"yaml":true},{"content":"Gets the merge logic.","nodes":[{"pos":[0,21],"content":"Gets the merge logic.","nodes":[{"content":"Gets the merge logic.","pos":[0,21]}]}],"pos":[11868,11890],"yaml":true},{"content":"The string \"First Match\".","nodes":[{"pos":[0,25],"content":"The string \"First Match\".","nodes":[{"content":"The string \"First Match\".","pos":[0,25]}]}],"pos":[12868,12894],"yaml":true},{"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"pos":[0,77],"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"content":"Resolves policy for the code group and its descendants for a set of evidence.","pos":[0,77]}]}],"pos":[14235,14313],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \n  \n For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.  \n  \n The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.  \n  \n This operation of this method is as follows:  \n  \n If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).","nodes":[{"pos":[0,279],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[0,279],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[157,279]}]}]},{"pos":[286,774],"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.","nodes":[{"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.","pos":[0,488],"nodes":[{"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set.","pos":[0,199]},{"content":"If there are no matches, the policy statement of the parent first-match code group applies.","pos":[200,291]},{"content":"The matching child code group type determines how all child groups under it are applied, depending on how the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph> methods of these child groups work.","pos":[292,488],"source":" The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work."}]}]},{"pos":[781,1022],"content":"The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.","nodes":[{"content":"The .NET Framework security system uses <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.","pos":[0,241],"source":"The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly."}]},{"pos":[1029,1073],"content":"This operation of this method is as follows:","nodes":[{"content":"This operation of this method is as follows:","pos":[0,44]}]},{"pos":[1080,1478],"content":"If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).","nodes":[{"content":"If the membership condition does not match the specified evidence, return <ph id=\"ph1\">`null`</ph>; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue.","pos":[0,191],"source":"If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue."},{"content":"For each child code group, resolve the code group with the same evidence; if the result is not <ph id=\"ph1\">`null`</ph>, return that policy statement.","pos":[192,324],"source":" For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement."},{"content":"If no child code group matched, return P (the parent's policy statement).","pos":[325,398]}]}],"pos":[14324,15813],"yaml":true,"extradata":"MT"},{"content":"The evidence for the assembly.","nodes":[{"pos":[0,30],"content":"The evidence for the assembly.","nodes":[{"content":"The evidence for the assembly.","pos":[0,30]}]}],"pos":[16871,16902],"yaml":true},{"content":"A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).","nodes":[{"pos":[0,209],"content":"A policy statement consisting of the permissions granted by the code group with optional attributes, or <ph id=\"ph1\">`null`</ph> if the code group does not apply (the membership condition does not match the specified evidence).","source":"A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence)."}],"pos":[16984,17194],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[17374,17421],"yaml":true},{"content":"More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>.","nodes":[{"pos":[0,174],"content":"More than one code group (including the parent code group and any child code groups) is marked <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"&gt;&lt;/xref&gt;</ph>.","source":"More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>."}],"pos":[17543,17718],"yaml":true},{"content":"Resolves matching code groups.","nodes":[{"pos":[0,30],"content":"Resolves matching code groups.","nodes":[{"content":"Resolves matching code groups.","pos":[0,30]}]}],"pos":[19083,19114],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.  \n  \n For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work.","nodes":[{"pos":[0,417],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","pos":[0,417],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a root code group.","pos":[157,216]},{"content":"The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","pos":[217,417]}]}]},{"pos":[424,930],"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work.","nodes":[{"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work.","pos":[0,506],"nodes":[{"content":"For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set.","pos":[0,199]},{"content":"If there are no matches, the policy statement of the parent first-match code group applies.","pos":[200,291]},{"content":"The matching child code group type determines how all child groups under it are applied, depending on how the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A&gt;</ph> methods of these child groups work.","pos":[292,506],"source":" The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work."}]}]}],"pos":[19125,20060],"yaml":true,"extradata":"MT"},{"content":"The evidence for the assembly.","nodes":[{"pos":[0,30],"content":"The evidence for the assembly.","nodes":[{"content":"The evidence for the assembly.","pos":[0,30]}]}],"pos":[21137,21168],"yaml":true},{"content":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.CodeGroup\"&gt;&lt;/xref&gt;</ph> that is the root of the tree of matching code groups.","source":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups."}],"pos":[21244,21354],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[21552,21599],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.FirstMatchCodeGroup\n  commentId: T:System.Security.Policy.FirstMatchCodeGroup\n  id: FirstMatchCodeGroup\n  children:\n  - System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  - System.Security.Policy.FirstMatchCodeGroup.Copy\n  - System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  - System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: FirstMatchCodeGroup\n  nameWithType: FirstMatchCodeGroup\n  fullName: System.Security.Policy.FirstMatchCodeGroup\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.\n  remarks: \"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.  \\n  \\n Like any code group, <xref:System.Security.Policy.FirstMatchCodeGroup> only applies when its membership condition matches evidence for an assembly. If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs. The result of <xref:System.Security.Policy.FirstMatchCodeGroup> is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.  \\n  \\n <xref:System.Security.Policy.FirstMatchCodeGroup> is intended for programmatic use by application domain hosts to set domain policy.\"\n  example:\n  - \"The following example shows the use of members of the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#1)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#1)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FirstMatchCodeGroup : System.Security.Policy.CodeGroup\n  inheritance:\n  - System.Object\n  - System.Security.Policy.CodeGroup\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.AttributeString\n  - System.Security.Policy.CodeGroup.Children\n  - System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.Description\n  - System.Security.Policy.CodeGroup.Equals(System.Object)\n  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.GetHashCode\n  - System.Security.Policy.CodeGroup.MembershipCondition\n  - System.Security.Policy.CodeGroup.Name\n  - System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.PermissionSetName\n  - System.Security.Policy.CodeGroup.PolicyStatement\n  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.ToXml\n  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  commentId: M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)'\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n  fullName: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.FirstMatchCodeGroup\"></xref> class.\n  remarks: This constructor creates a basic code group and should be called from the constructors of custom code groups. Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FirstMatchCodeGroup.%23ctor%2A> constructor. This code example is part of a larger example provided for <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#2)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#2)]\"\n  syntax:\n    content: public FirstMatchCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);\n    parameters:\n    - id: membershipCondition\n      type: System.Security.Policy.IMembershipCondition\n      description: A membership condition that tests evidence to determine whether this code group applies policy.\n    - id: policy\n      type: System.Security.Policy.PolicyStatement\n      description: The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.\n  overload: System.Security.Policy.FirstMatchCodeGroup.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The type of the <code>membershipCondition</code> parameter is not valid.  \\n  \\n -or-  \\n  \\n The type of the <code>policy</code> parameter is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FirstMatchCodeGroup.Copy\n  commentId: M:System.Security.Policy.FirstMatchCodeGroup.Copy\n  id: Copy\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: FirstMatchCodeGroup.Copy()\n  fullName: FirstMatchCodeGroup.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Makes a deep copy of the code group.\n  remarks: This method makes a deep copy of the code group, meaning that copies of all objects it contains are made, as well.\n  example:\n  - \"The following code shows the use of <xref:System.Security.Policy.FirstMatchCodeGroup.Copy%2A> method to make a deep copy of the code group. This code example is part of a larger example provided for <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#18)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#18)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#18)]\"\n  syntax:\n    content: public override System.Security.Policy.CodeGroup Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: An equivalent copy of the code group, including its membership conditions and child code groups.\n  overload: System.Security.Policy.FirstMatchCodeGroup.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  commentId: P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  id: MergeLogic\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: MergeLogic\n  nameWithType: FirstMatchCodeGroup.MergeLogic\n  fullName: FirstMatchCodeGroup.MergeLogic\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the merge logic.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FirstMatchCodeGroup.MergeLogic%2A> property to get the merge logic for this code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#15)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#15)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#15)]\"\n  syntax:\n    content: public override string MergeLogic { get; }\n    return:\n      type: System.String\n      description: The string \"First Match\".\n  overload: System.Security.Policy.FirstMatchCodeGroup.MergeLogic*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)\n  fullName: FirstMatchCodeGroup.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves policy for the code group and its descendants for a set of evidence.\n  remarks: \"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \\n  \\n For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.  \\n  \\n The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.  \\n  \\n This operation of this method is as follows:  \\n  \\n If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FirstMatchCodeGroup.Resolve%2A> method to resolve policy for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#19)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#19)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#19)]\"\n  syntax:\n    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the assembly.\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).\n  overload: System.Security.Policy.FirstMatchCodeGroup.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves matching code groups.\n  remarks: \"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.  \\n  \\n For first-match code groups, each child code group's membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups%2A> method to resolve matching code groups. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CPP/members.cpp#9)]\\n [!code-csharp[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/CS/members.cs#9)]\\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FirstMatchCodeGroup_Evt/VB/Form1.vb#9)]\"\n  syntax:\n    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the assembly.\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups.\n  overload: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n  fullName: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition, PolicyStatement)\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.FirstMatchCodeGroup.Copy\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Copy()\n  nameWithType: FirstMatchCodeGroup.Copy()\n  fullName: FirstMatchCodeGroup.Copy()\n- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: FirstMatchCodeGroup.MergeLogic\n  fullName: FirstMatchCodeGroup.MergeLogic\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)\n  fullName: FirstMatchCodeGroup.Resolve(Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor*\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: FirstMatchCodeGroup\n  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup\n  fullName: FirstMatchCodeGroup.FirstMatchCodeGroup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n- uid: System.Security.Policy.FirstMatchCodeGroup.Copy*\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Copy\n  nameWithType: FirstMatchCodeGroup.Copy\n  fullName: FirstMatchCodeGroup.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic*\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: FirstMatchCodeGroup.MergeLogic\n  fullName: FirstMatchCodeGroup.MergeLogic\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve*\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Resolve\n  nameWithType: FirstMatchCodeGroup.Resolve\n  fullName: FirstMatchCodeGroup.Resolve\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups*\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups\n  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups\n  fullName: FirstMatchCodeGroup.ResolveMatchingCodeGroups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FirstMatchCodeGroup.xml\n- uid: System.Security.Policy.CodeGroup.Equals(System.Object)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeGroup.Equals(Object)\n  fullName: CodeGroup.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.Policy.CodeGroup.GetHashCode\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeGroup.GetHashCode()\n  fullName: CodeGroup.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: AddChild(CodeGroup)\n  nameWithType: CodeGroup.AddChild(CodeGroup)\n  fullName: CodeGroup.AddChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.AttributeString\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: CodeGroup.AttributeString\n  fullName: CodeGroup.AttributeString\n- uid: System.Security.Policy.CodeGroup.Children\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Children\n  nameWithType: CodeGroup.Children\n  fullName: CodeGroup.Children\n- uid: System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: CreateXml(SecurityElement, PolicyLevel)\n  nameWithType: CodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  fullName: CodeGroup.CreateXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.CodeGroup.Description\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Description\n  nameWithType: CodeGroup.Description\n  fullName: CodeGroup.Description\n- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Equals(CodeGroup, Boolean)\n  nameWithType: CodeGroup.Equals(CodeGroup, Boolean)\n  fullName: CodeGroup.Equals(CodeGroup, Boolean)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: CodeGroup.FromXml(SecurityElement)\n  fullName: CodeGroup.FromXml(SecurityElement)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement, PolicyLevel)\n  nameWithType: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n  fullName: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.CodeGroup.MembershipCondition\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: MembershipCondition\n  nameWithType: CodeGroup.MembershipCondition\n  fullName: CodeGroup.MembershipCondition\n- uid: System.Security.Policy.CodeGroup.Name\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Name\n  nameWithType: CodeGroup.Name\n  fullName: CodeGroup.Name\n- uid: System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ParseXml(SecurityElement, PolicyLevel)\n  nameWithType: CodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  fullName: CodeGroup.ParseXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.CodeGroup.PermissionSetName\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: CodeGroup.PermissionSetName\n  fullName: CodeGroup.PermissionSetName\n- uid: System.Security.Policy.CodeGroup.PolicyStatement\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: CodeGroup.PolicyStatement\n  fullName: CodeGroup.PolicyStatement\n- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: RemoveChild(CodeGroup)\n  nameWithType: CodeGroup.RemoveChild(CodeGroup)\n  fullName: CodeGroup.RemoveChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.ToXml\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml()\n  nameWithType: CodeGroup.ToXml()\n  fullName: CodeGroup.ToXml()\n- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: CodeGroup.ToXml(PolicyLevel)\n  fullName: CodeGroup.ToXml(PolicyLevel)\n"}