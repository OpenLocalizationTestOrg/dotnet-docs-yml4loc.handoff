{"nodes":[{"content":"Implements a single-threaded <xref href=\"System.Xml.XmlNameTable\"></xref>.","nodes":[{"pos":[0,74],"content":"Implements a single-threaded <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph>.","source":"Implements a single-threaded <xref href=\"System.Xml.XmlNameTable\"></xref>."}],"pos":[606,681],"yaml":true},{"content":"Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names. When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.  \n  \n The names are stored as common language runtime (CLR) object types. This enables you to do object comparisons on these strings rather than a more expensive string comparison. These string objects are referred to as atomized strings.","nodes":[{"pos":[0,281],"content":"Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names. When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.","nodes":[{"content":"Several classes, such as <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, use the <ph id=\"ph3\">`NameTable`</ph> class internally to store attribute and element names.","pos":[0,162],"source":"Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names."},{"content":"When an element or attribute name occurs multiple times in an XML document, it is stored only once in the <ph id=\"ph1\">`NameTable`</ph>.","pos":[163,281],"source":" When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`."}]},{"pos":[288,520],"content":"The names are stored as common language runtime (CLR) object types. This enables you to do object comparisons on these strings rather than a more expensive string comparison. These string objects are referred to as atomized strings.","nodes":[{"content":"The names are stored as common language runtime (CLR) object types. This enables you to do object comparisons on these strings rather than a more expensive string comparison. These string objects are referred to as atomized strings.","pos":[0,232],"nodes":[{"content":"The names are stored as common language runtime (CLR) object types.","pos":[0,67]},{"content":"This enables you to do object comparisons on these strings rather than a more expensive string comparison.","pos":[68,174]},{"content":"These string objects are referred to as atomized strings.","pos":[175,232]}]}]}],"pos":[692,1217],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `NameTable` class.","nodes":[{"pos":[0,52],"content":"Initializes a new instance of the <ph id=\"ph1\">`NameTable`</ph> class.","source":"Initializes a new instance of the `NameTable` class."}],"pos":[3418,3471],"yaml":true},{"content":"Constructs an empty NameTable.","nodes":[{"pos":[0,30],"content":"Constructs an empty NameTable.","nodes":[{"content":"Constructs an empty NameTable.","pos":[0,30]}]}],"pos":[3482,3513],"yaml":true,"extradata":"MT"},{"content":"Atomizes the specified string and adds it to the `NameTable`.","nodes":[{"pos":[0,61],"content":"Atomizes the specified string and adds it to the <ph id=\"ph1\">`NameTable`</ph>.","source":"Atomizes the specified string and adds it to the `NameTable`."}],"pos":[5044,5106],"yaml":true},{"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"pos":[0,74],"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"content":"For more information on atomized strings, see <ph id=\"ph1\">&lt;xref:System.Xml.NameTable&gt;</ph>.","pos":[0,74],"source":"For more information on atomized strings, see <xref:System.Xml.NameTable>."}]}],"pos":[5117,5192],"yaml":true,"extradata":"MT"},{"content":"The string to add.","nodes":[{"pos":[0,18],"content":"The string to add.","nodes":[{"content":"The string to add.","pos":[0,18]}]}],"pos":[5331,5350],"yaml":true},{"content":"The atomized string or the existing string if it already exists in the `NameTable`.","nodes":[{"pos":[0,83],"content":"The atomized string or the existing string if it already exists in the <ph id=\"ph1\">`NameTable`</ph>.","source":"The atomized string or the existing string if it already exists in the `NameTable`."}],"pos":[5407,5491],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[5645,5673],"yaml":true},{"content":"Atomizes the specified string and adds it to the `NameTable`.","nodes":[{"pos":[0,61],"content":"Atomizes the specified string and adds it to the <ph id=\"ph1\">`NameTable`</ph>.","source":"Atomizes the specified string and adds it to the `NameTable`."}],"pos":[7204,7266],"yaml":true},{"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"pos":[0,74],"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"content":"For more information on atomized strings, see <ph id=\"ph1\">&lt;xref:System.Xml.NameTable&gt;</ph>.","pos":[0,74],"source":"For more information on atomized strings, see <xref:System.Xml.NameTable>."}]}],"pos":[7277,7352],"yaml":true,"extradata":"MT"},{"content":"The character array containing the string to add.","nodes":[{"pos":[0,49],"content":"The character array containing the string to add.","nodes":[{"content":"The character array containing the string to add.","pos":[0,49]}]}],"pos":[7511,7561],"yaml":true},{"content":"The zero-based index into the array specifying the first character of the string.","nodes":[{"pos":[0,81],"content":"The zero-based index into the array specifying the first character of the string.","nodes":[{"content":"The zero-based index into the array specifying the first character of the string.","pos":[0,81]}]}],"pos":[7621,7703],"yaml":true},{"content":"The number of characters in the string.","nodes":[{"pos":[0,39],"content":"The number of characters in the string.","nodes":[{"content":"The number of characters in the string.","pos":[0,39]}]}],"pos":[7761,7801],"yaml":true},{"content":"The atomized string or the existing string if one already exists in the `NameTable`. If <code>len</code> is zero, String.Empty is returned.","nodes":[{"pos":[0,139],"content":"The atomized string or the existing string if one already exists in the `NameTable`. If <code>len</code> is zero, String.Empty is returned.","nodes":[{"content":"The atomized string or the existing string if one already exists in the <ph id=\"ph1\">`NameTable`</ph>.","pos":[0,84],"source":"The atomized string or the existing string if one already exists in the `NameTable`."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">len</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero, String.Empty is returned.","pos":[85,139],"source":" If <code>len</code> is zero, String.Empty is returned."}]}],"pos":[7858,7998],"yaml":true},{"content":"0 > <code>start</code>  \n  \n -or-  \n  \n <code>start</code> >= <code>key</code>.Length  \n  \n -or-  \n  \n <code>len</code> >= <code>key</code>.Length  \n  \n The above conditions do not cause an exception to be thrown if <code>len</code> =0.","nodes":[{"pos":[0,22],"content":"0 &gt; <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">start</ph><ept id=\"p1\">&lt;/code&gt;</ept>","source":"0 > <code>start</code>"},{"pos":[29,33],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[40,85],"content":"<ph id=\"ph1\">&lt;code&gt;start&lt;/code&gt;</ph><ph id=\"ph2\"> &gt;</ph><ph id=\"ph3\">= </ph><ph id=\"ph4\">&lt;code&gt;key&lt;/code&gt;</ph>.Length","source":"<code>start</code> >= <code>key</code>.Length"},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,146],"content":"<ph id=\"ph1\">&lt;code&gt;len&lt;/code&gt;</ph><ph id=\"ph2\"> &gt;</ph><ph id=\"ph3\">= </ph><ph id=\"ph4\">&lt;code&gt;key&lt;/code&gt;</ph>.Length","source":"<code>len</code> >= <code>key</code>.Length"},{"pos":[153,236],"content":"The above conditions do not cause an exception to be thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">len</ph><ept id=\"p1\">&lt;/code&gt;</ept> =0.","source":"The above conditions do not cause an exception to be thrown if <code>len</code> =0."}],"pos":[8158,8407],"yaml":true},{"content":"<code>len</code> < 0.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">&lt;code&gt;len&lt;/code&gt;</ph> &lt; 0.","source":"<code>len</code> < 0."}],"pos":[8521,8543],"yaml":true},{"content":"Gets the atomized string with the specified value.","nodes":[{"pos":[0,50],"content":"Gets the atomized string with the specified value.","nodes":[{"content":"Gets the atomized string with the specified value.","pos":[0,50]}]}],"pos":[9954,10005],"yaml":true},{"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"pos":[0,74],"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"content":"For more information on atomized strings, see <ph id=\"ph1\">&lt;xref:System.Xml.NameTable&gt;</ph>.","pos":[0,74],"source":"For more information on atomized strings, see <xref:System.Xml.NameTable>."}]}],"pos":[10016,10091],"yaml":true,"extradata":"MT"},{"content":"The name to find.","nodes":[{"pos":[0,17],"content":"The name to find.","nodes":[{"content":"The name to find.","pos":[0,17]}]}],"pos":[10234,10252],"yaml":true},{"content":"The atomized string object or `null` if the string has not already been atomized.","nodes":[{"pos":[0,81],"content":"The atomized string object or <ph id=\"ph1\">`null`</ph> if the string has not already been atomized.","source":"The atomized string object or `null` if the string has not already been atomized."}],"pos":[10309,10391],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[10545,10575],"yaml":true},{"content":"Gets the atomized string containing the same characters as the specified range of characters in the given array.","nodes":[{"pos":[0,112],"content":"Gets the atomized string containing the same characters as the specified range of characters in the given array.","nodes":[{"content":"Gets the atomized string containing the same characters as the specified range of characters in the given array.","pos":[0,112]}]}],"pos":[12106,12219],"yaml":true},{"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"pos":[0,74],"content":"For more information on atomized strings, see <xref:System.Xml.NameTable>.","nodes":[{"content":"For more information on atomized strings, see <ph id=\"ph1\">&lt;xref:System.Xml.NameTable&gt;</ph>.","pos":[0,74],"source":"For more information on atomized strings, see <xref:System.Xml.NameTable>."}]}],"pos":[12230,12305],"yaml":true,"extradata":"MT"},{"content":"The character array containing the name to find.","nodes":[{"pos":[0,48],"content":"The character array containing the name to find.","nodes":[{"content":"The character array containing the name to find.","pos":[0,48]}]}],"pos":[12464,12513],"yaml":true},{"content":"The zero-based index into the array specifying the first character of the name.","nodes":[{"pos":[0,79],"content":"The zero-based index into the array specifying the first character of the name.","nodes":[{"content":"The zero-based index into the array specifying the first character of the name.","pos":[0,79]}]}],"pos":[12573,12653],"yaml":true},{"content":"The number of characters in the name.","nodes":[{"pos":[0,37],"content":"The number of characters in the name.","nodes":[{"content":"The number of characters in the name.","pos":[0,37]}]}],"pos":[12711,12749],"yaml":true},{"content":"The atomized string or `null` if the string has not already been atomized. If <code>len</code> is zero, String.Empty is returned.","nodes":[{"pos":[0,129],"content":"The atomized string or `null` if the string has not already been atomized. If <code>len</code> is zero, String.Empty is returned.","nodes":[{"content":"The atomized string or <ph id=\"ph1\">`null`</ph> if the string has not already been atomized.","pos":[0,74],"source":"The atomized string or `null` if the string has not already been atomized."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">len</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero, String.Empty is returned.","pos":[75,129],"source":" If <code>len</code> is zero, String.Empty is returned."}]}],"pos":[12806,12936],"yaml":true},{"content":"0 > <code>start</code>  \n  \n -or-  \n  \n <code>start</code> >= <code>key</code>.Length  \n  \n -or-  \n  \n <code>len</code> >= <code>key</code>.Length  \n  \n The above conditions do not cause an exception to be thrown if <code>len</code> =0.","nodes":[{"pos":[0,22],"content":"0 &gt; <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">start</ph><ept id=\"p1\">&lt;/code&gt;</ept>","source":"0 > <code>start</code>"},{"pos":[29,33],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[40,85],"content":"<ph id=\"ph1\">&lt;code&gt;start&lt;/code&gt;</ph><ph id=\"ph2\"> &gt;</ph><ph id=\"ph3\">= </ph><ph id=\"ph4\">&lt;code&gt;key&lt;/code&gt;</ph>.Length","source":"<code>start</code> >= <code>key</code>.Length"},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,146],"content":"<ph id=\"ph1\">&lt;code&gt;len&lt;/code&gt;</ph><ph id=\"ph2\"> &gt;</ph><ph id=\"ph3\">= </ph><ph id=\"ph4\">&lt;code&gt;key&lt;/code&gt;</ph>.Length","source":"<code>len</code> >= <code>key</code>.Length"},{"pos":[153,236],"content":"The above conditions do not cause an exception to be thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">len</ph><ept id=\"p1\">&lt;/code&gt;</ept> =0.","source":"The above conditions do not cause an exception to be thrown if <code>len</code> =0."}],"pos":[13096,13345],"yaml":true},{"content":"<code>len</code> < 0.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">&lt;code&gt;len&lt;/code&gt;</ph> &lt; 0.","source":"<code>len</code> < 0."}],"pos":[13459,13481],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.NameTable\n  commentId: T:System.Xml.NameTable\n  id: NameTable\n  children:\n  - System.Xml.NameTable.#ctor\n  - System.Xml.NameTable.Add(System.String)\n  - System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)\n  - System.Xml.NameTable.Get(System.String)\n  - System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: NameTable\n  nameWithType: NameTable\n  fullName: System.Xml.NameTable\n  type: Class\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Implements a single-threaded <xref href=\"System.Xml.XmlNameTable\"></xref>.\n  remarks: \"Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names. When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.  \\n  \\n The names are stored as common language runtime (CLR) object types. This enables you to do object comparisons on these strings rather than a more expensive string comparison. These string objects are referred to as atomized strings.\"\n  example:\n  - \"The following example compares two element names.  \\n  \\n [!code-cpp[NameTable#1](~/samples/snippets/cpp/VS_Snippets_Data/NameTable/CPP/nametable.cpp#1)]\\n [!code-csharp[NameTable#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable/CS/nametable.cs#1)]\\n [!code-vb[NameTable#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable/VB/nametable.vb#1)]\"\n  syntax:\n    content: 'public class NameTable : System.Xml.XmlNameTable'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNameTable\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.NameTable.#ctor\n  commentId: M:System.Xml.NameTable.#ctor\n  id: '#ctor'\n  parent: System.Xml.NameTable\n  langs:\n  - csharp\n  name: NameTable()\n  nameWithType: NameTable.NameTable()\n  fullName: NameTable.NameTable()\n  type: Constructor\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Initializes a new instance of the `NameTable` class.\n  remarks: Constructs an empty NameTable.\n  syntax:\n    content: public NameTable ();\n    parameters: []\n  overload: System.Xml.NameTable.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.NameTable.Add(System.String)\n  commentId: M:System.Xml.NameTable.Add(System.String)\n  id: Add(System.String)\n  parent: System.Xml.NameTable\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: NameTable.Add(String)\n  fullName: NameTable.Add(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Atomizes the specified string and adds it to the `NameTable`.\n  remarks: For more information on atomized strings, see <xref:System.Xml.NameTable>.\n  syntax:\n    content: public override string Add (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The string to add.\n    return:\n      type: System.String\n      description: The atomized string or the existing string if it already exists in the `NameTable`.\n  overload: System.Xml.NameTable.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)\n  id: Add(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.NameTable\n  langs:\n  - csharp\n  name: Add(Char[], Int32, Int32)\n  nameWithType: NameTable.Add(Char[], Int32, Int32)\n  fullName: NameTable.Add(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Atomizes the specified string and adds it to the `NameTable`.\n  remarks: For more information on atomized strings, see <xref:System.Xml.NameTable>.\n  syntax:\n    content: public override string Add (char[] key, int start, int len);\n    parameters:\n    - id: key\n      type: System.Char[]\n      description: The character array containing the string to add.\n    - id: start\n      type: System.Int32\n      description: The zero-based index into the array specifying the first character of the string.\n    - id: len\n      type: System.Int32\n      description: The number of characters in the string.\n    return:\n      type: System.String\n      description: The atomized string or the existing string if one already exists in the `NameTable`. If <code>len</code> is zero, String.Empty is returned.\n  overload: System.Xml.NameTable.Add*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"0 > <code>start</code>  \\n  \\n -or-  \\n  \\n <code>start</code> >= <code>key</code>.Length  \\n  \\n -or-  \\n  \\n <code>len</code> >= <code>key</code>.Length  \\n  \\n The above conditions do not cause an exception to be thrown if <code>len</code> =0.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>len</code> < 0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.NameTable.Get(System.String)\n  commentId: M:System.Xml.NameTable.Get(System.String)\n  id: Get(System.String)\n  parent: System.Xml.NameTable\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: NameTable.Get(String)\n  fullName: NameTable.Get(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the atomized string with the specified value.\n  remarks: For more information on atomized strings, see <xref:System.Xml.NameTable>.\n  syntax:\n    content: public override string Get (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The name to find.\n    return:\n      type: System.String\n      description: The atomized string object or `null` if the string has not already been atomized.\n  overload: System.Xml.NameTable.Get*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)\n  id: Get(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.NameTable\n  langs:\n  - csharp\n  name: Get(Char[], Int32, Int32)\n  nameWithType: NameTable.Get(Char[], Int32, Int32)\n  fullName: NameTable.Get(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the atomized string containing the same characters as the specified range of characters in the given array.\n  remarks: For more information on atomized strings, see <xref:System.Xml.NameTable>.\n  syntax:\n    content: public override string Get (char[] key, int start, int len);\n    parameters:\n    - id: key\n      type: System.Char[]\n      description: The character array containing the name to find.\n    - id: start\n      type: System.Int32\n      description: The zero-based index into the array specifying the first character of the name.\n    - id: len\n      type: System.Int32\n      description: The number of characters in the name.\n    return:\n      type: System.String\n      description: The atomized string or `null` if the string has not already been atomized. If <code>len</code> is zero, String.Empty is returned.\n  overload: System.Xml.NameTable.Get*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"0 > <code>start</code>  \\n  \\n -or-  \\n  \\n <code>start</code> >= <code>key</code>.Length  \\n  \\n -or-  \\n  \\n <code>len</code> >= <code>key</code>.Length  \\n  \\n The above conditions do not cause an exception to be thrown if <code>len</code> =0.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>len</code> < 0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: false\n  name: XmlNameTable\n  nameWithType: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Xml.NameTable.#ctor\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: NameTable()\n  nameWithType: NameTable.NameTable()\n  fullName: NameTable.NameTable()\n- uid: System.Xml.NameTable.Add(System.String)\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Add(String)\n  nameWithType: NameTable.Add(String)\n  fullName: NameTable.Add(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Add(Char[], Int32, Int32)\n  nameWithType: NameTable.Add(Char[], Int32, Int32)\n  fullName: NameTable.Add(Char[], Int32, Int32)\n- uid: System.Char\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.NameTable.Get(System.String)\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Get(String)\n  nameWithType: NameTable.Get(String)\n  fullName: NameTable.Get(String)\n- uid: System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Get(Char[], Int32, Int32)\n  nameWithType: NameTable.Get(Char[], Int32, Int32)\n  fullName: NameTable.Get(Char[], Int32, Int32)\n- uid: System.Xml.NameTable.Add*\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Add\n  nameWithType: NameTable.Add\n  fullName: NameTable.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n- uid: System.Xml.NameTable.Get*\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: Get\n  nameWithType: NameTable.Get\n  fullName: NameTable.Get\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n- uid: System.Xml.NameTable.#ctor*\n  parent: System.Xml.NameTable\n  isExternal: false\n  name: NameTable\n  nameWithType: NameTable.NameTable\n  fullName: NameTable.NameTable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/NameTable.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}