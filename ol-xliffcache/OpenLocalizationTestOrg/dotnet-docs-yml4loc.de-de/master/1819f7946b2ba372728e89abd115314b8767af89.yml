### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.HostProtectionAttribute
  commentId: T:System.Security.Permissions.HostProtectionAttribute
  id: HostProtectionAttribute
  children:
  - System.Security.Permissions.HostProtectionAttribute.#ctor
  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.HostProtectionAttribute.CreatePermission
  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  - System.Security.Permissions.HostProtectionAttribute.Resources
  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  - System.Security.Permissions.HostProtectionAttribute.SharedState
  - System.Security.Permissions.HostProtectionAttribute.Synchronization
  - System.Security.Permissions.HostProtectionAttribute.UI
  langs:
  - csharp
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute
  fullName: System.Security.Permissions.HostProtectionAttribute
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.
  remarks: "This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.  \n  \n> [!IMPORTANT]\n>  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission.  \n  \n If the host does not have programming model requirements, the link demands do not occur.  \n  \n This attribute identifies the following:  \n  \n-   Methods or classes that do not fit the host programming model, but are otherwise benign.  \n  \n-   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.  \n  \n-   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.  \n  \n> [!NOTE]\n>  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.  \n  \n> [!NOTE]\n>  Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>. In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded."
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#1)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#1)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  attributes:
  - type: System.AttributeUsageAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  commentId: M:System.Security.Permissions.HostProtectionAttribute.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: HostProtectionAttribute.HostProtectionAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.HostProtectionAttribute"></xref> class with default values.
  remarks: This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`.
  syntax:
    content: public HostProtectionAttribute ();
    parameters: []
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  commentId: M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.HostProtectionAttribute"></xref> class with the specified <xref href="System.Security.Permissions.SecurityAction"></xref> value.
  remarks: This constructor should not be used. It is intended for infrastructure use.
  syntax:
    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: One of the <xref href="System.Security.Permissions.SecurityAction"></xref> values.
  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>action</code> is not <xref href="System.Security.Permissions.SecurityAction.LinkDemand"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  commentId: M:System.Security.Permissions.HostProtectionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: HostProtectionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns a new host protection permission.
  remarks: "This method should be called only by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: An <xref href="System.Security.IPermission"></xref> that corresponds to the current attribute.
  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  commentId: P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  id: ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: HostProtectionAttribute.ExternalProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether external process management is exposed.
  remarks: Code that exposes external process management might create or destroy other processes.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#5)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#5)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#5)]"
  syntax:
    content: public bool ExternalProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: '`true` if external process management is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  commentId: P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  id: ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: HostProtectionAttribute.ExternalThreading
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether external threading is exposed.
  remarks: Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.ExternalThreading%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]"
  syntax:
    content: public bool ExternalThreading { get; set; }
    return:
      type: System.Boolean
      description: '`true` if external threading is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  commentId: P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  id: MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: HostProtectionAttribute.MayLeakOnAbort
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether resources might leak memory if the operation is terminated.
  remarks: Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.
  syntax:
    content: public bool MayLeakOnAbort { get; set; }
    return:
      type: System.Boolean
      description: '`true` if resources might leak memory on termination; otherwise, `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  commentId: P:System.Security.Permissions.HostProtectionAttribute.Resources
  id: Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: HostProtectionAttribute.Resources
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets flags specifying categories of functionality that are potentially harmful to the host.
  remarks: The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]"
  syntax:
    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }
    return:
      type: System.Security.Permissions.HostProtectionResource
      description: A bitwise combination of the <xref href="System.Security.Permissions.HostProtectionResource"></xref> values. The default is <xref href="System.Security.Permissions.HostProtectionResource.None"></xref>.
  overload: System.Security.Permissions.HostProtectionAttribute.Resources*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  commentId: P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  id: SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: HostProtectionAttribute.SecurityInfrastructure
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether the security infrastructure is exposed.
  remarks: The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#4)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#4)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#4)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public bool SecurityInfrastructure { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the security infrastructure is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  commentId: P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  id: SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether self-affecting process management is exposed.
  remarks: Self-affecting process management code might exit the current process, terminating the server.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]"
  syntax:
    content: public bool SelfAffectingProcessMgmt { get; set; }
    return:
      type: System.Boolean
      description: '`true` if self-affecting process management is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  commentId: P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  id: SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: HostProtectionAttribute.SelfAffectingThreading
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether self-affecting threading is exposed.
  remarks: Self-affecting threading manipulates threads in a way that only affects user code.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]"
  syntax:
    content: public bool SelfAffectingThreading { get; set; }
    return:
      type: System.Boolean
      description: '`true` if self-affecting threading is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  commentId: P:System.Security.Permissions.HostProtectionAttribute.SharedState
  id: SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: HostProtectionAttribute.SharedState
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether shared state is exposed.
  remarks: When <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> is `true`, it indicates that a state is exposed that might be shared between threads.
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]"
  syntax:
    content: public bool SharedState { get; set; }
    return:
      type: System.Boolean
      description: '`true` if shared state is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  commentId: P:System.Security.Permissions.HostProtectionAttribute.Synchronization
  id: Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: HostProtectionAttribute.Synchronization
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether synchronization is exposed.
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.Synchronization%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]"
  syntax:
    content: public bool Synchronization { get; set; }
    return:
      type: System.Boolean
      description: '`true` if synchronization is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  commentId: P:System.Security.Permissions.HostProtectionAttribute.UI
  id: UI
  parent: System.Security.Permissions.HostProtectionAttribute
  langs:
  - csharp
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: HostProtectionAttribute.UI
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether the user interface is exposed.
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.UI%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \n  \n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]"
  syntax:
    content: public bool UI { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the user interface is exposed; otherwise, `false`. The default is `false`.'
  overload: System.Security.Permissions.HostProtectionAttribute.UI*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  parent: System.Security.Permissions
  isExternal: false
  name: CodeAccessSecurityAttribute
  nameWithType: CodeAccessSecurityAttribute
  fullName: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute()
  nameWithType: HostProtectionAttribute.HostProtectionAttribute()
  fullName: HostProtectionAttribute.HostProtectionAttribute()
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute(SecurityAction)
  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
  fullName: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: HostProtectionAttribute.CreatePermission()
  fullName: HostProtectionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: HostProtectionAttribute.ExternalProcessMgmt
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: HostProtectionAttribute.ExternalThreading
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: HostProtectionAttribute.MayLeakOnAbort
- uid: System.Security.Permissions.HostProtectionAttribute.Resources
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: HostProtectionAttribute.Resources
- uid: System.Security.Permissions.HostProtectionResource
  parent: System.Security.Permissions
  isExternal: false
  name: HostProtectionResource
  nameWithType: HostProtectionResource
  fullName: System.Security.Permissions.HostProtectionResource
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: HostProtectionAttribute.SecurityInfrastructure
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: HostProtectionAttribute.SelfAffectingThreading
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: HostProtectionAttribute.SharedState
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: HostProtectionAttribute.Synchronization
- uid: System.Security.Permissions.HostProtectionAttribute.UI
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: HostProtectionAttribute.UI
- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: HostProtectionAttribute
  nameWithType: HostProtectionAttribute.HostProtectionAttribute
  fullName: HostProtectionAttribute.HostProtectionAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: HostProtectionAttribute.CreatePermission
  fullName: HostProtectionAttribute.CreatePermission
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalProcessMgmt
  nameWithType: HostProtectionAttribute.ExternalProcessMgmt
  fullName: HostProtectionAttribute.ExternalProcessMgmt
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: ExternalThreading
  nameWithType: HostProtectionAttribute.ExternalThreading
  fullName: HostProtectionAttribute.ExternalThreading
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: MayLeakOnAbort
  nameWithType: HostProtectionAttribute.MayLeakOnAbort
  fullName: HostProtectionAttribute.MayLeakOnAbort
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.Resources*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Resources
  nameWithType: HostProtectionAttribute.Resources
  fullName: HostProtectionAttribute.Resources
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SecurityInfrastructure
  nameWithType: HostProtectionAttribute.SecurityInfrastructure
  fullName: HostProtectionAttribute.SecurityInfrastructure
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingProcessMgmt
  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt
  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SelfAffectingThreading
  nameWithType: HostProtectionAttribute.SelfAffectingThreading
  fullName: HostProtectionAttribute.SelfAffectingThreading
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: SharedState
  nameWithType: HostProtectionAttribute.SharedState
  fullName: HostProtectionAttribute.SharedState
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: Synchronization
  nameWithType: HostProtectionAttribute.Synchronization
  fullName: HostProtectionAttribute.Synchronization
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Security.Permissions.HostProtectionAttribute.UI*
  parent: System.Security.Permissions.HostProtectionAttribute
  isExternal: false
  name: UI
  nameWithType: HostProtectionAttribute.UI
  fullName: HostProtectionAttribute.UI
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Security.Permissions.SecurityAttribute.Action
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: SecurityAttribute.Action
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: SecurityAttribute.Unrestricted
