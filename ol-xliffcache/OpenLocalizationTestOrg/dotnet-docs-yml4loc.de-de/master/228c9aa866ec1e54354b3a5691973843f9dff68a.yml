### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.DrawingContext
  commentId: T:System.Windows.Media.DrawingContext
  id: DrawingContext
  children:
  - System.Windows.Media.DrawingContext.Close
  - System.Windows.Media.DrawingContext.DisposeCore
  - System.Windows.Media.DrawingContext.DrawDrawing(System.Windows.Media.Drawing)
  - System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)
  - System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)
  - System.Windows.Media.DrawingContext.DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)
  - System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)
  - System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)
  - System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)
  - System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)
  - System.Windows.Media.DrawingContext.DrawText(System.Windows.Media.FormattedText,System.Windows.Point)
  - System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)
  - System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.Pop
  - System.Windows.Media.DrawingContext.PushClip(System.Windows.Media.Geometry)
  - System.Windows.Media.DrawingContext.PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.DrawingContext.PushGuidelineSet(System.Windows.Media.GuidelineSet)
  - System.Windows.Media.DrawingContext.PushOpacity(System.Double)
  - System.Windows.Media.DrawingContext.PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.DrawingContext.PushOpacityMask(System.Windows.Media.Brush)
  - System.Windows.Media.DrawingContext.PushTransform(System.Windows.Media.Transform)
  - System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange
  - System.Windows.Media.DrawingContext.System#IDisposable#Dispose
  langs:
  - csharp
  name: DrawingContext
  nameWithType: DrawingContext
  fullName: System.Windows.Media.DrawingContext
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Describes visual content using draw, push, and pop commands.
  remarks: "Use a <xref:System.Windows.Media.DrawingContext> to populate a <xref:System.Windows.Media.Visual> or a <xref:System.Windows.Media.Drawing> with visual content.  \n  \n Although the <xref:System.Windows.Media.DrawingContext> draw methods appear similar to the draw methods of the <xref:System.Drawing.Graphics?displayProperty=fullName> type, they function very differently: <xref:System.Windows.Media.DrawingContext> is used with a retained mode graphics system, while the <xref:System.Drawing.Graphics?displayProperty=fullName> type is used with an immediate mode graphics system. When you use a <xref:System.Windows.Media.DrawingContext> object's draw commands, you are actually storing a set of rendering instructions (although the exact storage mechanism depends on the type of object that supplies the <xref:System.Windows.Media.DrawingContext>) that will later be used by the graphics system; you are not drawing to the screen in real-time. For more information about how the [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] graphics system works, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).  \n  \n You never directly instantiate a <xref:System.Windows.Media.DrawingContext>; you can, however, acquire a drawing context from certain methods, such as <xref:System.Windows.Media.DrawingGroup.Open%2A?displayProperty=fullName> and <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A?displayProperty=fullName>."
  example:
  - "The following example retrieves a <xref:System.Windows.Media.DrawingContext> from a <xref:System.Windows.Media.DrawingVisual> and uses it to draw a rectangle.  \n  \n [!code-csharp[drawingvisualsample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]\n [!code-vb[drawingvisualsample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  \n  \n The next example demonstrates the <xref:System.Windows.Media.DrawingContext.PushOpacity%2A>, <xref:System.Windows.Media.DrawingContext.PushEffect%2A>, and <xref:System.Windows.Media.DrawingContext.Pop%2A> commands. The <xref:System.Windows.Media.DrawingContext> is obtained from a <xref:System.Windows.Media.DrawingGroup> and displayed using an <xref:System.Windows.Controls.Image> control.  \n  \n [!code-csharp[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingContext_procedural_snip/CSharp/PushEffectExample.cs#pusheffectexamplewholepage)]\n [!code-vb[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingContext_procedural_snip/visualbasic/pusheffectexample.vb#pusheffectexamplewholepage)]"
  syntax:
    content: 'public abstract class DrawingContext : System.Windows.Threading.DispatcherObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.Close
  commentId: M:System.Windows.Media.DrawingContext.Close
  id: Close
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: Close()
  nameWithType: DrawingContext.Close()
  fullName: DrawingContext.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Closes the <xref href="System.Windows.Media.DrawingContext"></xref> and flushes the content. Afterward, the <xref href="System.Windows.Media.DrawingContext"></xref> cannot be modified.
  remarks: A <xref:System.Windows.Media.DrawingContext> must be closed before its content can be rendered, but after it has been closed, it cannot be modified. This call does not require all Push calls to have been Popped.
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.Windows.Media.DrawingContext.Close*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: This object has already been closed or disposed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DisposeCore
  commentId: M:System.Windows.Media.DrawingContext.DisposeCore
  id: DisposeCore
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DisposeCore()
  nameWithType: DrawingContext.DisposeCore()
  fullName: DrawingContext.DisposeCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Releases all resources used by the <xref href="System.Windows.Media.DrawingContext"></xref>.
  remarks: Do not call this method directly from your code; use the <xref:System.Windows.Media.DrawingContext.System%23IDisposable%23Dispose%2A> method instead.
  syntax:
    content: protected abstract void DisposeCore ();
    parameters: []
  overload: System.Windows.Media.DrawingContext.DisposeCore*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has already been closed or disposed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.DrawDrawing(System.Windows.Media.Drawing)
  commentId: M:System.Windows.Media.DrawingContext.DrawDrawing(System.Windows.Media.Drawing)
  id: DrawDrawing(System.Windows.Media.Drawing)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawDrawing(Drawing)
  nameWithType: DrawingContext.DrawDrawing(Drawing)
  fullName: DrawingContext.DrawDrawing(Drawing)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws the specified <xref href="System.Windows.Media.Drawing"></xref> object.
  syntax:
    content: public abstract void DrawDrawing (System.Windows.Media.Drawing drawing);
    parameters:
    - id: drawing
      type: System.Windows.Media.Drawing
      description: The drawing to append.
  overload: System.Windows.Media.DrawingContext.DrawDrawing*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)
  commentId: M:System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)
  id: DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawEllipse(Brush, Pen, Point, Double, Double)
  nameWithType: DrawingContext.DrawEllipse(Brush, Pen, Point, Double, Double)
  fullName: DrawingContext.DrawEllipse(Brush, Pen, Point, Double, Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws an ellipse with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref>.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawEllipse (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Point center, double radiusX, double radiusY);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush with which to fill the ellipse.  This is optional, and can be `null`. If the brush is `null`, no fill is drawn.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen with which to stroke the ellipse.  This is optional, and can be `null`. If the pen is `null`, no stroke is drawn.
    - id: center
      type: System.Windows.Point
      description: The location of the center of the ellipse.
    - id: radiusX
      type: System.Double
      description: The horizontal radius of the ellipse.
    - id: radiusY
      type: System.Double
      description: The vertical radius of the ellipse.
  overload: System.Windows.Media.DrawingContext.DrawEllipse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  nameWithType: DrawingContext.DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  fullName: DrawingContext.DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws an ellipse with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref> and applies the specified animation clocks.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawEllipse (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Point center, System.Windows.Media.Animation.AnimationClock centerAnimations, double radiusX, System.Windows.Media.Animation.AnimationClock radiusXAnimations, double radiusY, System.Windows.Media.Animation.AnimationClock radiusYAnimations);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush with which to fill the ellipse.  This is optional, and can be `null`. If the brush is `null`, no fill is drawn.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen with which to stroke the ellipse.  This is optional, and can be `null`. If the pen is `null`, no stroke is drawn.
    - id: center
      type: System.Windows.Point
      description: The location of the center of the ellipse.
    - id: centerAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the ellipse's center position, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Point"></xref> objects.
    - id: radiusX
      type: System.Double
      description: The horizontal radius of the ellipse.
    - id: radiusXAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the ellipse's x-radius, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Double"></xref> objects.
    - id: radiusY
      type: System.Double
      description: The vertical radius of the ellipse.
    - id: radiusYAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the ellipse's y-radius, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Double"></xref> objects.
  overload: System.Windows.Media.DrawingContext.DrawEllipse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)
  commentId: M:System.Windows.Media.DrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)
  id: DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawGeometry(Brush, Pen, Geometry)
  nameWithType: DrawingContext.DrawGeometry(Brush, Pen, Geometry)
  fullName: DrawingContext.DrawGeometry(Brush, Pen, Geometry)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws the specified <xref href="System.Windows.Media.Geometry"></xref> using the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref>.
  syntax:
    content: public abstract void DrawGeometry (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The <xref href="System.Windows.Media.Brush"></xref> with which to fill the <xref href="System.Windows.Media.Geometry"></xref>. This is optional, and can be `null`. If the brush is `null`, no fill is drawn.
    - id: pen
      type: System.Windows.Media.Pen
      description: The <xref href="System.Windows.Media.Pen"></xref> with which to stroke the <xref href="System.Windows.Media.Geometry"></xref>. This is optional, and can be `null`. If the pen is `null`, no stroke is drawn.
    - id: geometry
      type: System.Windows.Media.Geometry
      description: The <xref href="System.Windows.Media.Geometry"></xref> to draw.
  overload: System.Windows.Media.DrawingContext.DrawGeometry*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)
  commentId: M:System.Windows.Media.DrawingContext.DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)
  id: DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawGlyphRun(Brush, GlyphRun)
  nameWithType: DrawingContext.DrawGlyphRun(Brush, GlyphRun)
  fullName: DrawingContext.DrawGlyphRun(Brush, GlyphRun)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws the specified text.
  syntax:
    content: public abstract void DrawGlyphRun (System.Windows.Media.Brush foregroundBrush, System.Windows.Media.GlyphRun glyphRun);
    parameters:
    - id: foregroundBrush
      type: System.Windows.Media.Brush
      description: The brush used to paint the text.
    - id: glyphRun
      type: System.Windows.Media.GlyphRun
      description: The text to draw.
  overload: System.Windows.Media.DrawingContext.DrawGlyphRun*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)
  commentId: M:System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)
  id: DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawImage(ImageSource, Rect)
  nameWithType: DrawingContext.DrawImage(ImageSource, Rect)
  fullName: DrawingContext.DrawImage(ImageSource, Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws an image into the region defined by the specified <xref href="System.Windows.Rect"></xref>.
  syntax:
    content: public abstract void DrawImage (System.Windows.Media.ImageSource imageSource, System.Windows.Rect rectangle);
    parameters:
    - id: imageSource
      type: System.Windows.Media.ImageSource
      description: The image to draw.
    - id: rectangle
      type: System.Windows.Rect
      description: The region in which to draw <code>bitmapSource</code>.
  overload: System.Windows.Media.DrawingContext.DrawImage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  id: DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawImage(ImageSource, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawImage(ImageSource, Rect, AnimationClock)
  fullName: DrawingContext.DrawImage(ImageSource, Rect, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws an image into the region defined by the specified <xref href="System.Windows.Rect"></xref> and applies the specified animation clock.
  syntax:
    content: public abstract void DrawImage (System.Windows.Media.ImageSource imageSource, System.Windows.Rect rectangle, System.Windows.Media.Animation.AnimationClock rectangleAnimations);
    parameters:
    - id: imageSource
      type: System.Windows.Media.ImageSource
      description: The image to draw.
    - id: rectangle
      type: System.Windows.Rect
      description: The region in which to draw <code>bitmapSource</code>.
    - id: rectangleAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's size and dimensions, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Rect"></xref> objects.
  overload: System.Windows.Media.DrawingContext.DrawImage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)
  id: DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawLine(Pen, Point, Point)
  nameWithType: DrawingContext.DrawLine(Pen, Point, Point)
  fullName: DrawingContext.DrawLine(Pen, Point, Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a line between the specified points using the specified <xref href="System.Windows.Media.Pen"></xref>.
  syntax:
    content: public abstract void DrawLine (System.Windows.Media.Pen pen, System.Windows.Point point0, System.Windows.Point point1);
    parameters:
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen with which to stroke the line.
    - id: point0
      type: System.Windows.Point
      description: The start point of the line.
    - id: point1
      type: System.Windows.Point
      description: The end point of the line.
  overload: System.Windows.Media.DrawingContext.DrawLine*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  id: DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
  nameWithType: DrawingContext.DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
  fullName: DrawingContext.DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a line between the specified points using the specified <xref href="System.Windows.Media.Pen"></xref> and applies the specified animation clocks.
  syntax:
    content: public abstract void DrawLine (System.Windows.Media.Pen pen, System.Windows.Point point0, System.Windows.Media.Animation.AnimationClock point0Animations, System.Windows.Point point1, System.Windows.Media.Animation.AnimationClock point1Animations);
    parameters:
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen to stroke the line.
    - id: point0
      type: System.Windows.Point
      description: The start point of the line.
    - id: point0Animations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the start point of the line, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Point"></xref> objects.
    - id: point1
      type: System.Windows.Point
      description: The end point of the line.
    - id: point1Animations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the end point of the line, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Point"></xref> objects.
  overload: System.Windows.Media.DrawingContext.DrawLine*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)
  commentId: M:System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)
  id: DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawRectangle(Brush, Pen, Rect)
  nameWithType: DrawingContext.DrawRectangle(Brush, Pen, Rect)
  fullName: DrawingContext.DrawRectangle(Brush, Pen, Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a rectangle with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref>. The pen and the brush can be `null`.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawRectangle (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Rect rectangle);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush with which to fill the rectangle.  This is optional, and can be `null`. If the brush is `null`, no fill is drawn.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen with which to stroke the rectangle.  This is optional, and can be `null`. If the pen is `null`, no stroke is drawn.
    - id: rectangle
      type: System.Windows.Rect
      description: The rectangle to draw.
  overload: System.Windows.Media.DrawingContext.DrawRectangle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  id: DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawRectangle(Brush, Pen, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawRectangle(Brush, Pen, Rect, AnimationClock)
  fullName: DrawingContext.DrawRectangle(Brush, Pen, Rect, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a rectangle with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref> and applies the specified animation clocks.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawRectangle (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Rect rectangle, System.Windows.Media.Animation.AnimationClock rectangleAnimations);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush with which to fill the rectangle.  This is optional, and can be `null`. If the brush is `null`, no fill is drawn.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen with which to stroke the rectangle.  This is optional, and can be `null`. If the pen is `null`, no stroke is drawn.
    - id: rectangle
      type: System.Windows.Rect
      description: The rectangle to draw.
    - id: rectangleAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's size and dimensions, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Rect"></xref> objects.
  overload: System.Windows.Media.DrawingContext.DrawRectangle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  nameWithType: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  fullName: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a rounded rectangle with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref> and applies the specified animation clocks.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawRoundedRectangle (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Rect rectangle, System.Windows.Media.Animation.AnimationClock rectangleAnimations, double radiusX, System.Windows.Media.Animation.AnimationClock radiusXAnimations, double radiusY, System.Windows.Media.Animation.AnimationClock radiusYAnimations);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush used to fill the rectangle, or `null` for no fill.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen used to stroke the rectangle, or `null` for no stroke.
    - id: rectangle
      type: System.Windows.Rect
      description: The rectangle to draw.
    - id: rectangleAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's size and dimensions, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Rect"></xref> objects.
    - id: radiusX
      type: System.Double
      description: The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to <xref href="System.Windows.Rect.Width"></xref>/2
    - id: radiusXAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's <code>radiusX</code> value, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Double"></xref> values.
    - id: radiusY
      type: System.Double
      description: The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to <xref href="System.Windows.Rect.Height"></xref>/2.
    - id: radiusYAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's <code>radiusY</code> value, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Double"></xref> values.
  overload: System.Windows.Media.DrawingContext.DrawRoundedRectangle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)
  commentId: M:System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)
  id: DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
  nameWithType: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
  fullName: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a rounded rectangle with the specified <xref href="System.Windows.Media.Brush"></xref> and <xref href="System.Windows.Media.Pen"></xref>.
  remarks: The brush and the pen can both be `null`.  If the brush is `null`, then no fill is performed.  If the pen is `null`, then no stoke is performed.  If both the pen and the brush are `null`, then the drawing is not visible.
  syntax:
    content: public abstract void DrawRoundedRectangle (System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Rect rectangle, double radiusX, double radiusY);
    parameters:
    - id: brush
      type: System.Windows.Media.Brush
      description: The brush used to fill the rectangle.
    - id: pen
      type: System.Windows.Media.Pen
      description: The pen used to stroke the rectangle.
    - id: rectangle
      type: System.Windows.Rect
      description: The rectangle to draw.
    - id: radiusX
      type: System.Double
      description: The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to <xref href="System.Windows.Rect.Width"></xref>/2.
    - id: radiusY
      type: System.Double
      description: The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to <xref href="System.Windows.Rect.Height"></xref>/2.
  overload: System.Windows.Media.DrawingContext.DrawRoundedRectangle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawText(System.Windows.Media.FormattedText,System.Windows.Point)
  commentId: M:System.Windows.Media.DrawingContext.DrawText(System.Windows.Media.FormattedText,System.Windows.Point)
  id: DrawText(System.Windows.Media.FormattedText,System.Windows.Point)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawText(FormattedText, Point)
  nameWithType: DrawingContext.DrawText(FormattedText, Point)
  fullName: DrawingContext.DrawText(FormattedText, Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws formatted text at the specified location.
  syntax:
    content: public void DrawText (System.Windows.Media.FormattedText formattedText, System.Windows.Point origin);
    parameters:
    - id: formattedText
      type: System.Windows.Media.FormattedText
      description: The formatted text to be drawn.
    - id: origin
      type: System.Windows.Point
      description: The location where the text is to be drawn.
  overload: System.Windows.Media.DrawingContext.DrawText*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has already been closed or disposed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)
  commentId: M:System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)
  id: DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawVideo(MediaPlayer, Rect)
  nameWithType: DrawingContext.DrawVideo(MediaPlayer, Rect)
  fullName: DrawingContext.DrawVideo(MediaPlayer, Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a video into the specified region.
  remarks: Note that the media will be stretched to fit inside the area defined by the rectangle parameter. If rectangle and media have different aspect ratios, distortion will occur. For more control over how media is used to fill an area, use the <xref:System.Windows.Media.DrawingContext.DrawRectangle%2A> command to draw a rectangle and fill it with a <xref:System.Windows.Media.VisualBrush> that contains media.
  syntax:
    content: public abstract void DrawVideo (System.Windows.Media.MediaPlayer player, System.Windows.Rect rectangle);
    parameters:
    - id: player
      type: System.Windows.Media.MediaPlayer
      description: The media to draw.
    - id: rectangle
      type: System.Windows.Rect
      description: The region in which to draw <code>player</code>.
  overload: System.Windows.Media.DrawingContext.DrawVideo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  id: DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: DrawVideo(MediaPlayer, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawVideo(MediaPlayer, Rect, AnimationClock)
  fullName: DrawingContext.DrawVideo(MediaPlayer, Rect, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Draws a video into the specified region and applies the specified animation clock.
  remarks: Note that the media will be stretched to fit inside the area defined by the rectangle parameter. If rectangle and media have different aspect ratios, distortion will occur. For more control over how media is used to fill an area, use the <xref:System.Windows.Media.DrawingContext.DrawRectangle%2A> command to draw a rectangle and fill it with a <xref:System.Windows.Media.VisualBrush> that contains media.
  syntax:
    content: public abstract void DrawVideo (System.Windows.Media.MediaPlayer player, System.Windows.Rect rectangle, System.Windows.Media.Animation.AnimationClock rectangleAnimations);
    parameters:
    - id: player
      type: System.Windows.Media.MediaPlayer
      description: The media to draw.
    - id: rectangle
      type: System.Windows.Rect
      description: The area in which to draw the media.
    - id: rectangleAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the rectangle's size and dimensions, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Windows.Rect"></xref> objects.
  overload: System.Windows.Media.DrawingContext.DrawVideo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.Pop
  commentId: M:System.Windows.Media.DrawingContext.Pop
  id: Pop
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: Pop()
  nameWithType: DrawingContext.Pop()
  fullName: DrawingContext.Pop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pops the last opacity mask, opacity, clip, effect, or transform operation that was pushed onto the drawing context.
  remarks: Once an operation is popped, it is no longer applied to subsequent drawing commands.
  example:
  - "The following example shows the effect of the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.  \n  \n [!code-csharp[DrawingContext_procedural_snip#PopExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingContext_procedural_snip/CSharp/PopExample.cs#popexamplewholepage)]\n [!code-vb[DrawingContext_procedural_snip#PopExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingContext_procedural_snip/visualbasic/popexample.vb#popexamplewholepage)]  \n  \n The following illustration shows this example's output:  \n  \n ![Rectangles drawn with different opacity values](~/add/media/graphicsmm-drawingcontextpopexample.gif \"Rectangles drawn with different opacity values\")"
  syntax:
    content: public abstract void Pop ();
    parameters: []
  overload: System.Windows.Media.DrawingContext.Pop*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushClip(System.Windows.Media.Geometry)
  commentId: M:System.Windows.Media.DrawingContext.PushClip(System.Windows.Media.Geometry)
  id: PushClip(System.Windows.Media.Geometry)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushClip(Geometry)
  nameWithType: DrawingContext.PushClip(Geometry)
  fullName: DrawingContext.PushClip(Geometry)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified clip region onto the drawing context.
  remarks: The clip region applies to all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.
  syntax:
    content: public abstract void PushClip (System.Windows.Media.Geometry clipGeometry);
    parameters:
    - id: clipGeometry
      type: System.Windows.Media.Geometry
      description: The clip region to apply to subsequent drawing commands.
  overload: System.Windows.Media.DrawingContext.PushClip*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)
  commentId: M:System.Windows.Media.DrawingContext.PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)
  id: PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushEffect(BitmapEffect, BitmapEffectInput)
  nameWithType: DrawingContext.PushEffect(BitmapEffect, BitmapEffectInput)
  fullName: DrawingContext.PushEffect(BitmapEffect, BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified <xref href="System.Windows.Media.Effects.BitmapEffect"></xref> onto the drawing context.
  remarks: The effect is applied to all subsequent drawing operations until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.
  example:
  - "The following example demonstrates the <xref:System.Windows.Media.DrawingContext.PushOpacity%2A>, <xref:System.Windows.Media.DrawingContext.PushEffect%2A>, and <xref:System.Windows.Media.DrawingContext.Pop%2A> commands.  \n  \n [!code-csharp[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingContext_procedural_snip/CSharp/PushEffectExample.cs#pusheffectexamplewholepage)]\n [!code-vb[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingContext_procedural_snip/visualbasic/pusheffectexample.vb#pusheffectexamplewholepage)]"
  syntax:
    content: >-
      [System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")]

      public abstract void PushEffect (System.Windows.Media.Effects.BitmapEffect effect, System.Windows.Media.Effects.BitmapEffectInput effectInput);
    parameters:
    - id: effect
      type: System.Windows.Media.Effects.BitmapEffect
      description: The effect to apply to subsequent drawings.
    - id: effectInput
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: The area to which the effect is applied, or `null` if the effect is to be applied to the entire area of subsequent drawings.
  overload: System.Windows.Media.DrawingContext.PushEffect*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushGuidelineSet(System.Windows.Media.GuidelineSet)
  commentId: M:System.Windows.Media.DrawingContext.PushGuidelineSet(System.Windows.Media.GuidelineSet)
  id: PushGuidelineSet(System.Windows.Media.GuidelineSet)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushGuidelineSet(GuidelineSet)
  nameWithType: DrawingContext.PushGuidelineSet(GuidelineSet)
  fullName: DrawingContext.PushGuidelineSet(GuidelineSet)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified <xref href="System.Windows.Media.GuidelineSet"></xref> onto the drawing context.
  remarks: The guideline set applies to all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> operation.
  syntax:
    content: public abstract void PushGuidelineSet (System.Windows.Media.GuidelineSet guidelines);
    parameters:
    - id: guidelines
      type: System.Windows.Media.GuidelineSet
      description: The guideline set to apply to subsequent drawing commands.
  overload: System.Windows.Media.DrawingContext.PushGuidelineSet*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushOpacity(System.Double)
  commentId: M:System.Windows.Media.DrawingContext.PushOpacity(System.Double)
  id: PushOpacity(System.Double)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushOpacity(Double)
  nameWithType: DrawingContext.PushOpacity(Double)
  fullName: DrawingContext.PushOpacity(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified opacity setting onto the drawing context.
  remarks: The opacity is blended into all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.
  example:
  - "The following example demonstrates the <xref:System.Windows.Media.DrawingContext.PushOpacity%2A>, <xref:System.Windows.Media.DrawingContext.PushEffect%2A>, and <xref:System.Windows.Media.DrawingContext.Pop%2A> commands.  \n  \n [!code-csharp[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingContext_procedural_snip/CSharp/PushEffectExample.cs#pusheffectexamplewholepage)]\n [!code-vb[DrawingContext_procedural_snip#PushEffectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingContext_procedural_snip/visualbasic/pusheffectexample.vb#pusheffectexamplewholepage)]"
  syntax:
    content: public abstract void PushOpacity (double opacity);
    parameters:
    - id: opacity
      type: System.Double
      description: The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous <xref href="System.Windows.Media.DrawingContext.PushOpacity(System.Double)"></xref> operations.
  overload: System.Windows.Media.DrawingContext.PushOpacity*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.DrawingContext.PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)
  id: PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushOpacity(Double, AnimationClock)
  nameWithType: DrawingContext.PushOpacity(Double, AnimationClock)
  fullName: DrawingContext.PushOpacity(Double, AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified opacity setting onto the drawing context and applies the specified animation clock.
  remarks: The opacity is blended into all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.
  syntax:
    content: public abstract void PushOpacity (double opacity, System.Windows.Media.Animation.AnimationClock opacityAnimations);
    parameters:
    - id: opacity
      type: System.Double
      description: The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous <xref href="System.Windows.Media.DrawingContext.PushOpacity(System.Double)"></xref> operations.
    - id: opacityAnimations
      type: System.Windows.Media.Animation.AnimationClock
      description: The clock with which to animate the opacity value, or `null` for no animation. This clock must be created from an <xref href="System.Windows.Media.Animation.AnimationTimeline"></xref> that can animate <xref href="System.Double"></xref> values.
  overload: System.Windows.Media.DrawingContext.PushOpacity*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushOpacityMask(System.Windows.Media.Brush)
  commentId: M:System.Windows.Media.DrawingContext.PushOpacityMask(System.Windows.Media.Brush)
  id: PushOpacityMask(System.Windows.Media.Brush)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushOpacityMask(Brush)
  nameWithType: DrawingContext.PushOpacityMask(Brush)
  fullName: DrawingContext.PushOpacityMask(Brush)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified opacity mask onto the drawing context.
  remarks: "The mask is applied to all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> operation.  \n  \n For more information about creating opacity masks, see [Opacity Masks Overview](~/docs/framework/wpf/graphics-multimedia/opacity-masks-overview.md)."
  syntax:
    content: public abstract void PushOpacityMask (System.Windows.Media.Brush opacityMask);
    parameters:
    - id: opacityMask
      type: System.Windows.Media.Brush
      description: The opacity mask to apply to subsequent drawings. The alpha values of this brush determine the opacity of the drawing to which it is applied.
  overload: System.Windows.Media.DrawingContext.PushOpacityMask*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.PushTransform(System.Windows.Media.Transform)
  commentId: M:System.Windows.Media.DrawingContext.PushTransform(System.Windows.Media.Transform)
  id: PushTransform(System.Windows.Media.Transform)
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: PushTransform(Transform)
  nameWithType: DrawingContext.PushTransform(Transform)
  fullName: DrawingContext.PushTransform(Transform)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pushes the specified <xref href="System.Windows.Media.Transform"></xref> onto the drawing context.
  remarks: The transform applies to all subsequent drawing commands until it is removed by the <xref:System.Windows.Media.DrawingContext.Pop%2A> command.
  syntax:
    content: public abstract void PushTransform (System.Windows.Media.Transform transform);
    parameters:
    - id: transform
      type: System.Windows.Media.Transform
      description: The transform to apply to subsequent drawing commands.
  overload: System.Windows.Media.DrawingContext.PushTransform*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange
  commentId: M:System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange
  id: VerifyApiNonstructuralChange
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: VerifyApiNonstructuralChange()
  nameWithType: DrawingContext.VerifyApiNonstructuralChange()
  fullName: DrawingContext.VerifyApiNonstructuralChange()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  syntax:
    content: protected virtual void VerifyApiNonstructuralChange ();
    parameters: []
  overload: System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.DrawingContext.System#IDisposable#Dispose
  commentId: M:System.Windows.Media.DrawingContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Windows.Media.DrawingContext
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: DrawingContext.IDisposable.Dispose()
  fullName: DrawingContext.IDisposable.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Windows.Media.DrawingContext.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Threading.DispatcherObject
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherObject
  nameWithType: DispatcherObject
  fullName: System.Windows.Threading.DispatcherObject
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.Windows.Media.DrawingContext.Close
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: Close()
  nameWithType: DrawingContext.Close()
  fullName: DrawingContext.Close()
- uid: System.Windows.Media.DrawingContext.DisposeCore
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DisposeCore()
  nameWithType: DrawingContext.DisposeCore()
  fullName: DrawingContext.DisposeCore()
- uid: System.Windows.Media.DrawingContext.DrawDrawing(System.Windows.Media.Drawing)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawDrawing(Drawing)
  nameWithType: DrawingContext.DrawDrawing(Drawing)
  fullName: DrawingContext.DrawDrawing(Drawing)
- uid: System.Windows.Media.Drawing
  parent: System.Windows.Media
  isExternal: false
  name: Drawing
  nameWithType: Drawing
  fullName: System.Windows.Media.Drawing
- uid: System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawEllipse(Brush, Pen, Point, Double, Double)
  nameWithType: DrawingContext.DrawEllipse(Brush, Pen, Point, Double, Double)
  fullName: DrawingContext.DrawEllipse(Brush, Pen, Point, Double, Double)
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Pen
  parent: System.Windows.Media
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Windows.Media.Pen
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  nameWithType: DrawingContext.DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  fullName: DrawingContext.DrawEllipse(Brush, Pen, Point, AnimationClock, Double, AnimationClock, Double, AnimationClock)
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.DrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawGeometry(Brush, Pen, Geometry)
  nameWithType: DrawingContext.DrawGeometry(Brush, Pen, Geometry)
  fullName: DrawingContext.DrawGeometry(Brush, Pen, Geometry)
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media.DrawingContext.DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawGlyphRun(Brush, GlyphRun)
  nameWithType: DrawingContext.DrawGlyphRun(Brush, GlyphRun)
  fullName: DrawingContext.DrawGlyphRun(Brush, GlyphRun)
- uid: System.Windows.Media.GlyphRun
  parent: System.Windows.Media
  isExternal: false
  name: GlyphRun
  nameWithType: GlyphRun
  fullName: System.Windows.Media.GlyphRun
- uid: System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawImage(ImageSource, Rect)
  nameWithType: DrawingContext.DrawImage(ImageSource, Rect)
  fullName: DrawingContext.DrawImage(ImageSource, Rect)
- uid: System.Windows.Media.ImageSource
  parent: System.Windows.Media
  isExternal: false
  name: ImageSource
  nameWithType: ImageSource
  fullName: System.Windows.Media.ImageSource
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawImage(ImageSource, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawImage(ImageSource, Rect, AnimationClock)
  fullName: DrawingContext.DrawImage(ImageSource, Rect, AnimationClock)
- uid: System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawLine(Pen, Point, Point)
  nameWithType: DrawingContext.DrawLine(Pen, Point, Point)
  fullName: DrawingContext.DrawLine(Pen, Point, Point)
- uid: System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
  nameWithType: DrawingContext.DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
  fullName: DrawingContext.DrawLine(Pen, Point, AnimationClock, Point, AnimationClock)
- uid: System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRectangle(Brush, Pen, Rect)
  nameWithType: DrawingContext.DrawRectangle(Brush, Pen, Rect)
  fullName: DrawingContext.DrawRectangle(Brush, Pen, Rect)
- uid: System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRectangle(Brush, Pen, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawRectangle(Brush, Pen, Rect, AnimationClock)
  fullName: DrawingContext.DrawRectangle(Brush, Pen, Rect, AnimationClock)
- uid: System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  nameWithType: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
  fullName: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, AnimationClock, Double, AnimationClock, Double, AnimationClock)
- uid: System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
  nameWithType: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
  fullName: DrawingContext.DrawRoundedRectangle(Brush, Pen, Rect, Double, Double)
- uid: System.Windows.Media.DrawingContext.DrawText(System.Windows.Media.FormattedText,System.Windows.Point)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawText(FormattedText, Point)
  nameWithType: DrawingContext.DrawText(FormattedText, Point)
  fullName: DrawingContext.DrawText(FormattedText, Point)
- uid: System.Windows.Media.FormattedText
  parent: System.Windows.Media
  isExternal: false
  name: FormattedText
  nameWithType: FormattedText
  fullName: System.Windows.Media.FormattedText
- uid: System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawVideo(MediaPlayer, Rect)
  nameWithType: DrawingContext.DrawVideo(MediaPlayer, Rect)
  fullName: DrawingContext.DrawVideo(MediaPlayer, Rect)
- uid: System.Windows.Media.MediaPlayer
  parent: System.Windows.Media
  isExternal: false
  name: MediaPlayer
  nameWithType: MediaPlayer
  fullName: System.Windows.Media.MediaPlayer
- uid: System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawVideo(MediaPlayer, Rect, AnimationClock)
  nameWithType: DrawingContext.DrawVideo(MediaPlayer, Rect, AnimationClock)
  fullName: DrawingContext.DrawVideo(MediaPlayer, Rect, AnimationClock)
- uid: System.Windows.Media.DrawingContext.Pop
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: Pop()
  nameWithType: DrawingContext.Pop()
  fullName: DrawingContext.Pop()
- uid: System.Windows.Media.DrawingContext.PushClip(System.Windows.Media.Geometry)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushClip(Geometry)
  nameWithType: DrawingContext.PushClip(Geometry)
  fullName: DrawingContext.PushClip(Geometry)
- uid: System.Windows.Media.DrawingContext.PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushEffect(BitmapEffect, BitmapEffectInput)
  nameWithType: DrawingContext.PushEffect(BitmapEffect, BitmapEffectInput)
  fullName: DrawingContext.PushEffect(BitmapEffect, BitmapEffectInput)
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.DrawingContext.PushGuidelineSet(System.Windows.Media.GuidelineSet)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushGuidelineSet(GuidelineSet)
  nameWithType: DrawingContext.PushGuidelineSet(GuidelineSet)
  fullName: DrawingContext.PushGuidelineSet(GuidelineSet)
- uid: System.Windows.Media.GuidelineSet
  parent: System.Windows.Media
  isExternal: false
  name: GuidelineSet
  nameWithType: GuidelineSet
  fullName: System.Windows.Media.GuidelineSet
- uid: System.Windows.Media.DrawingContext.PushOpacity(System.Double)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushOpacity(Double)
  nameWithType: DrawingContext.PushOpacity(Double)
  fullName: DrawingContext.PushOpacity(Double)
- uid: System.Windows.Media.DrawingContext.PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushOpacity(Double, AnimationClock)
  nameWithType: DrawingContext.PushOpacity(Double, AnimationClock)
  fullName: DrawingContext.PushOpacity(Double, AnimationClock)
- uid: System.Windows.Media.DrawingContext.PushOpacityMask(System.Windows.Media.Brush)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushOpacityMask(Brush)
  nameWithType: DrawingContext.PushOpacityMask(Brush)
  fullName: DrawingContext.PushOpacityMask(Brush)
- uid: System.Windows.Media.DrawingContext.PushTransform(System.Windows.Media.Transform)
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushTransform(Transform)
  nameWithType: DrawingContext.PushTransform(Transform)
  fullName: DrawingContext.PushTransform(Transform)
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: VerifyApiNonstructuralChange()
  nameWithType: DrawingContext.VerifyApiNonstructuralChange()
  fullName: DrawingContext.VerifyApiNonstructuralChange()
- uid: System.Windows.Media.DrawingContext.System#IDisposable#Dispose
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: DrawingContext.IDisposable.Dispose()
  fullName: DrawingContext.IDisposable.Dispose()
- uid: System.Windows.Media.DrawingContext.Close*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: Close
  nameWithType: DrawingContext.Close
  fullName: DrawingContext.Close
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DisposeCore*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DisposeCore
  nameWithType: DrawingContext.DisposeCore
  fullName: DrawingContext.DisposeCore
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawDrawing*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawDrawing
  nameWithType: DrawingContext.DrawDrawing
  fullName: DrawingContext.DrawDrawing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawEllipse*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawEllipse
  nameWithType: DrawingContext.DrawEllipse
  fullName: DrawingContext.DrawEllipse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawGeometry*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawGeometry
  nameWithType: DrawingContext.DrawGeometry
  fullName: DrawingContext.DrawGeometry
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawGlyphRun*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawGlyphRun
  nameWithType: DrawingContext.DrawGlyphRun
  fullName: DrawingContext.DrawGlyphRun
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawImage*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawImage
  nameWithType: DrawingContext.DrawImage
  fullName: DrawingContext.DrawImage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawLine*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawLine
  nameWithType: DrawingContext.DrawLine
  fullName: DrawingContext.DrawLine
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawRectangle*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRectangle
  nameWithType: DrawingContext.DrawRectangle
  fullName: DrawingContext.DrawRectangle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawRoundedRectangle*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawRoundedRectangle
  nameWithType: DrawingContext.DrawRoundedRectangle
  fullName: DrawingContext.DrawRoundedRectangle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawText*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawText
  nameWithType: DrawingContext.DrawText
  fullName: DrawingContext.DrawText
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.DrawVideo*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: DrawVideo
  nameWithType: DrawingContext.DrawVideo
  fullName: DrawingContext.DrawVideo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.Pop*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: Pop
  nameWithType: DrawingContext.Pop
  fullName: DrawingContext.Pop
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushClip*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushClip
  nameWithType: DrawingContext.PushClip
  fullName: DrawingContext.PushClip
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushEffect*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushEffect
  nameWithType: DrawingContext.PushEffect
  fullName: DrawingContext.PushEffect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushGuidelineSet*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushGuidelineSet
  nameWithType: DrawingContext.PushGuidelineSet
  fullName: DrawingContext.PushGuidelineSet
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushOpacity*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushOpacity
  nameWithType: DrawingContext.PushOpacity
  fullName: DrawingContext.PushOpacity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushOpacityMask*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushOpacityMask
  nameWithType: DrawingContext.PushOpacityMask
  fullName: DrawingContext.PushOpacityMask
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.PushTransform*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: PushTransform
  nameWithType: DrawingContext.PushTransform
  fullName: DrawingContext.PushTransform
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: VerifyApiNonstructuralChange
  nameWithType: DrawingContext.VerifyApiNonstructuralChange
  fullName: DrawingContext.VerifyApiNonstructuralChange
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Windows.Media.DrawingContext.System#IDisposable#Dispose*
  parent: System.Windows.Media.DrawingContext
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DrawingContext.System.IDisposable.Dispose
  fullName: DrawingContext.System.IDisposable.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DrawingContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
