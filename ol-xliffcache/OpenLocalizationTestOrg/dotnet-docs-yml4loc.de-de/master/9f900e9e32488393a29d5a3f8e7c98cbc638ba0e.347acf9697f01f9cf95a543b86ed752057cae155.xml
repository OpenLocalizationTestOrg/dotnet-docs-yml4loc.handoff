{"nodes":[{"content":"Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.","nodes":[{"pos":[0,178],"content":"Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.","nodes":[{"content":"Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.","pos":[0,178]}]}],"pos":[1761,1940],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"></xref> class."}],"pos":[5118,5234],"yaml":true},{"content":"There is no supported key size for the current platform.","nodes":[{"pos":[0,56],"content":"There is no supported key size for the current platform.","nodes":[{"content":"There is no supported key size for the current platform.","pos":[0,56]}]}],"pos":[5517,5574],"yaml":true},{"content":"Creates a symmetric AES decryptor object using the current key and initialization vector (IV).","nodes":[{"pos":[0,94],"content":"Creates a symmetric AES decryptor object using the current key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric AES decryptor object using the current key and initialization vector (IV).","pos":[0,94]}]}],"pos":[7755,7850],"yaml":true},{"content":"A symmetric AES decryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES decryptor object.","nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]}],"pos":[8063,8097],"yaml":true},{"content":"The current key is invalid or missing.","nodes":[{"pos":[0,38],"content":"The current key is invalid or missing.","nodes":[{"content":"The current key is invalid or missing.","pos":[0,38]}]}],"pos":[8342,8381],"yaml":true},{"content":"Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).","nodes":[{"pos":[0,96],"content":"Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).","pos":[0,96]}]}],"pos":[9776,9873],"yaml":true},{"content":"A symmetric AES decryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES decryptor object.","nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]}],"pos":[10836,10870],"yaml":true},{"content":"<code>key</code> or <code>iv</code> is `null`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>key</code> or <code>iv</code> is `null`."}],"pos":[11069,11116],"yaml":true},{"content":"<code>key</code> is invalid.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","source":"<code>key</code> is invalid."}],"pos":[11210,11239],"yaml":true},{"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (IV).","nodes":[{"pos":[0,94],"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (IV).","pos":[0,94]}]}],"pos":[12545,12640],"yaml":true},{"content":"A symmetric AES encryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES encryptor object.","nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]}],"pos":[12853,12887],"yaml":true},{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","nodes":[{"pos":[0,92],"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]}],"pos":[14382,14475],"yaml":true},{"content":"See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the `key` and `iv` parameters.","nodes":[{"pos":[0,245],"content":"See the code examples in the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A&gt;</ph> properties to determine the size of the <ph id=\"ph3\">`key`</ph> and <ph id=\"ph4\">`iv`</ph> parameters.","source":"See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the `key` and `iv` parameters."}],"pos":[14486,14732],"yaml":true,"extradata":"MT"},{"content":"A symmetric AES encryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES encryptor object.","nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]}],"pos":[15670,15704],"yaml":true},{"content":"The <code>key</code> or <code>iv</code> parameter is `null`.","nodes":[{"pos":[0,60],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">iv</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>key</code> or <code>iv</code> parameter is `null`."}],"pos":[15903,15964],"yaml":true},{"content":"<code>key</code> is invalid.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","source":"<code>key</code> is invalid."}],"pos":[16058,16087],"yaml":true},{"content":"Generates a random initialization vector (IV) to use for the algorithm.","nodes":[{"pos":[0,71],"content":"Generates a random initialization vector (IV) to use for the algorithm.","nodes":[{"content":"Generates a random initialization vector (IV) to use for the algorithm.","pos":[0,71]}]}],"pos":[19794,19866],"yaml":true},{"content":"The initialization vector (IV) could not be generated.","nodes":[{"pos":[0,54],"content":"The initialization vector (IV) could not be generated.","nodes":[{"content":"The initialization vector (IV) could not be generated.","pos":[0,54]}]}],"pos":[20184,20239],"yaml":true},{"content":"Generates a random key to use for the algorithm.","nodes":[{"pos":[0,48],"content":"Generates a random key to use for the algorithm.","nodes":[{"content":"Generates a random key to use for the algorithm.","pos":[0,48]}]}],"pos":[21521,21570],"yaml":true},{"content":"The key could not be generated.","nodes":[{"pos":[0,31],"content":"The key could not be generated.","nodes":[{"content":"The key could not be generated.","pos":[0,31]}]}],"pos":[21890,21922],"yaml":true},{"content":"Gets or sets the symmetric key that is used for encryption and decryption.","nodes":[{"pos":[0,74],"content":"Gets or sets the symmetric key that is used for encryption and decryption.","nodes":[{"content":"Gets or sets the symmetric key that is used for encryption and decryption.","pos":[0,74]}]}],"pos":[24075,24150],"yaml":true},{"content":"The symmetric key that is used for encryption and decryption.","nodes":[{"pos":[0,61],"content":"The symmetric key that is used for encryption and decryption.","nodes":[{"content":"The symmetric key that is used for encryption and decryption.","pos":[0,61]}]}],"pos":[24271,24333],"yaml":true},{"content":"The value for the key is `null`.","nodes":[{"pos":[0,32],"content":"The value for the key is <ph id=\"ph1\">`null`</ph>.","source":"The value for the key is `null`."}],"pos":[24520,24553],"yaml":true},{"content":"The size of the key is invalid.","nodes":[{"pos":[0,31],"content":"The size of the key is invalid.","nodes":[{"content":"The size of the key is invalid.","pos":[0,31]}]}],"pos":[24701,24733],"yaml":true},{"content":"Gets or sets the size, in bits, of the secret key.","nodes":[{"pos":[0,50],"content":"Gets or sets the size, in bits, of the secret key.","nodes":[{"content":"Gets or sets the size, in bits, of the secret key.","pos":[0,50]}]}],"pos":[25947,25998],"yaml":true},{"content":"The minimum size of the key is 128 bits, and the maximum size is 256 bits.","nodes":[{"pos":[0,74],"content":"The minimum size of the key is 128 bits, and the maximum size is 256 bits.","nodes":[{"content":"The minimum size of the key is 128 bits, and the maximum size is 256 bits.","pos":[0,74]}]}],"pos":[26009,26084],"yaml":true,"extradata":"MT"},{"content":"The size, in bits, of the key.","nodes":[{"pos":[0,30],"content":"The size, in bits, of the key.","nodes":[{"content":"The size, in bits, of the key.","pos":[0,30]}]}],"pos":[26205,26236],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AesCryptoServiceProvider\n  commentId: T:System.Security.Cryptography.AesCryptoServiceProvider\n  id: AesCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.AesCryptoServiceProvider.BlockSize\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize\n  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.AesCryptoServiceProvider.IV\n  - System.Security.Cryptography.AesCryptoServiceProvider.Key\n  - System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  - System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes\n  - System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes\n  - System.Security.Cryptography.AesCryptoServiceProvider.Mode\n  - System.Security.Cryptography.AesCryptoServiceProvider.Padding\n  langs:\n  - csharp\n  name: AesCryptoServiceProvider\n  nameWithType: AesCryptoServiceProvider\n  fullName: System.Security.Cryptography.AesCryptoServiceProvider\n  type: Class\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \\n  \\n [!code-csharp[AesCryptoServProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/aescryptoservprovider/cs/program.cs#1)]\\n [!code-vb[AesCryptoServProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/aescryptoservprovider/vb/program.vb#1)]\"\n  syntax:\n    content: 'public sealed class AesCryptoServiceProvider : System.Security.Cryptography.Aes'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.Aes\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Aes.Create\n  - System.Security.Cryptography.Aes.Create(System.String)\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: AesCryptoServiceProvider()\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()\n  fullName: AesCryptoServiceProvider.AesCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCryptoServiceProvider\"></xref> class.\n  syntax:\n    content: public AesCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: There is no supported key size for the current platform.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.BlockSize\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.BlockSize\n  id: BlockSize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: BlockSize\n  nameWithType: AesCryptoServiceProvider.BlockSize\n  fullName: AesCryptoServiceProvider.BlockSize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int BlockSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.BlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor()\n  fullName: AesCryptoServiceProvider.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The current key is invalid or missing.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: AesCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor%2A?displayProperty=fullName> method to decrypt an encrypted message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \\n  \\n [!code-csharp[AesCryptoServProvider#3](~/samples/snippets/csharp/VS_Snippets_CLR/aescryptoservprovider/cs/program.cs#3)]\\n [!code-vb[AesCryptoServProvider#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/aescryptoservprovider/vb/program.vb#3)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: ''\n    - id: iv\n      type: System.Byte[]\n      description: ''\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor()\n  fullName: AesCryptoServiceProvider.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES encryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: AesCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the specified key and initialization vector (IV).\n  remarks: See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the `key` and `iv` parameters.\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor%2A?displayProperty=fullName> method to encrypt a message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \\n  \\n [!code-csharp[AesCryptoServProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR/aescryptoservprovider/cs/program.cs#2)]\\n [!code-vb[AesCryptoServProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/aescryptoservprovider/vb/program.vb#2)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: ''\n    - id: iv\n      type: System.Byte[]\n      description: ''\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> or <code>iv</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)\n  fullName: AesCryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize\n  id: FeedbackSize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: FeedbackSize\n  nameWithType: AesCryptoServiceProvider.FeedbackSize\n  fullName: AesCryptoServiceProvider.FeedbackSize\n  type: Property\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int FeedbackSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: AesCryptoServiceProvider.GenerateIV()\n  fullName: AesCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (IV) to use for the algorithm.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The initialization vector (IV) could not be generated.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  commentId: M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: AesCryptoServiceProvider.GenerateKey()\n  fullName: AesCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random key to use for the algorithm.\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The key could not be generated.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.IV\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.IV\n  id: IV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: IV\n  nameWithType: AesCryptoServiceProvider.IV\n  fullName: AesCryptoServiceProvider.IV\n  type: Property\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] IV { get; set; }\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.IV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.Key\n  id: Key\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n  fullName: AesCryptoServiceProvider.Key\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the symmetric key that is used for encryption and decryption.\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The symmetric key that is used for encryption and decryption.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Key*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for the key is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the key is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n  fullName: AesCryptoServiceProvider.KeySize\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size, in bits, of the secret key.\n  remarks: The minimum size of the key is 128 bits, and the maximum size is 256 bits.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the key.\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.KeySize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes\n  id: LegalBlockSizes\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: LegalBlockSizes\n  nameWithType: AesCryptoServiceProvider.LegalBlockSizes\n  fullName: AesCryptoServiceProvider.LegalBlockSizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: AesCryptoServiceProvider.LegalKeySizes\n  fullName: AesCryptoServiceProvider.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Mode\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.Mode\n  id: Mode\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: AesCryptoServiceProvider.Mode\n  fullName: AesCryptoServiceProvider.Mode\n  type: Property\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Mode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Padding\n  commentId: P:System.Security.Cryptography.AesCryptoServiceProvider.Padding\n  id: Padding\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: AesCryptoServiceProvider.Padding\n  fullName: AesCryptoServiceProvider.Padding\n  type: Property\n  assemblies:\n  - System.Core\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: ''\n  overload: System.Security.Cryptography.AesCryptoServiceProvider.Padding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\nreferences:\n- uid: System.Security.Cryptography.Aes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Aes\n  nameWithType: Aes\n  fullName: System.Security.Cryptography.Aes\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: AesCryptoServiceProvider()\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()\n  fullName: AesCryptoServiceProvider.AesCryptoServiceProvider()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.BlockSize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: AesCryptoServiceProvider.BlockSize\n  fullName: AesCryptoServiceProvider.BlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor()\n  fullName: AesCryptoServiceProvider.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: AesCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor()\n  fullName: AesCryptoServiceProvider.CreateEncryptor()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: AesCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)\n  fullName: AesCryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesCryptoServiceProvider.FeedbackSize\n  fullName: AesCryptoServiceProvider.FeedbackSize\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: AesCryptoServiceProvider.GenerateIV()\n  fullName: AesCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: AesCryptoServiceProvider.GenerateKey()\n  fullName: AesCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.IV\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: IV\n  nameWithType: AesCryptoServiceProvider.IV\n  fullName: AesCryptoServiceProvider.IV\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n  fullName: AesCryptoServiceProvider.Key\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n  fullName: AesCryptoServiceProvider.KeySize\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: AesCryptoServiceProvider.LegalBlockSizes\n  fullName: AesCryptoServiceProvider.LegalBlockSizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AesCryptoServiceProvider.LegalKeySizes\n  fullName: AesCryptoServiceProvider.LegalKeySizes\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Mode\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Mode\n  nameWithType: AesCryptoServiceProvider.Mode\n  fullName: AesCryptoServiceProvider.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Padding\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Padding\n  nameWithType: AesCryptoServiceProvider.Padding\n  fullName: AesCryptoServiceProvider.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: AesCryptoServiceProvider\n  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider\n  fullName: AesCryptoServiceProvider.AesCryptoServiceProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.BlockSize*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: AesCryptoServiceProvider.BlockSize\n  fullName: AesCryptoServiceProvider.BlockSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: AesCryptoServiceProvider.CreateDecryptor\n  fullName: AesCryptoServiceProvider.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: AesCryptoServiceProvider.CreateEncryptor\n  fullName: AesCryptoServiceProvider.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: AesCryptoServiceProvider.Dispose\n  fullName: AesCryptoServiceProvider.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesCryptoServiceProvider.FeedbackSize\n  fullName: AesCryptoServiceProvider.FeedbackSize\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: AesCryptoServiceProvider.GenerateIV\n  fullName: AesCryptoServiceProvider.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: AesCryptoServiceProvider.GenerateKey\n  fullName: AesCryptoServiceProvider.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.IV*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: IV\n  nameWithType: AesCryptoServiceProvider.IV\n  fullName: AesCryptoServiceProvider.IV\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: AesCryptoServiceProvider.Key\n  fullName: AesCryptoServiceProvider.Key\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCryptoServiceProvider.KeySize\n  fullName: AesCryptoServiceProvider.KeySize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: AesCryptoServiceProvider.LegalBlockSizes\n  fullName: AesCryptoServiceProvider.LegalBlockSizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AesCryptoServiceProvider.LegalKeySizes\n  fullName: AesCryptoServiceProvider.LegalKeySizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Mode*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Mode\n  nameWithType: AesCryptoServiceProvider.Mode\n  fullName: AesCryptoServiceProvider.Mode\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.AesCryptoServiceProvider.Padding*\n  parent: System.Security.Cryptography.AesCryptoServiceProvider\n  isExternal: false\n  name: Padding\n  nameWithType: AesCryptoServiceProvider.Padding\n  fullName: AesCryptoServiceProvider.Padding\n  monikers:\n  - netcore-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCryptoServiceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.Aes.Create\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create()\n  nameWithType: Aes.Create()\n  fullName: Aes.Create()\n- uid: System.Security.Cryptography.Aes.Create(System.String)\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create(String)\n  nameWithType: Aes.Create(String)\n  fullName: Aes.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}