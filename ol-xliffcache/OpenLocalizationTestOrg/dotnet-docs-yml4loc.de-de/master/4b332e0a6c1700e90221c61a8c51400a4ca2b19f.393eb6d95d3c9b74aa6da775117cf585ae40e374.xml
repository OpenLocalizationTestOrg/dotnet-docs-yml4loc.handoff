{"nodes":[{"content":"Contains constants for controlling the kind of access other <xref href=\"System.IO.FileStream\"></xref> objects can have to the same file.","nodes":[{"pos":[0,136],"content":"Contains constants for controlling the kind of access other <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> objects can have to the same file.","source":"Contains constants for controlling the kind of access other <xref href=\"System.IO.FileStream\"></xref> objects can have to the same file."}],"pos":[556,693],"yaml":true},{"content":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \n  \n A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.  \n  \n A <xref:System.IO.FileShare.Read> parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.","nodes":[{"pos":[0,475],"content":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).","nodes":[{"content":"For an example of creating a file and writing text to a file, see <bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.","pos":[0,148],"source":"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)."},{"content":"For an example of reading text from a file, see <bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.","pos":[149,281],"source":" For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)."},{"content":"For an example of reading from and writing to a binary file, see <bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.","pos":[282,475],"source":" For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)."}]},{"pos":[482,713],"content":"A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.","nodes":[{"content":"A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.","pos":[0,231],"nodes":[{"content":"A typical use of this enumeration is to define whether two processes can simultaneously read from the same file.","pos":[0,112]},{"content":"For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.","pos":[113,231]}]}]},{"pos":[720,1019],"content":"A <ph id=\"ph1\">&lt;xref:System.IO.FileShare.Read&gt;</ph> parameter is specified in some of the constructors for <ph id=\"ph2\">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>, and in some of the <ph id=\"ph4\">`Open`</ph> methods of <ph id=\"ph5\">&lt;xref:System.IO.File&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.IO.FileInfo&gt;</ph> to control how a file is opened.","source":"A <xref:System.IO.FileShare.Read> parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened."}],"pos":[704,1730],"yaml":true,"extradata":"MT"},{"content":"Allows subsequent deleting of a file.","nodes":[{"pos":[0,37],"content":"Allows subsequent deleting of a file.","nodes":[{"content":"Allows subsequent deleting of a file.","pos":[0,37]}]}],"pos":[3867,3905],"yaml":true},{"content":"Makes the file handle inheritable by child processes. This is not directly supported by Win32.","nodes":[{"pos":[0,94],"content":"Makes the file handle inheritable by child processes. This is not directly supported by Win32.","nodes":[{"content":"Makes the file handle inheritable by child processes. This is not directly supported by Win32.","pos":[0,94],"nodes":[{"content":"Makes the file handle inheritable by child processes.","pos":[0,53]},{"content":"This is not directly supported by Win32.","pos":[54,94]}]}]}],"pos":[5213,5308],"yaml":true},{"content":"Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.","nodes":[{"pos":[0,139],"content":"Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.","nodes":[{"content":"Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.","pos":[0,139],"nodes":[{"content":"Declines sharing of the current file.","pos":[0,37]},{"content":"Any request to open the file (by this process or another process) will fail until the file is closed.","pos":[38,139]}]}]}],"pos":[6579,6719],"yaml":true},{"content":"Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"pos":[0,301],"content":"Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"content":"Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[0,301],"nodes":[{"content":"Allows subsequent opening of the file for reading.","pos":[0,50]},{"content":"If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed.","pos":[51,195]},{"content":"However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[196,301]}]}]}],"pos":[7983,8285],"yaml":true},{"content":"Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"pos":[0,323],"content":"Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"content":"Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[0,323],"nodes":[{"content":"Allows subsequent opening of the file for reading or writing.","pos":[0,61]},{"content":"If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed.","pos":[62,217]},{"content":"However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[218,323]}]}]}],"pos":[9579,9903],"yaml":true},{"content":"Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"pos":[0,301],"content":"Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","nodes":[{"content":"Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[0,301],"nodes":[{"content":"Allows subsequent opening of the file for writing.","pos":[0,50]},{"content":"If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed.","pos":[51,195]},{"content":"However, even if this flag is specified, additional permissions might still be needed to access the file.","pos":[196,301]}]}]}],"pos":[11178,11480],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.FileShare\n  commentId: T:System.IO.FileShare\n  id: FileShare\n  children:\n  - System.IO.FileShare.Delete\n  - System.IO.FileShare.Inheritable\n  - System.IO.FileShare.None\n  - System.IO.FileShare.Read\n  - System.IO.FileShare.ReadWrite\n  - System.IO.FileShare.Write\n  langs:\n  - csharp\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n  type: Enum\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Contains constants for controlling the kind of access other <xref href=\"System.IO.FileStream\"></xref> objects can have to the same file.\n  remarks: \"For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \\n  \\n A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.  \\n  \\n A <xref:System.IO.FileShare.Read> parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.\"\n  example:\n  - \"The following <xref:System.IO.FileStream> constructor opens an existing file and grants read-only access to other users (Read).  \\n  \\n [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]\\n [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FileShare\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileShare.Delete\n  commentId: F:System.IO.FileShare.Delete\n  id: Delete\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: Delete\n  nameWithType: FileShare.Delete\n  fullName: FileShare.Delete\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Allows subsequent deleting of a file.\n  syntax:\n    content: Delete\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n- uid: System.IO.FileShare.Inheritable\n  commentId: F:System.IO.FileShare.Inheritable\n  id: Inheritable\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: Inheritable\n  nameWithType: FileShare.Inheritable\n  fullName: FileShare.Inheritable\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Makes the file handle inheritable by child processes. This is not directly supported by Win32.\n  syntax:\n    content: Inheritable\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n- uid: System.IO.FileShare.None\n  commentId: F:System.IO.FileShare.None\n  id: None\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: None\n  nameWithType: FileShare.None\n  fullName: FileShare.None\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed.\n  syntax:\n    content: None\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n- uid: System.IO.FileShare.Read\n  commentId: F:System.IO.FileShare.Read\n  id: Read\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: Read\n  nameWithType: FileShare.Read\n  fullName: FileShare.Read\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.\n  syntax:\n    content: Read\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n- uid: System.IO.FileShare.ReadWrite\n  commentId: F:System.IO.FileShare.ReadWrite\n  id: ReadWrite\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: ReadWrite\n  nameWithType: FileShare.ReadWrite\n  fullName: FileShare.ReadWrite\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.\n  syntax:\n    content: ReadWrite\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\n- uid: System.IO.FileShare.Write\n  commentId: F:System.IO.FileShare.Write\n  id: Write\n  parent: System.IO.FileShare\n  langs:\n  - csharp\n  name: Write\n  nameWithType: FileShare.Write\n  fullName: FileShare.Write\n  type: Field\n  assemblies:\n  - System.IO.FileSystem.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file.\n  syntax:\n    content: Write\n    return:\n      type: System.IO.FileShare\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileShare.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.IO.FileShare.Delete\n  parent: System.IO.FileShare\n  isExternal: false\n  name: Delete\n  nameWithType: FileShare.Delete\n  fullName: FileShare.Delete\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n- uid: System.IO.FileShare.Inheritable\n  parent: System.IO.FileShare\n  isExternal: false\n  name: Inheritable\n  nameWithType: FileShare.Inheritable\n  fullName: FileShare.Inheritable\n- uid: System.IO.FileShare.None\n  parent: System.IO.FileShare\n  isExternal: false\n  name: None\n  nameWithType: FileShare.None\n  fullName: FileShare.None\n- uid: System.IO.FileShare.Read\n  parent: System.IO.FileShare\n  isExternal: false\n  name: Read\n  nameWithType: FileShare.Read\n  fullName: FileShare.Read\n- uid: System.IO.FileShare.ReadWrite\n  parent: System.IO.FileShare\n  isExternal: false\n  name: ReadWrite\n  nameWithType: FileShare.ReadWrite\n  fullName: FileShare.ReadWrite\n- uid: System.IO.FileShare.Write\n  parent: System.IO.FileShare\n  isExternal: false\n  name: Write\n  nameWithType: FileShare.Write\n  fullName: FileShare.Write\n"}