### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OperationContext
  commentId: T:System.ServiceModel.OperationContext
  id: OperationContext
  children:
  - System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)
  - System.ServiceModel.OperationContext.Channel
  - System.ServiceModel.OperationContext.ClaimsPrincipal
  - System.ServiceModel.OperationContext.Current
  - System.ServiceModel.OperationContext.EndpointDispatcher
  - System.ServiceModel.OperationContext.Extensions
  - System.ServiceModel.OperationContext.GetCallbackChannel``1
  - System.ServiceModel.OperationContext.HasSupportingTokens
  - System.ServiceModel.OperationContext.Host
  - System.ServiceModel.OperationContext.IncomingMessageHeaders
  - System.ServiceModel.OperationContext.IncomingMessageProperties
  - System.ServiceModel.OperationContext.IncomingMessageVersion
  - System.ServiceModel.OperationContext.InstanceContext
  - System.ServiceModel.OperationContext.IsUserContext
  - System.ServiceModel.OperationContext.OperationCompleted
  - System.ServiceModel.OperationContext.OutgoingMessageHeaders
  - System.ServiceModel.OperationContext.OutgoingMessageProperties
  - System.ServiceModel.OperationContext.RequestContext
  - System.ServiceModel.OperationContext.ServiceSecurityContext
  - System.ServiceModel.OperationContext.SessionId
  - System.ServiceModel.OperationContext.SetTransactionComplete
  - System.ServiceModel.OperationContext.SupportingTokens
  langs:
  - csharp
  name: OperationContext
  nameWithType: OperationContext
  fullName: System.ServiceModel.OperationContext
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Provides access to the execution context of a service method.
  remarks: "Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment. In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.  \n  \n For more information about using extensions to store state data, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).  \n  \n The <xref:System.ServiceModel.OperationContext> has the following properties and methods.  \n  \n-   The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.  \n  \n-   The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.  \n  \n-   The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=fullName>.  \n  \n-   The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.  \n  \n-   The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.  \n  \n-   The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.  \n  \n-   The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.  \n  \n-   The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.  \n  \n-   The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.  \n  \n-   The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.  \n  \n-   The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.  \n  \n-   The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.  \n  \n-   The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.  \n  \n-   The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction."
  example:
  - "The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method. All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently. In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.  \n  \n [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]\n [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  \n  \n The following client implements the `SampleDuplexHelloCallback` to receive the callback message. The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example. Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.  \n  \n> [!NOTE]\n>  For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.  \n  \n [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]\n [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]"
  syntax:
    content: 'public sealed class OperationContext : System.ServiceModel.IExtensibleObject<System.ServiceModel.OperationContext>'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.OperationContext}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)
  commentId: M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)
  id: '#ctor(System.ServiceModel.IContextChannel)'
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: OperationContext(IContextChannel)
  nameWithType: OperationContext.OperationContext(IContextChannel)
  fullName: OperationContext.OperationContext(IContextChannel)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.OperationContext"></xref> class that uses the specified <xref href="System.ServiceModel.IContextChannel"></xref> in a client application.
  remarks: Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.
  example:
  - "The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.  \n  \n [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]\n [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]"
  syntax:
    content: public OperationContext (System.ServiceModel.IContextChannel channel);
    parameters:
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: The <xref href="System.ServiceModel.IContextChannel"></xref> used to create a new client <xref href="System.ServiceModel.OperationContext"></xref>.
  overload: System.ServiceModel.OperationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The channel is null.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.Channel
  commentId: P:System.ServiceModel.OperationContext.Channel
  id: Channel
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: Channel
  nameWithType: OperationContext.Channel
  fullName: OperationContext.Channel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the channel associated with the current <xref href="System.ServiceModel.OperationContext"></xref> object.
  syntax:
    content: public System.ServiceModel.IContextChannel Channel { get; }
    return:
      type: System.ServiceModel.IContextChannel
      description: An <xref href="System.ServiceModel.IContextChannel"></xref> associated with the current <xref href="System.ServiceModel.OperationContext"></xref>.
  overload: System.ServiceModel.OperationContext.Channel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.ClaimsPrincipal
  commentId: P:System.ServiceModel.OperationContext.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: ClaimsPrincipal
  nameWithType: OperationContext.ClaimsPrincipal
  fullName: OperationContext.ClaimsPrincipal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the claims-based principal associated with the operation.
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: The claims principal.
  overload: System.ServiceModel.OperationContext.ClaimsPrincipal*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.Current
  commentId: P:System.ServiceModel.OperationContext.Current
  id: Current
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: Current
  nameWithType: OperationContext.Current
  fullName: OperationContext.Current
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the execution context for the current thread.
  remarks: Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.
  example:
  - "The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method. All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently. In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.  \n  \n [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]\n [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]"
  syntax:
    content: public static System.ServiceModel.OperationContext Current { get; set; }
    return:
      type: System.ServiceModel.OperationContext
      description: The <xref href="System.ServiceModel.OperationContext"></xref> that represents the messaging and execution context of the current method.
  overload: System.ServiceModel.OperationContext.Current*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.EndpointDispatcher
  commentId: P:System.ServiceModel.OperationContext.EndpointDispatcher
  id: EndpointDispatcher
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: EndpointDispatcher
  nameWithType: OperationContext.EndpointDispatcher
  fullName: OperationContext.EndpointDispatcher
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.
  syntax:
    content: public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.EndpointDispatcher
      description: The endpoint dispatcher for the endpoint to inspect or modify.
  overload: System.ServiceModel.OperationContext.EndpointDispatcher*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.Extensions
  commentId: P:System.ServiceModel.OperationContext.Extensions
  id: Extensions
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: Extensions
  nameWithType: OperationContext.Extensions
  fullName: OperationContext.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the collection of service extensions from the current message context.
  remarks: Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state. For more information about extensions, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.OperationContext> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.OperationContext}
      description: A collection of extensions of <xref href="System.ServiceModel.OperationContext"></xref>.
  overload: System.ServiceModel.OperationContext.Extensions*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.GetCallbackChannel``1
  commentId: M:System.ServiceModel.OperationContext.GetCallbackChannel``1
  id: GetCallbackChannel``1
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: GetCallbackChannel<T>()
  nameWithType: OperationContext.GetCallbackChannel<T>()
  fullName: OperationContext.GetCallbackChannel<T>()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a channel to the client instance that called the current operation.
  remarks: Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.
  example:
  - "The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation. All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently. In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.  \n  \n [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]\n [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  \n  \n The following client implements the `SampleDuplexHelloCallback` to receive the callback message. The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example. Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.  \n  \n> [!NOTE]\n>  For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.  \n  \n [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]\n [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]"
  syntax:
    content: public T GetCallbackChannel<T> ();
    parameters: []
    typeParameters:
    - id: T
      description: The type of channel used to call back to the client.
    return:
      type: T
      description: A channel to the client instance that called the operation of the type specified in the <xref href="System.ServiceModel.ServiceContractAttribute.CallbackContract"></xref> property.
  overload: System.ServiceModel.OperationContext.GetCallbackChannel``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.HasSupportingTokens
  commentId: P:System.ServiceModel.OperationContext.HasSupportingTokens
  id: HasSupportingTokens
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: HasSupportingTokens
  nameWithType: OperationContext.HasSupportingTokens
  fullName: OperationContext.HasSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a value that indicates whether the incoming message has supporting tokens.
  syntax:
    content: public bool HasSupportingTokens { get; }
    return:
      type: System.Boolean
      description: '`true` if the incoming message has supporting tokens; otherwise, `false`.'
  overload: System.ServiceModel.OperationContext.HasSupportingTokens*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.Host
  commentId: P:System.ServiceModel.OperationContext.Host
  id: Host
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: Host
  nameWithType: OperationContext.Host
  fullName: OperationContext.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the <xref href="System.ServiceModel.ServiceHost"></xref> for the current service object.
  syntax:
    content: public System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: A <xref href="System.ServiceModel.ServiceHost"></xref> object.
  overload: System.ServiceModel.OperationContext.Host*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.IncomingMessageHeaders
  commentId: P:System.ServiceModel.OperationContext.IncomingMessageHeaders
  id: IncomingMessageHeaders
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: IncomingMessageHeaders
  nameWithType: OperationContext.IncomingMessageHeaders
  fullName: OperationContext.IncomingMessageHeaders
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the incoming message headers for the <xref href="System.ServiceModel.OperationContext"></xref>.
  remarks: Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.
  example:
  - "The following code example shows how to read the incoming message headers in a service operation.  \n  \n [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]\n [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]"
  syntax:
    content: public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }
    return:
      type: System.ServiceModel.Channels.MessageHeaders
      description: A <xref href="System.ServiceModel.Channels.MessageHeaders"></xref> object that contains the incoming message headers.
  overload: System.ServiceModel.OperationContext.IncomingMessageHeaders*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.IncomingMessageProperties
  commentId: P:System.ServiceModel.OperationContext.IncomingMessageProperties
  id: IncomingMessageProperties
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: IncomingMessageProperties
  nameWithType: OperationContext.IncomingMessageProperties
  fullName: OperationContext.IncomingMessageProperties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the message properties for the incoming message in the <xref href="System.ServiceModel.OperationContext"></xref>.
  remarks: Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.
  syntax:
    content: public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }
    return:
      type: System.ServiceModel.Channels.MessageProperties
      description: A <xref href="System.ServiceModel.Channels.MessageProperties"></xref> object that contains the message properties on the incoming message.
  overload: System.ServiceModel.OperationContext.IncomingMessageProperties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.IncomingMessageVersion
  commentId: P:System.ServiceModel.OperationContext.IncomingMessageVersion
  id: IncomingMessageVersion
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: IncomingMessageVersion
  nameWithType: OperationContext.IncomingMessageVersion
  fullName: OperationContext.IncomingMessageVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the incoming SOAP message version for the <xref href="System.ServiceModel.OperationContext"></xref>.
  remarks: Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.
  syntax:
    content: public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: The SOAP version of the incoming message.
  overload: System.ServiceModel.OperationContext.IncomingMessageVersion*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.InstanceContext
  commentId: P:System.ServiceModel.OperationContext.InstanceContext
  id: InstanceContext
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: InstanceContext
  nameWithType: OperationContext.InstanceContext
  fullName: OperationContext.InstanceContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the <xref href="System.ServiceModel.InstanceContext"></xref> object that manages the current service instance.
  remarks: Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.
  syntax:
    content: public System.ServiceModel.InstanceContext InstanceContext { get; }
    return:
      type: System.ServiceModel.InstanceContext
      description: The <xref href="System.ServiceModel.InstanceContext"></xref> object for the current service.
  overload: System.ServiceModel.OperationContext.InstanceContext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.IsUserContext
  commentId: P:System.ServiceModel.OperationContext.IsUserContext
  id: IsUserContext
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: IsUserContext
  nameWithType: OperationContext.IsUserContext
  fullName: OperationContext.IsUserContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: This property is intended for system use and should not be called by users.
  syntax:
    content: public bool IsUserContext { get; }
    return:
      type: System.Boolean
      description: '`true`.'
  overload: System.ServiceModel.OperationContext.IsUserContext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.OperationCompleted
  commentId: E:System.ServiceModel.OperationContext.OperationCompleted
  id: OperationCompleted
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: OperationCompleted
  nameWithType: OperationContext.OperationCompleted
  fullName: OperationContext.OperationCompleted
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Occurs when the operation has completed.
  remarks: "Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=fullName> to `false`. Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=fullName> to `false` to prevent [!INCLUDE[indigo2](~/includes/indigo2-md.md)] from calling <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> on the parameter and return value objects.  However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.  \n  \n Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.  \n  \n> [!NOTE]\n>  If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=fullName> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=fullName> operation, it is possible to block when the response is received. The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler."
  syntax:
    content: public event EventHandler OperationCompleted;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.OutgoingMessageHeaders
  commentId: P:System.ServiceModel.OperationContext.OutgoingMessageHeaders
  id: OutgoingMessageHeaders
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: OutgoingMessageHeaders
  nameWithType: OperationContext.OutgoingMessageHeaders
  fullName: OperationContext.OutgoingMessageHeaders
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the outgoing message headers for the active <xref href="System.ServiceModel.OperationContext"></xref>.
  remarks: Use this property to add reply headers that are sent by a service operation or request headers that are sent by a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object.
  example:
  - "The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.  \n  \n [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]\n [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]"
  syntax:
    content: public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }
    return:
      type: System.ServiceModel.Channels.MessageHeaders
      description: A <xref href="System.ServiceModel.Channels.MessageHeaders"></xref> object that contains outbound message headers for the active <xref href="System.ServiceModel.OperationContext"></xref>.
  overload: System.ServiceModel.OperationContext.OutgoingMessageHeaders*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.OutgoingMessageProperties
  commentId: P:System.ServiceModel.OperationContext.OutgoingMessageProperties
  id: OutgoingMessageProperties
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: OutgoingMessageProperties
  nameWithType: OperationContext.OutgoingMessageProperties
  fullName: OperationContext.OutgoingMessageProperties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the message properties for the outbound message in the active <xref href="System.ServiceModel.OperationContext"></xref>.
  remarks: Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.
  syntax:
    content: public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }
    return:
      type: System.ServiceModel.Channels.MessageProperties
      description: A <xref href="System.ServiceModel.Channels.MessageProperties"></xref> object that contains the message properties on the outbound message.
  overload: System.ServiceModel.OperationContext.OutgoingMessageProperties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.RequestContext
  commentId: P:System.ServiceModel.OperationContext.RequestContext
  id: RequestContext
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: RequestContext
  nameWithType: OperationContext.RequestContext
  fullName: OperationContext.RequestContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the <xref href="System.ServiceModel.Channels.RequestContext"></xref> implementation for this method.
  remarks: One-way operations are do not have a request context.
  syntax:
    content: public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: An <xref href="System.ServiceModel.Channels.RequestContext"></xref> implementation, or null if there is no request context.
  overload: System.ServiceModel.OperationContext.RequestContext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.ServiceSecurityContext
  commentId: P:System.ServiceModel.OperationContext.ServiceSecurityContext
  id: ServiceSecurityContext
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: ServiceSecurityContext
  nameWithType: OperationContext.ServiceSecurityContext
  fullName: OperationContext.ServiceSecurityContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the <xref href="System.ServiceModel.ServiceSecurityContext"></xref> within which this method executes.
  syntax:
    content: public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }
    return:
      type: System.ServiceModel.ServiceSecurityContext
      description: A <xref href="System.ServiceModel.ServiceSecurityContext"></xref> object.
  overload: System.ServiceModel.OperationContext.ServiceSecurityContext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.SessionId
  commentId: P:System.ServiceModel.OperationContext.SessionId
  id: SessionId
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: SessionId
  nameWithType: OperationContext.SessionId
  fullName: OperationContext.SessionId
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the <xref href="System.String"></xref> used to identify the current session.
  syntax:
    content: public string SessionId { get; }
    return:
      type: System.String
      description: The session identifier.
  overload: System.ServiceModel.OperationContext.SessionId*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.SetTransactionComplete
  commentId: M:System.ServiceModel.OperationContext.SetTransactionComplete
  id: SetTransactionComplete
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: SetTransactionComplete()
  nameWithType: OperationContext.SetTransactionComplete()
  fullName: OperationContext.SetTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Commits the currently executing transaction.
  remarks: This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=fullName> to `false`. Typically, services do this on some but not all operations. When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=fullName> is false the transaction completes automatically. Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.
  syntax:
    content: public void SetTransactionComplete ();
    parameters: []
  overload: System.ServiceModel.OperationContext.SetTransactionComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: There is no transaction in the context.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContext.SupportingTokens
  commentId: P:System.ServiceModel.OperationContext.SupportingTokens
  id: SupportingTokens
  parent: System.ServiceModel.OperationContext
  langs:
  - csharp
  name: SupportingTokens
  nameWithType: OperationContext.SupportingTokens
  fullName: OperationContext.SupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a <xref href="System.Collections.Generic.ICollection`1"></xref> of type <xref href="System.IdentityModel.Tokens.SecurityToken"></xref>.
  syntax:
    content: public System.Collections.Generic.ICollection<System.ServiceModel.Security.SupportingTokenSpecification> SupportingTokens { get; }
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Security.SupportingTokenSpecification}
      description: A collection of security tokens.
  overload: System.ServiceModel.OperationContext.SupportingTokens*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OperationContext(IContextChannel)
  nameWithType: OperationContext.OperationContext(IContextChannel)
  fullName: OperationContext.OperationContext(IContextChannel)
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: false
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.OperationContext.Channel
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Channel
  nameWithType: OperationContext.Channel
  fullName: OperationContext.Channel
- uid: System.ServiceModel.OperationContext.ClaimsPrincipal
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: OperationContext.ClaimsPrincipal
  fullName: OperationContext.ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.ServiceModel.OperationContext.Current
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Current
  nameWithType: OperationContext.Current
  fullName: OperationContext.Current
- uid: System.ServiceModel.OperationContext
  parent: System.ServiceModel
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: System.ServiceModel.OperationContext
- uid: System.ServiceModel.OperationContext.EndpointDispatcher
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: EndpointDispatcher
  nameWithType: OperationContext.EndpointDispatcher
  fullName: OperationContext.EndpointDispatcher
- uid: System.ServiceModel.Dispatcher.EndpointDispatcher
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: EndpointDispatcher
  nameWithType: EndpointDispatcher
  fullName: System.ServiceModel.Dispatcher.EndpointDispatcher
- uid: System.ServiceModel.OperationContext.Extensions
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Extensions
  nameWithType: OperationContext.Extensions
  fullName: OperationContext.Extensions
- uid: System.ServiceModel.IExtensionCollection`1
  name: IExtensionCollection<T>
  nameWithType: IExtensionCollection<T>
  fullName: System.ServiceModel.IExtensionCollection<T>
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.OperationContext}
  parent: System.ServiceModel
  isExternal: false
  name: IExtensionCollection<OperationContext>
  nameWithType: IExtensionCollection<OperationContext>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.OperationContext>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: System.ServiceModel.OperationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.OperationContext.GetCallbackChannel``1
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: GetCallbackChannel<T>()
  nameWithType: OperationContext.GetCallbackChannel<T>()
  fullName: OperationContext.GetCallbackChannel<T>()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.OperationContext.HasSupportingTokens
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: HasSupportingTokens
  nameWithType: OperationContext.HasSupportingTokens
  fullName: OperationContext.HasSupportingTokens
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.OperationContext.Host
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Host
  nameWithType: OperationContext.Host
  fullName: OperationContext.Host
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.OperationContext.IncomingMessageHeaders
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageHeaders
  nameWithType: OperationContext.IncomingMessageHeaders
  fullName: OperationContext.IncomingMessageHeaders
- uid: System.ServiceModel.Channels.MessageHeaders
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageHeaders
  nameWithType: MessageHeaders
  fullName: System.ServiceModel.Channels.MessageHeaders
- uid: System.ServiceModel.OperationContext.IncomingMessageProperties
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageProperties
  nameWithType: OperationContext.IncomingMessageProperties
  fullName: OperationContext.IncomingMessageProperties
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.OperationContext.IncomingMessageVersion
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageVersion
  nameWithType: OperationContext.IncomingMessageVersion
  fullName: OperationContext.IncomingMessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.OperationContext.InstanceContext
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: InstanceContext
  nameWithType: OperationContext.InstanceContext
  fullName: OperationContext.InstanceContext
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.OperationContext.IsUserContext
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IsUserContext
  nameWithType: OperationContext.IsUserContext
  fullName: OperationContext.IsUserContext
- uid: System.ServiceModel.OperationContext.OperationCompleted
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OperationCompleted
  nameWithType: OperationContext.OperationCompleted
  fullName: OperationContext.OperationCompleted
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.OperationContext.OutgoingMessageHeaders
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OutgoingMessageHeaders
  nameWithType: OperationContext.OutgoingMessageHeaders
  fullName: OperationContext.OutgoingMessageHeaders
- uid: System.ServiceModel.OperationContext.OutgoingMessageProperties
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OutgoingMessageProperties
  nameWithType: OperationContext.OutgoingMessageProperties
  fullName: OperationContext.OutgoingMessageProperties
- uid: System.ServiceModel.OperationContext.RequestContext
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: RequestContext
  nameWithType: OperationContext.RequestContext
  fullName: OperationContext.RequestContext
- uid: System.ServiceModel.Channels.RequestContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
- uid: System.ServiceModel.OperationContext.ServiceSecurityContext
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: OperationContext.ServiceSecurityContext
  fullName: OperationContext.ServiceSecurityContext
- uid: System.ServiceModel.ServiceSecurityContext
  parent: System.ServiceModel
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext
  fullName: System.ServiceModel.ServiceSecurityContext
- uid: System.ServiceModel.OperationContext.SessionId
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SessionId
  nameWithType: OperationContext.SessionId
  fullName: OperationContext.SessionId
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.OperationContext.SetTransactionComplete
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SetTransactionComplete()
  nameWithType: OperationContext.SetTransactionComplete()
  fullName: OperationContext.SetTransactionComplete()
- uid: System.ServiceModel.OperationContext.SupportingTokens
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SupportingTokens
  nameWithType: OperationContext.SupportingTokens
  fullName: OperationContext.SupportingTokens
- uid: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
- uid: System.ServiceModel.Security.SupportingTokenSpecification
  name: SupportingTokenSpecification
  nameWithType: SupportingTokenSpecification
  fullName: System.ServiceModel.Security.SupportingTokenSpecification
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Security.SupportingTokenSpecification}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<SupportingTokenSpecification>
  nameWithType: ICollection<SupportingTokenSpecification>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Security.SupportingTokenSpecification>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.SupportingTokenSpecification
    name: SupportingTokenSpecification
    nameWithType: SupportingTokenSpecification
    fullName: System.ServiceModel.Security.SupportingTokenSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.OperationContext.#ctor*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext.OperationContext
  fullName: OperationContext.OperationContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.Channel*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Channel
  nameWithType: OperationContext.Channel
  fullName: OperationContext.Channel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.ClaimsPrincipal*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: OperationContext.ClaimsPrincipal
  fullName: OperationContext.ClaimsPrincipal
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.Current*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Current
  nameWithType: OperationContext.Current
  fullName: OperationContext.Current
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.EndpointDispatcher*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: EndpointDispatcher
  nameWithType: OperationContext.EndpointDispatcher
  fullName: OperationContext.EndpointDispatcher
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.Extensions*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Extensions
  nameWithType: OperationContext.Extensions
  fullName: OperationContext.Extensions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.GetCallbackChannel``1*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: GetCallbackChannel<T>
  nameWithType: OperationContext.GetCallbackChannel<T>
  fullName: OperationContext.GetCallbackChannel<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.HasSupportingTokens*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: HasSupportingTokens
  nameWithType: OperationContext.HasSupportingTokens
  fullName: OperationContext.HasSupportingTokens
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.Host*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: Host
  nameWithType: OperationContext.Host
  fullName: OperationContext.Host
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.IncomingMessageHeaders*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageHeaders
  nameWithType: OperationContext.IncomingMessageHeaders
  fullName: OperationContext.IncomingMessageHeaders
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.IncomingMessageProperties*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageProperties
  nameWithType: OperationContext.IncomingMessageProperties
  fullName: OperationContext.IncomingMessageProperties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.IncomingMessageVersion*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IncomingMessageVersion
  nameWithType: OperationContext.IncomingMessageVersion
  fullName: OperationContext.IncomingMessageVersion
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.InstanceContext*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: InstanceContext
  nameWithType: OperationContext.InstanceContext
  fullName: OperationContext.InstanceContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.IsUserContext*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: IsUserContext
  nameWithType: OperationContext.IsUserContext
  fullName: OperationContext.IsUserContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.OutgoingMessageHeaders*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OutgoingMessageHeaders
  nameWithType: OperationContext.OutgoingMessageHeaders
  fullName: OperationContext.OutgoingMessageHeaders
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.OutgoingMessageProperties*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: OutgoingMessageProperties
  nameWithType: OperationContext.OutgoingMessageProperties
  fullName: OperationContext.OutgoingMessageProperties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.RequestContext*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: RequestContext
  nameWithType: OperationContext.RequestContext
  fullName: OperationContext.RequestContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.ServiceSecurityContext*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: OperationContext.ServiceSecurityContext
  fullName: OperationContext.ServiceSecurityContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.SessionId*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SessionId
  nameWithType: OperationContext.SessionId
  fullName: OperationContext.SessionId
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.SetTransactionComplete*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SetTransactionComplete
  nameWithType: OperationContext.SetTransactionComplete
  fullName: OperationContext.SetTransactionComplete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.ServiceModel.OperationContext.SupportingTokens*
  parent: System.ServiceModel.OperationContext
  isExternal: false
  name: SupportingTokens
  nameWithType: OperationContext.SupportingTokens
  fullName: OperationContext.SupportingTokens
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.OperationContext}
  parent: System.ServiceModel
  isExternal: false
  name: IExtensibleObject<OperationContext>
  nameWithType: IExtensibleObject<OperationContext>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.OperationContext>
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: System.ServiceModel.OperationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
