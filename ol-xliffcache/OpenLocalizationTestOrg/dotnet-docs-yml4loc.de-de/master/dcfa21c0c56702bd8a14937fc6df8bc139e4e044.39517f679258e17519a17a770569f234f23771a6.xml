{"nodes":[{"content":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.","nodes":[{"pos":[0,236],"content":"Provides a <ph id=\"ph1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;&lt;/xref&gt;</ph> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event."}],"pos":[1087,1324],"yaml":true},{"content":"For information about how to use this class, see \"Using an Existing Weak Event Manager Class\" in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md).","nodes":[{"pos":[0,172],"content":"For information about how to use this class, see \"Using an Existing Weak Event Manager Class\" in<bpt id=\"p1\">[</bpt>Weak Event Patterns<ept id=\"p1\">](~/docs/framework/wpf/advanced/weak-event-patterns.md)</ept>.","source":"For information about how to use this class, see \"Using an Existing Weak Event Manager Class\" in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md)."}],"pos":[1335,1508],"yaml":true,"extradata":"MT"},{"content":"Adds the specified delegate as an event handler of the specified source.","nodes":[{"pos":[0,72],"content":"Adds the specified delegate as an event handler of the specified source.","nodes":[{"content":"Adds the specified delegate as an event handler of the specified source.","pos":[0,72]}]}],"pos":[4563,4636],"yaml":true},{"content":"The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.","nodes":[{"pos":[0,113],"content":"The source object that the raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event."}],"pos":[4856,4970],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.","nodes":[{"pos":[0,105],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event."}],"pos":[5057,5163],"yaml":true},{"content":"<code>source</code> is `null`.  \n  \n --or--  \n  \n <code>handler</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>source</code> is `null`."},{"pos":[37,43],"content":"--or--","nodes":[{"content":"--or--","pos":[0,6]}]},{"pos":[50,81],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[5354,5442],"yaml":true},{"content":"Removes inactive listener entries from the data list for the provided source.","nodes":[{"pos":[0,77],"content":"Removes inactive listener entries from the data list for the provided source.","nodes":[{"content":"Removes inactive listener entries from the data list for the provided source.","pos":[0,77]}]}],"pos":[7625,7703],"yaml":true},{"content":"The source for events being listened to.","nodes":[{"pos":[0,40],"content":"The source for events being listened to.","nodes":[{"content":"The source for events being listened to.","pos":[0,40]}]}],"pos":[7879,7920],"yaml":true},{"content":"The data to check. This object is expected to be a <xref href=\"System.Windows.WeakEventManager.ListenerList\"></xref> implementation.","nodes":[{"pos":[0,132],"content":"The data to check. This object is expected to be a <xref href=\"System.Windows.WeakEventManager.ListenerList\"></xref> implementation.","nodes":[{"content":"The data to check.","pos":[0,18]},{"content":"This object is expected to be a <ph id=\"ph1\">&lt;xref href=\"System.Windows.WeakEventManager.ListenerList\"&gt;&lt;/xref&gt;</ph> implementation.","pos":[19,132],"source":" This object is expected to be a <xref href=\"System.Windows.WeakEventManager.ListenerList\"></xref> implementation."}]}],"pos":[7980,8113],"yaml":true},{"content":"`true` to stop listening to <code>source</code>, and completely remove all entries from <code>data</code>.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> to stop listening to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, and completely remove all entries from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">data</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"`true` to stop listening to <code>source</code>, and completely remove all entries from <code>data</code>."}],"pos":[8178,8287],"yaml":true},{"content":"`true` if some entries were actually removed; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if some entries were actually removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if some entries were actually removed; otherwise, `false`."}],"pos":[8345,8413],"yaml":true},{"content":"Removes the specified event handler from the specified source.","nodes":[{"pos":[0,62],"content":"Removes the specified event handler from the specified source.","nodes":[{"content":"Removes the specified event handler from the specified source.","pos":[0,62]}]}],"pos":[9843,9906],"yaml":true},{"content":"The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.","nodes":[{"pos":[0,113],"content":"The source object that the raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event."}],"pos":[10129,10243],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.","nodes":[{"pos":[0,105],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event."}],"pos":[10330,10436],"yaml":true},{"content":"<code>source</code> is `null`.  \n  \n --or--  \n  \n <code>handler</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>source</code> is `null`."},{"pos":[37,43],"content":"--or--","nodes":[{"content":"--or--","pos":[0,6]}]},{"pos":[50,81],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[10630,10718],"yaml":true},{"content":"Begins listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source.","nodes":[{"pos":[0,124],"content":"Begins listening for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event on the specified source.","source":"Begins listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source."}],"pos":[11824,11949],"yaml":true},{"content":"The object with the event.","nodes":[{"pos":[0,26],"content":"The object with the event.","nodes":[{"content":"The object with the event.","pos":[0,26]}]}],"pos":[12106,12133],"yaml":true},{"content":"Stops listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source.","nodes":[{"pos":[0,123],"content":"Stops listening for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"&gt;&lt;/xref&gt;</ph> event on the specified source.","source":"Stops listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source."}],"pos":[13329,13453],"yaml":true},{"content":"The source object to stop listening for.","nodes":[{"pos":[0,40],"content":"The source object to stop listening for.","nodes":[{"content":"The source object to stop listening for.","pos":[0,40]}]}],"pos":[13609,13650],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.CanExecuteChangedEventManager\n  commentId: T:System.Windows.Input.CanExecuteChangedEventManager\n  id: CanExecuteChangedEventManager\n  children:\n  - System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  - System.Windows.Input.CanExecuteChangedEventManager.NewListenerList\n  - System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  - System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  - System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: CanExecuteChangedEventManager\n  nameWithType: CanExecuteChangedEventManager\n  fullName: System.Windows.Input.CanExecuteChangedEventManager\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.\n  remarks: For information about how to use this class, see \"Using an Existing Weak Event Manager Class\" in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md).\n  syntax:\n    content: 'public class CanExecuteChangedEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  id: AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: AddHandler(ICommand, EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)\n  fullName: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds the specified delegate as an event handler of the specified source.\n  syntax:\n    content: public static void AddHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.Input.ICommand\n      description: The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.EventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.\n  overload: System.Windows.Input.CanExecuteChangedEventManager.AddHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>source</code> is `null`.  \\n  \\n --or--  \\n  \\n <code>handler</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.NewListenerList\n  id: NewListenerList\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: CanExecuteChangedEventManager.NewListenerList()\n  fullName: CanExecuteChangedEventManager.NewListenerList()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager+ListenerList\n      description: ''\n  overload: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList*\n  exceptions: []\n  version:\n  - netframework-4.5\n  monikers:\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  id: Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: Purge(Object, Object, Boolean)\n  nameWithType: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)\n  fullName: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes inactive listener entries from the data list for the provided source.\n  syntax:\n    content: protected override bool Purge (object source, object data, bool purgeAll);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source for events being listened to.\n    - id: data\n      type: System.Object\n      description: The data to check. This object is expected to be a <xref href=\"System.Windows.WeakEventManager.ListenerList\"></xref> implementation.\n    - id: purgeAll\n      type: System.Boolean\n      description: '`true` to stop listening to <code>source</code>, and completely remove all entries from <code>data</code>.'\n    return:\n      type: System.Boolean\n      description: '`true` if some entries were actually removed; otherwise, `false`.'\n  overload: System.Windows.Input.CanExecuteChangedEventManager.Purge*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  id: RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(ICommand, EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)\n  fullName: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes the specified event handler from the specified source.\n  syntax:\n    content: public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.Input.ICommand\n      description: The source object that the raises the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.EventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event.\n  overload: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>source</code> is `null`.  \\n  \\n --or--  \\n  \\n <code>handler</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StartListening(Object)\n  fullName: CanExecuteChangedEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Begins listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source.\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The object with the event.\n  overload: System.Windows.Input.CanExecuteChangedEventManager.StartListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StopListening(Object)\n  fullName: CanExecuteChangedEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Stops listening for the <xref href=\"System.Windows.Input.ICommand.CanExecuteChanged\"></xref> event on the specified source.\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source object to stop listening for.\n  overload: System.Windows.Input.CanExecuteChangedEventManager.StopListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.WeakEventManager\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager\n  nameWithType: WeakEventManager\n  fullName: System.Windows.WeakEventManager\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: AddHandler(ICommand, EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)\n  fullName: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: false\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.EventArgs\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.EventHandler{System.EventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventArgs>\n  nameWithType: EventHandler<EventArgs>\n  fullName: System.EventHandler<System.EventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.EventArgs\n    name: EventArgs\n    nameWithType: EventArgs\n    fullName: System.EventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: CanExecuteChangedEventManager.NewListenerList()\n  fullName: CanExecuteChangedEventManager.NewListenerList()\n- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: Purge(Object, Object, Boolean)\n  nameWithType: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)\n  fullName: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: RemoveHandler(ICommand, EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)\n  fullName: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StartListening(Object)\n  fullName: CanExecuteChangedEventManager.StartListening(Object)\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StopListening(Object)\n  fullName: CanExecuteChangedEventManager.StopListening(Object)\n- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: AddHandler\n  nameWithType: CanExecuteChangedEventManager.AddHandler\n  fullName: CanExecuteChangedEventManager.AddHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: NewListenerList\n  nameWithType: CanExecuteChangedEventManager.NewListenerList\n  fullName: CanExecuteChangedEventManager.NewListenerList\n  monikers:\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: Purge\n  nameWithType: CanExecuteChangedEventManager.Purge\n  fullName: CanExecuteChangedEventManager.Purge\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: CanExecuteChangedEventManager.RemoveHandler\n  fullName: CanExecuteChangedEventManager.RemoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StartListening\n  nameWithType: CanExecuteChangedEventManager.StartListening\n  fullName: CanExecuteChangedEventManager.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening*\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StopListening\n  nameWithType: CanExecuteChangedEventManager.StopListening\n  fullName: CanExecuteChangedEventManager.StopListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEvent(Object, EventArgs)\n  nameWithType: WeakEventManager.DeliverEvent(Object, EventArgs)\n  fullName: WeakEventManager.DeliverEvent(Object, EventArgs)\n- uid: System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  nameWithType: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  fullName: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n- uid: System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: GetCurrentManager(Type)\n  nameWithType: WeakEventManager.GetCurrentManager(Type)\n  fullName: WeakEventManager.GetCurrentManager(Type)\n- uid: System.Windows.WeakEventManager.Item(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Item(Object)\n  nameWithType: WeakEventManager.Item(Object)\n  fullName: WeakEventManager.Item(Object)\n- uid: System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.ReadLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ReadLock\n  nameWithType: WeakEventManager.ReadLock\n  fullName: WeakEventManager.ReadLock\n- uid: System.Windows.WeakEventManager.Remove(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: WeakEventManager.Remove(Object)\n  fullName: WeakEventManager.Remove(Object)\n- uid: System.Windows.WeakEventManager.ScheduleCleanup\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ScheduleCleanup()\n  nameWithType: WeakEventManager.ScheduleCleanup()\n  fullName: WeakEventManager.ScheduleCleanup()\n- uid: System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: SetCurrentManager(Type, WeakEventManager)\n  nameWithType: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n  fullName: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n- uid: System.Windows.WeakEventManager.WriteLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: WriteLock\n  nameWithType: WeakEventManager.WriteLock\n  fullName: WeakEventManager.WriteLock\n"}