{"nodes":[{"content":"Provides a type converter for a property representing the field name of a bound column field in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.","nodes":[{"pos":[0,162],"content":"Provides a type converter for a property representing the field name of a bound column field in a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;&lt;/xref&gt;</ph> control.","source":"Provides a type converter for a property representing the field name of a bound column field in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."}],"pos":[1178,1341],"yaml":true},{"content":"Use the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.  \n  \n To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataColumnSelectionConverter> and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \n  \n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies <xref:System.Web.UI.Design.DataColumnSelectionConverter> as its type converter.  \n  \n> [!NOTE]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","nodes":[{"pos":[0,503],"content":"Use the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.","nodes":[{"content":"Use the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.","pos":[0,503],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> class to convert object types before assignment to a control property.","pos":[0,135],"source":"Use the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class to convert object types before assignment to a control property."},{"content":"In general, the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property.","pos":[136,354],"source":" In general, the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property."},{"content":"The standard values collection is the list of field names for bound column fields for the current <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.","pos":[355,503],"source":" The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control."}]}]},{"pos":[510,997],"content":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataColumnSelectionConverter> and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.","nodes":[{"content":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataColumnSelectionConverter> and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.","pos":[0,487],"nodes":[{"content":"To support converting additional object types, derive a class from <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt;</ph> methods for the additional object types.","pos":[0,332],"source":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataColumnSelectionConverter> and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types."},{"content":"To support a custom list of standard assignable values, override the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method.","pos":[333,487],"source":" To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."}]}]},{"pos":[1004,1433],"content":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies <xref:System.Web.UI.Design.DataColumnSelectionConverter> as its type converter.","nodes":[{"content":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies <xref:System.Web.UI.Design.DataColumnSelectionConverter> as its type converter.","pos":[0,429],"nodes":[{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to specify the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> class as the type converter for a control property.","pos":[0,195],"source":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class as the type converter for a control property."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control specifies <ph id=\"ph3\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> as its type converter.","pos":[196,429],"source":" For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies <xref:System.Web.UI.Design.DataColumnSelectionConverter> as its type converter."}]}]},{"pos":[1441,1691],"content":"[!NOTE]\n You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","leadings":["","> "],"nodes":[{"content":" You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","pos":[8,248],"nodes":[{"content":"You should never access a type converter directly.","pos":[1,51]},{"content":"Instead, call the appropriate converter by using a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.","pos":[52,154],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[155,240],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."}]}]},{"pos":[1698,2135],"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","nodes":[{"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","pos":[0,437],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates that the converter supports returning a list of available values through the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method.","pos":[0,270],"source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A&gt;</ph> method indicates that the list is not an exclusive list of possible values.","pos":[271,437],"source":" The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values."}]}]}],"pos":[1352,3499],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"></xref> class."}],"pos":[8207,8319],"yaml":true},{"content":"> [!NOTE]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"pos":[2,252],"content":"[!NOTE]\n You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","leadings":["","> "],"nodes":[{"content":" You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","pos":[8,248],"nodes":[{"content":"You should never access a type converter directly.","pos":[1,51]},{"content":"Instead, call the appropriate converter by using a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.","pos":[52,154],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[155,240],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."}]}]}],"pos":[8330,8595],"yaml":true,"extradata":"MT"},{"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","nodes":[{"pos":[0,108],"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","nodes":[{"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","pos":[0,108]}]}],"pos":[10041,10150],"yaml":true},{"content":"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string.","nodes":[{"pos":[0,231],"content":"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.","pos":[0,231],"source":"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type."}]},{"pos":[238,487],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt;</ph> method can convert only from a string, so the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt;</ph> method returns <ph id=\"ph3\">`true`</ph> when <ph id=\"ph4\">`sourceType`</ph> is a string.","source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string."}],"pos":[10161,10653],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[10895,11036],"yaml":true},{"content":"The type to convert from.","nodes":[{"pos":[0,25],"content":"The type to convert from.","nodes":[{"content":"The type to convert from.","pos":[0,25]}]}],"pos":[11100,11126],"yaml":true},{"content":"`true` if the converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the converter can perform the conversion; otherwise, `false`."}],"pos":[11184,11258],"yaml":true},{"content":"Converts the specified object to the type of the associated control property.","nodes":[{"pos":[0,77],"content":"Converts the specified object to the type of the associated control property.","nodes":[{"content":"Converts the specified object to the type of the associated control property.","pos":[0,77]}]}],"pos":[12763,12841],"yaml":true},{"content":"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\"\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.  \n  \n Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"pos":[0,215],"content":"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\"\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a string, then the string representation of <ph id=\"ph2\">`value`</ph> is returned.","pos":[0,78],"source":"If `value` is a string, then the string representation of `value` is returned."},{"content":"If <ph id=\"ph1\">`value`</ph> is <ph id=\"ph2\">`null`</ph>, an empty string (\"\") is returned.","pos":[79,134],"source":" If `value` is `null`, an empty string (\"\") is returned."},{"content":"For all other values, a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown.","pos":[135,215],"source":" For all other values, a <xref:System.NotSupportedException> exception is thrown."}]},{"pos":[222,453],"content":"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.","pos":[0,231],"source":"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type."}]}],"pos":[12852,13312],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[13592,13733],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that can be used to support localization features.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features."}],"pos":[13815,13931],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13992,14015],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> instance that represents the converted object.","nodes":[{"pos":[0,84],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance that represents the converted object.","source":"An <xref href=\"System.Object\"></xref> instance that represents the converted object."}],"pos":[14072,14157],"yaml":true},{"content":"The conversion could not be performed.","nodes":[{"pos":[0,38],"content":"The conversion could not be performed.","nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]}],"pos":[14348,14387],"yaml":true},{"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"pos":[0,91],"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"content":"Returns a list of available values that can be assigned to the associated control property.","pos":[0,91]}]}],"pos":[15629,15721],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.  \n  \n The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.","nodes":[{"pos":[0,523],"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property of the specified <ph id=\"ph3\">`context`</ph> object to obtain an <ph id=\"ph4\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> implementation.","pos":[0,273],"source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> component.","pos":[274,523],"source":" If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component."}]},{"pos":[530,907],"content":"The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.","nodes":[{"content":"The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.","pos":[0,377],"nodes":[{"content":"The collection of available values is built from the bound column fields in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.","pos":[0,130],"source":"The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The bound column fields consist of <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt;</ph> collection, and from the bound column fields automatically generated for fields in the data source.","pos":[131,377],"source":" The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source."}]}]}],"pos":[15732,16644],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[16928,17069],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> instance containing available values for assignment to the associated control property.","nodes":[{"pos":[0,171],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> instance containing available values for assignment to the associated control property.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> instance containing available values for assignment to the associated control property."}],"pos":[17173,17345],"yaml":true},{"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","nodes":[{"pos":[0,135],"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","nodes":[{"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","pos":[0,135]}]}],"pos":[18739,18875],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.","nodes":[{"pos":[0,372],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A&gt;</ph> method for a <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> instance returns <ph id=\"ph3\">`false`</ph>, indicating that the list returned by the <ph id=\"ph4\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method is not an exclusive list of all possible assignable values.","source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values."}],"pos":[18886,19259],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[19496,19637],"yaml":true},{"content":"`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`.","nodes":[{"pos":[0,146],"content":"<ph id=\"ph1\">`true`</ph> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`."}],"pos":[19695,19844],"yaml":true},{"content":"Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.","nodes":[{"pos":[0,134],"content":"Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.","nodes":[{"content":"Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.","pos":[0,134]}]}],"pos":[21247,21382],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component.","nodes":[{"pos":[0,273],"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates whether the converter supports returning a list of available values through the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method.","pos":[0,273],"source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method."}]},{"pos":[280,975],"content":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A&gt;</ph> method for the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter&gt;</ph> object returns <ph id=\"ph3\">`true`</ph> if the specified <ph id=\"ph4\">`context`</ph> object supplies an <ph id=\"ph5\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> implementation in its <ph id=\"ph6\">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property.","pos":[0,366],"source":"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> component.","pos":[367,695],"source":" The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component."}]}],"pos":[21393,22373],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[22610,22751],"yaml":true},{"content":"`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`."}],"pos":[22809,22949],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.DataColumnSelectionConverter\n  commentId: T:System.Web.UI.Design.DataColumnSelectionConverter\n  id: DataColumnSelectionConverter\n  children:\n  - System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  - System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: DataColumnSelectionConverter\n  nameWithType: DataColumnSelectionConverter\n  fullName: System.Web.UI.Design.DataColumnSelectionConverter\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Provides a type converter for a property representing the field name of a bound column field in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataColumnSelectionConverter> and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \\n  \\n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataColumnSelectionConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies <xref:System.Web.UI.Design.DataColumnSelectionConverter> as its type converter.  \\n  \\n> [!NOTE]\\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.\"\n  syntax:\n    content: 'public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: DataColumnSelectionConverter()\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()\n  fullName: DataColumnSelectionConverter.DataColumnSelectionConverter()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataColumnSelectionConverter\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.\n  syntax:\n    content: public DataColumnSelectionConverter ();\n    parameters: []\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether the specified source type can be converted to the type of the associated control property.\n  remarks: \"Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the converter can perform the conversion; otherwise, `false`.'\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Converts the specified object to the type of the associated control property.\n  remarks: \"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\\\"\\\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.  \\n  \\n Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> instance that represents the converted object.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns a list of available values that can be assigned to the associated control property.\n  remarks: \"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.  \\n  \\n The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source.\"\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> instance containing available values for assignment to the associated control property.\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.\n  remarks: The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`.'\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.\n  remarks: \"The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \\n  \\n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified `context` object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component.\"\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`.'\n  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: DataColumnSelectionConverter()\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()\n  fullName: DataColumnSelectionConverter.DataColumnSelectionConverter()\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: DataColumnSelectionConverter\n  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter\n  fullName: DataColumnSelectionConverter.DataColumnSelectionConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DataColumnSelectionConverter.CanConvertFrom\n  fullName: DataColumnSelectionConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DataColumnSelectionConverter.ConvertFrom\n  fullName: DataColumnSelectionConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: DataColumnSelectionConverter.GetStandardValues\n  fullName: DataColumnSelectionConverter.GetStandardValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive\n  fullName: DataColumnSelectionConverter.GetStandardValuesExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*\n  parent: System.Web.UI.Design.DataColumnSelectionConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported\n  fullName: DataColumnSelectionConverter.GetStandardValuesSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataColumnSelectionConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}