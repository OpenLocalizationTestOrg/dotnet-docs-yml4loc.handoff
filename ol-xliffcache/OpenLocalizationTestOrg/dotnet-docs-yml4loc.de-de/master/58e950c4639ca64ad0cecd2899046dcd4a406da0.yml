### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ManipulationStartingEventArgs
  commentId: T:System.Windows.Input.ManipulationStartingEventArgs
  id: ManipulationStartingEventArgs
  children:
  - System.Windows.Input.ManipulationStartingEventArgs.Cancel
  - System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled
  - System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer
  - System.Windows.Input.ManipulationStartingEventArgs.Manipulators
  - System.Windows.Input.ManipulationStartingEventArgs.Mode
  - System.Windows.Input.ManipulationStartingEventArgs.Pivot
  - System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)
  langs:
  - csharp
  name: ManipulationStartingEventArgs
  nameWithType: ManipulationStartingEventArgs
  fullName: System.Windows.Input.ManipulationStartingEventArgs
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Provides data for the <xref href="System.Windows.UIElement.ManipulationStarting"></xref>, event.
  remarks: "The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.  Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:  \n  \n-   Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.  \n  \n-   Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName> property.  \n  \n-   Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.  \n  \n-   Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property.  \n  \n-   Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName> property to `true`.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."
  syntax:
    content: 'public sealed class ManipulationStartingEventArgs : System.Windows.Input.InputEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel
  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.Cancel
  id: Cancel
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: Cancel()
  nameWithType: ManipulationStartingEventArgs.Cancel()
  fullName: ManipulationStartingEventArgs.Cancel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Cancels the manipulation and promotes touch to mouse events.
  remarks: If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.
  syntax:
    content: public bool Cancel ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if touch was successfully promoted to mouse events, otherwise, `false`.'
  overload: System.Windows.Input.ManipulationStartingEventArgs.Cancel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: ''
    - id: genericTarget
      type: System.Object
      description: ''
  overload: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled
  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled
  id: IsSingleTouchEnabled
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: IsSingleTouchEnabled
  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled
  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets whether one finger can start a manipulation.
  remarks: 'For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).'
  syntax:
    content: public bool IsSingleTouchEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` one finger can start a manipulation; otherwise, `false`. The default is `true`.'
  overload: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer
  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer
  id: ManipulationContainer
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: ManipulationContainer
  nameWithType: ManipulationStartingEventArgs.ManipulationContainer
  fullName: ManipulationStartingEventArgs.ManipulationContainer
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets the container that all manipulation events and calculations are relative to.
  remarks: "You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property. For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events. The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."
  syntax:
    content: public System.Windows.IInputElement ManipulationContainer { get; set; }
    return:
      type: System.Windows.IInputElement
      description: The container that all manipulation events and calculations are relative to. The default is the element on which the event occurred.
  overload: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators
  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Manipulators
  id: Manipulators
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: Manipulators
  nameWithType: ManipulationStartingEventArgs.Manipulators
  fullName: ManipulationStartingEventArgs.Manipulators
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets a collection of objects that represents the touch contacts for the manipulation.
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}
      description: A collection of objects that represents the touch contacts for the manipulation.
  overload: System.Windows.Input.ManipulationStartingEventArgs.Manipulators*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode
  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Mode
  id: Mode
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: Mode
  nameWithType: ManipulationStartingEventArgs.Mode
  fullName: ManipulationStartingEventArgs.Mode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets which types of manipulations are possible.
  remarks: 'For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).'
  syntax:
    content: public System.Windows.Input.ManipulationModes Mode { get; set; }
    return:
      type: System.Windows.Input.ManipulationModes
      description: One of the enumeration values. The default is <xref href="System.Windows.Input.ManipulationModes.All"></xref>.
  overload: System.Windows.Input.ManipulationStartingEventArgs.Mode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The property is set to a value other than one or more of the <xref href="System.Windows.Input.ManipulationModes"></xref> enumerations value
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot
  commentId: P:System.Windows.Input.ManipulationStartingEventArgs.Pivot
  id: Pivot
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationStartingEventArgs.Pivot
  fullName: ManipulationStartingEventArgs.Pivot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets an object that describes the pivot for a single-point manipulation.
  remarks: "When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.  This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.  If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> property. To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 4 with this code.  \n  \n [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]\n [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]"
  syntax:
    content: public System.Windows.Input.ManipulationPivot Pivot { get; set; }
    return:
      type: System.Windows.Input.ManipulationPivot
      description: An object that describes the pivot for a single-point manipulation.
  overload: System.Windows.Input.ManipulationStartingEventArgs.Pivot*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)
  commentId: M:System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.ManipulationStartingEventArgs
  langs:
  - csharp
  name: SetManipulationParameter(ManipulationParameters2D)
  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)
  fullName: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Adds parameters to the current manipulation of the specified element.
  remarks: You typically do not need to call this method.  Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public void SetManipulationParameter (System.Windows.Input.Manipulations.ManipulationParameters2D parameter);
    parameters:
    - id: parameter
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: The parameter to add.
  overload: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
references:
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Cancel()
  nameWithType: ManipulationStartingEventArgs.Cancel()
  fullName: ManipulationStartingEventArgs.Cancel()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: ManipulationStartingEventArgs.InvokeEventHandler(Delegate, Object)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: IsSingleTouchEnabled
  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled
  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled
- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: ManipulationContainer
  nameWithType: ManipulationStartingEventArgs.ManipulationContainer
  fullName: ManipulationStartingEventArgs.ManipulationContainer
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Manipulators
  nameWithType: ManipulationStartingEventArgs.Manipulators
  fullName: ManipulationStartingEventArgs.Manipulators
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Windows.Input.IManipulator
  name: IManipulator
  nameWithType: IManipulator
  fullName: System.Windows.Input.IManipulator
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<IManipulator>
  nameWithType: IEnumerable<IManipulator>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.IManipulator
    name: IManipulator
    nameWithType: IManipulator
    fullName: System.Windows.Input.IManipulator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Mode
  nameWithType: ManipulationStartingEventArgs.Mode
  fullName: ManipulationStartingEventArgs.Mode
- uid: System.Windows.Input.ManipulationModes
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationModes
  nameWithType: ManipulationModes
  fullName: System.Windows.Input.ManipulationModes
- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Pivot
  nameWithType: ManipulationStartingEventArgs.Pivot
  fullName: ManipulationStartingEventArgs.Pivot
- uid: System.Windows.Input.ManipulationPivot
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationPivot
  nameWithType: ManipulationPivot
  fullName: System.Windows.Input.ManipulationPivot
- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: SetManipulationParameter(ManipulationParameters2D)
  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)
  fullName: ManipulationStartingEventArgs.SetManipulationParameter(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.ManipulationStartingEventArgs.Cancel*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Cancel
  nameWithType: ManipulationStartingEventArgs.Cancel
  fullName: ManipulationStartingEventArgs.Cancel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: ManipulationStartingEventArgs.InvokeEventHandler
  fullName: ManipulationStartingEventArgs.InvokeEventHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: IsSingleTouchEnabled
  nameWithType: ManipulationStartingEventArgs.IsSingleTouchEnabled
  fullName: ManipulationStartingEventArgs.IsSingleTouchEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: ManipulationContainer
  nameWithType: ManipulationStartingEventArgs.ManipulationContainer
  fullName: ManipulationStartingEventArgs.ManipulationContainer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.Manipulators*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Manipulators
  nameWithType: ManipulationStartingEventArgs.Manipulators
  fullName: ManipulationStartingEventArgs.Manipulators
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.Mode*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Mode
  nameWithType: ManipulationStartingEventArgs.Mode
  fullName: ManipulationStartingEventArgs.Mode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.Pivot*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: Pivot
  nameWithType: ManipulationStartingEventArgs.Pivot
  fullName: ManipulationStartingEventArgs.Pivot
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter*
  parent: System.Windows.Input.ManipulationStartingEventArgs
  isExternal: false
  name: SetManipulationParameter
  nameWithType: ManipulationStartingEventArgs.SetManipulationParameter
  fullName: ManipulationStartingEventArgs.SetManipulationParameter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationStartingEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
- uid: System.Windows.Input.InputEventArgs.Device
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Device
  nameWithType: InputEventArgs.Device
  fullName: InputEventArgs.Device
- uid: System.Windows.Input.InputEventArgs.Timestamp
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: InputEventArgs.Timestamp
  fullName: InputEventArgs.Timestamp
