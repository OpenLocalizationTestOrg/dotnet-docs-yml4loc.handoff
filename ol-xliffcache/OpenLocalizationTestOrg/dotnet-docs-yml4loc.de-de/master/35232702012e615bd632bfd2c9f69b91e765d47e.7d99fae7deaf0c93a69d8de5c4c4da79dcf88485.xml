{"nodes":[{"content":"The abstract base class from which all durable service persistence providers that implement locking are derived.","nodes":[{"pos":[0,112],"content":"The abstract base class from which all durable service persistence providers that implement locking are derived.","nodes":[{"content":"The abstract base class from which all durable service persistence providers that implement locking are derived.","pos":[0,112]}]}],"pos":[2942,3055],"yaml":true},{"content":"In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records. Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.","nodes":[{"pos":[0,346],"content":"In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records. Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.","nodes":[{"content":"In addition to persistence, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> class implements locking of service state data records.","pos":[0,153],"source":"In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records."},{"content":"Methods that interact with persisted data (such as the <ph id=\"ph1\">`Load`</ph> method) have an optional parameter (<ph id=\"ph2\">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.","pos":[154,346],"source":" Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained."}]}],"pos":[3066,3413],"yaml":true,"extradata":"MT"},{"content":"When implemented in a derived class, creates a new instance of the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> class, configured with the specified identity value.","nodes":[{"pos":[0,199],"content":"When implemented in a derived class, creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;&lt;/xref&gt;</ph> class, configured with the specified identity value.","source":"When implemented in a derived class, creates a new instance of the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> class, configured with the specified identity value."}],"pos":[8923,9123],"yaml":true},{"content":"The unique identifier to be associated with this persistence provider instance.","nodes":[{"pos":[0,79],"content":"The unique identifier to be associated with this persistence provider instance.","nodes":[{"content":"The unique identifier to be associated with this persistence provider instance.","pos":[0,79]}]}],"pos":[9266,9346],"yaml":true},{"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method does not unlock the instance after saving the state information.","nodes":[{"pos":[0,193],"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method does not unlock the instance after saving the state information.","nodes":[{"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method does not unlock the instance after saving the state information.","pos":[0,193],"nodes":[{"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters.","pos":[0,116]},{"content":"This method does not unlock the instance after saving the state information.","pos":[117,193]}]}]}],"pos":[10826,11020],"yaml":true},{"content":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked. This method passes `false` as a value for this parameter to the calling method.","nodes":[{"pos":[0,278],"content":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked. This method passes `false` as a value for this parameter to the calling method.","nodes":[{"content":"This method calls into the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A&gt;</ph> method, which takes an additional parameter to determine whether the instance is unlocked.","pos":[0,198],"source":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked."},{"content":"This method passes <ph id=\"ph1\">`false`</ph> as a value for this parameter to the calling method.","pos":[199,278],"source":" This method passes `false` as a value for this parameter to the calling method."}]}],"pos":[11031,11310],"yaml":true,"extradata":"MT"},{"content":"The instance whose state information is saved into the persistence store.","nodes":[{"pos":[0,73],"content":"The instance whose state information is saved into the persistence store.","nodes":[{"content":"The instance whose state information is saved into the persistence store.","pos":[0,73]}]}],"pos":[11529,11603],"yaml":true},{"content":"The interval in which the operation must be completed without timing out.","nodes":[{"pos":[0,73],"content":"The interval in which the operation must be completed without timing out.","nodes":[{"content":"The interval in which the operation must be completed without timing out.","pos":[0,73]}]}],"pos":[11668,11742],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[11813,11887],"yaml":true},{"content":"The state information associated with the asynchronous operation.","nodes":[{"pos":[0,65],"content":"The state information associated with the asynchronous operation.","nodes":[{"content":"The state information associated with the asynchronous operation.","pos":[0,65]}]}],"pos":[11948,12014],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[12077,12118],"yaml":true},{"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method unlocks the instance after saving the instance state if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"pos":[0,250],"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method unlocks the instance after saving the instance state if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"content":"Begins an asynchronous operation to create instance state information in the persistence store using the parameters.","pos":[0,116]},{"content":"This method unlocks the instance after saving the instance state if the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unlockInstance</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>.","pos":[117,250],"source":" This method unlocks the instance after saving the instance state if the value of the <code>unlockInstance</code> parameter is `true`."}]}],"pos":[13676,13927],"yaml":true},{"content":"The instance whose state information is saved into the persistence store.","nodes":[{"pos":[0,73],"content":"The instance whose state information is saved into the persistence store.","nodes":[{"content":"The instance whose state information is saved into the persistence store.","pos":[0,73]}]}],"pos":[14167,14241],"yaml":true},{"content":"The interval in which the operation must be completed without timing out.","nodes":[{"pos":[0,73],"content":"The interval in which the operation must be completed without timing out.","nodes":[{"content":"The interval in which the operation must be completed without timing out.","pos":[0,73]}]}],"pos":[14306,14380],"yaml":true},{"content":"`true` if the instance must be unlocked in the persistence store; otherwise `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the instance must be unlocked in the persistence store; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance must be unlocked in the persistence store; otherwise `false`."}],"pos":[14451,14538],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[14609,14683],"yaml":true},{"content":"The state information associated with the asynchronous operation.","nodes":[{"pos":[0,65],"content":"The state information associated with the asynchronous operation.","nodes":[{"content":"The state information associated with the asynchronous operation.","pos":[0,65]}]}],"pos":[14744,14810],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[14873,14914],"yaml":true},{"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method does not lock the instance.","nodes":[{"pos":[0,166],"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method does not lock the instance.","nodes":[{"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method does not lock the instance.","pos":[0,166],"nodes":[{"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.","pos":[0,126]},{"content":"This method does not lock the instance.","pos":[127,166]}]}]}],"pos":[16322,16489],"yaml":true},{"content":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store. This method passes `false` as a value for this parameter to the calling method.","nodes":[{"pos":[0,299],"content":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store. This method passes `false` as a value for this parameter to the calling method.","nodes":[{"content":"This method calls into the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A&gt;</ph>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store.","pos":[0,219],"source":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store."},{"content":"This method passes <ph id=\"ph1\">`false`</ph> as a value for this parameter to the calling method.","pos":[220,299],"source":" This method passes `false` as a value for this parameter to the calling method."}]}],"pos":[16500,16800],"yaml":true,"extradata":"MT"},{"content":"The interval in which the operation must be completed without timing out.","nodes":[{"pos":[0,73],"content":"The interval in which the operation must be completed without timing out.","nodes":[{"content":"The interval in which the operation must be completed without timing out.","pos":[0,73]}]}],"pos":[17001,17075],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[17146,17220],"yaml":true},{"content":"The state information associated with the asynchronous operation.","nodes":[{"pos":[0,65],"content":"The state information associated with the asynchronous operation.","nodes":[{"content":"The state information associated with the asynchronous operation.","pos":[0,65]}]}],"pos":[17281,17347],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[17410,17451],"yaml":true},{"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method locks the instance after loading the instance state if the value of the <code>lockInstance</code> parameter is `true`.","nodes":[{"pos":[0,257],"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method locks the instance after loading the instance state if the value of the <code>lockInstance</code> parameter is `true`.","nodes":[{"content":"Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.","pos":[0,126]},{"content":"This method locks the instance after loading the instance state if the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">lockInstance</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>.","pos":[127,257],"source":" This method locks the instance after loading the instance state if the value of the <code>lockInstance</code> parameter is `true`."}]}],"pos":[18929,19187],"yaml":true},{"content":"An interval in which the operation must be completed before timing out.","nodes":[{"pos":[0,71],"content":"An interval in which the operation must be completed before timing out.","nodes":[{"content":"An interval in which the operation must be completed before timing out.","pos":[0,71]}]}],"pos":[19407,19479],"yaml":true},{"content":"`true` if the instance must be locked; otherwise `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the instance must be locked; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance must be locked; otherwise `false`."}],"pos":[19548,19608],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[19679,19753],"yaml":true},{"content":"The state information associated with the asynchronous operation.","nodes":[{"pos":[0,65],"content":"The state information associated with the asynchronous operation.","nodes":[{"content":"The state information associated with the asynchronous operation.","pos":[0,65]}]}],"pos":[19814,19880],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[19943,19984],"yaml":true},{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call does not lock the instance in the persistence store.","nodes":[{"pos":[0,335],"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call does not lock the instance in the persistence store.","nodes":[{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call does not lock the instance in the persistence store.","pos":[0,335],"nodes":[{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase.","pos":[0,89]},{"content":"The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.","pos":[90,265]},{"content":"This method call does not lock the instance in the persistence store.","pos":[266,335]}]}]}],"pos":[21510,21846],"yaml":true},{"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"pos":[0,75],"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"content":"The time period after which the persistence provider aborts this operation.","pos":[0,75]}]}],"pos":[22078,22154],"yaml":true},{"content":"The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.","nodes":[{"pos":[0,114],"content":"The token returned by a previous <ph id=\"ph1\">`Create`</ph> or <ph id=\"ph2\">`Update`</ph> method that represents the current state held by the caller.","source":"The token returned by a previous `Create` or `Update` method that represents the current state held by the caller."}],"pos":[22223,22338],"yaml":true},{"content":"The method to be called when the operation is completed.","nodes":[{"pos":[0,56],"content":"The method to be called when the operation is completed.","nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]}],"pos":[22409,22466],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"pos":[0,103],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]}],"pos":[22527,22631],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[22694,22735],"yaml":true},{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call lets you specify whether you want to lock the instance in the persistence store.","nodes":[{"pos":[0,363],"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call lets you specify whether you want to lock the instance in the persistence store.","nodes":[{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call lets you specify whether you want to lock the instance in the persistence store.","pos":[0,363],"nodes":[{"content":"When implemented in a derived class, represents the beginning of the LoadIfChanged phase.","pos":[0,89]},{"content":"The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.","pos":[90,265]},{"content":"This method call lets you specify whether you want to lock the instance in the persistence store.","pos":[266,363]}]}]}],"pos":[24342,24706],"yaml":true},{"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"pos":[0,75],"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"content":"The time period after which the persistence provider aborts this operation.","pos":[0,75]}]}],"pos":[24956,25032],"yaml":true},{"content":"The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.","nodes":[{"pos":[0,114],"content":"The token returned by a previous <ph id=\"ph1\">`Create`</ph> or <ph id=\"ph2\">`Update`</ph> method that represents the current state held by the caller.","source":"The token returned by a previous `Create` or `Update` method that represents the current state held by the caller."}],"pos":[25101,25216],"yaml":true},{"content":"`true` if the instance is locked in the persistence store; otherwise `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the instance is locked in the persistence store; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance is locked in the persistence store; otherwise `false`."}],"pos":[25285,25365],"yaml":true},{"content":"The method to be called when the operation is completed.","nodes":[{"pos":[0,56],"content":"The method to be called when the operation is completed.","nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]}],"pos":[25436,25493],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"pos":[0,103],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]}],"pos":[25554,25658],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[25721,25762],"yaml":true},{"content":"Begins an asynchronous operation to unlock an instance in the persistence store.","nodes":[{"pos":[0,80],"content":"Begins an asynchronous operation to unlock an instance in the persistence store.","nodes":[{"content":"Begins an asynchronous operation to unlock an instance in the persistence store.","pos":[0,80]}]}],"pos":[27189,27270],"yaml":true},{"content":"An interval in which the operation must be completed before timing out.","nodes":[{"pos":[0,71],"content":"An interval in which the operation must be completed before timing out.","nodes":[{"content":"An interval in which the operation must be completed before timing out.","pos":[0,71]}]}],"pos":[27473,27545],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[27616,27690],"yaml":true},{"content":"The state information associated with the asynchronous operation.","nodes":[{"pos":[0,65],"content":"The state information associated with the asynchronous operation.","nodes":[{"content":"The state information associated with the asynchronous operation.","pos":[0,65]}]}],"pos":[27751,27817],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[27880,27921],"yaml":true},{"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation locks the instance in the persistence store if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"pos":[0,251],"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation locks the instance in the persistence store if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.","pos":[0,123]},{"content":"This operation locks the instance in the persistence store if the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unlockInstance</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>.","pos":[124,251],"source":" This operation locks the instance in the persistence store if the value of the <code>unlockInstance</code> parameter is `true`."}]}],"pos":[29479,29731],"yaml":true},{"content":"The instance whose state information is being updated in the persistence store.","nodes":[{"pos":[0,79],"content":"The instance whose state information is being updated in the persistence store.","nodes":[{"content":"The instance whose state information is being updated in the persistence store.","pos":[0,79]}]}],"pos":[29971,30051],"yaml":true},{"content":"The interval in which the operation must complete without timing out.","nodes":[{"pos":[0,69],"content":"The interval in which the operation must complete without timing out.","nodes":[{"content":"The interval in which the operation must complete without timing out.","pos":[0,69]}]}],"pos":[30116,30186],"yaml":true},{"content":"`true` if the instance must be locked after the instance state is updated in the persistence store; otherwise `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if the instance must be locked after the instance state is updated in the persistence store; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance must be locked after the instance state is updated in the persistence store; otherwise `false`."}],"pos":[30257,30378],"yaml":true},{"content":"The delegate that receives the notification when the operation completes.","nodes":[{"pos":[0,73],"content":"The delegate that receives the notification when the operation completes.","nodes":[{"content":"The delegate that receives the notification when the operation completes.","pos":[0,73]}]}],"pos":[30449,30523],"yaml":true},{"content":"The state information about the asynchronous operation.","nodes":[{"pos":[0,55],"content":"The state information about the asynchronous operation.","nodes":[{"content":"The state information about the asynchronous operation.","pos":[0,55]}]}],"pos":[30584,30640],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[30703,30744],"yaml":true},{"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation does not unlock the instance in the instance store.","nodes":[{"pos":[0,190],"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation does not unlock the instance in the instance store.","nodes":[{"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation does not unlock the instance in the instance store.","pos":[0,190],"nodes":[{"content":"Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.","pos":[0,123]},{"content":"This operation does not unlock the instance in the instance store.","pos":[124,190]}]}]}],"pos":[32230,32421],"yaml":true},{"content":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter.","nodes":[{"pos":[0,177],"content":"This method calls into the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A&gt;</ph> method and passes a <ph id=\"ph2\">`false`</ph> value for the <ph id=\"ph3\">`unlockInstance`</ph> parameter.","source":"This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter."}],"pos":[32432,32610],"yaml":true,"extradata":"MT"},{"content":"The instance whose state information is being updated in the persistence store.","nodes":[{"pos":[0,79],"content":"The instance whose state information is being updated in the persistence store.","nodes":[{"content":"The instance whose state information is being updated in the persistence store.","pos":[0,79]}]}],"pos":[32829,32909],"yaml":true},{"content":"The interval in which the operation must complete without timing out.","nodes":[{"pos":[0,69],"content":"The interval in which the operation must complete without timing out.","nodes":[{"content":"The interval in which the operation must complete without timing out.","pos":[0,69]}]}],"pos":[32974,33044],"yaml":true},{"content":"The delegate that receives the notification when the operation is completed.","nodes":[{"pos":[0,76],"content":"The delegate that receives the notification when the operation is completed.","nodes":[{"content":"The delegate that receives the notification when the operation is completed.","pos":[0,76]}]}],"pos":[33115,33192],"yaml":true},{"content":"The state information about the asynchronous operation.","nodes":[{"pos":[0,55],"content":"The state information about the asynchronous operation.","nodes":[{"content":"The state information about the asynchronous operation.","pos":[0,55]}]}],"pos":[33253,33309],"yaml":true},{"content":"The status of an asynchronous operation.","nodes":[{"pos":[0,40],"content":"The status of an asynchronous operation.","nodes":[{"content":"The status of an asynchronous operation.","pos":[0,40]}]}],"pos":[33372,33413],"yaml":true},{"content":"Creates instance state information in the persistence store using parameters passed into the method. This method does not unlock the instance in the persistence store after saving the instance state.","nodes":[{"pos":[0,199],"content":"Creates instance state information in the persistence store using parameters passed into the method. This method does not unlock the instance in the persistence store after saving the instance state.","nodes":[{"content":"Creates instance state information in the persistence store using parameters passed into the method. This method does not unlock the instance in the persistence store after saving the instance state.","pos":[0,199],"nodes":[{"content":"Creates instance state information in the persistence store using parameters passed into the method.","pos":[0,100]},{"content":"This method does not unlock the instance in the persistence store after saving the instance state.","pos":[101,199]}]}]}],"pos":[34695,34895],"yaml":true},{"content":"The instance object whose state information must be saved into the persistence store.","nodes":[{"pos":[0,85],"content":"The instance object whose state information must be saved into the persistence store.","nodes":[{"content":"The instance object whose state information must be saved into the persistence store.","pos":[0,85]}]}],"pos":[35065,35151],"yaml":true},{"content":"The interval in which the operation must complete before timing out.","nodes":[{"pos":[0,68],"content":"The interval in which the operation must complete before timing out.","nodes":[{"content":"The interval in which the operation must complete before timing out.","pos":[0,68]}]}],"pos":[35216,35285],"yaml":true},{"content":"The state information.","nodes":[{"pos":[0,22],"content":"The state information.","nodes":[{"content":"The state information.","pos":[0,22]}]}],"pos":[35342,35365],"yaml":true},{"content":"This method creates instance state information in the persistence store using parameters passed into the method. The method unlocks the instance in the instance store if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"pos":[0,235],"content":"This method creates instance state information in the persistence store using parameters passed into the method. The method unlocks the instance in the instance store if the value of the <code>unlockInstance</code> parameter is `true`.","nodes":[{"content":"This method creates instance state information in the persistence store using parameters passed into the method.","pos":[0,112]},{"content":"The method unlocks the instance in the instance store if the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unlockInstance</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>.","pos":[113,235],"source":" The method unlocks the instance in the instance store if the value of the <code>unlockInstance</code> parameter is `true`."}]}],"pos":[36714,36950],"yaml":true},{"content":"The instance object whose state information is saved into the persistence store.","nodes":[{"pos":[0,80],"content":"The instance object whose state information is saved into the persistence store.","nodes":[{"content":"The instance object whose state information is saved into the persistence store.","pos":[0,80]}]}],"pos":[37141,37222],"yaml":true},{"content":"The interval within which the operation must complete before timing out.","nodes":[{"pos":[0,72],"content":"The interval within which the operation must complete before timing out.","nodes":[{"content":"The interval within which the operation must complete before timing out.","pos":[0,72]}]}],"pos":[37287,37360],"yaml":true},{"content":"`true` if the instance must be unlocked in the persistence store; otherwise `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the instance must be unlocked in the persistence store; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance must be unlocked in the persistence store; otherwise `false`."}],"pos":[37431,37518],"yaml":true},{"content":"The state information.","nodes":[{"pos":[0,22],"content":"The state information.","nodes":[{"content":"The state information.","pos":[0,22]}]}],"pos":[37575,37598],"yaml":true},{"content":"Ends the asynchronous operation to unlock an instance in the persistence store.","nodes":[{"pos":[0,79],"content":"Ends the asynchronous operation to unlock an instance in the persistence store.","nodes":[{"content":"Ends the asynchronous operation to unlock an instance in the persistence store.","pos":[0,79]}]}],"pos":[38851,38931],"yaml":true},{"content":"The result returned by the unlock operation.","nodes":[{"pos":[0,44],"content":"The result returned by the unlock operation.","nodes":[{"content":"The result returned by the unlock operation.","pos":[0,44]}]}],"pos":[39092,39137],"yaml":true},{"content":"Loads service state information from the persistence store without locking the instance.","nodes":[{"pos":[0,88],"content":"Loads service state information from the persistence store without locking the instance.","nodes":[{"content":"Loads service state information from the persistence store without locking the instance.","pos":[0,88]}]}],"pos":[40339,40428],"yaml":true},{"content":"This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`.","nodes":[{"pos":[0,150],"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A&gt;</ph> method with <ph id=\"ph2\">`lockInstance`</ph> parameter set to <ph id=\"ph3\">`false`</ph>.","source":"This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`."}],"pos":[40439,40590],"yaml":true,"extradata":"MT"},{"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"pos":[0,73],"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]}],"pos":[40742,40816],"yaml":true},{"content":"The service state information.","nodes":[{"pos":[0,30],"content":"The service state information.","nodes":[{"content":"The service state information.","pos":[0,30]}]}],"pos":[40873,40904],"yaml":true},{"content":"Loads state information from the persistence store after locking the instance.","nodes":[{"pos":[0,78],"content":"Loads state information from the persistence store after locking the instance.","nodes":[{"content":"Loads state information from the persistence store after locking the instance.","pos":[0,78]}]}],"pos":[42173,42252],"yaml":true},{"content":"The period after which the persistence provider aborts this operation.","nodes":[{"pos":[0,70],"content":"The period after which the persistence provider aborts this operation.","nodes":[{"content":"The period after which the persistence provider aborts this operation.","pos":[0,70]}]}],"pos":[42423,42494],"yaml":true},{"content":"`true` if the instance should be locked; otherwise `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the instance should be locked; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance should be locked; otherwise `false`."}],"pos":[42563,42625],"yaml":true},{"content":"The state information.","nodes":[{"pos":[0,22],"content":"The state information.","nodes":[{"content":"The state information.","pos":[0,22]}]}],"pos":[42682,42705],"yaml":true},{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method does not lock the instance in the persistence store.","nodes":[{"pos":[0,232],"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method does not lock the instance in the persistence store.","nodes":[{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method does not lock the instance in the persistence store.","pos":[0,232],"nodes":[{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.","pos":[0,167]},{"content":"This method does not lock the instance in the persistence store.","pos":[168,232]}]}]}],"pos":[44091,44324],"yaml":true},{"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"pos":[0,75],"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"content":"The time period after which the persistence provider aborts this operation.","pos":[0,75]}]}],"pos":[44526,44602],"yaml":true},{"content":"The token returned by the previous `Create` or `Update` method calls, which represents the current state held by the caller.","nodes":[{"pos":[0,124],"content":"The token returned by the previous <ph id=\"ph1\">`Create`</ph> or <ph id=\"ph2\">`Update`</ph> method calls, which represents the current state held by the caller.","source":"The token returned by the previous `Create` or `Update` method calls, which represents the current state held by the caller."}],"pos":[44671,44796],"yaml":true},{"content":"The actual instance state information.","nodes":[{"pos":[0,38],"content":"The actual instance state information.","nodes":[{"content":"The actual instance state information.","pos":[0,38]}]}],"pos":[44860,44899],"yaml":true},{"content":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`."}],"pos":[44957,45073],"yaml":true},{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method also lets the caller specify whether to lock the instance in the persistence store.","nodes":[{"pos":[0,263],"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method also lets the caller specify whether to lock the instance in the persistence store.","nodes":[{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method also lets the caller specify whether to lock the instance in the persistence store.","pos":[0,263],"nodes":[{"content":"Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.","pos":[0,167]},{"content":"This method also lets the caller specify whether to lock the instance in the persistence store.","pos":[168,263]}]}]}],"pos":[46540,46804],"yaml":true},{"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"pos":[0,75],"content":"The time period after which the persistence provider aborts this operation.","nodes":[{"content":"The time period after which the persistence provider aborts this operation.","pos":[0,75]}]}],"pos":[47024,47100],"yaml":true},{"content":"The token returned by the previous Create or Update method calls, which represents the current state held by the caller.","nodes":[{"pos":[0,120],"content":"The token returned by the previous Create or Update method calls, which represents the current state held by the caller.","nodes":[{"content":"The token returned by the previous Create or Update method calls, which represents the current state held by the caller.","pos":[0,120]}]}],"pos":[47169,47290],"yaml":true},{"content":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`."}],"pos":[47359,47475],"yaml":true},{"content":"The instance state information.","nodes":[{"pos":[0,31],"content":"The instance state information.","nodes":[{"content":"The instance state information.","pos":[0,31]}]}],"pos":[47539,47571],"yaml":true},{"content":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`."}],"pos":[47629,47745],"yaml":true},{"content":"Unlocks the instance whose ID is specified when constructing the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> object in the persistence store.","nodes":[{"pos":[0,177],"content":"Unlocks the instance whose ID is specified when constructing the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;&lt;/xref&gt;</ph> object in the persistence store.","source":"Unlocks the instance whose ID is specified when constructing the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> object in the persistence store."}],"pos":[48963,49141],"yaml":true},{"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"pos":[0,74],"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"content":"The time period after which the persistence provider aborts the operation.","pos":[0,74]}]}],"pos":[49293,49368],"yaml":true},{"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","nodes":[{"pos":[0,214],"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","nodes":[{"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","pos":[0,214],"nodes":[{"content":"When implemented in a derived class, updates the instance state information in the persistence store.","pos":[0,101]},{"content":"This method does not unlock the instance after updating the instance state information in the persistence store.","pos":[102,214]}]}]}],"pos":[50645,50860],"yaml":true},{"content":"The instance state information.","nodes":[{"pos":[0,31],"content":"The instance state information.","nodes":[{"content":"The instance state information.","pos":[0,31]}]}],"pos":[51030,51062],"yaml":true},{"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"pos":[0,74],"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"content":"The time period after which the persistence provider aborts the operation.","pos":[0,74]}]}],"pos":[51127,51202],"yaml":true},{"content":"The instance state information.","nodes":[{"pos":[0,31],"content":"The instance state information.","nodes":[{"content":"The instance state information.","pos":[0,31]}]}],"pos":[51259,51291],"yaml":true},{"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","nodes":[{"pos":[0,214],"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","nodes":[{"content":"When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.","pos":[0,214],"nodes":[{"content":"When implemented in a derived class, updates the instance state information in the persistence store.","pos":[0,101]},{"content":"This method does not unlock the instance after updating the instance state information in the persistence store.","pos":[102,214]}]}]}],"pos":[52640,52855],"yaml":true},{"content":"The instance state information.","nodes":[{"pos":[0,31],"content":"The instance state information.","nodes":[{"content":"The instance state information.","pos":[0,31]}]}],"pos":[53046,53078],"yaml":true},{"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"pos":[0,74],"content":"The time period after which the persistence provider aborts the operation.","nodes":[{"content":"The time period after which the persistence provider aborts the operation.","pos":[0,74]}]}],"pos":[53143,53218],"yaml":true},{"content":"`true` if the instance is unlocked after the instance state information is updated; otherwise `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the instance is unlocked after the instance state information is updated; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instance is unlocked after the instance state information is updated; otherwise `false`."}],"pos":[53289,53394],"yaml":true},{"content":"The instance state information.","nodes":[{"pos":[0,31],"content":"The instance state information.","nodes":[{"content":"The instance state information.","pos":[0,31]}]}],"pos":[53451,53483],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider\n  commentId: T:System.ServiceModel.Persistence.LockingPersistenceProvider\n  id: LockingPersistenceProvider\n  children:\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)\n  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)\n  langs:\n  - csharp\n  name: LockingPersistenceProvider\n  nameWithType: LockingPersistenceProvider\n  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider\n  type: Class\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: The abstract base class from which all durable service persistence providers that implement locking are derived.\n  remarks: In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records. Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.\n  syntax:\n    content: >-\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Persistence.PersistenceProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  - System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)\n  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)\n  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)\n  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)\n  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)\n  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)\n  - System.ServiceModel.Persistence.PersistenceProvider.Id\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)\n  id: '#ctor(System.Guid)'\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: LockingPersistenceProvider(Guid)\n  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)\n  fullName: LockingPersistenceProvider.LockingPersistenceProvider(Guid)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: When implemented in a derived class, creates a new instance of the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> class, configured with the specified identity value.\n  syntax:\n    content: protected LockingPersistenceProvider (Guid id);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: The unique identifier to be associated with this persistence provider instance.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method does not unlock the instance after saving the state information.\n  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked. This method passes `false` as a value for this parameter to the calling method.\n  syntax:\n    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance whose state information is saved into the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must be completed without timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method unlocks the instance after saving the instance state if the value of the <code>unlockInstance</code> parameter is `true`.\n  syntax:\n    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance whose state information is saved into the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must be completed without timing out.\n    - id: unlockInstance\n      type: System.Boolean\n      description: '`true` if the instance must be unlocked in the persistence store; otherwise `false`.'\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginLoad(TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method does not lock the instance.\n  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store. This method passes `false` as a value for this parameter to the calling method.\n  syntax:\n    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must be completed without timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method locks the instance after loading the instance state if the value of the <code>lockInstance</code> parameter is `true`.\n  syntax:\n    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: An interval in which the operation must be completed before timing out.\n    - id: lockInstance\n      type: System.Boolean\n      description: '`true` if the instance must be locked; otherwise `false`.'\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)\n  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call does not lock the instance in the persistence store.\n  syntax:\n    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this operation.\n    - id: instanceToken\n      type: System.Object\n      description: The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call lets you specify whether you want to lock the instance in the persistence store.\n  syntax:\n    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this operation.\n    - id: instanceToken\n      type: System.Object\n      description: The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.\n    - id: lockInstance\n      type: System.Boolean\n      description: '`true` if the instance is locked in the persistence store; otherwise `false`.'\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginUnlock(TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to unlock an instance in the persistence store.\n  syntax:\n    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: An interval in which the operation must be completed before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation locks the instance in the persistence store if the value of the <code>unlockInstance</code> parameter is `true`.\n  syntax:\n    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance whose state information is being updated in the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must complete without timing out.\n    - id: unlockInstance\n      type: System.Boolean\n      description: '`true` if the instance must be locked after the instance state is updated in the persistence store; otherwise `false`.'\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation completes.\n    - id: state\n      type: System.Object\n      description: The state information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation does not unlock the instance in the instance store.\n  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter.\n  syntax:\n    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance whose state information is being updated in the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must complete without timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate that receives the notification when the operation is completed.\n    - id: state\n      type: System.Object\n      description: The state information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of an asynchronous operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)\n  id: Create(System.Object,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Create(Object, TimeSpan)\n  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan)\n  fullName: LockingPersistenceProvider.Create(Object, TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Creates instance state information in the persistence store using parameters passed into the method. This method does not unlock the instance in the persistence store after saving the instance state.\n  syntax:\n    content: public override object Create (object instance, TimeSpan timeout);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance object whose state information must be saved into the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the operation must complete before timing out.\n    return:\n      type: System.Object\n      description: The state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)\n  id: Create(System.Object,System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Create(Object, TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: This method creates instance state information in the persistence store using parameters passed into the method. The method unlocks the instance in the instance store if the value of the <code>unlockInstance</code> parameter is `true`.\n  syntax:\n    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance object whose state information is saved into the persistence store.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval within which the operation must complete before timing out.\n    - id: unlockInstance\n      type: System.Boolean\n      description: '`true` if the instance must be unlocked in the persistence store; otherwise `false`.'\n    return:\n      type: System.Object\n      description: The state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)\n  id: EndUnlock(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: EndUnlock(IAsyncResult)\n  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)\n  fullName: LockingPersistenceProvider.EndUnlock(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Ends the asynchronous operation to unlock an instance in the persistence store.\n  syntax:\n    content: public abstract void EndUnlock (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result returned by the unlock operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)\n  id: Load(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Load(TimeSpan)\n  nameWithType: LockingPersistenceProvider.Load(TimeSpan)\n  fullName: LockingPersistenceProvider.Load(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Loads service state information from the persistence store without locking the instance.\n  remarks: This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`.\n  syntax:\n    content: public override object Load (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n    return:\n      type: System.Object\n      description: The service state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)\n  id: Load(System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Load(TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Load(TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Load(TimeSpan, Boolean)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Loads state information from the persistence store after locking the instance.\n  syntax:\n    content: public abstract object Load (TimeSpan timeout, bool lockInstance);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The period after which the persistence provider aborts this operation.\n    - id: lockInstance\n      type: System.Boolean\n      description: '`true` if the instance should be locked; otherwise `false`.'\n    return:\n      type: System.Object\n      description: The state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)\n  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: LoadIfChanged(TimeSpan, Object, Object)\n  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)\n  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method does not lock the instance in the persistence store.\n  syntax:\n    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this operation.\n    - id: instanceToken\n      type: System.Object\n      description: The token returned by the previous `Create` or `Update` method calls, which represents the current state held by the caller.\n    - id: instance\n      type: System.Object\n      description: The actual instance state information.\n    return:\n      type: System.Boolean\n      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)\n  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: LoadIfChanged(TimeSpan, Object, Boolean, Object)\n  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)\n  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method also lets the caller specify whether to lock the instance in the persistence store.\n  syntax:\n    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this operation.\n    - id: instanceToken\n      type: System.Object\n      description: The token returned by the previous Create or Update method calls, which represents the current state held by the caller.\n    - id: lockInstance\n      type: System.Boolean\n      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'\n    - id: instance\n      type: System.Object\n      description: The instance state information.\n    return:\n      type: System.Boolean\n      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)\n  id: Unlock(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Unlock(TimeSpan)\n  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)\n  fullName: LockingPersistenceProvider.Unlock(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Unlocks the instance whose ID is specified when constructing the <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> object in the persistence store.\n  syntax:\n    content: public abstract void Unlock (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts the operation.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)\n  id: Update(System.Object,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Update(Object, TimeSpan)\n  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan)\n  fullName: LockingPersistenceProvider.Update(Object, TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.\n  syntax:\n    content: public override object Update (object instance, TimeSpan timeout);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance state information.\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts the operation.\n    return:\n      type: System.Object\n      description: The instance state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)\n  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)\n  id: Update(System.Object,System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  langs:\n  - csharp\n  name: Update(Object, TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.\n  syntax:\n    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance state information.\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts the operation.\n    - id: unlockInstance\n      type: System.Boolean\n      description: '`true` if the instance is unlocked after the instance state information is updated; otherwise `false`.'\n    return:\n      type: System.Object\n      description: The instance state information.\n  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Persistence.PersistenceProvider\n  parent: System.ServiceModel.Persistence\n  isExternal: false\n  name: PersistenceProvider\n  nameWithType: PersistenceProvider\n  fullName: System.ServiceModel.Persistence.PersistenceProvider\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: LockingPersistenceProvider(Guid)\n  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)\n  fullName: LockingPersistenceProvider.LockingPersistenceProvider(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoad(TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginUnlock(TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Create(Object, TimeSpan)\n  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan)\n  fullName: LockingPersistenceProvider.Create(Object, TimeSpan)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Create(Object, TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: EndUnlock(IAsyncResult)\n  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)\n  fullName: LockingPersistenceProvider.EndUnlock(IAsyncResult)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Load(TimeSpan)\n  nameWithType: LockingPersistenceProvider.Load(TimeSpan)\n  fullName: LockingPersistenceProvider.Load(TimeSpan)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Load(TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Load(TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Load(TimeSpan, Boolean)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: LoadIfChanged(TimeSpan, Object, Object)\n  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)\n  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: LoadIfChanged(TimeSpan, Object, Boolean, Object)\n  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)\n  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Unlock(TimeSpan)\n  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)\n  fullName: LockingPersistenceProvider.Unlock(TimeSpan)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Update(Object, TimeSpan)\n  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan)\n  fullName: LockingPersistenceProvider.Update(Object, TimeSpan)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Update(Object, TimeSpan, Boolean)\n  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)\n  fullName: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: LockingPersistenceProvider\n  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider\n  fullName: LockingPersistenceProvider.LockingPersistenceProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginCreate\n  nameWithType: LockingPersistenceProvider.BeginCreate\n  fullName: LockingPersistenceProvider.BeginCreate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoad\n  nameWithType: LockingPersistenceProvider.BeginLoad\n  fullName: LockingPersistenceProvider.BeginLoad\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginLoadIfChanged\n  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged\n  fullName: LockingPersistenceProvider.BeginLoadIfChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginUnlock\n  nameWithType: LockingPersistenceProvider.BeginUnlock\n  fullName: LockingPersistenceProvider.BeginUnlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: BeginUpdate\n  nameWithType: LockingPersistenceProvider.BeginUpdate\n  fullName: LockingPersistenceProvider.BeginUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Create\n  nameWithType: LockingPersistenceProvider.Create\n  fullName: LockingPersistenceProvider.Create\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: EndUnlock\n  nameWithType: LockingPersistenceProvider.EndUnlock\n  fullName: LockingPersistenceProvider.EndUnlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Load\n  nameWithType: LockingPersistenceProvider.Load\n  fullName: LockingPersistenceProvider.Load\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: LoadIfChanged\n  nameWithType: LockingPersistenceProvider.LoadIfChanged\n  fullName: LockingPersistenceProvider.LoadIfChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Unlock\n  nameWithType: LockingPersistenceProvider.Unlock\n  fullName: LockingPersistenceProvider.Unlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*\n  parent: System.ServiceModel.Persistence.LockingPersistenceProvider\n  isExternal: false\n  name: Update\n  nameWithType: LockingPersistenceProvider.Update\n  fullName: LockingPersistenceProvider.Update\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: CommunicationObject.DefaultCloseTimeout\n  fullName: CommunicationObject.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: CommunicationObject.DefaultOpenTimeout\n  fullName: CommunicationObject.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: BeginDelete(Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: PersistenceProvider.BeginDelete(Object, TimeSpan, AsyncCallback, Object)\n  fullName: PersistenceProvider.BeginDelete(Object, TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: Delete(Object, TimeSpan)\n  nameWithType: PersistenceProvider.Delete(Object, TimeSpan)\n  fullName: PersistenceProvider.Delete(Object, TimeSpan)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: EndCreate(IAsyncResult)\n  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)\n  fullName: PersistenceProvider.EndCreate(IAsyncResult)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: EndDelete(IAsyncResult)\n  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)\n  fullName: PersistenceProvider.EndDelete(IAsyncResult)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: EndLoad(IAsyncResult)\n  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)\n  fullName: PersistenceProvider.EndLoad(IAsyncResult)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: EndLoadIfChanged(IAsyncResult, Object)\n  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult, Object)\n  fullName: PersistenceProvider.EndLoadIfChanged(IAsyncResult, Object)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: EndUpdate(IAsyncResult)\n  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)\n  fullName: PersistenceProvider.EndUpdate(IAsyncResult)\n- uid: System.ServiceModel.Persistence.PersistenceProvider.Id\n  parent: System.ServiceModel.Persistence.PersistenceProvider\n  isExternal: false\n  name: Id\n  nameWithType: PersistenceProvider.Id\n  fullName: PersistenceProvider.Id\n"}