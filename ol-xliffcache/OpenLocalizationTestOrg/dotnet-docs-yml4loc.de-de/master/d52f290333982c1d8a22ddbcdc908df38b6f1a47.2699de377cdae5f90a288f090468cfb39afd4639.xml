{"nodes":[{"content":"Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects. An abstract class, it cannot be instantiated.","nodes":[{"pos":[0,208],"content":"Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects. An abstract class, it cannot be instantiated.","nodes":[{"content":"Provides the core implementation for the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualFile\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.VirtualDirectory\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,162],"source":"Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects."},{"content":"An abstract class, it cannot be instantiated.","pos":[163,208]}]}],"pos":[627,836],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.","nodes":[{"pos":[0,446],"content":"The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.","nodes":[{"content":"The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.","pos":[0,446],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualFileBase&gt;</ph> abstract class provides the common methods and properties shared between the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> objects.","pos":[0,216],"source":"The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects."},{"content":"Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation.","pos":[217,330]},{"content":"For more information on using virtual files and paths, see the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class.","pos":[331,446],"source":" For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class."}]}]}],"pos":[847,1294],"yaml":true,"extradata":"MT"},{"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","nodes":[{"pos":[0,120],"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","nodes":[{"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","pos":[0,120],"nodes":[{"content":"Initializes the class for use by an inherited class instance.","pos":[0,61]},{"content":"This constructor can be called only by an inherited class.","pos":[62,120]}]}]}],"pos":[2924,3045],"yaml":true},{"content":"Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.","nodes":[{"pos":[0,181],"content":"Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.","nodes":[{"content":"Although you cannot directly construct an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualFileBase&gt;</ph> class, you can call this constructor from the constructor of an inheriting class.","pos":[0,181],"source":"Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class."}]}],"pos":[3056,3238],"yaml":true,"extradata":"MT"},{"content":"Gives a <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance an infinite lifetime by preventing a lease from being created.","nodes":[{"pos":[0,135],"content":"Gives a <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;&lt;/xref&gt;</ph> instance an infinite lifetime by preventing a lease from being created.","source":"Gives a <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance an infinite lifetime by preventing a lease from being created."}],"pos":[4376,4512],"yaml":true},{"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.","nodes":[{"pos":[0,250],"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method on its base class.","pos":[0,113],"source":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class."},{"content":"It always returns <ph id=\"ph1\">`null`</ph> and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.","pos":[114,250],"source":" It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory."}]}],"pos":[4523,4774],"yaml":true,"extradata":"MT"},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[4926,4941],"yaml":true},{"content":"When overridden in a derived class, gets a value indicating whether the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance represents a virtual file or a virtual directory.","nodes":[{"pos":[0,186],"content":"When overridden in a derived class, gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;&lt;/xref&gt;</ph> instance represents a virtual file or a virtual directory.","source":"When overridden in a derived class, gets a value indicating whether the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance represents a virtual file or a virtual directory."}],"pos":[5939,6126],"yaml":true},{"content":"`true` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual directory; otherwise, `false` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual file.","nodes":[{"pos":[0,212],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;&lt;/xref&gt;</ph> instance is a virtual directory; otherwise, <ph id=\"ph3\">`false`</ph> if the <ph id=\"ph4\">&lt;xref href=\"System.Web.Hosting.VirtualFileBase\"&gt;&lt;/xref&gt;</ph> instance is a virtual file.","source":"`true` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual directory; otherwise, `false` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual file."}],"pos":[6249,6464],"yaml":true},{"content":"Gets the display name of the virtual resource.","nodes":[{"pos":[0,46],"content":"Gets the display name of the virtual resource.","nodes":[{"content":"Gets the display name of the virtual resource.","pos":[0,46]}]}],"pos":[7406,7453],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.","nodes":[{"pos":[0,185],"content":"The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualFileBase.Name%2A&gt;</ph> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.","pos":[0,185],"source":"The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names."}]}],"pos":[7464,7650],"yaml":true,"extradata":"MT"},{"content":"The display name of the virtual file.","nodes":[{"pos":[0,37],"content":"The display name of the virtual file.","nodes":[{"content":"The display name of the virtual file.","pos":[0,37]}]}],"pos":[7766,7804],"yaml":true},{"content":"Gets the virtual file path.","nodes":[{"pos":[0,27],"content":"Gets the virtual file path.","nodes":[{"content":"Gets the virtual file path.","pos":[0,27]}]}],"pos":[8781,8809],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.","nodes":[{"pos":[0,139],"content":"The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A&gt;</ph> property returns the path to the file or directory represented by this object.","pos":[0,139],"source":"The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object."}]}],"pos":[8820,8960],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual file.","nodes":[{"pos":[0,29],"content":"The path to the virtual file.","nodes":[{"content":"The path to the virtual file.","pos":[0,29]}]}],"pos":[9075,9105],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.VirtualFileBase\n  commentId: T:System.Web.Hosting.VirtualFileBase\n  id: VirtualFileBase\n  children:\n  - System.Web.Hosting.VirtualFileBase.#ctor\n  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  - System.Web.Hosting.VirtualFileBase.IsDirectory\n  - System.Web.Hosting.VirtualFileBase.Name\n  - System.Web.Hosting.VirtualFileBase.VirtualPath\n  langs:\n  - csharp\n  name: VirtualFileBase\n  nameWithType: VirtualFileBase\n  fullName: System.Web.Hosting.VirtualFileBase\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Provides the core implementation for the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> and <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> objects. An abstract class, it cannot be instantiated.\n  remarks: The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.\n  syntax:\n    content: 'public abstract class VirtualFileBase : MarshalByRefObject'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  derivedClasses:\n  - System.Web.Hosting.VirtualDirectory\n  - System.Web.Hosting.VirtualFile\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualFileBase.#ctor\n  commentId: M:System.Web.Hosting.VirtualFileBase.#ctor\n  id: '#ctor'\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: VirtualFileBase()\n  nameWithType: VirtualFileBase.VirtualFileBase()\n  fullName: VirtualFileBase.VirtualFileBase()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.\n  remarks: Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.\n  syntax:\n    content: protected VirtualFileBase ();\n    parameters: []\n  overload: System.Web.Hosting.VirtualFileBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  commentId: M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: VirtualFileBase.InitializeLifetimeService()\n  fullName: VirtualFileBase.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gives a <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance an infinite lifetime by preventing a lease from being created.\n  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Always `null`.\n  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory\n  commentId: P:System.Web.Hosting.VirtualFileBase.IsDirectory\n  id: IsDirectory\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n  fullName: VirtualFileBase.IsDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: When overridden in a derived class, gets a value indicating whether the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance represents a virtual file or a virtual directory.\n  syntax:\n    content: public abstract bool IsDirectory { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual directory; otherwise, `false` if the <xref href=\"System.Web.Hosting.VirtualFileBase\"></xref> instance is a virtual file.'\n  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualFileBase.Name\n  commentId: P:System.Web.Hosting.VirtualFileBase.Name\n  id: Name\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: Name\n  nameWithType: VirtualFileBase.Name\n  fullName: VirtualFileBase.Name\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the display name of the virtual resource.\n  remarks: The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: The display name of the virtual file.\n  overload: System.Web.Hosting.VirtualFileBase.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath\n  commentId: P:System.Web.Hosting.VirtualFileBase.VirtualPath\n  id: VirtualPath\n  parent: System.Web.Hosting.VirtualFileBase\n  langs:\n  - csharp\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n  fullName: VirtualFileBase.VirtualPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the virtual file path.\n  remarks: The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.\n  syntax:\n    content: public string VirtualPath { get; }\n    return:\n      type: System.String\n      description: The path to the virtual file.\n  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Web.Hosting.VirtualFileBase.#ctor\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualFileBase()\n  nameWithType: VirtualFileBase.VirtualFileBase()\n  fullName: VirtualFileBase.VirtualFileBase()\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: VirtualFileBase.InitializeLifetimeService()\n  fullName: VirtualFileBase.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n  fullName: VirtualFileBase.IsDirectory\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.VirtualFileBase.Name\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: Name\n  nameWithType: VirtualFileBase.Name\n  fullName: VirtualFileBase.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n  fullName: VirtualFileBase.VirtualPath\n- uid: System.Web.Hosting.VirtualFileBase.#ctor*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualFileBase\n  nameWithType: VirtualFileBase.VirtualFileBase\n  fullName: VirtualFileBase.VirtualFileBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: VirtualFileBase.InitializeLifetimeService\n  fullName: VirtualFileBase.InitializeLifetimeService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: IsDirectory\n  nameWithType: VirtualFileBase.IsDirectory\n  fullName: VirtualFileBase.IsDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n- uid: System.Web.Hosting.VirtualFileBase.Name*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: Name\n  nameWithType: VirtualFileBase.Name\n  fullName: VirtualFileBase.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*\n  parent: System.Web.Hosting.VirtualFileBase\n  isExternal: false\n  name: VirtualPath\n  nameWithType: VirtualFileBase.VirtualPath\n  fullName: VirtualFileBase.VirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n"}