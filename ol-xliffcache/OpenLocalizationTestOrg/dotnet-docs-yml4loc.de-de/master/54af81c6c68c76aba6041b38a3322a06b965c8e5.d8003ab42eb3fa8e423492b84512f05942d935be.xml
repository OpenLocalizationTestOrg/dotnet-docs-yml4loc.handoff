{"nodes":[{"content":"Specifies whether a property can only be set at design time.","nodes":[{"pos":[0,60],"content":"Specifies whether a property can only be set at design time.","nodes":[{"content":"Specifies whether a property can only be set at design time.","pos":[0,60]}]}],"pos":[927,988],"yaml":true},{"content":"Members marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` can be set only at design time. Typically, these properties exist only at design time and do not correspond to a real property on the object at run time.  \n  \n Members that either have no attribute or are marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `false` can be set during run time. The default is `false`.  \n  \n A property with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` has its value serialized to the .resx file instead of the `InitializeComponent` method.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,240],"content":"Members marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` can be set only at design time. Typically, these properties exist only at design time and do not correspond to a real property on the object at run time.","nodes":[{"content":"Members marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignOnlyAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph> can be set only at design time.","pos":[0,118],"source":"Members marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` can be set only at design time."},{"content":"Typically, these properties exist only at design time and do not correspond to a real property on the object at run time.","pos":[119,240]}]},{"pos":[247,423],"content":"Members that either have no attribute or are marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `false` can be set during run time. The default is `false`.","nodes":[{"content":"Members that either have no attribute or are marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignOnlyAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph> can be set during run time.","pos":[0,152],"source":"Members that either have no attribute or are marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `false` can be set during run time."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[153,176],"source":" The default is `false`."}]},{"pos":[430,600],"content":"A property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignOnlyAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph> has its value serialized to the .resx file instead of the <ph id=\"ph3\">`InitializeComponent`</ph> method.","source":"A property with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` has its value serialized to the .resx file instead of the `InitializeComponent` method."},{"pos":[607,718],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[999,1726],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref> class."}],"pos":[8625,8729],"yaml":true},{"content":"`true` if a property can be set only at design time; `false` if the property can be set at design time and at run time.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">`true`</ph> if a property can be set only at design time; <ph id=\"ph2\">`false`</ph> if the property can be set at design time and at run time.","source":"`true` if a property can be set only at design time; `false` if the property can be set at design time and at run time."}],"pos":[8885,9007],"yaml":true},{"content":"Specifies the default value for the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, which is <xref href=\"System.ComponentModel.DesignOnlyAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"pos":[0,209],"content":"Specifies the default value for the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, which is <xref href=\"System.ComponentModel.DesignOnlyAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"content":"Specifies the default value for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute\"&gt;&lt;/xref&gt;</ph>, which is <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute.No\"&gt;&lt;/xref&gt;</ph>.","pos":[0,175],"source":"Specifies the default value for the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, which is <xref href=\"System.ComponentModel.DesignOnlyAttribute.No\"></xref>."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[176,209],"source":" This `static` field is read-only."}]}],"pos":[10332,10542],"yaml":true},{"content":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>.","nodes":[{"pos":[0,133],"content":"Returns whether the value of the given object is equal to the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>."}],"pos":[12055,12189],"yaml":true},{"content":"The object to test the value equality of.","nodes":[{"pos":[0,41],"content":"The object to test the value equality of.","nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]}],"pos":[12329,12371],"yaml":true},{"content":"`true` if the value of the given object is equal to that of the current; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the value of the given object is equal to that of the current; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the given object is equal to that of the current; otherwise, `false`."}],"pos":[12429,12524],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[13881,13922],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[14056,14091],"yaml":true},{"content":"Determines if this attribute is the default.","nodes":[{"pos":[0,44],"content":"Determines if this attribute is the default.","nodes":[{"content":"Determines if this attribute is the default.","pos":[0,44]}]}],"pos":[15495,15540],"yaml":true},{"content":"`true` if the attribute is the default value for this attribute class; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the attribute is the default value for this attribute class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the attribute is the default value for this attribute class; otherwise, `false`."}],"pos":[15684,15777],"yaml":true},{"content":"Gets a value indicating whether a property can be set only at design time.","nodes":[{"pos":[0,74],"content":"Gets a value indicating whether a property can be set only at design time.","nodes":[{"content":"Gets a value indicating whether a property can be set only at design time.","pos":[0,74]}]}],"pos":[17084,17159],"yaml":true},{"content":"`true` if a property can be set only at design time; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if a property can be set only at design time; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a property can be set only at design time; otherwise, `false`."}],"pos":[17274,17349],"yaml":true},{"content":"Specifies that a property can be set at design time or at run time. This `static` field is read-only.","nodes":[{"pos":[0,101],"content":"Specifies that a property can be set at design time or at run time. This `static` field is read-only.","nodes":[{"content":"Specifies that a property can be set at design time or at run time.","pos":[0,67]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[68,101],"source":" This `static` field is read-only."}]}],"pos":[18651,18753],"yaml":true},{"content":"The <xref:System.ComponentModel.DesignOnlyAttribute.No> field is the default setting for this attribute.","nodes":[{"pos":[0,104],"content":"The <xref:System.ComponentModel.DesignOnlyAttribute.No> field is the default setting for this attribute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignOnlyAttribute.No&gt;</ph> field is the default setting for this attribute.","pos":[0,104],"source":"The <xref:System.ComponentModel.DesignOnlyAttribute.No> field is the default setting for this attribute."}]}],"pos":[18764,18869],"yaml":true,"extradata":"MT"},{"content":"Specifies that a property can be set only at design time. This `static` field is read-only.","nodes":[{"pos":[0,91],"content":"Specifies that a property can be set only at design time. This `static` field is read-only.","nodes":[{"content":"Specifies that a property can be set only at design time.","pos":[0,57]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[58,91],"source":" This `static` field is read-only."}]}],"pos":[20289,20381],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DesignOnlyAttribute\n  commentId: T:System.ComponentModel.DesignOnlyAttribute\n  id: DesignOnlyAttribute\n  children:\n  - System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.DesignOnlyAttribute.Default\n  - System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)\n  - System.ComponentModel.DesignOnlyAttribute.GetHashCode\n  - System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute\n  - System.ComponentModel.DesignOnlyAttribute.IsDesignOnly\n  - System.ComponentModel.DesignOnlyAttribute.No\n  - System.ComponentModel.DesignOnlyAttribute.Yes\n  langs:\n  - csharp\n  name: DesignOnlyAttribute\n  nameWithType: DesignOnlyAttribute\n  fullName: System.ComponentModel.DesignOnlyAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies whether a property can only be set at design time.\n  remarks: \"Members marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` can be set only at design time. Typically, these properties exist only at design time and do not correspond to a real property on the object at run time.  \\n  \\n Members that either have no attribute or are marked with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `false` can be set during run time. The default is `false`.  \\n  \\n A property with the <xref:System.ComponentModel.DesignOnlyAttribute> set to `true` has its value serialized to the .resx file instead of the `InitializeComponent` method.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example creates a `GetLanguage` property. The property is marked with a <xref:System.ComponentModel.DesignOnlyAttribute>.  \\n  \\n [!code-cpp[Classic DesignOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic DesignOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic DesignOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/VB/source.vb#1)]  \\n  \\n The next example gets the value of the <xref:System.ComponentModel.DesignOnlyAttribute>. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to find the `GetLanguage` property. Then it returns the attributes for this property and saves them in the attributes variable.  \\n  \\n The example then prints whether the property is design only by retrieving <xref:System.ComponentModel.DesignOnlyAttribute> from the <xref:System.ComponentModel.AttributeCollection>, and writing it to the console screen.  \\n  \\n [!code-cpp[Classic DesignOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic DesignOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/CS/source.cs#2)]\\n [!code-vb[Classic DesignOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignOnlyAttribute Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class DesignOnlyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: DesignOnlyAttribute(Boolean)\n  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)\n  fullName: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref> class.\n  syntax:\n    content: public DesignOnlyAttribute (bool isDesignOnly);\n    parameters:\n    - id: isDesignOnly\n      type: System.Boolean\n      description: '`true` if a property can be set only at design time; `false` if the property can be set at design time and at run time.'\n  overload: System.ComponentModel.DesignOnlyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.Default\n  commentId: F:System.ComponentModel.DesignOnlyAttribute.Default\n  id: Default\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: DesignOnlyAttribute.Default\n  fullName: DesignOnlyAttribute.Default\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies the default value for the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, which is <xref href=\"System.ComponentModel.DesignOnlyAttribute.No\"></xref>. This `static` field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.DesignOnlyAttribute Default;\n    return:\n      type: System.ComponentModel.DesignOnlyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DesignOnlyAttribute.Equals(Object)\n  fullName: DesignOnlyAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the given object is equal to that of the current; otherwise, `false`.'\n  overload: System.ComponentModel.DesignOnlyAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode\n  commentId: M:System.ComponentModel.DesignOnlyAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DesignOnlyAttribute.GetHashCode()\n  fullName: DesignOnlyAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ComponentModel.DesignOnlyAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: DesignOnlyAttribute.IsDefaultAttribute()\n  fullName: DesignOnlyAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: Determines if this attribute is the default.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the attribute is the default value for this attribute class; otherwise, `false`.'\n  overload: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly\n  commentId: P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly\n  id: IsDesignOnly\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: IsDesignOnly\n  nameWithType: DesignOnlyAttribute.IsDesignOnly\n  fullName: DesignOnlyAttribute.IsDesignOnly\n  type: Property\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether a property can be set only at design time.\n  syntax:\n    content: public bool IsDesignOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a property can be set only at design time; otherwise, `false`.'\n  overload: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.No\n  commentId: F:System.ComponentModel.DesignOnlyAttribute.No\n  id: No\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: DesignOnlyAttribute.No\n  fullName: DesignOnlyAttribute.No\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that a property can be set at design time or at run time. This `static` field is read-only.\n  remarks: The <xref:System.ComponentModel.DesignOnlyAttribute.No> field is the default setting for this attribute.\n  syntax:\n    content: public static readonly System.ComponentModel.DesignOnlyAttribute No;\n    return:\n      type: System.ComponentModel.DesignOnlyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignOnlyAttribute.Yes\n  commentId: F:System.ComponentModel.DesignOnlyAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.DesignOnlyAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: DesignOnlyAttribute.Yes\n  fullName: DesignOnlyAttribute.Yes\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that a property can be set only at design time. This `static` field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.DesignOnlyAttribute Yes;\n    return:\n      type: System.ComponentModel.DesignOnlyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: DesignOnlyAttribute(Boolean)\n  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)\n  fullName: DesignOnlyAttribute.DesignOnlyAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.DesignOnlyAttribute.Default\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: Default\n  nameWithType: DesignOnlyAttribute.Default\n  fullName: DesignOnlyAttribute.Default\n- uid: System.ComponentModel.DesignOnlyAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: DesignOnlyAttribute\n  nameWithType: DesignOnlyAttribute\n  fullName: System.ComponentModel.DesignOnlyAttribute\n- uid: System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DesignOnlyAttribute.Equals(Object)\n  fullName: DesignOnlyAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DesignOnlyAttribute.GetHashCode()\n  fullName: DesignOnlyAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: DesignOnlyAttribute.IsDefaultAttribute()\n  fullName: DesignOnlyAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: IsDesignOnly\n  nameWithType: DesignOnlyAttribute.IsDesignOnly\n  fullName: DesignOnlyAttribute.IsDesignOnly\n- uid: System.ComponentModel.DesignOnlyAttribute.No\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: No\n  nameWithType: DesignOnlyAttribute.No\n  fullName: DesignOnlyAttribute.No\n- uid: System.ComponentModel.DesignOnlyAttribute.Yes\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: DesignOnlyAttribute.Yes\n  fullName: DesignOnlyAttribute.Yes\n- uid: System.ComponentModel.DesignOnlyAttribute.#ctor*\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: DesignOnlyAttribute\n  nameWithType: DesignOnlyAttribute.DesignOnlyAttribute\n  fullName: DesignOnlyAttribute.DesignOnlyAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n- uid: System.ComponentModel.DesignOnlyAttribute.Equals*\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: DesignOnlyAttribute.Equals\n  fullName: DesignOnlyAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n- uid: System.ComponentModel.DesignOnlyAttribute.GetHashCode*\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DesignOnlyAttribute.GetHashCode\n  fullName: DesignOnlyAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: DesignOnlyAttribute.IsDefaultAttribute\n  fullName: DesignOnlyAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n- uid: System.ComponentModel.DesignOnlyAttribute.IsDesignOnly*\n  parent: System.ComponentModel.DesignOnlyAttribute\n  isExternal: false\n  name: IsDesignOnly\n  nameWithType: DesignOnlyAttribute.IsDesignOnly\n  fullName: DesignOnlyAttribute.IsDesignOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignOnlyAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}