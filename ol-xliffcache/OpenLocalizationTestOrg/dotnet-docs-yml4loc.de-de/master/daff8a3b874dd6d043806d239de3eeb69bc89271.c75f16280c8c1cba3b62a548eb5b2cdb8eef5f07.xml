{"nodes":[{"content":"Provides a simple implementation of the <xref href=\"System.ComponentModel.Design.IServiceContainer\"></xref> interface. This class cannot be inherited.","nodes":[{"pos":[0,150],"content":"Provides a simple implementation of the <xref href=\"System.ComponentModel.Design.IServiceContainer\"></xref> interface. This class cannot be inherited.","nodes":[{"content":"Provides a simple implementation of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IServiceContainer\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,118],"source":"Provides a simple implementation of the <xref href=\"System.ComponentModel.Design.IServiceContainer\"></xref> interface."},{"content":"This class cannot be inherited.","pos":[119,150]}]}],"pos":[1505,1656],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services. <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.  \n  \n The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>. To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","nodes":[{"pos":[0,239],"content":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services. <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.","nodes":[{"content":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services. <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.","pos":[0,239],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> object can be used to store and provide services.","pos":[0,106],"source":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> interface.","pos":[107,239],"source":" <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface."}]}]},{"pos":[246,1091],"content":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>. To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.","nodes":[{"content":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>. To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.","pos":[0,845],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> object can be created using a constructor that adds a parent <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> through which services can be optionally added to or removed from all parent <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> objects, including the immediate parent <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph>.","pos":[0,397],"source":"The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>."},{"content":"To add or remove a service from all <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> implementations that are linked to this <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> through parenting, call the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.ServiceContainer.AddService%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A&gt;</ph> method overload that accepts a Boolean value indicating whether to promote the service request.","pos":[398,845],"source":" To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request."}]}]},{"pos":[1099,1831],"content":"[!NOTE]\n The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","leadings":["","> "],"nodes":[{"content":" The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","pos":[8,730],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute applied to this class has the following <ph id=\"ph2\">&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;</ph> property value: <ph id=\"ph3\">&lt;xref:System.Security.Permissions.HostProtectionResource.SharedState&gt;</ph>.","pos":[1,272],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).","pos":[273,480],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser)."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> class or <bpt id=\"p1\">[</bpt>SQL Server Programming and Host Protection Attributes<ept id=\"p1\">](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)</ept>.","pos":[481,722],"source":" For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)."}]}]}],"pos":[1667,3506],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.ServiceContainer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class."}],"pos":[6344,6452],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class using the specified parent service provider.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.ServiceContainer\"&gt;&lt;/xref&gt;</ph> class using the specified parent service provider.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class using the specified parent service provider."}],"pos":[7965,8117],"yaml":true},{"content":"The service container uses this service object provider to retrieve services, if they are not available locally in the container.","nodes":[{"pos":[0,129],"content":"The service container uses this service object provider to retrieve services, if they are not available locally in the container.","nodes":[{"content":"The service container uses this service object provider to retrieve services, if they are not available locally in the container.","pos":[0,129]}]}],"pos":[8128,8258],"yaml":true,"extradata":"MT"},{"content":"A parent service provider.","nodes":[{"pos":[0,26],"content":"A parent service provider.","nodes":[{"content":"A parent service provider.","pos":[0,26]}]}],"pos":[8436,8463],"yaml":true},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[10052,10105],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[10852,10880],"yaml":true},{"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","nodes":[{"pos":[0,163],"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","nodes":[{"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","pos":[0,163],"nodes":[{"content":"A callback object that can create the service.","pos":[0,46]},{"content":"This allows a service to be declared as available, but delays creation of the object until the service is requested.","pos":[47,163]}]}]}],"pos":[10982,11146],"yaml":true},{"content":"<code>serviceType</code> or <code>callback</code> is `null`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>serviceType</code> or <code>callback</code> is `null`."}],"pos":[11332,11393],"yaml":true},{"content":"A service of type <code>serviceType</code> already exists in the container.","nodes":[{"pos":[0,75],"content":"A service of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the container.","source":"A service of type <code>serviceType</code> already exists in the container."}],"pos":[11487,11563],"yaml":true},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[12908,12961],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[13670,13698],"yaml":true},{"content":"An instance of the service to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"pos":[0,139],"content":"An instance of the service to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"content":"An instance of the service to add.","pos":[0,34]},{"content":"This object must implement or inherit from the type indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[35,139],"source":" This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter."}]}],"pos":[13769,13909],"yaml":true},{"content":"<code>serviceType</code> or <code>serviceInstance</code> is `null`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>serviceType</code> or <code>serviceInstance</code> is `null`."}],"pos":[14095,14163],"yaml":true},{"content":"A service of type <code>serviceType</code> already exists in the container.","nodes":[{"pos":[0,75],"content":"A service of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the container.","source":"A service of type <code>serviceType</code> already exists in the container."}],"pos":[14257,14333],"yaml":true},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[15912,15965],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[16196,16224],"yaml":true},{"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","nodes":[{"pos":[0,163],"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","nodes":[{"content":"A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.","pos":[0,163],"nodes":[{"content":"A callback object that can create the service.","pos":[0,46]},{"content":"This allows a service to be declared as available, but delays creation of the object until the service is requested.","pos":[47,163]}]}]}],"pos":[16326,16490],"yaml":true},{"content":"`true` if this service should be added to any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if this service should be added to any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this service should be added to any parent service containers; otherwise, `false`."}],"pos":[16554,16649],"yaml":true},{"content":"<code>serviceType</code> or <code>callback</code> is `null`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>serviceType</code> or <code>callback</code> is `null`."}],"pos":[16835,16896],"yaml":true},{"content":"A service of type <code>serviceType</code> already exists in the container.","nodes":[{"pos":[0,75],"content":"A service of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the container.","source":"A service of type <code>serviceType</code> already exists in the container."}],"pos":[16990,17066],"yaml":true},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[18483,18536],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[18729,18757],"yaml":true},{"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"pos":[0,144],"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"content":"An instance of the service type to add.","pos":[0,39]},{"content":"This object must implement or inherit from the type indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[40,144],"source":" This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter."}]}],"pos":[18828,18973],"yaml":true},{"content":"`true` if this service should be added to any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if this service should be added to any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this service should be added to any parent service containers; otherwise, `false`."}],"pos":[19037,19132],"yaml":true},{"content":"<code>serviceType</code> or <code>serviceInstance</code> is `null`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>serviceType</code> or <code>serviceInstance</code> is `null`."}],"pos":[19318,19386],"yaml":true},{"content":"A service of type <code>serviceType</code> already exists in the container.","nodes":[{"pos":[0,75],"content":"A service of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the container.","source":"A service of type <code>serviceType</code> already exists in the container."}],"pos":[19480,19556],"yaml":true},{"content":"Gets the default services implemented directly by <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref>.","nodes":[{"pos":[0,117],"content":"Gets the default services implemented directly by <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.ServiceContainer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the default services implemented directly by <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref>."}],"pos":[20810,20928],"yaml":true},{"content":"This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>. the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types. You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.","nodes":[{"pos":[0,460],"content":"This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>. the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types. You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.","nodes":[{"content":"This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>. the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types. You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.","pos":[0,460],"nodes":[{"content":"This property returns the default services that are implemented directly on this <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph>.","pos":[0,135],"source":"This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>."},{"content":"the default implementation of this property is to return the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> types.","pos":[136,314],"source":" the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types."},{"content":"You may override this property and return your own types, modifying the default behavior of <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.GetService%2A&gt;</ph>.","pos":[315,460],"source":" You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>."}]}]}],"pos":[20939,21400],"yaml":true,"extradata":"MT"},{"content":"The default services.","nodes":[{"pos":[0,21],"content":"The default services.","nodes":[{"content":"The default services.","pos":[0,21]}]}],"pos":[21530,21552],"yaml":true},{"content":"Disposes this service container.","nodes":[{"pos":[0,32],"content":"Disposes this service container.","nodes":[{"content":"Disposes this service container.","pos":[0,32]}]}],"pos":[22854,22887],"yaml":true},{"content":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \n  \n Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>. The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state. After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method.","nodes":[{"pos":[0,204],"content":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph> walks all instantiated services within the container and disposes any that implement <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph>, and clears the service list.","pos":[0,204],"source":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list."}]},{"pos":[211,1028],"content":"Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>. The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state. After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph>.","pos":[0,154],"source":"Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> in an unusable state.","pos":[155,315],"source":" The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> was occupying.","pos":[316,611],"source":" After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[612,817],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[1036,1396],"content":"[!NOTE]\n Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method.","pos":[8,358],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph>.","pos":[1,176],"source":" Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[177,350],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method."}]}]}],"pos":[22898,24302],"yaml":true,"extradata":"MT"},{"content":"Disposes this service container.","nodes":[{"pos":[0,32],"content":"Disposes this service container.","nodes":[{"content":"Disposes this service container.","pos":[0,32]}]}],"pos":[25731,25764],"yaml":true},{"content":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \n  \n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,204],"content":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</ph> walks all instantiated services within the container and disposes any that implement <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph>, and clears the service list.","pos":[0,204],"source":"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list."}]},{"pos":[211,504],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[511,758],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;</ph> references.","pos":[0,177],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[178,247],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[25775,26540],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> is in the process of being disposed of; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.ServiceContainer\"&gt;&lt;/xref&gt;</ph> is in the process of being disposed of; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> is in the process of being disposed of; otherwise, `false`."}],"pos":[26694,26837],"yaml":true},{"content":"Gets the requested service.","nodes":[{"pos":[0,27],"content":"Gets the requested service.","nodes":[{"content":"Gets the requested service.","pos":[0,27]}]}],"pos":[28200,28228],"yaml":true},{"content":"The type of service to retrieve.","nodes":[{"pos":[0,32],"content":"The type of service to retrieve.","nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]}],"pos":[28385,28418],"yaml":true},{"content":"An instance of the service if it could be found, or `null` if it could not be found.","nodes":[{"pos":[0,84],"content":"An instance of the service if it could be found, or <ph id=\"ph1\">`null`</ph> if it could not be found.","source":"An instance of the service if it could be found, or `null` if it could not be found."}],"pos":[28475,28560],"yaml":true},{"content":"Removes the specified service type from the service container.","nodes":[{"pos":[0,62],"content":"Removes the specified service type from the service container.","nodes":[{"content":"Removes the specified service type from the service container.","pos":[0,62]}]}],"pos":[29944,30007],"yaml":true},{"content":"The type of service to remove.","nodes":[{"pos":[0,30],"content":"The type of service to remove.","nodes":[{"content":"The type of service to remove.","pos":[0,30]}]}],"pos":[30700,30731],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[30920,30956],"yaml":true},{"content":"Removes the specified service type from the service container.","nodes":[{"pos":[0,62],"content":"Removes the specified service type from the service container.","nodes":[{"content":"Removes the specified service type from the service container.","pos":[0,62]}]}],"pos":[32325,32388],"yaml":true},{"content":"The type of service to remove.","nodes":[{"pos":[0,30],"content":"The type of service to remove.","nodes":[{"content":"The type of service to remove.","pos":[0,30]}]}],"pos":[32560,32591],"yaml":true},{"content":"`true` if this service should be removed from any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if this service should be removed from any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this service should be removed from any parent service containers; otherwise, `false`."}],"pos":[32655,32754],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[32943,32979],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ServiceContainer\n  commentId: T:System.ComponentModel.Design.ServiceContainer\n  id: ServiceContainer\n  children:\n  - System.ComponentModel.Design.ServiceContainer.#ctor\n  - System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)\n  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  - System.ComponentModel.Design.ServiceContainer.DefaultServices\n  - System.ComponentModel.Design.ServiceContainer.Dispose\n  - System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)\n  - System.ComponentModel.Design.ServiceContainer.GetService(System.Type)\n  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)\n  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)\n  langs:\n  - csharp\n  name: ServiceContainer\n  nameWithType: ServiceContainer\n  fullName: System.ComponentModel.Design.ServiceContainer\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides a simple implementation of the <xref href=\"System.ComponentModel.Design.IServiceContainer\"></xref> interface. This class cannot be inherited.\n  remarks: \"The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services. <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.  \\n  \\n The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>. To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).\"\n  example:\n  - \"The following example program demonstrates service chaining and the resultant service availability of a chain of linked <xref:System.ComponentModel.Design.ServiceContainer> objects. The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.  \\n  \\n [!code-cpp[ServiceArchitectureExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceArchitectureExample/CPP/serviceform.cpp#1)]\\n [!code-csharp[ServiceArchitectureExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceArchitectureExample/CS/serviceform.cs#1)]\\n [!code-vb[ServiceArchitectureExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceArchitectureExample/VB/serviceform.vb#1)]\"\n  syntax:\n    content: 'public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.Design.IServiceContainer\n  - System.IDisposable\n  - System.IServiceProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.#ctor\n  commentId: M:System.ComponentModel.Design.ServiceContainer.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: ServiceContainer()\n  nameWithType: ServiceContainer.ServiceContainer()\n  fullName: ServiceContainer.ServiceContainer()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class.\n  syntax:\n    content: public ServiceContainer ();\n    parameters: []\n  overload: System.ComponentModel.Design.ServiceContainer.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: ServiceContainer(IServiceProvider)\n  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)\n  fullName: ServiceContainer.ServiceContainer(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> class using the specified parent service provider.\n  remarks: The service container uses this service object provider to retrieve services, if they are not available locally in the container.\n  syntax:\n    content: public ServiceContainer (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: A parent service provider.\n  overload: System.ComponentModel.Design.ServiceContainer.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, ServiceCreatorCallback)\n  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback)\n  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#3)]\\n [!code-csharp[ServiceContainerExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#3)]\\n [!code-vb[ServiceContainerExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#3)]\"\n  syntax:\n    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.\n  overload: System.ComponentModel.Design.ServiceContainer.AddService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>callback</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A service of type <code>serviceType</code> already exists in the container.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)\n  id: AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, Object)\n  nameWithType: ServiceContainer.AddService(Type, Object)\n  fullName: ServiceContainer.AddService(Type, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#2)]\\n [!code-csharp[ServiceContainerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#2)]\\n [!code-vb[ServiceContainerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#2)]\"\n  syntax:\n    content: public void AddService (Type serviceType, object serviceInstance);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.\n  overload: System.ComponentModel.Design.ServiceContainer.AddService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>serviceInstance</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A service of type <code>serviceType</code> already exists in the container.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, ServiceCreatorCallback, Boolean)\n  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  syntax:\n    content: public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.\n    - id: promote\n      type: System.Boolean\n      description: '`true` if this service should be added to any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.ServiceContainer.AddService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>callback</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A service of type <code>serviceType</code> already exists in the container.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  id: AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, Object, Boolean)\n  nameWithType: ServiceContainer.AddService(Type, Object, Boolean)\n  fullName: ServiceContainer.AddService(Type, Object, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  syntax:\n    content: public virtual void AddService (Type serviceType, object serviceInstance, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.\n    - id: promote\n      type: System.Boolean\n      description: '`true` if this service should be added to any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.ServiceContainer.AddService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>serviceInstance</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A service of type <code>serviceType</code> already exists in the container.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices\n  commentId: P:System.ComponentModel.Design.ServiceContainer.DefaultServices\n  id: DefaultServices\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: DefaultServices\n  nameWithType: ServiceContainer.DefaultServices\n  fullName: ServiceContainer.DefaultServices\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the default services implemented directly by <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref>.\n  remarks: This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>. the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types. You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.\n  syntax:\n    content: protected virtual Type[] DefaultServices { get; }\n    return:\n      type: System.Type[]\n      description: The default services.\n  overload: System.ComponentModel.Design.ServiceContainer.DefaultServices*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.Dispose\n  commentId: M:System.ComponentModel.Design.ServiceContainer.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ServiceContainer.Dispose()\n  fullName: ServiceContainer.Dispose()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Disposes this service container.\n  remarks: \"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \\n  \\n Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>. The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state. After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.ServiceContainer.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ServiceContainer.Dispose(Boolean)\n  fullName: ServiceContainer.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Disposes this service container.\n  remarks: \"<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \\n  \\n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ComponentModel.Design.ServiceContainer\"></xref> is in the process of being disposed of; otherwise, `false`.'\n  overload: System.ComponentModel.Design.ServiceContainer.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: ServiceContainer.GetService(Type)\n  fullName: ServiceContainer.GetService(Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested service.\n  syntax:\n    content: public virtual object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: An instance of the service if it could be found, or `null` if it could not be found.\n  overload: System.ComponentModel.Design.ServiceContainer.GetService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)\n  id: RemoveService(System.Type)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type)\n  nameWithType: ServiceContainer.RemoveService(Type)\n  fullName: ServiceContainer.RemoveService(Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#4)]\\n [!code-csharp[ServiceContainerExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#4)]\\n [!code-vb[ServiceContainerExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#4)]\"\n  syntax:\n    content: public void RemoveService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)\n  id: RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type, Boolean)\n  nameWithType: ServiceContainer.RemoveService(Type, Boolean)\n  fullName: ServiceContainer.RemoveService(Type, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container.\n  syntax:\n    content: public virtual void RemoveService (Type serviceType, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n    - id: promote\n      type: System.Boolean\n      description: '`true` if this service should be removed from any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Design.ServiceContainer.#ctor\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: ServiceContainer()\n  nameWithType: ServiceContainer.ServiceContainer()\n  fullName: ServiceContainer.ServiceContainer()\n- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: ServiceContainer(IServiceProvider)\n  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)\n  fullName: ServiceContainer.ServiceContainer(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: AddService(Type, ServiceCreatorCallback)\n  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback)\n  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.ServiceCreatorCallback\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceCreatorCallback\n  nameWithType: ServiceCreatorCallback\n  fullName: System.ComponentModel.Design.ServiceCreatorCallback\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: AddService(Type, Object)\n  nameWithType: ServiceContainer.AddService(Type, Object)\n  fullName: ServiceContainer.AddService(Type, Object)\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: AddService(Type, ServiceCreatorCallback, Boolean)\n  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: AddService(Type, Object, Boolean)\n  nameWithType: ServiceContainer.AddService(Type, Object, Boolean)\n  fullName: ServiceContainer.AddService(Type, Object, Boolean)\n- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: DefaultServices\n  nameWithType: ServiceContainer.DefaultServices\n  fullName: ServiceContainer.DefaultServices\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Design.ServiceContainer.Dispose\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: Dispose()\n  nameWithType: ServiceContainer.Dispose()\n  fullName: ServiceContainer.Dispose()\n- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ServiceContainer.Dispose(Boolean)\n  fullName: ServiceContainer.Dispose(Boolean)\n- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: ServiceContainer.GetService(Type)\n  fullName: ServiceContainer.GetService(Type)\n- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: RemoveService(Type)\n  nameWithType: ServiceContainer.RemoveService(Type)\n  fullName: ServiceContainer.RemoveService(Type)\n- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: RemoveService(Type, Boolean)\n  nameWithType: ServiceContainer.RemoveService(Type, Boolean)\n  fullName: ServiceContainer.RemoveService(Type, Boolean)\n- uid: System.ComponentModel.Design.ServiceContainer.#ctor*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: ServiceContainer.ServiceContainer\n  fullName: ServiceContainer.ServiceContainer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.ComponentModel.Design.ServiceContainer.AddService*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: AddService\n  nameWithType: ServiceContainer.AddService\n  fullName: ServiceContainer.AddService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: DefaultServices\n  nameWithType: ServiceContainer.DefaultServices\n  fullName: ServiceContainer.DefaultServices\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.ComponentModel.Design.ServiceContainer.Dispose*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: Dispose\n  nameWithType: ServiceContainer.Dispose\n  fullName: ServiceContainer.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.ComponentModel.Design.ServiceContainer.GetService*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: GetService\n  nameWithType: ServiceContainer.GetService\n  fullName: ServiceContainer.GetService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.ComponentModel.Design.ServiceContainer.RemoveService*\n  parent: System.ComponentModel.Design.ServiceContainer\n  isExternal: false\n  name: RemoveService\n  nameWithType: ServiceContainer.RemoveService\n  fullName: ServiceContainer.RemoveService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Design.IServiceContainer\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IServiceContainer\n  nameWithType: IServiceContainer\n  fullName: System.ComponentModel.Design.IServiceContainer\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}