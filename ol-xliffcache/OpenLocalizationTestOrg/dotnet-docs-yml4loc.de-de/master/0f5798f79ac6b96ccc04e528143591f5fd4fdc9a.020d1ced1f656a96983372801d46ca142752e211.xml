{"nodes":[{"content":"Specifies the serialization flags for a property.","nodes":[{"pos":[0,49],"content":"Specifies the serialization flags for a property.","nodes":[{"content":"Specifies the serialization flags for a property.","pos":[0,49]}]}],"pos":[731,781],"yaml":true},{"content":"<xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.  \n  \n Attribute usage for <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> supports assigning to a method. This enables you to declare serialization options for a XAML attached property, by assigning <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> on the `Get` accessor method that supports the attached property usage pattern. An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.  \n  \n Note that <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> hints the desired serialization form, not whether the property is or is not serialized. If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class. For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a).","nodes":[{"pos":[0,669],"content":"<xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.","nodes":[{"content":"<xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.","pos":[0,669],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptionsAttribute&gt;</ph> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property.","pos":[0,199],"source":"<xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property."},{"content":"Generally the reason for doing so is to hint <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute&gt;</ph>.","pos":[200,324],"source":" Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>."},{"content":"You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space.","pos":[325,477]},{"content":"An example case where <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptionsAttribute&gt;</ph> is applied for this reason is <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName&gt;</ph>.","pos":[478,669],"source":" An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>."}]}]},{"pos":[676,1228],"content":"Attribute usage for <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> supports assigning to a method. This enables you to declare serialization options for a XAML attached property, by assigning <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> on the `Get` accessor method that supports the attached property usage pattern. An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.","nodes":[{"content":"Attribute usage for <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptionsAttribute&gt;</ph> supports assigning to a method.","pos":[0,118],"source":"Attribute usage for <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> supports assigning to a method."},{"content":"This enables you to declare serialization options for a XAML attached property, by assigning <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptionsAttribute&gt;</ph> on the <ph id=\"ph2\">`Get`</ph> accessor method that supports the attached property usage pattern.","pos":[119,358],"source":" This enables you to declare serialization options for a XAML attached property, by assigning <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> on the `Get` accessor method that supports the attached property usage pattern."},{"content":"An example of this in the WPF types is <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A&gt;</ph> and its <ph id=\"ph2\">`Get`</ph> accessor <ph id=\"ph3\">&lt;xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A&gt;</ph>.","pos":[359,552],"source":" An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>."}]},{"pos":[1235,1811],"content":"Note that <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> hints the desired serialization form, not whether the property is or is not serialized. If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class. For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a).","nodes":[{"content":"Note that <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptionsAttribute&gt;</ph> hints the desired serialization form, not whether the property is or is not serialized.","pos":[0,164],"source":"Note that <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> hints the desired serialization form, not whether the property is or is not serialized."},{"content":"If you want to influence other aspects of property serialization, you can use <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</ph>, or can implement <ph id=\"ph2\">`ShouldSerialize`</ph> pattern methods on the owner class.","pos":[165,384],"source":" If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class."},{"content":"For more information on the general .NET serialization patterns for design time, see <bpt id=\"p1\">[</bpt>Designer Serialization Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a)</ept>.","pos":[385,576],"source":" For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a)."}]}],"pos":[792,2610],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"></xref> class."}],"pos":[7970,8092],"yaml":true},{"content":"Specifies how the property is to be serialized.","nodes":[{"pos":[0,47],"content":"Specifies how the property is to be serialized.","nodes":[{"content":"Specifies how the property is to be serialized.","pos":[0,47]}]}],"pos":[8380,8428],"yaml":true},{"content":"<code>designerSerializationOptions</code> is not a valid <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> value.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">&lt;code&gt;designerSerializationOptions&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptions\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>designerSerializationOptions</code> is not a valid <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> value."}],"pos":[8667,8803],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> set on the attribute.","nodes":[{"pos":[0,102],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptions\"&gt;&lt;/xref&gt;</ph> set on the attribute.","source":"Gets the <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> set on the attribute."}],"pos":[9935,10038],"yaml":true},{"content":"Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>.","nodes":[{"pos":[0,120],"content":"Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>.","nodes":[{"content":"Currently the only possible value is <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName&gt;</ph>.","pos":[0,120],"source":"Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>."}]}],"pos":[10049,10170],"yaml":true,"extradata":"MT"},{"content":"The serialization option, as a value of the enumeration.","nodes":[{"pos":[0,56],"content":"The serialization option, as a value of the enumeration.","nodes":[{"content":"The serialization option, as a value of the enumeration.","pos":[0,56]}]}],"pos":[10383,10440],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  commentId: T:System.Windows.Markup.DesignerSerializationOptionsAttribute\n  id: DesignerSerializationOptionsAttribute\n  children:\n  - System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  - System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  langs:\n  - csharp\n  name: DesignerSerializationOptionsAttribute\n  nameWithType: DesignerSerializationOptionsAttribute\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Specifies the serialization flags for a property.\n  remarks: \"<xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.  \\n  \\n Attribute usage for <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> supports assigning to a method. This enables you to declare serialization options for a XAML attached property, by assigning <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> on the `Get` accessor method that supports the attached property usage pattern. An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.  \\n  \\n Note that <xref:System.Windows.Markup.DesignerSerializationOptionsAttribute> hints the desired serialization form, not whether the property is or is not serialized. If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class. For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](http://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]\n\n      public sealed class DesignerSerializationOptionsAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DesignerSerializationOptionsAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  commentId: M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  id: '#ctor(System.Windows.Markup.DesignerSerializationOptions)'\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  langs:\n  - csharp\n  name: DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"></xref> class.\n  syntax:\n    content: public DesignerSerializationOptionsAttribute (System.Windows.Markup.DesignerSerializationOptions designerSerializationOptions);\n    parameters:\n    - id: designerSerializationOptions\n      type: System.Windows.Markup.DesignerSerializationOptions\n      description: Specifies how the property is to be serialized.\n  overload: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>designerSerializationOptions</code> is not a valid <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> value.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DesignerSerializationOptionsAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  commentId: P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  id: DesignerSerializationOptions\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  langs:\n  - csharp\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> set on the attribute.\n  remarks: Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>.\n  syntax:\n    content: public System.Windows.Markup.DesignerSerializationOptions DesignerSerializationOptions { get; }\n    return:\n      type: System.Windows.Markup.DesignerSerializationOptions\n      description: The serialization option, as a value of the enumeration.\n  overload: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DesignerSerializationOptionsAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n- uid: System.Windows.Markup.DesignerSerializationOptions\n  parent: System.Windows.Markup\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptions\n  fullName: System.Windows.Markup.DesignerSerializationOptions\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor*\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptionsAttribute\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DesignerSerializationOptionsAttribute.xml\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions*\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  fullName: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DesignerSerializationOptionsAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}