{"nodes":[{"content":"Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities. A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> is responsible for managing the execution of its child activities.","nodes":[{"pos":[0,286],"content":"Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities. A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> is responsible for managing the execution of its child activities.","nodes":[{"content":"Derivative of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> that is the base class for all activities that contain other activities.","pos":[0,147],"source":"Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;&lt;/xref&gt;</ph> is responsible for managing the execution of its child activities.","pos":[148,286],"source":" A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> is responsible for managing the execution of its child activities."}]}],"pos":[2532,2819],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.  \n  \n The workflow runtime enforces certain constraints on <xref:System.Workflow.ComponentModel.CompositeActivity> execution, the most fundamental of which is that a <xref:System.Workflow.ComponentModel.CompositeActivity> activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,838],"content":"A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.","pos":[0,753],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph> manages the execution of its child activities using <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt;</ph> class methods and events defined on the <ph id=\"ph3\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph> class.","pos":[0,266],"source":"A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class."},{"content":"For example, a child activity is scheduled for execution using the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt;</ph>.","pos":[268,483],"source":"  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph> activity can be notified when a child activity completes its execution by subscribing to the <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.Activity.Closed&gt;</ph> event defined on <ph id=\"ph3\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[484,753],"source":" A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>."}]}]},{"pos":[845,1431],"content":"The workflow runtime enforces certain constraints on <xref:System.Workflow.ComponentModel.CompositeActivity> execution, the most fundamental of which is that a <xref:System.Workflow.ComponentModel.CompositeActivity> activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.","nodes":[{"content":"The workflow runtime enforces certain constraints on <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph> execution, the most fundamental of which is that a <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph> activity cannot move to the <ph id=\"ph3\">&lt;xref:System.Workflow.ComponentModel.Activity.Closed&gt;</ph> state if any child activities are still in a <ph id=\"ph4\">&lt;xref:System.Workflow.ComponentModel.Activity.Executing&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Workflow.ComponentModel.Activity.Canceling&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Workflow.ComponentModel.Activity.Compensating&gt;</ph>, or <ph id=\"ph7\">&lt;xref:System.Workflow.ComponentModel.Activity.Faulting&gt;</ph>, state.","pos":[0,586],"source":"The workflow runtime enforces certain constraints on <xref:System.Workflow.ComponentModel.CompositeActivity> execution, the most fundamental of which is that a <xref:System.Workflow.ComponentModel.CompositeActivity> activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state."}]}],"pos":[2830,4269],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class."}],"pos":[14114,14225],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class from an <xref href=\"System.Object\"></xref> which implements the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,307],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;&lt;/xref&gt;</ph> class from an <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> which implements the <ph id=\"ph3\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> interface with type <ph id=\"ph4\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class from an <xref href=\"System.Object\"></xref> which implements the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[15675,15983],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> implementing the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,189],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> implementing the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> interface with type <ph id=\"ph3\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> implementing the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[16269,16459],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class, along with the name for that activity.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;&lt;/xref&gt;</ph> class, along with the name for that activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class, along with the name for that activity."}],"pos":[17595,17745],"yaml":true},{"content":"The name for the instance.","nodes":[{"pos":[0,26],"content":"The name for the instance.","nodes":[{"content":"The name for the instance.","pos":[0,26]}]}],"pos":[17884,17911],"yaml":true},{"content":"<code>name</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>name</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[18095,18162],"yaml":true},{"content":"Gets the object representing the collection, <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref>, of all child activities.","nodes":[{"pos":[0,141],"content":"Gets the object representing the collection, <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollection\"&gt;&lt;/xref&gt;</ph>, of all child activities.","source":"Gets the object representing the collection, <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref>, of all child activities."}],"pos":[19133,19275],"yaml":true},{"content":"Represents the collection of child activities managed by the composite activity. This collection can be updated.","nodes":[{"pos":[0,112],"content":"Represents the collection of child activities managed by the composite activity. This collection can be updated.","nodes":[{"content":"Represents the collection of child activities managed by the composite activity. This collection can be updated.","pos":[0,112],"nodes":[{"content":"Represents the collection of child activities managed by the composite activity.","pos":[0,80]},{"content":"This collection can be updated.","pos":[81,112]}]}]}],"pos":[19286,19399],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> of all child activities.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollection\"&gt;&lt;/xref&gt;</ph> of all child activities.","source":"<xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> of all child activities."}],"pos":[20327,20423],"yaml":true},{"content":"Applies the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> manifest in the parameter to this instance.","nodes":[{"pos":[0,123],"content":"Applies the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;&lt;/xref&gt;</ph> manifest in the parameter to this instance.","source":"Applies the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> manifest in the parameter to this instance."}],"pos":[21802,21926],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> to apply.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;&lt;/xref&gt;</ph> to apply.","source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> to apply."}],"pos":[22171,22253],"yaml":true},{"content":"<code>workflowChanges</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;workflowChanges&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>workflowChanges</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[22452,22530],"yaml":true},{"content":"Gets or sets a value which controls whether the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified.","nodes":[{"pos":[0,174],"content":"Gets or sets a value which controls whether the individual activities within <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> can be modified.","source":"Gets or sets a value which controls whether the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified."}],"pos":[23555,23730],"yaml":true},{"content":"`true` if the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified; otherwise `false`.","nodes":[{"pos":[0,159],"content":"<ph id=\"ph1\">`true`</ph> if the individual activities within <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> can be modified; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified; otherwise `false`."}],"pos":[24552,24714],"yaml":true},{"content":"Calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\"></xref> on this instance, and optionally calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose\"></xref> on all child activities of this instance.","nodes":[{"pos":[0,256],"content":"Calls <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\"&gt;&lt;/xref&gt;</ph> on this instance, and optionally calls <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose\"&gt;&lt;/xref&gt;</ph> on all child activities of this instance.","source":"Calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\"></xref> on this instance, and optionally calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose\"></xref> on all child activities of this instance."}],"pos":[25839,26096],"yaml":true},{"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","nodes":[{"pos":[0,477],"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","nodes":[{"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","pos":[0,477],"nodes":[{"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed.","pos":[0,83]},{"content":"Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A&gt;</ph> method is called on each activity).","pos":[84,329],"source":" Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity)."},{"content":"When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","pos":[330,477]}]}]}],"pos":[26107,26585],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources used by this instance and all child activities of this instance; `false` to release only the unmanaged resources of this instance.","nodes":[{"pos":[0,185],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <ph id=\"ph2\">`false`</ph> to release only the unmanaged resources of this instance.","source":"`true` to release both managed and unmanaged resources used by this instance and all child activities of this instance; `false` to release only the unmanaged resources of this instance."}],"pos":[26740,26928],"yaml":true},{"content":"Gets the read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled.","nodes":[{"pos":[0,158],"content":"Gets the read-only collection that represents the subset of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> that are enabled.","source":"Gets the read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled."}],"pos":[28028,28187],"yaml":true},{"content":"The read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled.","nodes":[{"pos":[0,153],"content":"The read-only collection that represents the subset of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> that are enabled.","source":"The read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled."}],"pos":[28526,28680],"yaml":true},{"content":"Returns an array that contains all of the currently executing instances of the specified activity.","nodes":[{"pos":[0,98],"content":"Returns an array that contains all of the currently executing instances of the specified activity.","nodes":[{"content":"Returns an array that contains all of the currently executing instances of the specified activity.","pos":[0,98]}]}],"pos":[30024,30123],"yaml":true},{"content":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,75],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[30377,30453],"yaml":true},{"content":"An array of activity instances that are currently executing.","nodes":[{"pos":[0,60],"content":"An array of activity instances that are currently executing.","nodes":[{"content":"An array of activity instances that are currently executing.","pos":[0,60]}]}],"pos":[30538,30599],"yaml":true},{"content":"Called when an exception is raised within the context of the execution of this instance.","nodes":[{"pos":[0,88],"content":"Called when an exception is raised within the context of the execution of this instance.","nodes":[{"content":"Called when an exception is raised within the context of the execution of this instance.","pos":[0,88]}]}],"pos":[32007,32096],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> for this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance."}],"pos":[32432,32532],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that caused this fault.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that caused this fault.","source":"The <xref href=\"System.Exception\"></xref> that caused this fault."}],"pos":[32600,32666],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;&lt;/xref&gt;</ph> that results from an attempt to cancel this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance."}],"pos":[32764,32898],"yaml":true},{"content":"<code>exception</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;exception&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>exception</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[33088,33160],"yaml":true},{"content":"Initializes all appropriate child activities of this instance and the specified <xref href=\"System.IServiceProvider\"></xref>.","nodes":[{"pos":[0,125],"content":"Initializes all appropriate child activities of this instance and the specified <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes all appropriate child activities of this instance and the specified <xref href=\"System.IServiceProvider\"></xref>."}],"pos":[34258,34384],"yaml":true},{"content":"The specified <xref href=\"System.IServiceProvider\"></xref>.","nodes":[{"pos":[0,59],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.IServiceProvider\"></xref>."}],"pos":[34561,34621],"yaml":true},{"content":"<code>provider</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>provider</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[34810,34881],"yaml":true},{"content":"Calls when an activity is added.","nodes":[{"pos":[0,32],"content":"Calls when an activity is added.","nodes":[{"content":"Calls when an activity is added.","pos":[0,32]}]}],"pos":[36303,36336],"yaml":true},{"content":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.","nodes":[{"pos":[0,91],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."}],"pos":[36663,36755],"yaml":true},{"content":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,75],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[36850,36926],"yaml":true},{"content":"<code>addedActivity</code> is a null reference (`Nothing`).","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;addedActivity&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph>).","source":"<code>addedActivity</code> is a null reference (`Nothing`)."}],"pos":[37124,37184],"yaml":true},{"content":"Called when an activity is removed.","nodes":[{"pos":[0,35],"content":"Called when an activity is removed.","nodes":[{"content":"Called when an activity is removed.","pos":[0,35]}]}],"pos":[38624,38660],"yaml":true},{"content":"Current implementation provides no functionality.","nodes":[{"pos":[0,49],"content":"Current implementation provides no functionality.","nodes":[{"content":"Current implementation provides no functionality.","pos":[0,49]}]}],"pos":[38671,38721],"yaml":true,"extradata":"MT"},{"content":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.","nodes":[{"pos":[0,91],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."}],"pos":[39053,39145],"yaml":true},{"content":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,75],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[39242,39318],"yaml":true},{"content":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is loaded.","nodes":[{"pos":[0,158],"content":"Called by the workflow runtime engine every time the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> for this activity is loaded.","source":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is loaded."}],"pos":[40638,40797],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that implements <ph id=\"ph2\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> and provides services to this instance.","source":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance."}],"pos":[40994,41133],"yaml":true},{"content":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is unloaded.","nodes":[{"pos":[0,160],"content":"Called by the workflow runtime engine every time the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> for this activity is unloaded.","source":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is unloaded."}],"pos":[42473,42634],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that implements <ph id=\"ph2\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> and provides services to this instance.","source":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance."}],"pos":[42833,42972],"yaml":true},{"content":"Performs additional processing when the <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> property changes.","nodes":[{"pos":[0,138],"content":"Performs additional processing when the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Performs additional processing when the <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> property changes."}],"pos":[44374,44513],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"></xref> broadcast by the event.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"&gt;&lt;/xref&gt;</ph> broadcast by the event.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"></xref> broadcast by the event."}],"pos":[44767,44881],"yaml":true},{"content":"Event that occurs before a change being made to the underlying <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref>.","nodes":[{"pos":[0,144],"content":"Event that occurs before a change being made to the underlying <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph>.","source":"Event that occurs before a change being made to the underlying <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref>."}],"pos":[46270,46415],"yaml":true},{"content":"<xref href=\"System.EventArgs\"></xref> relating to the event.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> relating to the event.","source":"<xref href=\"System.EventArgs\"></xref> relating to the event."}],"pos":[46670,46731],"yaml":true},{"content":"Called after changes have been made to the collection <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> of this instance.","nodes":[{"pos":[0,152],"content":"Called after changes have been made to the collection <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"&gt;&lt;/xref&gt;</ph> of this instance.","source":"Called after changes have been made to the collection <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> of this instance."}],"pos":[48139,48292],"yaml":true},{"content":"When overridden in a derived class, provides processing for this event.","nodes":[{"pos":[0,71],"content":"When overridden in a derived class, provides processing for this event.","nodes":[{"content":"When overridden in a derived class, provides processing for this event.","pos":[0,71]}]}],"pos":[48303,48375],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with this instance.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> associated with this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with this instance."}],"pos":[48644,48756],"yaml":true},{"content":"Called by the workflow runtime engine when an activity transitions into the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Closed\"></xref> state from the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized\"></xref> state.","nodes":[{"pos":[0,268],"content":"Called by the workflow runtime engine when an activity transitions into the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Closed\"&gt;&lt;/xref&gt;</ph> state from the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized\"&gt;&lt;/xref&gt;</ph> state.","source":"Called by the workflow runtime engine when an activity transitions into the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Closed\"></xref> state from the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized\"></xref> state."}],"pos":[49972,50241],"yaml":true},{"content":"This method is used for activity cleanup, such as clearing dependency properties and deleting queues.","nodes":[{"pos":[0,101],"content":"This method is used for activity cleanup, such as clearing dependency properties and deleting queues.","nodes":[{"content":"This method is used for activity cleanup, such as clearing dependency properties and deleting queues.","pos":[0,101]}]}],"pos":[50252,50354],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that implements <ph id=\"ph2\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> and provides services to this instance.","source":"An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance."}],"pos":[50533,50672],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  commentId: T:System.Workflow.ComponentModel.CompositeActivity\n  id: CompositeActivity\n  children:\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  langs:\n  - csharp\n  name: CompositeActivity\n  nameWithType: CompositeActivity\n  fullName: System.Workflow.ComponentModel.CompositeActivity\n  type: Class\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities. A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> is responsible for managing the execution of its child activities.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.  \\n  \\n The workflow runtime enforces certain constraints on <xref:System.Workflow.ComponentModel.CompositeActivity> execution, the most fundamental of which is that a <xref:System.Workflow.ComponentModel.CompositeActivity> activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.\"\n  example:\n  - \"This example shows a basic `CompositeActivity` that executes its first child activity for execution. When the child activity moves to the Closed state, the composite activity is notified and then completes its execution.  \\n  \\n```csharp  \\npublic class HasOneChildActivity : CompositeActivity  \\n{  \\n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \\n    {  \\n        Activity child = this.EnabledActivities[0];  \\n        child.Closed += this.ChildClosed;  \\n        executionContext.ExecuteActivity(child);  \\n  \\n        return ActivityExecutionStatus.Executing;  \\n    }  \\n  \\n    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  \\n    {  \\n        e.Activity.Closed -= this.ChildClosed;  \\n        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  \\n  \\n        executionContext.CloseActivity();  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))]\n\n      [System.Workflow.ComponentModel.Serialization.ContentProperty(\"Activities\")]\n\n      public class CompositeActivity : System.Workflow.ComponentModel.Activity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  derivedClasses:\n  - System.Workflow.Activities.ConditionedActivityGroup\n  - System.Workflow.Activities.EventHandlersActivity\n  - System.Workflow.Activities.EventHandlingScopeActivity\n  - System.Workflow.Activities.IfElseActivity\n  - System.Workflow.Activities.ListenActivity\n  - System.Workflow.Activities.ParallelActivity\n  - System.Workflow.Activities.ReplicatorActivity\n  - System.Workflow.Activities.SequenceActivity\n  - System.Workflow.Activities.StateActivity\n  - System.Workflow.Activities.WhileActivity\n  - System.Workflow.ComponentModel.CancellationHandlerActivity\n  - System.Workflow.ComponentModel.CompensatableTransactionScopeActivity\n  - System.Workflow.ComponentModel.CompensationHandlerActivity\n  - System.Workflow.ComponentModel.FaultHandlerActivity\n  - System.Workflow.ComponentModel.FaultHandlersActivity\n  - System.Workflow.ComponentModel.SynchronizationScopeActivity\n  - System.Workflow.ComponentModel.TransactionScopeActivity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.ObsoleteAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  - type: System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity()\n  nameWithType: CompositeActivity.CompositeActivity()\n  fullName: CompositeActivity.CompositeActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class.\n  syntax:\n    content: public CompositeActivity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity(IEnumerable<Activity>)\n  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  fullName: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class from an <xref href=\"System.Object\"></xref> which implements the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  syntax:\n    content: public CompositeActivity (System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity> children);\n    parameters:\n    - id: children\n      type: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n      description: The <xref href=\"System.Object\"></xref> implementing the <xref href=\"System.Collections.IEnumerable\"></xref> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity(String)\n  nameWithType: CompositeActivity.CompositeActivity(String)\n  fullName: CompositeActivity.CompositeActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class, along with the name for that activity.\n  syntax:\n    content: public CompositeActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  commentId: P:System.Workflow.ComponentModel.CompositeActivity.Activities\n  id: Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the object representing the collection, <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref>, of all child activities.\n  remarks: Represents the collection of child activities managed by the composite activity. This collection can be updated.\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Workflow.ComponentModel.ActivityCollection Activities { get; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCollection\n      description: <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> of all child activities.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Activities*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  id: ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Applies the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> manifest in the parameter to this instance.\n  syntax:\n    content: protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);\n    parameters:\n    - id: workflowChanges\n      type: System.Workflow.ComponentModel.WorkflowChanges\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> to apply.\n  overload: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>workflowChanges</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  commentId: P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  id: CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets a value which controls whether the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified.\n  remarks: ''\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]\"\n  syntax:\n    content: protected bool CanModifyActivities { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the individual activities within <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> can be modified; otherwise `false`.'\n  overload: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\"></xref> on this instance, and optionally calls <xref href=\"System.Workflow.ComponentModel.DependencyObject.Dispose\"></xref> on all child activities of this instance.\n  remarks: Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources used by this instance and all child activities of this instance; `false` to release only the unmanaged resources of this instance.'\n  overload: System.Workflow.ComponentModel.CompositeActivity.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  commentId: P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  id: EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity> EnabledActivities { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}\n      description: The read-only collection that represents the subset of <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> that are enabled.\n  overload: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  id: GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns an array that contains all of the currently executing instances of the specified activity.\n  syntax:\n    content: protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity[]\n      description: An array of activity instances that are currently executing.\n  overload: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called when an exception is raised within the context of the execution of this instance.\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.\n    - id: exception\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that caused this fault.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.HandleFault*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>exception</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: CompositeActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes all appropriate child activities of this instance and the specified <xref href=\"System.IServiceProvider\"></xref>.\n  syntax:\n    content: protected override void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The specified <xref href=\"System.IServiceProvider\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Initialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Calls when an activity is added.\n  syntax:\n    content: protected virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>addedActivity</code> is a null reference (`Nothing`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called when an activity is removed.\n  remarks: Current implementation provides no functionality.\n  syntax:\n    content: protected virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  id: OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is loaded.\n  syntax:\n    content: protected override void OnActivityExecutionContextLoad (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  id: OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is unloaded.\n  syntax:\n    content: protected override void OnActivityExecutionContextUnload (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  id: OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Performs additional processing when the <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> property changes.\n  syntax:\n    content: protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"></xref> broadcast by the event.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  id: OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Event that occurs before a change being made to the underlying <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref>.\n  syntax:\n    content: protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n      description: <xref href=\"System.EventArgs\"></xref> relating to the event.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called after changes have been made to the collection <xref href=\"System.Workflow.ComponentModel.CompositeActivity.Activities\"></xref> of this instance.\n  remarks: When overridden in a derived class, provides processing for this event.\n  syntax:\n    content: protected virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);\n    parameters:\n    - id: rootContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  commentId: M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  id: Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine when an activity transitions into the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Closed\"></xref> state from the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized\"></xref> state.\n  remarks: This method is used for activity cleanup, such as clearing dependency properties and deleting queues.\n  syntax:\n    content: protected override void Uninitialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref href=\"System.Object\"></xref> that implements <xref href=\"System.IServiceProvider\"></xref> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity()\n  nameWithType: CompositeActivity.CompositeActivity()\n  fullName: CompositeActivity.CompositeActivity()\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity(IEnumerable<Activity>)\n  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  fullName: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Activity>\n  nameWithType: IEnumerable<Activity>\n  fullName: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity(String)\n  nameWithType: CompositeActivity.CompositeActivity(String)\n  fullName: CompositeActivity.CompositeActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.ActivityCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCollection\n  nameWithType: ActivityCollection\n  fullName: System.Workflow.ComponentModel.ActivityCollection\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.WorkflowChanges\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowChanges\n  nameWithType: WorkflowChanges\n  fullName: System.Workflow.ComponentModel.WorkflowChanges\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Activity>\n  nameWithType: ReadOnlyCollection<Activity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.ComponentModel.Activity[]\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity[]\n  nameWithType: Activity[]\n  fullName: System.Workflow.ComponentModel.Activity[]\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: CompositeActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCollectionChangeEventArgs\n  nameWithType: ActivityCollectionChangeEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity\n  nameWithType: CompositeActivity.CompositeActivity\n  fullName: CompositeActivity.CompositeActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges\n  nameWithType: CompositeActivity.ApplyWorkflowChanges\n  fullName: CompositeActivity.ApplyWorkflowChanges\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose\n  nameWithType: CompositeActivity.Dispose\n  fullName: CompositeActivity.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities\n  nameWithType: CompositeActivity.GetDynamicActivities\n  fullName: CompositeActivity.GetDynamicActivities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault\n  nameWithType: CompositeActivity.HandleFault\n  fullName: CompositeActivity.HandleFault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: CompositeActivity.Initialize\n  fullName: CompositeActivity.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: CompositeActivity.OnActivityChangeAdd\n  fullName: CompositeActivity.OnActivityChangeAdd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: CompositeActivity.OnActivityChangeRemove\n  fullName: CompositeActivity.OnActivityChangeRemove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad\n  fullName: CompositeActivity.OnActivityExecutionContextLoad\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload\n  fullName: CompositeActivity.OnActivityExecutionContextUnload\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged\n  nameWithType: CompositeActivity.OnListChanged\n  fullName: CompositeActivity.OnListChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging\n  nameWithType: CompositeActivity.OnListChanging\n  fullName: CompositeActivity.OnListChanging\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted\n  fullName: CompositeActivity.OnWorkflowChangesCompleted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize\n  nameWithType: CompositeActivity.Uninitialize\n  fullName: CompositeActivity.Uninitialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/CompositeActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: Activity.Cancel(ActivityExecutionContext)\n  fullName: Activity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: Activity.Execute(ActivityExecutionContext)\n  fullName: Activity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n"}