### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol
  commentId: T:System.Web.Services.Protocols.SoapHttpClientProtocol
  id: SoapHttpClientProtocol
  children:
  - System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  - System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  - System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  - System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  langs:
  - csharp
  name: SoapHttpClientProtocol
  nameWithType: SoapHttpClientProtocol
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol
  type: Class
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Specifies the class client that proxies derive from when using SOAP.
  remarks: "If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> must be created for the XML Web service. When the XML Web service client calls using SOAP, the proxy class must derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from <xref:System.Web.Services.Protocols.HttpWebClientProtocol>. <xref:System.Web.Services.Protocols.HttpWebClientProtocol>, in turn, derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.  \n  \n To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call. Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description. When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method, whereas asynchronous calls are made using the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method and the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> method."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. The proxy class derives from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: SoapHttpClientProtocol()
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol()
  fullName: SoapHttpClientProtocol.SoapHttpClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Initializes a new instance of the <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"></xref> class.
  syntax:
    content: public SoapHttpClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: BeginInvoke(String, Object[], AsyncCallback, Object)
  nameWithType: SoapHttpClientProtocol.BeginInvoke(String, Object[], AsyncCallback, Object)
  fullName: SoapHttpClientProtocol.BeginInvoke(String, Object[], AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Starts an asynchronous invocation of an XML Web service method using SOAP.
  remarks: "Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.  \n  \n A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously. To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.  \n  \n The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method to start an asynchronous invocation call to the XML Web service method. For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `BeginAdd`, for starting an invocation to the XML Web service method. Within the code for the `BeginAdd`, a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method and the results are placed into the expected return type for `Add`.  \n  \n The `methodName` is used to find the custom attributes which may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information about the derived method that is required for the SOAP protocol.  \n  \n `asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method. The `asyncState` parameter can be used to pass information about the context of the asynchronous call, specified in the `callback` parameter, to the delegate that handles the result."
  example:
  - "The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service. Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method is starting an asynchronous invocation to the `Add` XML Web service method.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created."
  syntax:
    content: protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);
    parameters:
    - id: methodName
      type: System.String
      description: The name of the XML Web service method in the derived class that is invoking the <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)"></xref> method.
    - id: parameters
      type: System.Object[]
      description: An array of objects containing the parameters to pass to the XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.
    - id: callback
      type: System.AsyncCallback
      description: The delegate to call when the asynchronous invoke is complete. If <code>callback</code> is `null`, the delegate is not called.
    - id: asyncState
      type: System.Object
      description: Extra information supplied by the caller.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that is passed to the <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)"></xref> method to obtain the return values from the remote method call.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*
  exceptions:
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: The request reached the server computer, but was not processed successfully.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The request was not valid for the object's current state.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: An error occurred while accessing the network.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  id: Discover
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: Discover()
  nameWithType: SoapHttpClientProtocol.Discover()
  fullName: SoapHttpClientProtocol.Discover()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Dynamically binds to an XML Web service described in the discovery document at <xref href="System.Web.Services.Protocols.WebClientProtocol.Url"></xref>.
  remarks: "An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method. Typically, the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property refers to the base address of the XML Web service. However, before invoking the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method, set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to a URL of a discovery document. The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it. If successful, subsequent method calls are directed to the XML Web service described in the discovery document.  \n  \n If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <xref:System.Web.Services.WebServiceBindingAttribute>. When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding. Applied to each proxy class is a <xref:System.Web.Services.WebServiceBindingAttribute> that defines the name of the binding and its namespace. The discovery document you set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown."
  example:
  - "The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service. A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.  \n  \n [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]\n [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]\n [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  \n  \n The following code example is a Web Service client using the preceding proxy class. Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempting to dynamically bind to the URL supplied by the user.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]\n [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]"
  syntax:
    content: public void Discover ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: The proxy class does not have a binding defined.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  fullName: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Ends an asynchronous invocation of an XML Web service method using SOAP.
  remarks: "Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.  \n  \n A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously. For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.  \n  \n The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method to complete an asynchronous invocation call to the XML Web service method. For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `EndAdd`, for completing an asynchronous invocation of an XML Web service method. Within the code for the `EndAdd` a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method and then the results are placed into the expected return type for `Add`."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method completes the asynchronous invocation to the `Add` XML Web service method.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created."
  syntax:
    content: protected object[] EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned from the <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)"></xref> method.
    return:
      type: System.Object[]
      description: An array of objects that contains the return value and any by-reference or `out` parameters of the derived class method.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> is not the return value from the <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)"></xref> method.
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: The request reached the server computer, but was not processed successfully.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The request was not valid for the object's current state.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: An error occurred while accessing the network.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  id: GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetReaderForMessage(SoapClientMessage, Int32)
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage, Int32)
  fullName: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage, Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Returns an <xref href="System.Xml.XmlReader"></xref> initialized with the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> property of the <xref href="System.Web.Services.Protocols.SoapClientMessage"></xref> parameter.
  syntax:
    content: protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapClientMessage
      description: A <xref href="System.Web.Services.Protocols.SoapClientMessage"></xref> that provides the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> to initialize the <xref href="System.Xml.XmlReader"></xref>.
    - id: bufferSize
      type: System.Int32
      description: The initial buffer size of the <xref href="System.IO.StreamReader"></xref> used by the <xref href="System.Xml.XmlReader"></xref>.
    return:
      type: System.Xml.XmlReader
      description: A <xref href="System.Xml.XmlReader"></xref> initialized with the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> property of the <code>message</code> parameter.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: SoapHttpClientProtocol.GetWebRequest(Uri)
  fullName: SoapHttpClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Creates a <xref href="System.Net.WebRequest"></xref> for the specified <code>uri</code>.
  remarks: This method can be overridden to customize the <xref:System.Net.WebRequest> before the XML Web service request is made. For example, you could add a custom header to the request.
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: The <xref href="System.Uri"></xref> to use when creating the <xref href="System.Net.WebRequest"></xref>.
    return:
      type: System.Net.WebRequest
      description: The <xref href="System.Net.WebRequest"></xref> for the specified URI.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>uri</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  id: GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetWriterForMessage(SoapClientMessage, Int32)
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage, Int32)
  fullName: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage, Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Returns a <xref href="System.Xml.XmlWriter"></xref> initialized with the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> property of the <xref href="System.Web.Services.Protocols.SoapClientMessage"></xref> parameter.
  syntax:
    content: protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapClientMessage
      description: A <xref href="System.Web.Services.Protocols.SoapClientMessage"></xref> that provides the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> to initialize the <xref href="System.Xml.XmlWriter"></xref>.
    - id: bufferSize
      type: System.Int32
      description: The initial buffer size of the <xref href="System.IO.StreamWriter"></xref> used by the <xref href="System.Xml.XmlWriter"></xref>.
    return:
      type: System.Xml.XmlWriter
      description: A <xref href="System.Xml.XmlWriter"></xref> initialized with the <xref href="System.Web.Services.Protocols.SoapMessage.Stream"></xref> property of the <code>message</code> parameter.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  id: Invoke(System.String,System.Object[])
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: Invoke(String, Object[])
  nameWithType: SoapHttpClientProtocol.Invoke(String, Object[])
  fullName: SoapHttpClientProtocol.Invoke(String, Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Invokes an XML Web service method synchronously using SOAP.
  remarks: "Typically, you do not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method directly, unless you are building your own proxy class for an XML Web service.  \n  \n A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class. The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method to invoke an XML Web service method call. For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class also contains a method named `Add`. Within the code for the `Add` method in the proxy class, a synchronous call is made to the XML Web service method through the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method and then the results are placed into the expected return type for `Add`.  \n  \n The `methodName` parameter is used to find the custom attributes that may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information on the derived method which is required for the SOAP protocol."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method is calling the `Add` XML Web service method.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]\n [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created."
  syntax:
    content: protected object[] Invoke (string method_name, object[] parameters);
    parameters:
    - id: methodName
      type: System.String
      description: ''
    - id: parameters
      type: System.Object[]
      description: An array of objects that contains the parameters to pass to the XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.
    return:
      type: System.Object[]
      description: An array of objects that contains the return value and any `reference` or `out` parameters of the derived class method.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke*
  exceptions:
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: The request reached the server computer, but was not processed successfully.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The request was not valid for the object's current state.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: An error occurred while accessing the network.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  id: InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String, Object[], SendOrPostCallback)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback)
  fullName: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Invokes the specified method asynchronously.
  syntax:
    content: protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);
    parameters:
    - id: methodName
      type: System.String
      description: The name of the method to invoke.
    - id: parameters
      type: System.Object[]
      description: The parameters to pass to the method.
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: The delegate called when the method invocation has completed.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  id: InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String, Object[], SendOrPostCallback, Object)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback, Object)
  fullName: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback, Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Invokes the specified method asynchronously.
  syntax:
    content: protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);
    parameters:
    - id: methodName
      type: System.String
      description: The name of the method to invoke.
    - id: parameters
      type: System.Object[]
      description: The parameters to pass to the method.
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: The delegate called when the method invocation has completed.
    - id: userState
      type: System.Object
      description: An object used to pass state information into the <code>callback</code> delegate.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  commentId: P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
  fullName: SoapHttpClientProtocol.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.
  remarks: The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> by default when a WSDL document for an XML Web service supports SOAP version 1.1. However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>. To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the `/protocol` switch with the `SOAP` or `SOAP12` settings to set the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> and <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, respectively.
  example:
  - "The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.  \n  \n <!-- TODO: review snippet reference [!code-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: One of the <xref href="System.Web.Services.Protocols.SoapProtocolVersion"></xref> values. The default is <xref href="System.Web.Services.Protocols.SoapProtocolVersion.Soap11"></xref>.
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  parent: System.Web.Services.Protocols
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.SoapException
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapException
  nameWithType: SoapException
  fullName: System.Web.Services.Protocols.SoapException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Net.WebException
  parent: System.Net
  isExternal: false
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapHttpClientProtocol()
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol()
  fullName: SoapHttpClientProtocol.SoapHttpClientProtocol()
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: BeginInvoke(String, Object[], AsyncCallback, Object)
  nameWithType: SoapHttpClientProtocol.BeginInvoke(String, Object[], AsyncCallback, Object)
  fullName: SoapHttpClientProtocol.BeginInvoke(String, Object[], AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Discover()
  nameWithType: SoapHttpClientProtocol.Discover()
  fullName: SoapHttpClientProtocol.Discover()
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  fullName: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetReaderForMessage(SoapClientMessage, Int32)
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage, Int32)
  fullName: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage, Int32)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.Services.Protocols.SoapClientMessage
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapClientMessage
  nameWithType: SoapClientMessage
  fullName: System.Web.Services.Protocols.SoapClientMessage
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: SoapHttpClientProtocol.GetWebRequest(Uri)
  fullName: SoapHttpClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: false
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWriterForMessage(SoapClientMessage, Int32)
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage, Int32)
  fullName: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage, Int32)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Invoke(String, Object[])
  nameWithType: SoapHttpClientProtocol.Invoke(String, Object[])
  fullName: SoapHttpClientProtocol.Invoke(String, Object[])
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync(String, Object[], SendOrPostCallback)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback)
  fullName: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync(String, Object[], SendOrPostCallback, Object)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback, Object)
  fullName: SoapHttpClientProtocol.InvokeAsync(String, Object[], SendOrPostCallback, Object)
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
  fullName: SoapHttpClientProtocol.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapHttpClientProtocol
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol
  fullName: SoapHttpClientProtocol.SoapHttpClientProtocol
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: BeginInvoke
  nameWithType: SoapHttpClientProtocol.BeginInvoke
  fullName: SoapHttpClientProtocol.BeginInvoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Discover
  nameWithType: SoapHttpClientProtocol.Discover
  fullName: SoapHttpClientProtocol.Discover
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: EndInvoke
  nameWithType: SoapHttpClientProtocol.EndInvoke
  fullName: SoapHttpClientProtocol.EndInvoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetReaderForMessage
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage
  fullName: SoapHttpClientProtocol.GetReaderForMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: SoapHttpClientProtocol.GetWebRequest
  fullName: SoapHttpClientProtocol.GetWebRequest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWriterForMessage
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage
  fullName: SoapHttpClientProtocol.GetWriterForMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Invoke
  nameWithType: SoapHttpClientProtocol.Invoke
  fullName: SoapHttpClientProtocol.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync
  nameWithType: SoapHttpClientProtocol.InvokeAsync
  fullName: SoapHttpClientProtocol.InvokeAsync
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
  fullName: SoapHttpClientProtocol.SoapVersion
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/SoapHttpClientProtocol.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: Component.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: WebClientProtocol.Abort()
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache(Type, Object)
  nameWithType: WebClientProtocol.AddToCache(Type, Object)
  fullName: WebClientProtocol.AddToCache(Type, Object)
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: WebClientProtocol.ConnectionGroupName
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: WebClientProtocol.Credentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: WebClientProtocol.GetFromCache(Type)
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest, IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: WebClientProtocol.PreAuthenticate
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: WebClientProtocol.RequestEncoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: WebClientProtocol.Timeout
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: WebClientProtocol.UseDefaultCredentials
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: HttpWebClientProtocol.ClientCertificates
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: HttpWebClientProtocol.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type, ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[], ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: HttpWebClientProtocol.Proxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: HttpWebClientProtocol.UserAgent
