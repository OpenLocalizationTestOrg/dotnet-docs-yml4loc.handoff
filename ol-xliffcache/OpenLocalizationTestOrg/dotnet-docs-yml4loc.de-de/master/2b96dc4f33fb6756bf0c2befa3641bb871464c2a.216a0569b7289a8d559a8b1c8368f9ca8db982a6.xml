{"nodes":[{"content":"Displays a dialog box from which the user can select a file.","nodes":[{"pos":[0,60],"content":"Displays a dialog box from which the user can select a file.","nodes":[{"content":"Displays a dialog box from which the user can select a file.","pos":[0,60]}]}],"pos":[1719,1780],"yaml":true},{"content":"<xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes. It is not intended to be used directly but contains common behavior for those two classes. You cannot create an instance of <xref:System.Windows.Forms.FileDialog>. Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods. To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>.  \n  \n <xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.  \n  \n> [!CAUTION]\n>  When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths. Instead, dynamically obtain the path using one or more of the techniques described in the following table.  \n  \n If you want to enable users to select a folder instead of a file, use the <xref:System.Windows.Forms.FolderBrowserDialog>.  \n  \n Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path. The following table shows the techniques for creating paths dynamically.  \n  \n|Path or program category|Class and members to use|  \n|------------------------------|------------------------------|  \n|Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on|The <xref:System.Environment?displayProperty=fullName> class is the most complete source for these, either through its static methods, such as <xref:System.Environment.SystemDirectory%2A>, or through the <xref:System.Environment.GetFolderPath%2A> method, using one of the <xref:System.Environment.SpecialFolder> enumerated values.|  \n|Paths related to the current application|The <xref:System.Windows.Forms.Application> class has static members to obtain certain paths, such as <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.<br /><br /> The <xref:System.IO.Path.GetTempPath%2A> method of the <xref:System.IO.Path?displayProperty=fullName> returns the path of the temporary folder.<br /><br /> The <xref:System.IO.Directory.GetCurrentDirectory%2A> method of the <xref:System.IO.Directory?displayProperty=fullName> class returns the application's current executing directory.<br /><br /> The <xref:System.IO.DriveInfo.RootDirectory%2A> property of the <xref:System.IO.DriveInfo> class represents the specified drive's root directory.|  \n|Paths stored as application settings|Access the corresponding applications settings property of the wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. For more information, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).|  \n|Registry storage|Some applications store directory information in the registry. The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value.|  \n|ClickOnce applications|For ClickOnce applications, use <xref:System.Windows.Forms.Application> class members such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, which will return a pointer to the ClickOnce data directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).|  \n|International applications|For international applications, retrieve the relative path portion from a string resource in your application by using the <xref:System.Resources.ResourceReader?displayProperty=fullName> class. For more information about globalization and localization, see the topic [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).|  \n  \n Notice that a full path may be built up using one or more of the described techniques. For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.  \n  \n The <xref:System.IO.Path?displayProperty=fullName> class contains static members to assist in manipulating absolute and relative path strings, whereas the <xref:System.IO.File?displayProperty=fullName> and <xref:System.IO.Directory?displayProperty=fullName> classes have static members that actually manipulate files and directories, respectively.  \n  \n> [!IMPORTANT]\n>  If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>. To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`.","nodes":[{"pos":[0,612],"content":"<xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes. It is not intended to be used directly but contains common behavior for those two classes. You cannot create an instance of <xref:System.Windows.Forms.FileDialog>. Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods. To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>.","nodes":[{"content":"<xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes. It is not intended to be used directly but contains common behavior for those two classes. You cannot create an instance of <xref:System.Windows.Forms.FileDialog>. Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods. To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>.","pos":[0,612],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> is an abstract class that contains common behavior for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> classes.","pos":[0,196],"source":"<xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes."},{"content":"It is not intended to be used directly but contains common behavior for those two classes.","pos":[197,287]},{"content":"You cannot create an instance of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>.","pos":[288,360],"source":" You cannot create an instance of <xref:System.Windows.Forms.FileDialog>."},{"content":"Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods.","pos":[361,469]},{"content":"To create a dialog box to select or save a file, use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>.","pos":[470,612],"source":" To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>."}]}]},{"pos":[619,1032],"content":"<xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.","nodes":[{"content":"<xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.","pos":[0,413],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file.","pos":[0,156],"source":"<xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file."},{"content":"When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box.","pos":[157,278]},{"content":"The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.","pos":[279,413]}]}]},{"pos":[1040,1388],"content":"[!CAUTION]\n When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths. Instead, dynamically obtain the path using one or more of the techniques described in the following table.","leadings":["","> "],"nodes":[{"content":" When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths. Instead, dynamically obtain the path using one or more of the techniques described in the following table.","pos":[11,346],"nodes":[{"content":"When you use classes derived from <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>, avoid using string literals containing absolute paths.","pos":[1,228],"source":" When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths."},{"content":"Instead, dynamically obtain the path using one or more of the techniques described in the following table.","pos":[229,335]}]}]},{"pos":[1395,1517],"content":"If you want to enable users to select a folder instead of a file, use the <xref:System.Windows.Forms.FolderBrowserDialog>.","nodes":[{"content":"If you want to enable users to select a folder instead of a file, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FolderBrowserDialog&gt;</ph>.","pos":[0,122],"source":"If you want to enable users to select a folder instead of a file, use the <xref:System.Windows.Forms.FolderBrowserDialog>."}]},{"pos":[1524,1805],"content":"Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path. The following table shows the techniques for creating paths dynamically.","nodes":[{"content":"Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path. The following table shows the techniques for creating paths dynamically.","pos":[0,281],"nodes":[{"content":"Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path.","pos":[0,208]},{"content":"The following table shows the techniques for creating paths dynamically.","pos":[209,281]}]}]},{"pos":[1812,1836],"content":"Path or program category","nodes":[{"content":"Path or program category","pos":[0,24]}]},{"pos":[1837,1861],"content":"Class and members to use","nodes":[{"content":"Class and members to use","pos":[0,24]}]},{"pos":[1932,2013],"content":"Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on","nodes":[{"content":"Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on","pos":[0,81]}]},{"pos":[2014,2344],"content":"The <xref:System.Environment?displayProperty=fullName> class is the most complete source for these, either through its static methods, such as <xref:System.Environment.SystemDirectory%2A>, or through the <xref:System.Environment.GetFolderPath%2A> method, using one of the <xref:System.Environment.SpecialFolder> enumerated values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Environment?displayProperty=fullName&gt;</ph> class is the most complete source for these, either through its static methods, such as <ph id=\"ph2\">&lt;xref:System.Environment.SystemDirectory%2A&gt;</ph>, or through the <ph id=\"ph3\">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method, using one of the <ph id=\"ph4\">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumerated values.","pos":[0,330],"source":"The <xref:System.Environment?displayProperty=fullName> class is the most complete source for these, either through its static methods, such as <xref:System.Environment.SystemDirectory%2A>, or through the <xref:System.Environment.GetFolderPath%2A> method, using one of the <xref:System.Environment.SpecialFolder> enumerated values."}]},{"pos":[2349,2389],"content":"Paths related to the current application","nodes":[{"content":"Paths related to the current application","pos":[0,40]}]},{"pos":[2390,3244],"content":"The <xref:System.Windows.Forms.Application> class has static members to obtain certain paths, such as <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.<br /><br /> The <xref:System.IO.Path.GetTempPath%2A> method of the <xref:System.IO.Path?displayProperty=fullName> returns the path of the temporary folder.<br /><br /> The <xref:System.IO.Directory.GetCurrentDirectory%2A> method of the <xref:System.IO.Directory?displayProperty=fullName> class returns the application's current executing directory.<br /><br /> The <xref:System.IO.DriveInfo.RootDirectory%2A> property of the <xref:System.IO.DriveInfo> class represents the specified drive's root directory.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has static members to obtain certain paths, such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.StartupPath%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.ExecutablePath%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.","pos":[0,347],"source":"The <xref:System.Windows.Forms.Application> class has static members to obtain certain paths, such as <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Path.GetTempPath%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.IO.Path?displayProperty=fullName&gt;</ph> returns the path of the temporary folder.","pos":[360,503],"source":"The <xref:System.IO.Path.GetTempPath%2A> method of the <xref:System.IO.Path?displayProperty=fullName> returns the path of the temporary folder."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.IO.Directory?displayProperty=fullName&gt;</ph> class returns the application's current executing directory.","pos":[516,696],"source":"The <xref:System.IO.Directory.GetCurrentDirectory%2A> method of the <xref:System.IO.Directory?displayProperty=fullName> class returns the application's current executing directory."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.DriveInfo.RootDirectory%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IO.DriveInfo&gt;</ph> class represents the specified drive's root directory.","pos":[709,854],"source":"The <xref:System.IO.DriveInfo.RootDirectory%2A> property of the <xref:System.IO.DriveInfo> class represents the specified drive's root directory."}]},{"pos":[3249,3285],"content":"Paths stored as application settings","nodes":[{"content":"Paths stored as application settings","pos":[0,36]}]},{"pos":[3286,3574],"content":"Access the corresponding applications settings property of the wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. For more information, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).","nodes":[{"content":"Access the corresponding applications settings property of the wrapper class derived from <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.","pos":[0,142],"source":"Access the corresponding applications settings property of the wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Settings for Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.","pos":[143,288],"source":" For more information, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)."}]},{"pos":[3579,3595],"content":"Registry storage","nodes":[{"content":"Registry storage","pos":[0,16]}]},{"pos":[3596,3916],"content":"Some applications store directory information in the registry. The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value.","nodes":[{"content":"Some applications store directory information in the registry. The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value.","pos":[0,320],"nodes":[{"content":"Some applications store directory information in the registry.","pos":[0,62]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> properties that resolve to a <ph id=\"ph4\">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> value.","pos":[63,320],"source":" The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value."}]}]},{"pos":[3921,3943],"content":"ClickOnce applications","nodes":[{"content":"ClickOnce applications","pos":[0,22]}]},{"pos":[3944,4317],"content":"For ClickOnce applications, use <xref:System.Windows.Forms.Application> class members such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, which will return a pointer to the ClickOnce data directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"For ClickOnce applications, use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class members such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>, which will return a pointer to the ClickOnce data directory.","pos":[0,214],"source":"For ClickOnce applications, use <xref:System.Windows.Forms.Application> class members such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, which will return a pointer to the ClickOnce data directory."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[215,373],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]},{"pos":[4322,4348],"content":"International applications","nodes":[{"content":"International applications","pos":[0,26]}]},{"pos":[4349,4721],"content":"For international applications, retrieve the relative path portion from a string resource in your application by using the <xref:System.Resources.ResourceReader?displayProperty=fullName> class. For more information about globalization and localization, see the topic [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).","nodes":[{"content":"For international applications, retrieve the relative path portion from a string resource in your application by using the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceReader?displayProperty=fullName&gt;</ph> class.","pos":[0,193],"source":"For international applications, retrieve the relative path portion from a string resource in your application by using the <xref:System.Resources.ResourceReader?displayProperty=fullName> class."},{"content":"For more information about globalization and localization, see the topic <bpt id=\"p1\">[</bpt>Globalization and Localization<ept id=\"p1\">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.","pos":[194,372],"source":" For more information about globalization and localization, see the topic [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)."}]},{"pos":[4729,5022],"content":"Notice that a full path may be built up using one or more of the described techniques. For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.","nodes":[{"content":"Notice that a full path may be built up using one or more of the described techniques. For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.","pos":[0,293],"nodes":[{"content":"Notice that a full path may be built up using one or more of the described techniques.","pos":[0,86]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.","pos":[87,293],"source":" For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion."}]}]},{"pos":[5029,5376],"content":"The <xref:System.IO.Path?displayProperty=fullName> class contains static members to assist in manipulating absolute and relative path strings, whereas the <xref:System.IO.File?displayProperty=fullName> and <xref:System.IO.Directory?displayProperty=fullName> classes have static members that actually manipulate files and directories, respectively.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Path?displayProperty=fullName&gt;</ph> class contains static members to assist in manipulating absolute and relative path strings, whereas the <ph id=\"ph2\">&lt;xref:System.IO.File?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.Directory?displayProperty=fullName&gt;</ph> classes have static members that actually manipulate files and directories, respectively.","pos":[0,347],"source":"The <xref:System.IO.Path?displayProperty=fullName> class contains static members to assist in manipulating absolute and relative path strings, whereas the <xref:System.IO.File?displayProperty=fullName> and <xref:System.IO.Directory?displayProperty=fullName> classes have static members that actually manipulate files and directories, respectively."}]},{"pos":[5384,5737],"content":"[!IMPORTANT]\n If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>. To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`.","leadings":["","> "],"nodes":[{"content":" If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>. To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`.","pos":[13,351],"nodes":[{"content":"If the user of your application changes the folder in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>, then the current working directory for your application is set to the location specified in the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph>.","pos":[1,234],"source":" If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>."},{"content":"To prevent this, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[235,338],"source":" To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`."}]}]}],"pos":[1791,7556],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.","nodes":[{"pos":[0,134],"content":"Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.","pos":[0,134]}]}],"pos":[11135,11270],"yaml":true},{"content":"The extension added to a file name depends on the currently selected file filter and the value of the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property.  \n  \n If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `true`, the dialog box adds the first extension from the current file filter that matches an existing file. If no files match the current file filter, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.  \n  \n If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `false`, the dialog box adds the first valid file name extension from the current file filter. If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.","nodes":[{"pos":[0,169],"content":"The extension added to a file name depends on the currently selected file filter and the value of the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property.","nodes":[{"content":"The extension added to a file name depends on the currently selected file filter and the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property.","pos":[0,169],"source":"The extension added to a file name depends on the currently selected file filter and the value of the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property."}]},{"pos":[176,517],"content":"If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `true`, the dialog box adds the first extension from the current file filter that matches an existing file. If no files match the current file filter, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the dialog box adds the first extension from the current file filter that matches an existing file.","pos":[0,184],"source":"If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `true`, the dialog box adds the first extension from the current file filter that matches an existing file."},{"content":"If no files match the current file filter, the dialog box adds the extension specified in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property.","pos":[185,341],"source":" If no files match the current file filter, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property."}]},{"pos":[524,876],"content":"If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `false`, the dialog box adds the first valid file name extension from the current file filter. If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.CheckFileExists%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the dialog box adds the first valid file name extension from the current file filter.","pos":[0,171],"source":"If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `false`, the dialog box adds the first valid file name extension from the current file filter."},{"content":"If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property.","pos":[172,352],"source":" If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property."}]}],"pos":[11281,12164],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box adds an extension to a file name if the user omits the extension; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,139],"content":"`true` if the dialog box adds an extension to a file name if the user omits the extension; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box adds an extension to a file name if the user omits the extension; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,110],"source":"`true` if the dialog box adds an extension to a file name if the user omits the extension; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[111,139],"source":" The default value is `true`."}]}],"pos":[12284,12426],"yaml":true},{"content":"Gets or sets a value indicating whether this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].","nodes":[{"pos":[0,226],"content":"Gets or sets a value indicating whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph> instance should automatically upgrade appearance and behavior when running on <ph id=\"ph2\">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>.","source":"Gets or sets a value indicating whether this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]."}],"pos":[13476,13703],"yaml":true},{"content":"If this property is `false`, the <xref:System.Windows.Forms.FileDialog> class will have a [!INCLUDE[winxp](~/includes/winxp-md.md)]-style appearance and behavior on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].  \n  \n On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.","nodes":[{"pos":[0,215],"content":"If this property is <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class will have a <ph id=\"ph3\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>-style appearance and behavior on <ph id=\"ph4\">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>.","source":"If this property is `false`, the <xref:System.Windows.Forms.FileDialog> class will have a [!INCLUDE[winxp](~/includes/winxp-md.md)]-style appearance and behavior on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]."},{"pos":[222,307],"content":"On <ph id=\"ph1\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>, this property does not have any effect.","source":"On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect."}],"pos":[13714,14026],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,239],"content":"`true` if this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph> instance should automatically upgrade appearance and behavior when running on <ph id=\"ph3\">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,216],"source":"`true` if this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[217,239],"source":" The default is `true`."}]}],"pos":[14152,14394],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","nodes":[{"pos":[0,128],"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","pos":[0,128]}]}],"pos":[15432,15561],"yaml":true},{"content":"The default value is `true` for an inheriting <xref:System.Windows.Forms.OpenFileDialog> and `false` for an inheriting <xref:System.Windows.Forms.SaveFileDialog>.","nodes":[{"pos":[0,162],"content":"The default value is <ph id=\"ph1\">`true`</ph> for an inheriting <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id=\"ph3\">`false`</ph> for an inheriting <ph id=\"ph4\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph>.","source":"The default value is `true` for an inheriting <xref:System.Windows.Forms.OpenFileDialog> and `false` for an inheriting <xref:System.Windows.Forms.SaveFileDialog>."}],"pos":[15572,15735],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,148],"content":"`true` if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,118],"source":"`true` if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[119,148],"source":" The default value is `false`."}]}],"pos":[15866,16017],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.","nodes":[{"pos":[0,123],"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.","pos":[0,123]}]}],"pos":[17052,17176],"yaml":true},{"content":"`true` if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,144],"content":"`true` if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,115],"source":"`true` if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[116,144],"source":" The default value is `true`."}]}],"pos":[17299,17446],"yaml":true},{"content":"Gets the custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance.","nodes":[{"pos":[0,105],"content":"Gets the custom places collection for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance."}],"pos":[18463,18569],"yaml":true},{"content":"On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.","nodes":[{"pos":[0,85],"content":"On <ph id=\"ph1\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph>, this property does not have any effect.","source":"On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect."}],"pos":[18580,18666],"yaml":true,"extradata":"MT"},{"content":"The custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance.","nodes":[{"pos":[0,100],"content":"The custom places collection for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph> instance.","source":"The custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance."}],"pos":[19607,19708],"yaml":true},{"content":"Gets or sets the default file name extension.","nodes":[{"pos":[0,45],"content":"Gets or sets the default file name extension.","nodes":[{"content":"Gets or sets the default file name extension.","pos":[0,45]}]}],"pos":[20758,20804],"yaml":true},{"content":"When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name. The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties. If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used. If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used.","nodes":[{"pos":[0,636],"content":"When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name. The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties. If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used. If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used.","nodes":[{"content":"When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name. The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties. If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used. If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used.","pos":[0,636],"nodes":[{"content":"When the user of your application specifies a file name without an extension, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> appends an extension to the file name.","pos":[0,159],"source":"When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name."},{"content":"The extension that is used is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> properties.","pos":[160,325],"source":" The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties."},{"content":"If a filter is selected in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> and the filter specifies an extension, then that extension is used.","pos":[326,463],"source":" If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used."},{"content":"If the filter selected uses a wildcard in place of the extension, then the extension specified in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.DefaultExt%2A&gt;</ph> property is used.","pos":[464,636],"source":" If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used."}]}]}],"pos":[20815,21452],"yaml":true,"extradata":"MT"},{"content":"The default file name extension. The returned string does not include the period. The default value is an empty string (\"\").","nodes":[{"pos":[0,124],"content":"The default file name extension. The returned string does not include the period. The default value is an empty string (\"\").","nodes":[{"content":"The default file name extension. The returned string does not include the period. The default value is an empty string (\"\").","pos":[0,124],"nodes":[{"content":"The default file name extension.","pos":[0,32]},{"content":"The returned string does not include the period.","pos":[33,81]},{"content":"The default value is an empty string (\"\").","pos":[82,124]}]}]}],"pos":[22725,22850],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).","nodes":[{"pos":[0,173],"content":"Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).","nodes":[{"content":"Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).","pos":[0,173]}]}],"pos":[23864,24038],"yaml":true},{"content":"`true` if the dialog box returns the location of the file referenced by the shortcut; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,134],"content":"`true` if the dialog box returns the location of the file referenced by the shortcut; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box returns the location of the file referenced by the shortcut; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,105],"source":"`true` if the dialog box returns the location of the file referenced by the shortcut; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[106,134],"source":" The default value is `true`."}]}],"pos":[24162,24299],"yaml":true},{"content":"Owns the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event.","nodes":[{"pos":[0,75],"content":"Owns the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog.FileOk\"&gt;&lt;/xref&gt;</ph> event.","source":"Owns the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event."}],"pos":[25308,25384],"yaml":true},{"content":"Gets or sets a string containing the file name selected in the file dialog box.","nodes":[{"pos":[0,79],"content":"Gets or sets a string containing the file name selected in the file dialog box.","nodes":[{"content":"Gets or sets a string containing the file name selected in the file dialog box.","pos":[0,79]}]}],"pos":[26406,26486],"yaml":true},{"content":"The file name includes both the file path and the extension. If no files are selected, this method returns an empty string (\"\").  \n  \n When used from the <xref:System.Windows.Forms.SaveFileDialog> class, this property represents the file being saved; when used from the <xref:System.Windows.Forms.OpenFileDialog> class, it represents the file being opened.  \n  \n This property can only be the name of one selected file. If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>.","nodes":[{"pos":[0,128],"content":"The file name includes both the file path and the extension. If no files are selected, this method returns an empty string (\"\").","nodes":[{"content":"The file name includes both the file path and the extension. If no files are selected, this method returns an empty string (\"\").","pos":[0,128],"nodes":[{"content":"The file name includes both the file path and the extension.","pos":[0,60]},{"content":"If no files are selected, this method returns an empty string (\"\").","pos":[61,128]}]}]},{"pos":[135,356],"content":"When used from the <xref:System.Windows.Forms.SaveFileDialog> class, this property represents the file being saved; when used from the <xref:System.Windows.Forms.OpenFileDialog> class, it represents the file being opened.","nodes":[{"content":"When used from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> class, this property represents the file being saved; when used from the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> class, it represents the file being opened.","pos":[0,221],"source":"When used from the <xref:System.Windows.Forms.SaveFileDialog> class, this property represents the file being saved; when used from the <xref:System.Windows.Forms.OpenFileDialog> class, it represents the file being opened."}]},{"pos":[363,586],"content":"This property can only be the name of one selected file. If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>.","nodes":[{"content":"This property can only be the name of one selected file. If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>.","pos":[0,223],"nodes":[{"content":"This property can only be the name of one selected file.","pos":[0,56]},{"content":"If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FileNames%2A&gt;</ph>.","pos":[57,223],"source":" If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>."}]}]}],"pos":[26497,27092],"yaml":true,"extradata":"MT"},{"content":"The file name selected in the file dialog box. The default value is an empty string (\"\").","nodes":[{"pos":[0,89],"content":"The file name selected in the file dialog box. The default value is an empty string (\"\").","nodes":[{"content":"The file name selected in the file dialog box. The default value is an empty string (\"\").","pos":[0,89],"nodes":[{"content":"The file name selected in the file dialog box.","pos":[0,46]},{"content":"The default value is an empty string (\"\").","pos":[47,89]}]}]}],"pos":[28363,28453],"yaml":true},{"content":"Gets the file names of all selected files in the dialog box.","nodes":[{"pos":[0,60],"content":"Gets the file names of all selected files in the dialog box.","nodes":[{"content":"Gets the file names of all selected files in the dialog box.","pos":[0,60]}]}],"pos":[29445,29506],"yaml":true},{"content":"Each file name includes both the file path and the extension. If no files are selected, this method returns an empty array.","nodes":[{"pos":[0,123],"content":"Each file name includes both the file path and the extension. If no files are selected, this method returns an empty array.","nodes":[{"content":"Each file name includes both the file path and the extension. If no files are selected, this method returns an empty array.","pos":[0,123],"nodes":[{"content":"Each file name includes both the file path and the extension.","pos":[0,61]},{"content":"If no files are selected, this method returns an empty array.","pos":[62,123]}]}]}],"pos":[29517,29641],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.String\"></xref>, containing the file names of all selected files in the dialog box.","nodes":[{"pos":[0,119],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, containing the file names of all selected files in the dialog box.","source":"An array of type <xref href=\"System.String\"></xref>, containing the file names of all selected files in the dialog box."}],"pos":[30956,31076],"yaml":true},{"content":"Occurs when the user clicks on the **Open** or **Save** button on a file dialog box.","nodes":[{"pos":[0,84],"content":"Occurs when the user clicks on the <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept> button on a file dialog box.","source":"Occurs when the user clicks on the **Open** or **Save** button on a file dialog box."}],"pos":[32096,32181],"yaml":true},{"content":"For information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,145],"content":"For information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[32192,32338],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the current file name filter string, which determines the choices that appear in the \"Save as file type\" or \"Files of type\" box in the dialog box.","nodes":[{"pos":[0,159],"content":"Gets or sets the current file name filter string, which determines the choices that appear in the \"Save as file type\" or \"Files of type\" box in the dialog box.","nodes":[{"content":"Gets or sets the current file name filter string, which determines the choices that appear in the \"Save as file type\" or \"Files of type\" box in the dialog box.","pos":[0,159]}]}],"pos":[34914,35074],"yaml":true},{"content":"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  \n  \n The following is an example of a filter string:  \n  \n `Text files (*.txt)|*.txt|All files (*.*)|*.*`  \n  \n You can add several filter patterns to a filter by separating the file types with semicolons, for example:  \n  \n `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*`  \n  \n Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user.","nodes":[{"pos":[0,223],"content":"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.","nodes":[{"content":"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.","pos":[0,223],"nodes":[{"content":"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&amp;#124;) and the filter pattern.","pos":[0,144],"source":"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern."},{"content":"The strings for different filtering options are separated by the vertical bar.","pos":[145,223]}]}]},{"pos":[230,277],"content":"The following is an example of a filter string:","nodes":[{"content":"The following is an example of a filter string:","pos":[0,47]}]},{"pos":[337,443],"content":"You can add several filter patterns to a filter by separating the file types with semicolons, for example:","nodes":[{"content":"You can add several filter patterns to a filter by separating the file types with semicolons, for example:","pos":[0,106]}]},{"pos":[527,655],"content":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> property to set which filtering option is shown first to the user.","pos":[0,128],"source":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user."}]}],"pos":[35085,35753],"yaml":true,"extradata":"MT"},{"content":"The file filtering options available in the dialog box.","nodes":[{"pos":[0,55],"content":"The file filtering options available in the dialog box.","nodes":[{"content":"The file filtering options available in the dialog box.","pos":[0,55]}]}],"pos":[36849,36905],"yaml":true},{"content":"<code>Filter</code> format is invalid.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;Filter&lt;/code&gt;</ph> format is invalid.","source":"<code>Filter</code> format is invalid."}],"pos":[37065,37104],"yaml":true},{"content":"Gets or sets the index of the filter currently selected in the file dialog box.","nodes":[{"pos":[0,79],"content":"Gets or sets the index of the filter currently selected in the file dialog box.","nodes":[{"content":"Gets or sets the index of the filter currently selected in the file dialog box.","pos":[0,79]}]}],"pos":[38037,38117],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user. You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen.  \n  \n> [!NOTE]\n>  The index value of the first filter entry is 1.","nodes":[{"pos":[0,311],"content":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user. You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen.","nodes":[{"content":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user. You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen.","pos":[0,311],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> property to set which filtering option is shown first to the user.","pos":[0,128],"source":"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user."},{"content":"You can also use the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FilterIndex%2A&gt;</ph> after showing the file dialog to perform special file operations depending upon the filter chosen.","pos":[129,311],"source":" You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen."}]}]},{"pos":[319,377],"content":"[!NOTE]\n The index value of the first filter entry is 1.","leadings":["","> "],"nodes":[{"content":"The index value of the first filter entry is 1.","pos":[9,56]}]}],"pos":[38128,38511],"yaml":true,"extradata":"MT"},{"content":"A value containing the index of the filter currently selected in the file dialog box. The default value is 1.","nodes":[{"pos":[0,109],"content":"A value containing the index of the filter currently selected in the file dialog box. The default value is 1.","nodes":[{"content":"A value containing the index of the filter currently selected in the file dialog box. The default value is 1.","pos":[0,109],"nodes":[{"content":"A value containing the index of the filter currently selected in the file dialog box.","pos":[0,85]},{"content":"The default value is 1.","pos":[86,109]}]}]}],"pos":[39608,39718],"yaml":true},{"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.","nodes":[{"pos":[0,117],"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.","nodes":[{"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.","pos":[0,117]}]}],"pos":[40966,41084],"yaml":true},{"content":"A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.  \n  \n By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.","nodes":[{"pos":[0,155],"content":"A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.","nodes":[{"content":"A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.","pos":[0,155]}]},{"pos":[162,269],"content":"By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.","nodes":[{"content":"By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.","pos":[0,107]}]}],"pos":[41095,41369],"yaml":true,"extradata":"MT"},{"content":"The handle to the dialog box window.","nodes":[{"pos":[0,36],"content":"The handle to the dialog box window.","nodes":[{"content":"The handle to the dialog box window.","pos":[0,36]}]}],"pos":[41557,41594],"yaml":true},{"content":"The message received by the dialog box.","nodes":[{"pos":[0,39],"content":"The message received by the dialog box.","nodes":[{"content":"The message received by the dialog box.","pos":[0,39]}]}],"pos":[41652,41692],"yaml":true},{"content":"Additional information about the message.","nodes":[{"pos":[0,41],"content":"Additional information about the message.","nodes":[{"content":"Additional information about the message.","pos":[0,41]}]}],"pos":[41754,41796],"yaml":true},{"content":"Additional information about the message.","nodes":[{"pos":[0,41],"content":"Additional information about the message.","nodes":[{"content":"Additional information about the message.","pos":[0,41]}]}],"pos":[41858,41900],"yaml":true},{"content":"Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.","nodes":[{"pos":[0,152],"content":"Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.","nodes":[{"content":"Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.","pos":[0,152]}]}],"pos":[41957,42110],"yaml":true},{"content":"Gets or sets the initial directory displayed by the file dialog box.","nodes":[{"pos":[0,68],"content":"Gets or sets the initial directory displayed by the file dialog box.","nodes":[{"content":"Gets or sets the initial directory displayed by the file dialog box.","pos":[0,68]}]}],"pos":[43105,43174],"yaml":true},{"content":"The <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property is typically set using one of the following sources:  \n  \n-   A path that was previously used in the program, perhaps retained from the last directory or file operation.  \n  \n-   A path read from a persistent source, such as an application setting, a <xref:Microsoft.Win32.Registry> or a string resource in the application.  \n  \n-   Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <xref:System.Environment.GetFolderPath%2A> method)  \n  \n-   A path related to the current application, such as its startup directory (which you can obtain using properties on the <xref:System.Windows.Forms.Application> object).  \n  \n For more information about creating dynamic paths, see the <xref:System.Windows.Forms.FileDialog> class overview.  \n  \n On [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)], if <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.","nodes":[{"pos":[0,124],"content":"The <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property is typically set using one of the following sources:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A&gt;</ph> property is typically set using one of the following sources:","pos":[0,124],"source":"The <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property is typically set using one of the following sources:"}]},{"pos":[134,241],"content":"A path that was previously used in the program, perhaps retained from the last directory or file operation.","nodes":[{"content":"A path that was previously used in the program, perhaps retained from the last directory or file operation.","pos":[0,107]}]},{"pos":[251,395],"content":"A path read from a persistent source, such as an application setting, a <xref:Microsoft.Win32.Registry> or a string resource in the application.","nodes":[{"content":"A path read from a persistent source, such as an application setting, a <ph id=\"ph1\">&lt;xref:Microsoft.Win32.Registry&gt;</ph> or a string resource in the application.","pos":[0,144],"source":"A path read from a persistent source, such as an application setting, a <xref:Microsoft.Win32.Registry> or a string resource in the application."}]},{"pos":[405,582],"content":"Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <xref:System.Environment.GetFolderPath%2A> method)","nodes":[{"content":"Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <ph id=\"ph1\">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method)","pos":[0,177],"source":"Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <xref:System.Environment.GetFolderPath%2A> method)"}]},{"pos":[592,759],"content":"A path related to the current application, such as its startup directory (which you can obtain using properties on the <xref:System.Windows.Forms.Application> object).","nodes":[{"content":"A path related to the current application, such as its startup directory (which you can obtain using properties on the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> object).","pos":[0,167],"source":"A path related to the current application, such as its startup directory (which you can obtain using properties on the <xref:System.Windows.Forms.Application> object)."}]},{"pos":[766,879],"content":"For more information about creating dynamic paths, see the <xref:System.Windows.Forms.FileDialog> class overview.","nodes":[{"content":"For more information about creating dynamic paths, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class overview.","pos":[0,113],"source":"For more information about creating dynamic paths, see the <xref:System.Windows.Forms.FileDialog> class overview."}]},{"pos":[886,1191],"content":"On <ph id=\"ph1\">[!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]</ph>, if <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A&gt;</ph> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.","source":"On [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)], if <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file."}],"pos":[43185,44391],"yaml":true,"extradata":"MT"},{"content":"The initial directory displayed by the file dialog box. The default is an empty string (\"\").","nodes":[{"pos":[0,92],"content":"The initial directory displayed by the file dialog box. The default is an empty string (\"\").","nodes":[{"content":"The initial directory displayed by the file dialog box. The default is an empty string (\"\").","pos":[0,92],"nodes":[{"content":"The initial directory displayed by the file dialog box.","pos":[0,55]},{"content":"The default is an empty string (\"\").","pos":[56,92]}]}]}],"pos":[45487,45580],"yaml":true},{"content":"Gets the Win32 instance handle for the application.","nodes":[{"pos":[0,51],"content":"Gets the Win32 instance handle for the application.","nodes":[{"content":"Gets the Win32 instance handle for the application.","pos":[0,51]}]}],"pos":[46574,46626],"yaml":true},{"content":"A Win32 instance handle for the application.","nodes":[{"pos":[0,44],"content":"A Win32 instance handle for the application.","nodes":[{"content":"A Win32 instance handle for the application.","pos":[0,44]}]}],"pos":[46749,46794],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog.FileOk\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event."}],"pos":[47929,48007],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CancelEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data."}],"pos":[48194,48285],"yaml":true},{"content":"Gets values to initialize the <xref href=\"System.Windows.Forms.FileDialog\"></xref>.","nodes":[{"pos":[0,83],"content":"Gets values to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"Gets values to initialize the <xref href=\"System.Windows.Forms.FileDialog\"></xref>."}],"pos":[49248,49332],"yaml":true},{"content":"The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32. Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options.","nodes":[{"pos":[0,236],"content":"The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32. Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options.","nodes":[{"content":"The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32. Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options.","pos":[0,236],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.Options%2A&gt;</ph> property corresponds to the flags used to initialize a file dialog box using Win32.","pos":[0,137],"source":"The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32."},{"content":"Use the properties of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class to get and set the options.","pos":[138,236],"source":" Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options."}]}]}],"pos":[49343,49580],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of internal values that initializes the <xref href=\"System.Windows.Forms.FileDialog\"></xref>.","nodes":[{"pos":[0,115],"content":"A bitwise combination of internal values that initializes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"A bitwise combination of internal values that initializes the <xref href=\"System.Windows.Forms.FileDialog\"></xref>."}],"pos":[49690,49806],"yaml":true},{"content":"Resets all properties to their default values.","nodes":[{"pos":[0,46],"content":"Resets all properties to their default values.","nodes":[{"content":"Resets all properties to their default values.","pos":[0,46]}]}],"pos":[50760,50807],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.","nodes":[{"pos":[0,130],"content":"Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.","pos":[0,130]}]}],"pos":[51894,52025],"yaml":true},{"content":"`true` if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,203],"content":"`true` if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,173],"source":"`true` if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[174,203],"source":" The default value is `false`."}]}],"pos":[53143,53349],"yaml":true},{"content":"Specifies a common dialog box.","nodes":[{"pos":[0,30],"content":"Specifies a common dialog box.","nodes":[{"content":"Specifies a common dialog box.","pos":[0,30]}]}],"pos":[54416,54447],"yaml":true},{"content":"This method provides an implementation of <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, and is invoked when the user of a file dialog invokes <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.  \n  \n In the derived classes <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> an invalid file name <xref:System.Exception> can be raised.","nodes":[{"pos":[0,206],"content":"This method provides an implementation of <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, and is invoked when the user of a file dialog invokes <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.","nodes":[{"content":"This method provides an implementation of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph>, and is invoked when the user of a file dialog invokes <ph id=\"ph2\">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>.","pos":[0,206],"source":"This method provides an implementation of <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, and is invoked when the user of a file dialog invokes <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>."}]},{"pos":[213,385],"content":"In the derived classes <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> an invalid file name <xref:System.Exception> can be raised.","nodes":[{"content":"In the derived classes <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> an invalid file name <ph id=\"ph3\">&lt;xref:System.Exception&gt;</ph> can be raised.","pos":[0,172],"source":"In the derived classes <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> an invalid file name <xref:System.Exception> can be raised."}]}],"pos":[54458,54848],"yaml":true,"extradata":"MT"},{"content":"A value that represents the window handle of the owner window for the common dialog box.","nodes":[{"pos":[0,88],"content":"A value that represents the window handle of the owner window for the common dialog box.","nodes":[{"content":"A value that represents the window handle of the owner window for the common dialog box.","pos":[0,88]}]}],"pos":[55006,55095],"yaml":true},{"content":"`true` if the file could be opened; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the file could be opened; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the file could be opened; otherwise, `false`."}],"pos":[55153,55211],"yaml":true},{"content":"Gets or sets a value indicating whether the **Help** button is displayed in the file dialog box.","nodes":[{"pos":[0,96],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> button is displayed in the file dialog box.","source":"Gets or sets a value indicating whether the **Help** button is displayed in the file dialog box."}],"pos":[56181,56278],"yaml":true},{"content":"A <xref:System.Windows.Forms.Control.HelpRequested> event is raised when the user clicks the **Help** button.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is raised when the user clicks the <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> button.","source":"A <xref:System.Windows.Forms.Control.HelpRequested> event is raised when the user clicks the **Help** button."}],"pos":[56289,56399],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box includes a help button; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,98],"content":"`true` if the dialog box includes a help button; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box includes a help button; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,68],"source":"`true` if the dialog box includes a help button; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[69,98],"source":" The default value is `false`."}]}],"pos":[56515,56616],"yaml":true},{"content":"Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.","nodes":[{"pos":[0,113],"content":"Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.","nodes":[{"content":"Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.","pos":[0,113]}]}],"pos":[57722,57836],"yaml":true},{"content":"Sometimes users must open and save files that use multiple file name extensions. For example, the application manifest files used by the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment technology end in the complex file name extension \".exe.manifest\". Setting this property to `true` enables you to set the <xref:System.Windows.Forms.FileDialog.Filter%2A> property to a multi-dotted extension.  \n  \n If <xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> is `false`, and you assign a multi-dotted extension to <xref:System.Windows.Forms.FileDialog.Filter%2A>, derived controls such as <xref:System.Windows.Forms.SaveFileDialog> will only use the last extension in the string. For example, \".manifest\" will be used instead of \".exe.manifest\".","nodes":[{"pos":[0,410],"content":"Sometimes users must open and save files that use multiple file name extensions. For example, the application manifest files used by the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment technology end in the complex file name extension \".exe.manifest\". Setting this property to `true` enables you to set the <xref:System.Windows.Forms.FileDialog.Filter%2A> property to a multi-dotted extension.","nodes":[{"content":"Sometimes users must open and save files that use multiple file name extensions.","pos":[0,80]},{"content":"For example, the application manifest files used by the <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> deployment technology end in the complex file name extension \".exe.manifest\".","pos":[81,268],"source":" For example, the application manifest files used by the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment technology end in the complex file name extension \".exe.manifest\"."},{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> enables you to set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph> property to a multi-dotted extension.","pos":[269,410],"source":" Setting this property to `true` enables you to set the <xref:System.Windows.Forms.FileDialog.Filter%2A> property to a multi-dotted extension."}]},{"pos":[417,777],"content":"If <xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> is `false`, and you assign a multi-dotted extension to <xref:System.Windows.Forms.FileDialog.Filter%2A>, derived controls such as <xref:System.Windows.Forms.SaveFileDialog> will only use the last extension in the string. For example, \".manifest\" will be used instead of \".exe.manifest\".","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, and you assign a multi-dotted extension to <ph id=\"ph3\">&lt;xref:System.Windows.Forms.FileDialog.Filter%2A&gt;</ph>, derived controls such as <ph id=\"ph4\">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> will only use the last extension in the string.","pos":[0,294],"source":"If <xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> is `false`, and you assign a multi-dotted extension to <xref:System.Windows.Forms.FileDialog.Filter%2A>, derived controls such as <xref:System.Windows.Forms.SaveFileDialog> will only use the last extension in the string."},{"content":"For example, \".manifest\" will be used instead of \".exe.manifest\".","pos":[295,360]}]}],"pos":[57847,58635],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box supports multiple file name extensions; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,108],"content":"`true` if the dialog box supports multiple file name extensions; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box supports multiple file name extensions; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if the dialog box supports multiple file name extensions; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[85,108],"source":" The default is `false`."}]}],"pos":[59329,59440],"yaml":true},{"content":"Gets or sets the file dialog box title.","nodes":[{"pos":[0,39],"content":"Gets or sets the file dialog box title.","nodes":[{"content":"Gets or sets the file dialog box title.","pos":[0,39]}]}],"pos":[60428,60468],"yaml":true},{"content":"The string is placed in the title bar of the dialog box. If the title is an empty string, the system uses a default title, which is either \"Save As\" or \"Open\".","nodes":[{"pos":[0,159],"content":"The string is placed in the title bar of the dialog box. If the title is an empty string, the system uses a default title, which is either \"Save As\" or \"Open\".","nodes":[{"content":"The string is placed in the title bar of the dialog box. If the title is an empty string, the system uses a default title, which is either \"Save As\" or \"Open\".","pos":[0,159],"nodes":[{"content":"The string is placed in the title bar of the dialog box.","pos":[0,56]},{"content":"If the title is an empty string, the system uses a default title, which is either \"Save As\" or \"Open\".","pos":[57,159]}]}]}],"pos":[60479,60639],"yaml":true,"extradata":"MT"},{"content":"The file dialog box title. The default value is an empty string (\"\").","nodes":[{"pos":[0,69],"content":"The file dialog box title. The default value is an empty string (\"\").","nodes":[{"content":"The file dialog box title. The default value is an empty string (\"\").","pos":[0,69],"nodes":[{"content":"The file dialog box title.","pos":[0,26]},{"content":"The default value is an empty string (\"\").","pos":[27,69]}]}]}],"pos":[62042,62112],"yaml":true},{"content":"Provides a string version of this object.","nodes":[{"pos":[0,41],"content":"Provides a string version of this object.","nodes":[{"content":"Provides a string version of this object.","pos":[0,41]}]}],"pos":[63077,63119],"yaml":true},{"content":"A string version of this object.","nodes":[{"pos":[0,32],"content":"A string version of this object.","nodes":[{"content":"A string version of this object.","pos":[0,32]}]}],"pos":[63254,63287],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.","nodes":[{"pos":[0,91],"content":"Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.","pos":[0,91]}]}],"pos":[64264,64356],"yaml":true},{"content":"If the edit control contains anything but spaces when the user clicks **OK**, the dialog box returns the file name, whether it is valid or not. No default extension is added to the text.","nodes":[{"pos":[0,186],"content":"If the edit control contains anything but spaces when the user clicks **OK**, the dialog box returns the file name, whether it is valid or not. No default extension is added to the text.","nodes":[{"content":"If the edit control contains anything but spaces when the user clicks <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>, the dialog box returns the file name, whether it is valid or not.","pos":[0,143],"source":"If the edit control contains anything but spaces when the user clicks **OK**, the dialog box returns the file name, whether it is valid or not."},{"content":"No default extension is added to the text.","pos":[144,186]}]}],"pos":[64367,64554],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box accepts only valid Win32 file names; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,110],"content":"`true` if the dialog box accepts only valid Win32 file names; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box accepts only valid Win32 file names; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,81],"source":"`true` if the dialog box accepts only valid Win32 file names; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[82,110],"source":" The default value is `true`."}]}],"pos":[64675,64788],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.FileDialog\n  commentId: T:System.Windows.Forms.FileDialog\n  id: FileDialog\n  children:\n  - System.Windows.Forms.FileDialog.AddExtension\n  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  - System.Windows.Forms.FileDialog.CheckFileExists\n  - System.Windows.Forms.FileDialog.CheckPathExists\n  - System.Windows.Forms.FileDialog.CustomPlaces\n  - System.Windows.Forms.FileDialog.DefaultExt\n  - System.Windows.Forms.FileDialog.DereferenceLinks\n  - System.Windows.Forms.FileDialog.EventFileOk\n  - System.Windows.Forms.FileDialog.FileName\n  - System.Windows.Forms.FileDialog.FileNames\n  - System.Windows.Forms.FileDialog.FileOk\n  - System.Windows.Forms.FileDialog.Filter\n  - System.Windows.Forms.FileDialog.FilterIndex\n  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.FileDialog.InitialDirectory\n  - System.Windows.Forms.FileDialog.Instance\n  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.FileDialog.Options\n  - System.Windows.Forms.FileDialog.Reset\n  - System.Windows.Forms.FileDialog.RestoreDirectory\n  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  - System.Windows.Forms.FileDialog.ShowHelp\n  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  - System.Windows.Forms.FileDialog.Title\n  - System.Windows.Forms.FileDialog.ToString\n  - System.Windows.Forms.FileDialog.ValidateNames\n  langs:\n  - csharp\n  name: FileDialog\n  nameWithType: FileDialog\n  fullName: System.Windows.Forms.FileDialog\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Displays a dialog box from which the user can select a file.\n  remarks: \"<xref:System.Windows.Forms.FileDialog> is an abstract class that contains common behavior for the <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> classes. It is not intended to be used directly but contains common behavior for those two classes. You cannot create an instance of <xref:System.Windows.Forms.FileDialog>. Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods. To create a dialog box to select or save a file, use <xref:System.Windows.Forms.OpenFileDialog> or <xref:System.Windows.Forms.SaveFileDialog>.  \\n  \\n <xref:System.Windows.Forms.FileDialog> is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.  \\n  \\n> [!CAUTION]\\n>  When you use classes derived from <xref:System.Windows.Forms.FileDialog>, such as <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog>, avoid using string literals containing absolute paths. Instead, dynamically obtain the path using one or more of the techniques described in the following table.  \\n  \\n If you want to enable users to select a folder instead of a file, use the <xref:System.Windows.Forms.FolderBrowserDialog>.  \\n  \\n Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path. The following table shows the techniques for creating paths dynamically.  \\n  \\n|Path or program category|Class and members to use|  \\n|------------------------------|------------------------------|  \\n|Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on|The <xref:System.Environment?displayProperty=fullName> class is the most complete source for these, either through its static methods, such as <xref:System.Environment.SystemDirectory%2A>, or through the <xref:System.Environment.GetFolderPath%2A> method, using one of the <xref:System.Environment.SpecialFolder> enumerated values.|  \\n|Paths related to the current application|The <xref:System.Windows.Forms.Application> class has static members to obtain certain paths, such as <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.<br /><br /> The <xref:System.IO.Path.GetTempPath%2A> method of the <xref:System.IO.Path?displayProperty=fullName> returns the path of the temporary folder.<br /><br /> The <xref:System.IO.Directory.GetCurrentDirectory%2A> method of the <xref:System.IO.Directory?displayProperty=fullName> class returns the application's current executing directory.<br /><br /> The <xref:System.IO.DriveInfo.RootDirectory%2A> property of the <xref:System.IO.DriveInfo> class represents the specified drive's root directory.|  \\n|Paths stored as application settings|Access the corresponding applications settings property of the wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. For more information, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).|  \\n|Registry storage|Some applications store directory information in the registry. The <xref:System.Windows.Forms.Application> class has the <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> and <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> properties that resolve to a <xref:Microsoft.Win32.RegistryKey> value.|  \\n|ClickOnce applications|For ClickOnce applications, use <xref:System.Windows.Forms.Application> class members such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, which will return a pointer to the ClickOnce data directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).|  \\n|International applications|For international applications, retrieve the relative path portion from a string resource in your application by using the <xref:System.Resources.ResourceReader?displayProperty=fullName> class. For more information about globalization and localization, see the topic [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).|  \\n  \\n Notice that a full path may be built up using one or more of the described techniques. For example, the <xref:System.Environment.GetFolderPath%2A> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.  \\n  \\n The <xref:System.IO.Path?displayProperty=fullName> class contains static members to assist in manipulating absolute and relative path strings, whereas the <xref:System.IO.File?displayProperty=fullName> and <xref:System.IO.Directory?displayProperty=fullName> classes have static members that actually manipulate files and directories, respectively.  \\n  \\n> [!IMPORTANT]\\n>  If the user of your application changes the folder in the <xref:System.Windows.Forms.FileDialog>, then the current working directory for your application is set to the location specified in the <xref:System.Windows.Forms.FileDialog>. To prevent this, set the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to `true`.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and return the <xref:System.Windows.Forms.DialogResult>. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public abstract class FileDialog : System.Windows.Forms.CommonDialog'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.CommonDialog\n  derivedClasses:\n  - System.Windows.Forms.OpenFileDialog\n  - System.Windows.Forms.SaveFileDialog\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.Forms.CommonDialog.HelpRequest\n  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.CommonDialog.ShowDialog\n  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  - System.Windows.Forms.CommonDialog.Tag\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.AddExtension\n  commentId: P:System.Windows.Forms.FileDialog.AddExtension\n  id: AddExtension\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.\n  remarks: \"The extension added to a file name depends on the currently selected file filter and the value of the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property.  \\n  \\n If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `true`, the dialog box adds the first extension from the current file filter that matches an existing file. If no files match the current file filter, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.  \\n  \\n If the <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> property is `false`, the dialog box adds the first valid file name extension from the current file filter. If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property.\"\n  syntax:\n    content: public bool AddExtension { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box adds an extension to a file name if the user omits the extension; otherwise, `false`. The default value is `true`.'\n  overload: System.Windows.Forms.FileDialog.AddExtension*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  commentId: P:System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  id: AutoUpgradeEnabled\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: AutoUpgradeEnabled\n  nameWithType: FileDialog.AutoUpgradeEnabled\n  fullName: FileDialog.AutoUpgradeEnabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].\n  remarks: \"If this property is `false`, the <xref:System.Windows.Forms.FileDialog> class will have a [!INCLUDE[winxp](~/includes/winxp-md.md)]-style appearance and behavior on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)].  \\n  \\n On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.\"\n  syntax:\n    content: public bool AutoUpgradeEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance should automatically upgrade appearance and behavior when running on [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)]; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.CheckFileExists\n  commentId: P:System.Windows.Forms.FileDialog.CheckFileExists\n  id: CheckFileExists\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.\n  remarks: The default value is `true` for an inheriting <xref:System.Windows.Forms.OpenFileDialog> and `false` for an inheriting <xref:System.Windows.Forms.SaveFileDialog>.\n  syntax:\n    content: public virtual bool CheckFileExists { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.FileDialog.CheckFileExists*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.CheckPathExists\n  commentId: P:System.Windows.Forms.FileDialog.CheckPathExists\n  id: CheckPathExists\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.\n  syntax:\n    content: public bool CheckPathExists { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, `false`. The default value is `true`.'\n  overload: System.Windows.Forms.FileDialog.CheckPathExists*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.CustomPlaces\n  commentId: P:System.Windows.Forms.FileDialog.CustomPlaces\n  id: CustomPlaces\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance.\n  remarks: On [!INCLUDE[winxp](~/includes/winxp-md.md)], this property does not have any effect.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.FileDialog.CustomPlaces%2A> collection. To run this example, paste the following code into a Windows Form and call `InitializeDialogAndButton` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \\n  \\n [!code-csharp[System.Windows.Forms.FileDialogCommonPlaces#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialogCommonPlaces/CS/Form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FileDialogCommonPlaces#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialogCommonPlaces/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }\n    return:\n      type: System.Windows.Forms.FileDialogCustomPlacesCollection\n      description: The custom places collection for this <xref href=\"System.Windows.Forms.FileDialog\"></xref> instance.\n  overload: System.Windows.Forms.FileDialog.CustomPlaces*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.DefaultExt\n  commentId: P:System.Windows.Forms.FileDialog.DefaultExt\n  id: DefaultExt\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the default file name extension.\n  remarks: When the user of your application specifies a file name without an extension, the <xref:System.Windows.Forms.FileDialog> appends an extension to the file name. The extension that is used is determined by the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> properties. If a filter is selected in the <xref:System.Windows.Forms.FileDialog> and the filter specifies an extension, then that extension is used. If the filter selected uses a wildcard in place of the extension, then the extension specified in the <xref:System.Windows.Forms.FileDialog.DefaultExt%2A> property is used.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \\n  \\n This is a complete example that is ready to run when you copy it to your project.  \\n  \\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]\"\n  syntax:\n    content: public string DefaultExt { get; set; }\n    return:\n      type: System.String\n      description: The default file name extension. The returned string does not include the period. The default value is an empty string (\"\").\n  overload: System.Windows.Forms.FileDialog.DefaultExt*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.DereferenceLinks\n  commentId: P:System.Windows.Forms.FileDialog.DereferenceLinks\n  id: DereferenceLinks\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).\n  syntax:\n    content: public bool DereferenceLinks { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box returns the location of the file referenced by the shortcut; otherwise, `false`. The default value is `true`.'\n  overload: System.Windows.Forms.FileDialog.DereferenceLinks*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.EventFileOk\n  commentId: F:System.Windows.Forms.FileDialog.EventFileOk\n  id: EventFileOk\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: EventFileOk\n  nameWithType: FileDialog.EventFileOk\n  fullName: FileDialog.EventFileOk\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Owns the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event.\n  syntax:\n    content: protected static readonly object EventFileOk;\n    return:\n      type: System.Object\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.FileName\n  commentId: P:System.Windows.Forms.FileDialog.FileName\n  id: FileName\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a string containing the file name selected in the file dialog box.\n  remarks: \"The file name includes both the file path and the extension. If no files are selected, this method returns an empty string (\\\"\\\").  \\n  \\n When used from the <xref:System.Windows.Forms.SaveFileDialog> class, this property represents the file being saved; when used from the <xref:System.Windows.Forms.OpenFileDialog> class, it represents the file being opened.  \\n  \\n This property can only be the name of one selected file. If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <xref:System.Windows.Forms.FileDialog.FileNames%2A>.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \\n  \\n This is a complete example that is ready to run when you copy it to your project.  \\n  \\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]\"\n  syntax:\n    content: public string FileName { get; set; }\n    return:\n      type: System.String\n      description: The file name selected in the file dialog box. The default value is an empty string (\"\").\n  overload: System.Windows.Forms.FileDialog.FileName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.FileNames\n  commentId: P:System.Windows.Forms.FileDialog.FileNames\n  id: FileNames\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the file names of all selected files in the dialog box.\n  remarks: Each file name includes both the file path and the extension. If no files are selected, this method returns an empty array.\n  example:\n  - \"The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \\n  \\n [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]\\n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string[] FileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of type <xref href=\"System.String\"></xref>, containing the file names of all selected files in the dialog box.\n  overload: System.Windows.Forms.FileDialog.FileNames*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.FileOk\n  commentId: E:System.Windows.Forms.FileDialog.FileOk\n  id: FileOk\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks on the **Open** or **Save** button on a file dialog box.\n  remarks: For information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property, handling the <xref:System.Windows.Forms.FileDialog.FileOk> event and using the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method. When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog> object. The selected files are displayed in the form. The <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method forces a repaint of the form for each graphics file opened. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method. When the example is running, display the dialog box by clicking the button.  \\n  \\n [!code-cpp[System.Windows.Forms.FileDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FileDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#1)]\\n [!code-vb[System.Windows.Forms.FileDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#1)]\"\n  syntax:\n    content: public event System.ComponentModel.CancelEventHandler FileOk;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.Filter\n  commentId: P:System.Windows.Forms.FileDialog.Filter\n  id: Filter\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current file name filter string, which determines the choices that appear in the \"Save as file type\" or \"Files of type\" box in the dialog box.\n  remarks: \"For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  \\n  \\n The following is an example of a filter string:  \\n  \\n `Text files (*.txt)|*.txt|All files (*.*)|*.*`  \\n  \\n You can add several filter patterns to a filter by separating the file types with semicolons, for example:  \\n  \\n `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*`  \\n  \\n Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string Filter { get; set; }\n    return:\n      type: System.String\n      description: The file filtering options available in the dialog box.\n  overload: System.Windows.Forms.FileDialog.Filter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>Filter</code> format is invalid.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.FilterIndex\n  commentId: P:System.Windows.Forms.FileDialog.FilterIndex\n  id: FilterIndex\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the index of the filter currently selected in the file dialog box.\n  remarks: \"Use the <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> property to set which filtering option is shown first to the user. You can also use the value of <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> after showing the file dialog to perform special file operations depending upon the filter chosen.  \\n  \\n> [!NOTE]\\n>  The index value of the first filter entry is 1.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int FilterIndex { get; set; }\n    return:\n      type: System.Int32\n      description: A value containing the index of the filter currently selected in the file dialog box. The default value is 1.\n  overload: System.Windows.Forms.FileDialog.FilterIndex*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  commentId: M:System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.\n  remarks: \"A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.  \\n  \\n By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.\"\n  syntax:\n    content: protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);\n    parameters:\n    - id: hWnd\n      type: System.IntPtr\n      description: The handle to the dialog box window.\n    - id: msg\n      type: System.Int32\n      description: The message received by the dialog box.\n    - id: wparam\n      type: System.IntPtr\n      description: Additional information about the message.\n    - id: lparam\n      type: System.IntPtr\n      description: Additional information about the message.\n    return:\n      type: System.IntPtr\n      description: Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.\n  overload: System.Windows.Forms.FileDialog.HookProc*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.InitialDirectory\n  commentId: P:System.Windows.Forms.FileDialog.InitialDirectory\n  id: InitialDirectory\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the initial directory displayed by the file dialog box.\n  remarks: \"The <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property is typically set using one of the following sources:  \\n  \\n-   A path that was previously used in the program, perhaps retained from the last directory or file operation.  \\n  \\n-   A path read from a persistent source, such as an application setting, a <xref:Microsoft.Win32.Registry> or a string resource in the application.  \\n  \\n-   Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <xref:System.Environment.GetFolderPath%2A> method)  \\n  \\n-   A path related to the current application, such as its startup directory (which you can obtain using properties on the <xref:System.Windows.Forms.Application> object).  \\n  \\n For more information about creating dynamic paths, see the <xref:System.Windows.Forms.FileDialog> class overview.  \\n  \\n On [!INCLUDE[wiprlhext](~/includes/wiprlhext-md.md)], if <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A> property to set what the initial directory is when the dialog box is displayed to the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string InitialDirectory { get; set; }\n    return:\n      type: System.String\n      description: The initial directory displayed by the file dialog box. The default is an empty string (\"\").\n  overload: System.Windows.Forms.FileDialog.InitialDirectory*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.Instance\n  commentId: P:System.Windows.Forms.FileDialog.Instance\n  id: Instance\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: Instance\n  nameWithType: FileDialog.Instance\n  fullName: FileDialog.Instance\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the Win32 instance handle for the application.\n  syntax:\n    content: protected virtual IntPtr Instance { get; }\n    return:\n      type: System.IntPtr\n      description: A Win32 instance handle for the application.\n  overload: System.Windows.Forms.FileDialog.Instance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  commentId: M:System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  id: OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.FileDialog.FileOk\"></xref> event.\n  syntax:\n    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.FileDialog.OnFileOk*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.Options\n  commentId: P:System.Windows.Forms.FileDialog.Options\n  id: Options\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets values to initialize the <xref href=\"System.Windows.Forms.FileDialog\"></xref>.\n  remarks: The <xref:System.Windows.Forms.FileDialog.Options%2A> property corresponds to the flags used to initialize a file dialog box using Win32. Use the properties of the <xref:System.Windows.Forms.FileDialog> class to get and set the options.\n  syntax:\n    content: protected int Options { get; }\n    return:\n      type: System.Int32\n      description: A bitwise combination of internal values that initializes the <xref href=\"System.Windows.Forms.FileDialog\"></xref>.\n  overload: System.Windows.Forms.FileDialog.Options*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.Reset\n  commentId: M:System.Windows.Forms.FileDialog.Reset\n  id: Reset\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: FileDialog.Reset()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets all properties to their default values.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: System.Windows.Forms.FileDialog.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.RestoreDirectory\n  commentId: P:System.Windows.Forms.FileDialog.RestoreDirectory\n  id: RestoreDirectory\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A> property to ensure that the previously selected directory is restored when the dialog box is closed. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool RestoreDirectory { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.FileDialog.RestoreDirectory*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  commentId: M:System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  id: RunDialog(System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies a common dialog box.\n  remarks: \"This method provides an implementation of <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, and is invoked when the user of a file dialog invokes <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.  \\n  \\n In the derived classes <xref:System.Windows.Forms.OpenFileDialog> and <xref:System.Windows.Forms.SaveFileDialog> an invalid file name <xref:System.Exception> can be raised.\"\n  syntax:\n    content: protected override bool RunDialog (IntPtr hWndOwner);\n    parameters:\n    - id: hWndOwner\n      type: System.IntPtr\n      description: A value that represents the window handle of the owner window for the common dialog box.\n    return:\n      type: System.Boolean\n      description: '`true` if the file could be opened; otherwise, `false`.'\n  overload: System.Windows.Forms.FileDialog.RunDialog*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.ShowHelp\n  commentId: P:System.Windows.Forms.FileDialog.ShowHelp\n  id: ShowHelp\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: ShowHelp\n  nameWithType: FileDialog.ShowHelp\n  fullName: FileDialog.ShowHelp\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the **Help** button is displayed in the file dialog box.\n  remarks: A <xref:System.Windows.Forms.Control.HelpRequested> event is raised when the user clicks the **Help** button.\n  syntax:\n    content: public bool ShowHelp { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box includes a help button; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.FileDialog.ShowHelp*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  commentId: P:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  id: SupportMultiDottedExtensions\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: SupportMultiDottedExtensions\n  nameWithType: FileDialog.SupportMultiDottedExtensions\n  fullName: FileDialog.SupportMultiDottedExtensions\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.\n  remarks: \"Sometimes users must open and save files that use multiple file name extensions. For example, the application manifest files used by the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment technology end in the complex file name extension \\\".exe.manifest\\\". Setting this property to `true` enables you to set the <xref:System.Windows.Forms.FileDialog.Filter%2A> property to a multi-dotted extension.  \\n  \\n If <xref:System.Windows.Forms.FileDialog.SupportMultiDottedExtensions%2A> is `false`, and you assign a multi-dotted extension to <xref:System.Windows.Forms.FileDialog.Filter%2A>, derived controls such as <xref:System.Windows.Forms.SaveFileDialog> will only use the last extension in the string. For example, \\\".manifest\\\" will be used instead of \\\".exe.manifest\\\".\"\n  example:\n  - \"The following code example saves files with the extension \\\".data.txt\\\". This code example requires that your application host a <xref:System.Windows.Forms.SaveFileDialog> named `saveFileDialog1` and a <xref:System.Windows.Forms.Button> named `button1`.  \\n  \\n [!code-csharp[SupportMultiDottedExtensions#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SupportMultiDottedExtensions/CS/Form1.cs#1)]\\n [!code-vb[SupportMultiDottedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SupportMultiDottedExtensions/VB/Form1.vb#1)]\"\n  syntax:\n    content: public bool SupportMultiDottedExtensions { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box supports multiple file name extensions; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.FileDialog.Title\n  commentId: P:System.Windows.Forms.FileDialog.Title\n  id: Title\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the file dialog box title.\n  remarks: The string is placed in the title bar of the dialog box. If the title is an empty string, the system uses a default title, which is either \"Save As\" or \"Open\".\n  example:\n  - \"The following code example demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=fullName> property to true. To run this example, paste the following code in a form containing an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1` and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializeOpenFileDialog` method in the form's constructor or `Load` method. The example also requires that the `Click` event of the `Button` control is connected to the event handler defined in the example.  \\n  \\n [!code-cpp[System.Windows.Forms.FileDialog#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#6)]\\n [!code-csharp[System.Windows.Forms.FileDialog#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#6)]\\n [!code-vb[System.Windows.Forms.FileDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#6)]\"\n  syntax:\n    content: public string Title { get; set; }\n    return:\n      type: System.String\n      description: The file dialog box title. The default value is an empty string (\"\").\n  overload: System.Windows.Forms.FileDialog.Title*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.ToString\n  commentId: M:System.Windows.Forms.FileDialog.ToString\n  id: ToString\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides a string version of this object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string version of this object.\n  overload: System.Windows.Forms.FileDialog.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.FileDialog.ValidateNames\n  commentId: P:System.Windows.Forms.FileDialog.ValidateNames\n  id: ValidateNames\n  parent: System.Windows.Forms.FileDialog\n  langs:\n  - csharp\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.\n  remarks: If the edit control contains anything but spaces when the user clicks **OK**, the dialog box returns the file name, whether it is valid or not. No default extension is added to the text.\n  syntax:\n    content: public bool ValidateNames { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box accepts only valid Win32 file names; otherwise, `false`. The default value is `true`.'\n  overload: System.Windows.Forms.FileDialog.ValidateNames*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Forms.CommonDialog\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CommonDialog\n  nameWithType: CommonDialog\n  fullName: System.Windows.Forms.CommonDialog\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Forms.FileDialog.AddExtension\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AutoUpgradeEnabled\n  nameWithType: FileDialog.AutoUpgradeEnabled\n  fullName: FileDialog.AutoUpgradeEnabled\n- uid: System.Windows.Forms.FileDialog.CheckFileExists\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n- uid: System.Windows.Forms.FileDialog.CheckPathExists\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n- uid: System.Windows.Forms.FileDialog.CustomPlaces\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n- uid: System.Windows.Forms.FileDialogCustomPlacesCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FileDialogCustomPlacesCollection\n  nameWithType: FileDialogCustomPlacesCollection\n  fullName: System.Windows.Forms.FileDialogCustomPlacesCollection\n- uid: System.Windows.Forms.FileDialog.DefaultExt\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.FileDialog.DereferenceLinks\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n- uid: System.Windows.Forms.FileDialog.EventFileOk\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: EventFileOk\n  nameWithType: FileDialog.EventFileOk\n  fullName: FileDialog.EventFileOk\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.FileDialog.FileName\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n- uid: System.Windows.Forms.FileDialog.FileNames\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.FileDialog.FileOk\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n- uid: System.ComponentModel.CancelEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventHandler\n  nameWithType: CancelEventHandler\n  fullName: System.ComponentModel.CancelEventHandler\n- uid: System.Windows.Forms.FileDialog.Filter\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n- uid: System.Windows.Forms.FileDialog.FilterIndex\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Forms.FileDialog.InitialDirectory\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n- uid: System.Windows.Forms.FileDialog.Instance\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Instance\n  nameWithType: FileDialog.Instance\n  fullName: FileDialog.Instance\n- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.FileDialog.Options\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n- uid: System.Windows.Forms.FileDialog.Reset\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: FileDialog.Reset()\n- uid: System.Windows.Forms.FileDialog.RestoreDirectory\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n- uid: System.Windows.Forms.FileDialog.ShowHelp\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ShowHelp\n  nameWithType: FileDialog.ShowHelp\n  fullName: FileDialog.ShowHelp\n- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: SupportMultiDottedExtensions\n  nameWithType: FileDialog.SupportMultiDottedExtensions\n  fullName: FileDialog.SupportMultiDottedExtensions\n- uid: System.Windows.Forms.FileDialog.Title\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n- uid: System.Windows.Forms.FileDialog.ToString\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n- uid: System.Windows.Forms.FileDialog.ValidateNames\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n- uid: System.Windows.Forms.FileDialog.AddExtension*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AutoUpgradeEnabled\n  nameWithType: FileDialog.AutoUpgradeEnabled\n  fullName: FileDialog.AutoUpgradeEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.CheckFileExists*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.CheckPathExists*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.CustomPlaces*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.DefaultExt*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.DereferenceLinks*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.FileName*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.FileNames*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.Filter*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.FilterIndex*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.HookProc*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: HookProc\n  nameWithType: FileDialog.HookProc\n  fullName: FileDialog.HookProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.InitialDirectory*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.Instance*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Instance\n  nameWithType: FileDialog.Instance\n  fullName: FileDialog.Instance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.OnFileOk*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: OnFileOk\n  nameWithType: FileDialog.OnFileOk\n  fullName: FileDialog.OnFileOk\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.Options*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.Reset*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: FileDialog.Reset\n  fullName: FileDialog.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.RestoreDirectory*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.RunDialog*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RunDialog\n  nameWithType: FileDialog.RunDialog\n  fullName: FileDialog.RunDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.ShowHelp*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ShowHelp\n  nameWithType: FileDialog.ShowHelp\n  fullName: FileDialog.ShowHelp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: SupportMultiDottedExtensions\n  nameWithType: FileDialog.SupportMultiDottedExtensions\n  fullName: FileDialog.SupportMultiDottedExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.Title*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.ToString*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ToString\n  nameWithType: FileDialog.ToString\n  fullName: FileDialog.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Windows.Forms.FileDialog.ValidateNames*\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/FileDialog.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Windows.Forms.CommonDialog.HelpRequest\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: HelpRequest\n  nameWithType: CommonDialog.HelpRequest\n  fullName: CommonDialog.HelpRequest\n- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OnHelpRequest(EventArgs)\n  nameWithType: CommonDialog.OnHelpRequest(EventArgs)\n  fullName: CommonDialog.OnHelpRequest(EventArgs)\n- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: CommonDialog.OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: CommonDialog.OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: System.Windows.Forms.CommonDialog.ShowDialog\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: CommonDialog.ShowDialog()\n- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog(IWin32Window)\n  nameWithType: CommonDialog.ShowDialog(IWin32Window)\n  fullName: CommonDialog.ShowDialog(IWin32Window)\n- uid: System.Windows.Forms.CommonDialog.Tag\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: CommonDialog.Tag\n"}