{"nodes":[{"content":"Enumerates the elements in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,100],"content":"Enumerates the elements in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Enumerates the elements in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[607,708],"yaml":true},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  \n  \n <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.  \n  \n If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`. If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"pos":[0,109],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.","pos":[0,109]}]},{"pos":[116,556],"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.","pos":[0,440],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"At this position, the return value of <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.","pos":[84,202],"source":" At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.","pos":[203,440],"source":" Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>."}]}]},{"pos":[563,913],"content":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.","nodes":[{"content":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.","pos":[0,350],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.","pos":[0,172],"source":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.","pos":[173,350],"source":" <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element."}]}]},{"pos":[920,1528],"content":"If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`. If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,257],"source":"If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[258,404],"source":" When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, the return value of <ph id=\"ph3\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.","pos":[405,608],"source":" If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined."}]},{"pos":[1535,1770],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]}],"pos":[719,2500],"yaml":true,"extradata":"MT"},{"content":"The type of objects being enumerated.","nodes":[{"pos":[0,37],"content":"The type of objects being enumerated.","nodes":[{"content":"The type of objects being enumerated.","pos":[0,37]}]}],"pos":[2630,2668],"yaml":true},{"content":"Returns the object in the collection at the current position of the enumerator.","nodes":[{"pos":[0,79],"content":"Returns the object in the collection at the current position of the enumerator.","nodes":[{"content":"Returns the object in the collection at the current position of the enumerator.","pos":[0,79]}]}],"pos":[3694,3774],"yaml":true},{"content":"The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:  \n  \n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  \n  \n-   The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.  \n  \n-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.  \n  \n <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.","nodes":[{"pos":[0,138],"content":"The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:","nodes":[{"content":"The return value of <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:","pos":[0,138],"source":"The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:"}]},{"pos":[148,574],"content":"The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.","nodes":[{"content":"The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.","pos":[0,426],"nodes":[{"content":"The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.","pos":[0,198],"source":"The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.","pos":[199,426],"source":" <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>."}]}]},{"pos":[584,726],"content":"The last call to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, which indicates the end of the collection.","source":"The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection."},{"pos":[736,853],"content":"The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.","nodes":[{"content":"The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.","pos":[0,117]}]},{"pos":[860,1210],"content":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.","nodes":[{"content":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.","pos":[0,350],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.","pos":[0,172],"source":"<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.","pos":[173,350],"source":" <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element."}]}]}],"pos":[3785,5006],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> in the collection at the current position of the enumerator.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> in the collection at the current position of the enumerator.","source":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> in the collection at the current position of the enumerator."}],"pos":[5117,5235],"yaml":true},{"content":"Advances the enumerator to the next element of the collection.","nodes":[{"pos":[0,62],"content":"Advances the enumerator to the next element of the collection.","nodes":[{"content":"Advances the enumerator to the next element of the collection.","pos":[0,62]}]}],"pos":[6297,6360],"yaml":true},{"content":"After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.  \n  \n If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,350],"content":"After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.","nodes":[{"content":"After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.","pos":[0,350],"nodes":[{"content":"After an enumerator is created or after the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.","pos":[0,195],"source":"After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection."},{"content":"The first call to the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.","pos":[196,350],"source":" The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection."}]}]},{"pos":[357,839],"content":"If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,257],"source":"If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph> until <ph id=\"ph3\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.","pos":[258,482],"source":" When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called."}]},{"pos":[846,1252],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","pos":[0,406],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[73,406],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>."}]}]}],"pos":[6371,7630],"yaml":true,"extradata":"MT"},{"content":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id=\"ph2\">`false`</ph> if the enumerator has passed the end of the collection.","source":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection."}],"pos":[7755,7893],"yaml":true},{"content":"The collection was modified after the enumerator was created.","nodes":[{"pos":[0,61],"content":"The collection was modified after the enumerator was created.","nodes":[{"content":"The collection was modified after the enumerator was created.","pos":[0,61]}]}],"pos":[8083,8145],"yaml":true},{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"pos":[0,97],"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","pos":[0,97]}]}],"pos":[9104,9202],"yaml":true},{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,406],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.","pos":[0,406],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[73,406],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>."}]}]}],"pos":[9213,9620],"yaml":true,"extradata":"MT"},{"content":"The collection was modified after the enumerator was created.","nodes":[{"pos":[0,61],"content":"The collection was modified after the enumerator was created.","nodes":[{"content":"The collection was modified after the enumerator was created.","pos":[0,61]}]}],"pos":[9871,9933],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.IEnumeratorContract`1\n  commentId: T:System.AddIn.Contract.IEnumeratorContract`1\n  id: IEnumeratorContract`1\n  children:\n  - System.AddIn.Contract.IEnumeratorContract`1.GetCurrent\n  - System.AddIn.Contract.IEnumeratorContract`1.MoveNext\n  - System.AddIn.Contract.IEnumeratorContract`1.Reset\n  langs:\n  - csharp\n  name: IEnumeratorContract<T>\n  nameWithType: IEnumeratorContract<T>\n  fullName: System.AddIn.Contract.IEnumeratorContract<T>\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Enumerates the elements in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: \"Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  \\n  \\n <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.  \\n  \\n If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`. If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.\"\n  syntax:\n    content: 'public interface IEnumeratorContract<T> : IDisposable'\n    typeParameters:\n    - id: T\n      description: The type of objects being enumerated.\n  implements:\n  - System.IDisposable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IEnumeratorContract`1.GetCurrent\n  commentId: M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent\n  id: GetCurrent\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: GetCurrent()\n  nameWithType: IEnumeratorContract<T>.GetCurrent()\n  fullName: IEnumeratorContract<T>.GetCurrent()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns the object in the collection at the current position of the enumerator.\n  remarks: \"The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:  \\n  \\n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  \\n  \\n-   The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.  \\n  \\n-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.  \\n  \\n <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.\"\n  syntax:\n    content: public T GetCurrent ();\n    parameters: []\n    return:\n      type: T\n      description: The <xref href=\"System.AddIn.Contract.IContract\"></xref> in the collection at the current position of the enumerator.\n  overload: System.AddIn.Contract.IEnumeratorContract`1.GetCurrent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IEnumeratorContract`1.MoveNext\n  commentId: M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext\n  id: MoveNext\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: IEnumeratorContract<T>.MoveNext()\n  fullName: IEnumeratorContract<T>.MoveNext()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Advances the enumerator to the next element of the collection.\n  remarks: \"After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.  \\n  \\n If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.\"\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'\n  overload: System.AddIn.Contract.IEnumeratorContract`1.MoveNext*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection was modified after the enumerator was created.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IEnumeratorContract`1.Reset\n  commentId: M:System.AddIn.Contract.IEnumeratorContract`1.Reset\n  id: Reset\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: IEnumeratorContract<T>.Reset()\n  fullName: IEnumeratorContract<T>.Reset()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Sets the enumerator to its initial position, which is before the first element in the collection.\n  remarks: An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.AddIn.Contract.IEnumeratorContract`1.Reset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection was modified after the enumerator was created.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.AddIn.Contract.IEnumeratorContract`1.GetCurrent\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: GetCurrent()\n  nameWithType: IEnumeratorContract<T>.GetCurrent()\n  fullName: IEnumeratorContract<T>.GetCurrent()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IEnumeratorContract`1.MoveNext\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: MoveNext()\n  nameWithType: IEnumeratorContract<T>.MoveNext()\n  fullName: IEnumeratorContract<T>.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.IEnumeratorContract`1.Reset\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: Reset()\n  nameWithType: IEnumeratorContract<T>.Reset()\n  fullName: IEnumeratorContract<T>.Reset()\n- uid: System.AddIn.Contract.IEnumeratorContract`1.GetCurrent*\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: GetCurrent\n  nameWithType: IEnumeratorContract<T>.GetCurrent\n  fullName: IEnumeratorContract<T>.GetCurrent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n- uid: System.AddIn.Contract.IEnumeratorContract`1.MoveNext*\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: MoveNext\n  nameWithType: IEnumeratorContract<T>.MoveNext\n  fullName: IEnumeratorContract<T>.MoveNext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n- uid: System.AddIn.Contract.IEnumeratorContract`1.Reset*\n  parent: System.AddIn.Contract.IEnumeratorContract`1\n  isExternal: false\n  name: Reset\n  nameWithType: IEnumeratorContract<T>.Reset\n  fullName: IEnumeratorContract<T>.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IEnumeratorContract`1.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}