{"nodes":[{"content":"Defines a workflow communication activity that is used to handle an event that is raised by a local service.","nodes":[{"pos":[0,108],"content":"Defines a workflow communication activity that is used to handle an event that is raised by a local service.","nodes":[{"content":"Defines a workflow communication activity that is used to handle an event that is raised by a local service.","pos":[0,108]}]}],"pos":[3508,3617],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.  \n  \n The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.  \n  \n The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.  \n  \n Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,335],"content":"A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.","nodes":[{"content":"A local service is a class that implements a local service interface (an interface that is marked with <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;</ph>) and is added to the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph>.","pos":[0,250],"source":"A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>."}]},{"pos":[342,602],"content":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> receives data when the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> service raises an event with event data derived from <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.ExternalDataEventArgs&gt;</ph>.","pos":[0,260],"source":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>."}]},{"pos":[609,698],"content":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> is a blocking activity.","pos":[0,89],"source":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity."}]},{"pos":[705,945],"content":"Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.","nodes":[{"content":"Classes that derive from <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> should not implement the <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;</ph> interface because the derived class does not execute correctly.","pos":[0,240],"source":"Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly."}]}],"pos":[3628,4585],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class."}],"pos":[13261,13378],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class using the name of the activity.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> class using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class using the name of the activity."}],"pos":[15323,15471],"yaml":true},{"content":"The user-defined name of the activity.","nodes":[{"pos":[0,38],"content":"The user-defined name of the activity.","nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"pos":[15620,15659],"yaml":true},{"content":"Cancels the handling of the event.","nodes":[{"pos":[0,34],"content":"Cancels the handling of the event.","nodes":[{"content":"Cancels the handling of the event.","pos":[0,34]}]}],"pos":[16980,17015],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,191],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> that represents the execution environment of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[17332,17524],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation.","nodes":[{"pos":[0,202],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> at the end of the requested operation.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation."}],"pos":[17622,17825],"yaml":true},{"content":"Gets or sets the binding to a <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets or sets the binding to a <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.CorrelationToken\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the binding to a <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref>."}],"pos":[18960,19053],"yaml":true},{"content":"This property is used to correlate an event to the correct <xref href=\"System.Workflow.Activities.IEventActivity\"></xref>-inherited activity based on the payload of the event. For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the `CorrelationToken` property is used to route the event to the proper activity in that workflow instance.  \n  \n This correlation should not be confused with correlating an event to the correct workflow instance. The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <xref href=\"System.Workflow.Activities.ExternalDataEventArgs.InstanceId\"></xref> property to properly identify the correct workflow instance.  \n  \n [!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).","nodes":[{"pos":[0,401],"content":"This property is used to correlate an event to the correct <xref href=\"System.Workflow.Activities.IEventActivity\"></xref>-inherited activity based on the payload of the event. For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the `CorrelationToken` property is used to route the event to the proper activity in that workflow instance.","nodes":[{"content":"This property is used to correlate an event to the correct <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.IEventActivity\"&gt;&lt;/xref&gt;</ph>-inherited activity based on the payload of the event.","pos":[0,175],"source":"This property is used to correlate an event to the correct <xref href=\"System.Workflow.Activities.IEventActivity\"></xref>-inherited activity based on the payload of the event."},{"content":"For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the <ph id=\"ph1\">`CorrelationToken`</ph> property is used to route the event to the proper activity in that workflow instance.","pos":[176,401],"source":" For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the `CorrelationToken` property is used to route the event to the proper activity in that workflow instance."}]},{"pos":[408,774],"content":"This correlation should not be confused with correlating an event to the correct workflow instance. The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <xref href=\"System.Workflow.Activities.ExternalDataEventArgs.InstanceId\"></xref> property to properly identify the correct workflow instance.","nodes":[{"content":"This correlation should not be confused with correlating an event to the correct workflow instance.","pos":[0,99]},{"content":"The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataEventArgs.InstanceId\"&gt;&lt;/xref&gt;</ph> property to properly identify the correct workflow instance.","pos":[100,366],"source":" The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <xref href=\"System.Workflow.Activities.ExternalDataEventArgs.InstanceId\"></xref> property to properly identify the correct workflow instance."}]},{"pos":[781,956],"content":"<ph id=\"ph1\">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> correlation, see the <bpt id=\"p1\">[</bpt>Correlated Local Service Sample<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)</ept>.","source":"[!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)."}],"pos":[20005,20972],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\"></xref> property.","nodes":[{"pos":[0,205],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\"></xref> property."}],"pos":[22231,22437],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[22448,22530],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the raised event. This property must be set before local communication can occur.","nodes":[{"pos":[0,98],"content":"Gets the name of the raised event. This property must be set before local communication can occur.","nodes":[{"content":"Gets the name of the raised event. This property must be set before local communication can occur.","pos":[0,98],"nodes":[{"content":"Gets the name of the raised event.","pos":[0,34]},{"content":"This property must be set before local communication can occur.","pos":[35,98]}]}]}],"pos":[23766,23865],"yaml":true},{"content":"The name of the raised event.","nodes":[{"pos":[0,29],"content":"The name of the raised event.","nodes":[{"content":"The name of the raised event.","pos":[0,29]}]}],"pos":[24780,24810],"yaml":true},{"content":"Corresponds to the name of an event that is defined in an interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.","nodes":[{"pos":[0,171],"content":"Corresponds to the name of an event that is defined in an interface that was marked with the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Corresponds to the name of an event that is defined in an interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."}],"pos":[26020,26192],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[26203,26285],"yaml":true,"extradata":"MT"},{"content":"Tries to run the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.","nodes":[{"pos":[0,190],"content":"Tries to run the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph>.","source":"Tries to run the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."}],"pos":[27749,27940],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref>.","nodes":[{"pos":[0,177],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref>."}],"pos":[28258,28436],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation.","nodes":[{"pos":[0,202],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> at the end of the requested operation.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation."}],"pos":[28534,28737],"yaml":true},{"content":"Called when an exception is raised within the context of the execution of this instance.","nodes":[{"pos":[0,88],"content":"Called when an exception is raised within the context of the execution of this instance.","nodes":[{"content":"Called when an exception is raised within the context of the execution of this instance.","pos":[0,88]}]}],"pos":[30174,30263],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> for this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance."}],"pos":[30606,30706],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that caused this fault.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that caused this fault.","source":"The <xref href=\"System.Exception\"></xref> that caused this fault."}],"pos":[30774,30840],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;&lt;/xref&gt;</ph> that results from an attempt to cancel this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance."}],"pos":[30938,31072],"yaml":true},{"content":"<code>exception</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;exception&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>exception</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[31268,31340],"yaml":true},{"content":"Initializes the event with the service provider.","nodes":[{"pos":[0,48],"content":"Initializes the event with the service provider.","nodes":[{"content":"Initializes the event with the service provider.","pos":[0,48]}]}],"pos":[32474,32523],"yaml":true},{"content":"The <xref href=\"System.IServiceProvider\"></xref> that provides custom support to the class.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> that provides custom support to the class.","source":"The <xref href=\"System.IServiceProvider\"></xref> that provides custom support to the class."}],"pos":[32707,32799],"yaml":true},{"content":"<code>provider</code> is a null reference (`Nothing` in Visual Basic), the type of the service provider is a null reference (`Nothing`), or the proxy for the service provider is a null reference (`Nothing`).","nodes":[{"pos":[0,207],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), the type of the service provider is a null reference (<ph id=\"ph3\">`Nothing`</ph>), or the proxy for the service provider is a null reference (<ph id=\"ph4\">`Nothing`</ph>).","source":"<code>provider</code> is a null reference (`Nothing` in Visual Basic), the type of the service provider is a null reference (`Nothing`), or the proxy for the service provider is a null reference (`Nothing`)."}],"pos":[32994,33202],"yaml":true},{"content":"Performs initialization on dependency properties.","nodes":[{"pos":[0,49],"content":"Performs initialization on dependency properties.","nodes":[{"content":"Performs initialization on dependency properties.","pos":[0,49]}]}],"pos":[34273,34323],"yaml":true},{"content":"This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.","nodes":[{"pos":[0,576],"content":"This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.","nodes":[{"content":"This method initializes the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A&gt;</ph> property, verifies the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A&gt;</ph> properties are set and verifies that the event referenced in the <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A&gt;</ph> property can be found in the interface referenced in the <ph id=\"ph5\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A&gt;</ph> property.","pos":[0,576],"source":"This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property."}]}],"pos":[34334,34911],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref> attributed interface type of the local service whose event is handled. This property must be set before local communication can occur.","nodes":[{"pos":[0,229],"content":"Gets or sets the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref> attributed interface type of the local service whose event is handled. This property must be set before local communication can occur.","nodes":[{"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;&lt;/xref&gt;</ph> attributed interface type of the local service whose event is handled.","pos":[0,165],"source":"Gets or sets the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref> attributed interface type of the local service whose event is handled."},{"content":"This property must be set before local communication can occur.","pos":[166,229]}]}],"pos":[36133,36363],"yaml":true},{"content":"The interface type of the local service whose event is handled.","nodes":[{"pos":[0,63],"content":"The interface type of the local service whose event is handled.","nodes":[{"content":"The interface type of the local service whose event is handled.","pos":[0,63]}]}],"pos":[37305,37369],"yaml":true},{"content":"Corresponds to the name of the interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.","nodes":[{"pos":[0,144],"content":"Corresponds to the name of the interface that was marked with the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Corresponds to the name of the interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."}],"pos":[38628,38773],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[38784,38866],"yaml":true,"extradata":"MT"},{"content":"Occurs when the external event is received.","nodes":[{"pos":[0,43],"content":"Occurs when the external event is received.","nodes":[{"content":"Occurs when the external event is received.","pos":[0,43]}]}],"pos":[40084,40128],"yaml":true},{"content":"Defines an event delegate that is executed after the activity receives the expected event from the local service.","nodes":[{"pos":[0,113],"content":"Defines an event delegate that is executed after the activity receives the expected event from the local service.","nodes":[{"content":"Defines an event delegate that is executed after the activity receives the expected event from the local service.","pos":[0,113]}]}],"pos":[42059,42173],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[42184,42266],"yaml":true,"extradata":"MT"},{"content":"Called by the workflow runtime as part of the activity's transition to the `Closed` state.","nodes":[{"pos":[0,90],"content":"Called by the workflow runtime as part of the activity's transition to the <ph id=\"ph1\">`Closed`</ph> state.","source":"Called by the workflow runtime as part of the activity's transition to the `Closed` state."}],"pos":[43611,43702],"yaml":true},{"content":"This method provides the activity with an opportunity to clean up resources utilized during its execution.","nodes":[{"pos":[0,106],"content":"This method provides the activity with an opportunity to clean up resources utilized during its execution.","nodes":[{"content":"This method provides the activity with an opportunity to clean up resources utilized during its execution.","pos":[0,106]}]}],"pos":[43713,43820],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IServiceProvider\"></xref> that provides the service.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> that provides the service.","source":"The <xref href=\"System.IServiceProvider\"></xref> that provides the service."}],"pos":[43995,44071],"yaml":true},{"content":"Called just after the external event is received to allow derived classes to process the inbound <xref href=\"System.EventArgs\"></xref> before the activity closes.","nodes":[{"pos":[0,162],"content":"Called just after the external event is received to allow derived classes to process the inbound <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> before the activity closes.","source":"Called just after the external event is received to allow derived classes to process the inbound <xref href=\"System.EventArgs\"></xref> before the activity closes."}],"pos":[45251,45414],"yaml":true},{"content":"The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.","nodes":[{"pos":[0,262],"content":"The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.","nodes":[{"content":"The most common use of the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A&gt;</ph> method in derived classes is to extract members from the received <ph id=\"ph2\">&lt;xref:System.EventArgs&gt;</ph> to set the values of the derived-classed activity's public properties.","pos":[0,262],"source":"The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties."}]}],"pos":[45425,45688],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that are received from the external event that was just received.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that are received from the external event that was just received.","source":"The <xref href=\"System.EventArgs\"></xref> that are received from the external event that was just received."}],"pos":[46396,46504],"yaml":true},{"content":"Gets the collection of parameter bindings.","nodes":[{"pos":[0,42],"content":"Gets the collection of parameter bindings.","nodes":[{"content":"Gets the collection of parameter bindings.","pos":[0,42]}]}],"pos":[47648,47691],"yaml":true},{"content":"The collection of parameter bindings.","nodes":[{"pos":[0,37],"content":"The collection of parameter bindings.","nodes":[{"content":"The collection of parameter bindings.","pos":[0,37]}]}],"pos":[48563,48601],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\"></xref> property.","nodes":[{"pos":[0,206],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\"></xref> property."}],"pos":[49863,50070],"yaml":true},{"content":"Gets or sets a reference to a workflow role collection.","nodes":[{"pos":[0,55],"content":"Gets or sets a reference to a workflow role collection.","nodes":[{"content":"Gets or sets a reference to a workflow role collection.","pos":[0,55]}]}],"pos":[51283,51339],"yaml":true},{"content":"The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.","nodes":[{"pos":[0,211],"content":"The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.WorkflowRoleCollection&gt;</ph> limits the set of users who can send messages to a workflow instance through a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> activity.","pos":[0,211],"source":"The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity."}]}],"pos":[51350,51562],"yaml":true,"extradata":"MT"},{"content":"A collection of a workflow role.","nodes":[{"pos":[0,32],"content":"A collection of a workflow role.","nodes":[{"content":"A collection of a workflow role.","pos":[0,32]}]}],"pos":[52398,52431],"yaml":true},{"content":"Identifies the valid user roles that are allowed to send messages from the host to this activity. The two types of supported roles are Active Directory and ASP.NET.","nodes":[{"pos":[0,164],"content":"Identifies the valid user roles that are allowed to send messages from the host to this activity. The two types of supported roles are Active Directory and ASP.NET.","nodes":[{"content":"Identifies the valid user roles that are allowed to send messages from the host to this activity. The two types of supported roles are Active Directory and ASP.NET.","pos":[0,164],"nodes":[{"content":"Identifies the valid user roles that are allowed to send messages from the host to this activity.","pos":[0,97]},{"content":"The two types of supported roles are Active Directory and ASP.NET.","pos":[98,164]}]}]}],"pos":[53561,53726],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[53737,53819],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.","nodes":[{"pos":[0,132],"content":"Gets the name of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.WorkflowQueue\"&gt;&lt;/xref&gt;</ph> on which the activity is waiting for data to arrive.","source":"Gets the name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive."}],"pos":[55229,55362],"yaml":true},{"content":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.","nodes":[{"pos":[0,127],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.WorkflowQueue\"&gt;&lt;/xref&gt;</ph> on which the activity is waiting for data to arrive.","source":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive."}],"pos":[55520,55648],"yaml":true},{"content":"Creates the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event.","nodes":[{"pos":[0,129],"content":"Creates the subscription of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> activity to an event.","source":"Creates the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event."}],"pos":[57641,57771],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,191],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> that represents the execution environment of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[58145,58337],"yaml":true},{"content":"The <xref href=\"System.EventHandler\"></xref> for the parent event.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventHandler\"&gt;&lt;/xref&gt;</ph> for the parent event.","source":"The <xref href=\"System.EventHandler\"></xref> for the parent event."}],"pos":[58498,58565],"yaml":true},{"content":"Cancels the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event.","nodes":[{"pos":[0,129],"content":"Cancels the subscription of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"&gt;&lt;/xref&gt;</ph> activity to an event.","source":"Cancels the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event."}],"pos":[60570,60700],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the activity.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> that represents the execution environment of the activity.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the activity."}],"pos":[61076,61216],"yaml":true},{"content":"The <xref href=\"System.EventHandler\"></xref> for the parent event.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventHandler\"&gt;&lt;/xref&gt;</ph> for the parent event.","source":"The <xref href=\"System.EventHandler\"></xref> for the parent event."}],"pos":[61377,61444],"yaml":true},{"content":"Defines the processing procedure when the subscribed-to event occurs.","nodes":[{"pos":[0,69],"content":"Defines the processing procedure when the subscribed-to event occurs.","nodes":[{"content":"Defines the processing procedure when the subscribed-to event occurs.","pos":[0,69]}]}],"pos":[63259,63329],"yaml":true},{"content":"The object that raised the event.","nodes":[{"pos":[0,33],"content":"The object that raised the event.","nodes":[{"content":"The object that raised the event.","pos":[0,33]}]}],"pos":[63548,63582],"yaml":true},{"content":"The previously typed event arguments.","nodes":[{"pos":[0,37],"content":"The previously typed event arguments.","nodes":[{"content":"The previously typed event arguments.","pos":[0,37]}]}],"pos":[63671,63709],"yaml":true},{"content":"Returns the access type for the specified property.","nodes":[{"pos":[0,51],"content":"Returns the access type for the specified property.","nodes":[{"content":"Returns the access type for the specified property.","pos":[0,51]}]}],"pos":[65402,65454],"yaml":true},{"content":"Used at compile time to validate whether the properties are correctly bound to one other. Without this interface, this information is inferred directly from property getter/setters.","nodes":[{"pos":[0,181],"content":"Used at compile time to validate whether the properties are correctly bound to one other. Without this interface, this information is inferred directly from property getter/setters.","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one other. Without this interface, this information is inferred directly from property getter/setters.","pos":[0,181],"nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","pos":[0,89]},{"content":"Without this interface, this information is inferred directly from property getter/setters.","pos":[90,181]}]}]}],"pos":[65465,65647],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.","nodes":[{"pos":[0,134],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are required.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required."}],"pos":[65919,66054],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[66122,66148],"yaml":true},{"content":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denote the access level of the property.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"&gt;&lt;/xref&gt;</ph> enumeration value that denote the access level of the property.","source":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denote the access level of the property."}],"pos":[66243,66383],"yaml":true},{"content":"Returns the <xref href=\"System.Type\"></xref> of the specified property.","nodes":[{"pos":[0,71],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the specified property.","source":"Returns the <xref href=\"System.Type\"></xref> of the specified property."}],"pos":[68053,68125],"yaml":true},{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","nodes":[{"pos":[0,89],"content":"Used at compile time to validate whether the properties are correctly bound to one other.","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","pos":[0,89]}]}],"pos":[68136,68226],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.","nodes":[{"pos":[0,134],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are required.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required."}],"pos":[68453,68588],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[68656,68682],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for the property whose name is passed as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter."}],"pos":[68737,68856],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.HandleExternalEventActivity\n  commentId: T:System.Workflow.Activities.HandleExternalEventActivity\n  id: HandleExternalEventActivity\n  children:\n  - System.Workflow.Activities.HandleExternalEventActivity.#ctor\n  - System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)\n  - System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\n  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty\n  - System.Workflow.Activities.HandleExternalEventActivity.EventName\n  - System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty\n  - System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties\n  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceType\n  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty\n  - System.Workflow.Activities.HandleExternalEventActivity.Invoked\n  - System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent\n  - System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)\n  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\n  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty\n  - System.Workflow.Activities.HandleExternalEventActivity.Roles\n  - System.Workflow.Activities.HandleExternalEventActivity.RolesProperty\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  langs:\n  - csharp\n  name: HandleExternalEventActivity\n  nameWithType: HandleExternalEventActivity\n  fullName: System.Workflow.Activities.HandleExternalEventActivity\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Defines a workflow communication activity that is used to handle an event that is raised by a local service.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.  \\n  \\n The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.  \\n  \\n The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.  \\n  \\n Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.\"\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))]\n\n      public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements:\n  - System.Workflow.Activities.IEventActivity\n  - System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.ObsoleteAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: HandleExternalEventActivity()\n  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()\n  fullName: HandleExternalEventActivity.HandleExternalEventActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class. This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: public HandleExternalEventActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: HandleExternalEventActivity(String)\n  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)\n  fullName: HandleExternalEventActivity.HandleExternalEventActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public HandleExternalEventActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)\n  fullName: HandleExternalEventActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Cancels the handling of the event.\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\n  id: CorrelationToken\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: CorrelationToken\n  nameWithType: HandleExternalEventActivity.CorrelationToken\n  fullName: HandleExternalEventActivity.CorrelationToken\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the binding to a <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`. This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-csharp[Wf_samples#198](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#198)]\\n [!code-vb[Wf_samples#198](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#198)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))]\n\n      public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }\n    return:\n      type: System.Workflow.Runtime.CorrelationToken\n      description: \"This property is used to correlate an event to the correct <xref href=\\\"System.Workflow.Activities.IEventActivity\\\"></xref>-inherited activity based on the payload of the event. For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the `CorrelationToken` property is used to route the event to the proper activity in that workflow instance.  \\n  \\n This correlation should not be confused with correlating an event to the correct workflow instance. The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <xref href=\\\"System.Workflow.Activities.ExternalDataEventArgs.InstanceId\\\"></xref> property to properly identify the correct workflow instance.  \\n  \\n [!INCLUDE[crexample](~/includes/crexample-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).\"\n  overload: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty\n  id: CorrelationTokenProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: CorrelationTokenProperty\n  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty\n  fullName: HandleExternalEventActivity.CorrelationTokenProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.EventName\n  id: EventName\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: EventName\n  nameWithType: HandleExternalEventActivity.EventName\n  fullName: HandleExternalEventActivity.EventName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the name of the raised event. This property must be set before local communication can occur.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))]\n\n      public virtual string EventName { get; set; }\n    return:\n      type: System.String\n      description: The name of the raised event.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.EventName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty\n  id: EventNameProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: EventNameProperty\n  nameWithType: HandleExternalEventActivity.EventNameProperty\n  fullName: HandleExternalEventActivity.EventNameProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Corresponds to the name of an event that is defined in an interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)\n  fullName: HandleExternalEventActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Tries to run the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> at the end of the requested operation.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: HandleExternalEventActivity.HandleFault(ActivityExecutionContext, Exception)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Called when an exception is raised within the context of the execution of this instance.\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.\n    - id: exception\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that caused this fault.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>exception</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)\n  fullName: HandleExternalEventActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes the event with the service provider.\n  syntax:\n    content: protected override sealed void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref href=\"System.IServiceProvider\"></xref> that provides custom support to the class.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.Initialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is a null reference (`Nothing` in Visual Basic), the type of the service provider is a null reference (`Nothing`), or the proxy for the service provider is a null reference (`Nothing`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties\n  id: InitializeProperties\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: InitializeProperties()\n  nameWithType: HandleExternalEventActivity.InitializeProperties()\n  fullName: HandleExternalEventActivity.InitializeProperties()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Performs initialization on dependency properties.\n  remarks: This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.\n  syntax:\n    content: protected override void InitializeProperties ();\n    parameters: []\n  overload: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType\n  id: InterfaceType\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: InterfaceType\n  nameWithType: HandleExternalEventActivity.InterfaceType\n  fullName: HandleExternalEventActivity.InterfaceType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref> attributed interface type of the local service whose event is handled. This property must be set before local communication can occur.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: >-\n      [System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))]\n\n      public virtual Type InterfaceType { get; set; }\n    return:\n      type: System.Type\n      description: The interface type of the local service whose event is handled.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*\n  exceptions: []\n  attributes:\n  - type: System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty\n  id: InterfaceTypeProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: InterfaceTypeProperty\n  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty\n  fullName: HandleExternalEventActivity.InterfaceTypeProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Corresponds to the name of the interface that was marked with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked\n  commentId: E:System.Workflow.Activities.HandleExternalEventActivity.Invoked\n  id: Invoked\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: Invoked\n  nameWithType: HandleExternalEventActivity.Invoked\n  fullName: HandleExternalEventActivity.Invoked\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the external event is received.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: public event EventHandler<System.Workflow.Activities.ExternalDataEventArgs> Invoked;\n    return:\n      type: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent\n  id: InvokedEvent\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: InvokedEvent\n  nameWithType: HandleExternalEventActivity.InvokedEvent\n  fullName: HandleExternalEventActivity.InvokedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Defines an event delegate that is executed after the activity receives the expected event from the local service.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)\n  fullName: HandleExternalEventActivity.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Called by the workflow runtime as part of the activity's transition to the `Closed` state.\n  remarks: This method provides the activity with an opportunity to clean up resources utilized during its execution.\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref href=\"System.IServiceProvider\"></xref> that provides the service.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)\n  id: OnInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: OnInvoked(EventArgs)\n  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)\n  fullName: HandleExternalEventActivity.OnInvoked(EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Called just after the external event is received to allow derived classes to process the inbound <xref href=\"System.EventArgs\"></xref> before the activity closes.\n  remarks: The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.\n  example:\n  - \"The following example shows an implementation of the `OnInvoked` method. This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-csharp[Wf_samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]\\n [!code-vb[Wf_samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]\"\n  syntax:\n    content: protected virtual void OnInvoked (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that are received from the external event that was just received.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\n  id: ParameterBindings\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: ParameterBindings\n  nameWithType: HandleExternalEventActivity.ParameterBindings\n  fullName: HandleExternalEventActivity.ParameterBindings\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the collection of parameter bindings.\n  remarks: ''\n  example:\n  - \"The following example shows how to access the `ParameterBindings` property. This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.  [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \\n  \\n [!code-csharp[wf_samples#125](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#125)]\\n [!code-vb[wf_samples#125](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#125)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n      description: The collection of parameter bindings.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty\n  id: ParameterBindingsProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: ParameterBindingsProperty\n  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty\n  fullName: HandleExternalEventActivity.ParameterBindingsProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\"></xref> property.\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.Roles\n  id: Roles\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: Roles\n  nameWithType: HandleExternalEventActivity.Roles\n  fullName: HandleExternalEventActivity.Roles\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets a reference to a workflow role collection.\n  remarks: The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.\n  example:\n  - \"The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \\n  \\n [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]\\n [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]\"\n  syntax:\n    content: public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }\n    return:\n      type: System.Workflow.Activities.WorkflowRoleCollection\n      description: A collection of a workflow role.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.Roles*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty\n  commentId: F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty\n  id: RolesProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: RolesProperty\n  nameWithType: HandleExternalEventActivity.RolesProperty\n  fullName: HandleExternalEventActivity.RolesProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Identifies the valid user roles that are allowed to send messages from the host to this activity. The two types of supported roles are Active Directory and ASP.NET.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName\n  commentId: P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName\n  id: System#Workflow#Activities#IEventActivity#QueueName\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IEventActivity.QueueName\n  nameWithType: HandleExternalEventActivity.IEventActivity.QueueName\n  fullName: HandleExternalEventActivity.IEventActivity.QueueName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.\n  syntax:\n    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }\n    return:\n      type: System.IComparable\n      description: The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  nameWithType: HandleExternalEventActivity.IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  fullName: HandleExternalEventActivity.IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Creates the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event.\n  syntax:\n    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);\n    parameters:\n    - id: parentContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    - id: parentEventHandler\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n      description: The <xref href=\"System.EventHandler\"></xref> for the parent event.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  nameWithType: HandleExternalEventActivity.IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  fullName: HandleExternalEventActivity.IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Cancels the subscription of the <xref href=\"System.Workflow.Activities.HandleExternalEventActivity\"></xref> activity to an event.\n  syntax:\n    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);\n    parameters:\n    - id: parentContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the activity.\n    - id: parentEventHandler\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n      description: The <xref href=\"System.EventHandler\"></xref> for the parent event.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n  nameWithType: HandleExternalEventActivity.IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n  fullName: HandleExternalEventActivity.IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Defines the processing procedure when the subscribed-to event occurs.\n  syntax:\n    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that raised the event.\n    - id: e\n      type: System.Workflow.ComponentModel.QueueEventArgs\n      description: The previously typed event arguments.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the access type for the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one other. Without this interface, this information is inferred directly from property getter/setters.\n  syntax:\n    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Workflow.ComponentModel.Compiler.AccessTypes\n      description: An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denote the access level of the property.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the <xref href=\"System.Type\"></xref> of the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one other.\n  syntax:\n    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.\n  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: HandleExternalEventActivity()\n  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()\n  fullName: HandleExternalEventActivity.HandleExternalEventActivity()\n- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: HandleExternalEventActivity(String)\n  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)\n  fullName: HandleExternalEventActivity.HandleExternalEventActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)\n  fullName: HandleExternalEventActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: HandleExternalEventActivity.CorrelationToken\n  fullName: HandleExternalEventActivity.CorrelationToken\n- uid: System.Workflow.Runtime.CorrelationToken\n  parent: System.Workflow.Runtime\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CorrelationToken\n  fullName: System.Workflow.Runtime.CorrelationToken\n- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: CorrelationTokenProperty\n  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty\n  fullName: HandleExternalEventActivity.CorrelationTokenProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: EventName\n  nameWithType: HandleExternalEventActivity.EventName\n  fullName: HandleExternalEventActivity.EventName\n- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: EventNameProperty\n  nameWithType: HandleExternalEventActivity.EventNameProperty\n  fullName: HandleExternalEventActivity.EventNameProperty\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)\n  fullName: HandleExternalEventActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: HandleExternalEventActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)\n  fullName: HandleExternalEventActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: HandleExternalEventActivity.InitializeProperties()\n  fullName: HandleExternalEventActivity.InitializeProperties()\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: HandleExternalEventActivity.InterfaceType\n  fullName: HandleExternalEventActivity.InterfaceType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InterfaceTypeProperty\n  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty\n  fullName: HandleExternalEventActivity.InterfaceTypeProperty\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Invoked\n  nameWithType: HandleExternalEventActivity.Invoked\n  fullName: HandleExternalEventActivity.Invoked\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Workflow.Activities.ExternalDataEventArgs\n  name: ExternalDataEventArgs\n  nameWithType: ExternalDataEventArgs\n  fullName: System.Workflow.Activities.ExternalDataEventArgs\n- uid: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<ExternalDataEventArgs>\n  nameWithType: EventHandler<ExternalDataEventArgs>\n  fullName: System.EventHandler<System.Workflow.Activities.ExternalDataEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.ExternalDataEventArgs\n    name: ExternalDataEventArgs\n    nameWithType: ExternalDataEventArgs\n    fullName: System.Workflow.Activities.ExternalDataEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InvokedEvent\n  nameWithType: HandleExternalEventActivity.InvokedEvent\n  fullName: HandleExternalEventActivity.InvokedEvent\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)\n  fullName: HandleExternalEventActivity.OnClosed(IServiceProvider)\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: OnInvoked(EventArgs)\n  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)\n  fullName: HandleExternalEventActivity.OnInvoked(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: HandleExternalEventActivity.ParameterBindings\n  fullName: HandleExternalEventActivity.ParameterBindings\n- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowParameterBindingCollection\n  nameWithType: WorkflowParameterBindingCollection\n  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: ParameterBindingsProperty\n  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty\n  fullName: HandleExternalEventActivity.ParameterBindingsProperty\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Roles\n  nameWithType: HandleExternalEventActivity.Roles\n  fullName: HandleExternalEventActivity.Roles\n- uid: System.Workflow.Activities.WorkflowRoleCollection\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: WorkflowRoleCollection\n  nameWithType: WorkflowRoleCollection\n  fullName: System.Workflow.Activities.WorkflowRoleCollection\n- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: RolesProperty\n  nameWithType: HandleExternalEventActivity.RolesProperty\n  fullName: HandleExternalEventActivity.RolesProperty\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IEventActivity.QueueName\n  nameWithType: HandleExternalEventActivity.IEventActivity.QueueName\n  fullName: HandleExternalEventActivity.IEventActivity.QueueName\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  nameWithType: HandleExternalEventActivity.IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  fullName: HandleExternalEventActivity.IEventActivity.Subscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n- uid: System.Workflow.ComponentModel.IActivityEventListener`1\n  name: IActivityEventListener<T>\n  nameWithType: IActivityEventListener<T>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>\n- uid: System.Workflow.ComponentModel.QueueEventArgs\n  name: QueueEventArgs\n  nameWithType: QueueEventArgs\n  fullName: System.Workflow.ComponentModel.QueueEventArgs\n- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IActivityEventListener<QueueEventArgs>\n  nameWithType: IActivityEventListener<QueueEventArgs>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.IActivityEventListener`1\n    name: IActivityEventListener\n    nameWithType: IActivityEventListener\n    fullName: System.Workflow.ComponentModel.IActivityEventListener\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.QueueEventArgs\n    name: QueueEventArgs\n    nameWithType: QueueEventArgs\n    fullName: System.Workflow.ComponentModel.QueueEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  nameWithType: HandleExternalEventActivity.IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n  fullName: HandleExternalEventActivity.IEventActivity.Unsubscribe(ActivityExecutionContext, IActivityEventListener<QueueEventArgs>)\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n  nameWithType: HandleExternalEventActivity.IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n  fullName: HandleExternalEventActivity.IActivityEventListener<QueueEventArgs>.OnEvent(Object, QueueEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n- uid: System.Workflow.ComponentModel.Compiler.AccessTypes\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: AccessTypes\n  nameWithType: AccessTypes\n  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: HandleExternalEventActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: HandleExternalEventActivity\n  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity\n  fullName: HandleExternalEventActivity.HandleExternalEventActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: HandleExternalEventActivity.Cancel\n  fullName: HandleExternalEventActivity.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: HandleExternalEventActivity.CorrelationToken\n  fullName: HandleExternalEventActivity.CorrelationToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: EventName\n  nameWithType: HandleExternalEventActivity.EventName\n  fullName: HandleExternalEventActivity.EventName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Execute\n  nameWithType: HandleExternalEventActivity.Execute\n  fullName: HandleExternalEventActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: HandleFault\n  nameWithType: HandleExternalEventActivity.HandleFault\n  fullName: HandleExternalEventActivity.HandleFault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: HandleExternalEventActivity.Initialize\n  fullName: HandleExternalEventActivity.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InitializeProperties\n  nameWithType: HandleExternalEventActivity.InitializeProperties\n  fullName: HandleExternalEventActivity.InitializeProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: HandleExternalEventActivity.InterfaceType\n  fullName: HandleExternalEventActivity.InterfaceType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: OnClosed\n  nameWithType: HandleExternalEventActivity.OnClosed\n  fullName: HandleExternalEventActivity.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: OnInvoked\n  nameWithType: HandleExternalEventActivity.OnInvoked\n  fullName: HandleExternalEventActivity.OnInvoked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: HandleExternalEventActivity.ParameterBindings\n  fullName: HandleExternalEventActivity.ParameterBindings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: Roles\n  nameWithType: HandleExternalEventActivity.Roles\n  fullName: HandleExternalEventActivity.Roles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.QueueName\n  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName\n  fullName: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Subscribe\n  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe\n  fullName: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Unsubscribe\n  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe\n  fullName: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent\n  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent\n  fullName: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  fullName: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  parent: System.Workflow.Activities.HandleExternalEventActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  fullName: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/HandleExternalEventActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DependencyObject.Dispose(Boolean)\n  fullName: DependencyObject.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: Activity.Uninitialize(IServiceProvider)\n  fullName: Activity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.Activities.IEventActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: IEventActivity\n  nameWithType: IEventActivity\n  fullName: System.Workflow.Activities.IEventActivity\n- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IDynamicPropertyTypeProvider\n  nameWithType: IDynamicPropertyTypeProvider\n  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n"}