{"nodes":[{"content":"Provides access to the properties needed to define a Message Queuing message.","nodes":[{"pos":[0,77],"content":"Provides access to the properties needed to define a Message Queuing message.","nodes":[{"content":"Provides access to the properties needed to define a Message Queuing message.","pos":[0,77]}]}],"pos":[2499,2577],"yaml":true},{"content":"Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.  \n  \n <xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties. The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages. When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.  \n  \n The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue. You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue. The types of settings include formatter, label, encryption, and authentication. You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages. Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis. <xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.  \n  \n Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties. When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.  \n  \n The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify. The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property. You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message. You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.  \n  \n The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property apply only to messages that are not of type <xref:System.Messaging.Message>. If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.  \n  \n For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.","nodes":[{"pos":[0,170],"content":"Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.","pos":[0,170],"source":"Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue."}]},{"pos":[177,987],"content":"<xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties. The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages. When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.","nodes":[{"content":"<xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties. The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages. When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.","pos":[0,810],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> uses the <ph id=\"ph2\">&lt;xref:System.Messaging.Message&gt;</ph> class when it peeks or receives messages from queues, because both the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName&gt;</ph> methods create a new instance of the <ph id=\"ph5\">&lt;xref:System.Messaging.Message&gt;</ph> class and set the instance's properties.","pos":[0,405],"source":"<xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.","pos":[406,587],"source":" The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> peeks or receives a message from a queue, its <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property determines which of the message's properties are retrieved.","pos":[588,810],"source":" When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved."}]}]},{"pos":[994,2009],"content":"The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue. You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue. The types of settings include formatter, label, encryption, and authentication. You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages. Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis. <xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.","nodes":[{"content":"The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue. You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue. The types of settings include formatter, label, encryption, and authentication. You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages. Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis. <xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.","pos":[0,1015],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method allows you to specify any object type for a message being sent to that queue.","pos":[0,178],"source":"The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance's <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property to specify settings for generic messages sent to the queue.","pos":[179,375],"source":" You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue."},{"content":"The types of settings include formatter, label, encryption, and authentication.","pos":[376,455]},{"content":"You can also specify values for the appropriate <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> members when you coordinate your messaging application to respond to acknowledgment and report messages.","pos":[456,672],"source":" You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages."},{"content":"Using a <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis.","pos":[673,886],"source":" Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> properties take precedence over <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>.","pos":[887,1015],"source":" <xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>."}]}]},{"pos":[2016,2379],"content":"Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties. When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.","nodes":[{"content":"Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties. When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.","pos":[0,363],"nodes":[{"content":"Message data is stored in the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property and to a lesser extent, the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> properties.","pos":[0,214],"source":"Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties."},{"content":"When message data is encrypted, serialized, or deserialized, only the contents of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property are affected.","pos":[215,363],"source":" When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected."}]}]},{"pos":[2386,3081],"content":"The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify. The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property. You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message. You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.","nodes":[{"content":"The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify. The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property. You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message. You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.","pos":[0,695],"nodes":[{"content":"The contents of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property are serialized when the message is sent, using the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property you specify.","pos":[0,186],"source":"The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify."},{"content":"The serialized contents are found in the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property.","pos":[187,283],"source":" The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property."},{"content":"You can also set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property directly, for example, to send a file as the data content of a message.","pos":[284,431],"source":" You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message."},{"content":"You can change the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> properties at any time before sending the message, and the data will be serialized appropriately when you call <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>.","pos":[432,695],"source":" You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>."}]}]},{"pos":[3088,3572],"content":"The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property apply only to messages that are not of type <xref:System.Messaging.Message>. If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.","nodes":[{"content":"The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property apply only to messages that are not of type <xref:System.Messaging.Message>. If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.","pos":[0,484],"nodes":[{"content":"The properties defined by the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName&gt;</ph> property apply only to messages that are not of type <ph id=\"ph2\">&lt;xref:System.Messaging.Message&gt;</ph>.","pos":[0,204],"source":"The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property apply only to messages that are not of type <xref:System.Messaging.Message>."},{"content":"If you specify the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property for a <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the identically named properties in a <ph id=\"ph3\">&lt;xref:System.Messaging.Message&gt;</ph> instance sent to that queue cause these default properties to be ignored.","pos":[205,484],"source":" If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored."}]}]},{"pos":[3579,3732],"content":"For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.%23ctor%2A&gt;</ph> constructor.","pos":[0,153],"source":"For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor."}]}],"pos":[2588,6335],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class with an empty body.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message\"&gt;&lt;/xref&gt;</ph> class with an empty body.","source":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class with an empty body."}],"pos":[9456,9562],"yaml":true},{"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.  \n  \n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.  \n  \n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.  \n  \n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \n  \n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \n|<xref:System.Messaging.Message.Body%2A>|`null`|  \n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \n|<xref:System.Messaging.Message.BodyType%2A>|0|  \n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  \n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \n|<xref:System.Messaging.Message.Label%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|","nodes":[{"pos":[0,111],"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.","nodes":[{"content":"Use this overload to create a new instance of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class that has an empty body.","pos":[0,111],"source":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body."}]},{"pos":[118,485],"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.","nodes":[{"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.","pos":[0,367],"nodes":[{"content":"Specify either the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id=\"ph3\">&lt;xref:System.Messaging.Message&gt;</ph> object.","pos":[0,188],"source":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.","pos":[189,367],"source":" The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object."}]}]},{"pos":[492,926],"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.","nodes":[{"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.","pos":[0,434],"nodes":[{"content":"Unless you write the contents of the message directly to the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.","pos":[0,207],"source":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message."},{"content":"The body is serialized using the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property's value at the time the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.","pos":[208,434],"source":" The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance."}]}]},{"pos":[933,1355],"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","nodes":[{"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","pos":[0,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.","pos":[0,170],"source":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.","pos":[171,320],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.","pos":[321,422],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components."}]}]},{"pos":[1362,1463],"content":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph>.","pos":[0,101],"source":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>."}]},{"pos":[1470,1478],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[1479,1492],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[1536,1586],"content":"<xref:System.Messaging.Message.AcknowledgeType%2A>","nodes":[]},{"pos":[1614,1668],"content":"<xref:System.Messaging.Message.AdministrationQueue%2A>","nodes":[]},{"pos":[1680,1726],"content":"<xref:System.Messaging.Message.AppSpecific%2A>","nodes":[]},{"pos":[1727,1728],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[1733,1782],"content":"<xref:System.Messaging.Message.AttachSenderId%2A>","nodes":[]},{"pos":[1794,1855],"content":"<xref:System.Messaging.Message.AuthenticationProviderName%2A>","nodes":[]},{"pos":[1856,1905],"content":"Microsoft Base Cryptographic Provider version 1.0","nodes":[{"content":"Microsoft Base Cryptographic Provider version 1.0","pos":[0,49]}]},{"pos":[1910,1971],"content":"<xref:System.Messaging.Message.AuthenticationProviderType%2A>","nodes":[]},{"pos":[2006,2045],"content":"<xref:System.Messaging.Message.Body%2A>","nodes":[]},{"pos":[2057,2102],"content":"<xref:System.Messaging.Message.BodyStream%2A>","nodes":[]},{"pos":[2121,2164],"content":"<xref:System.Messaging.Message.BodyType%2A>","nodes":[]},{"pos":[2165,2166],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[2171,2219],"content":"<xref:System.Messaging.Message.ConnectorType%2A>","nodes":[]},{"pos":[2237,2285],"content":"<xref:System.Messaging.Message.CorrelationId%2A>","nodes":[]},{"pos":[2286,2306],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2311,2369],"content":"<xref:System.Messaging.Message.DestinationSymmetricKey%2A>","nodes":[]},{"pos":[2370,2398],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2403,2454],"content":"<xref:System.Messaging.Message.DigitalSignature%2A>","nodes":[]},{"pos":[2455,2483],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2488,2542],"content":"<xref:System.Messaging.Message.EncryptionAlgorithm%2A>","nodes":[]},{"pos":[2573,2617],"content":"<xref:System.Messaging.Message.Extension%2A>","nodes":[]},{"pos":[2618,2646],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2651,2695],"content":"<xref:System.Messaging.Message.Formatter%2A>","nodes":[]},{"pos":[2722,2770],"content":"<xref:System.Messaging.Message.HashAlgorithm%2A>","nodes":[]},{"pos":[2795,2835],"content":"<xref:System.Messaging.Message.Label%2A>","nodes":[]},{"pos":[2836,2856],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2861,2904],"content":"<xref:System.Messaging.Message.Priority%2A>","nodes":[]},{"pos":[2934,2980],"content":"<xref:System.Messaging.Message.Recoverable%2A>","nodes":[]},{"pos":[2993,3041],"content":"<xref:System.Messaging.Message.ResponseQueue%2A>","nodes":[]},{"pos":[3053,3105],"content":"<xref:System.Messaging.Message.SenderCertificate%2A>","nodes":[]},{"pos":[3106,3134],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[3139,3190],"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A>","nodes":[]},{"pos":[3221,3272],"content":"<xref:System.Messaging.Message.TimeToReachQueue%2A>","nodes":[]},{"pos":[3303,3360],"content":"<xref:System.Messaging.Message.TransactionStatusQueue%2A>","nodes":[]},{"pos":[3372,3424],"content":"<xref:System.Messaging.Message.UseAuthentication%2A>","nodes":[]},{"pos":[3437,3490],"content":"<xref:System.Messaging.Message.UseDeadLetterQueue%2A>","nodes":[]},{"pos":[3503,3551],"content":"<xref:System.Messaging.Message.UseEncryption%2A>","nodes":[]},{"pos":[3564,3614],"content":"<xref:System.Messaging.Message.UseJournalQueue%2A>","nodes":[]},{"pos":[3627,3672],"content":"<xref:System.Messaging.Message.UseTracing%2A>","nodes":[]}],"pos":[9573,13302],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class, using the <xref href=\"System.Messaging.XmlMessageFormatter\"></xref> to serialize the specified object into the body of the message.","nodes":[{"pos":[0,218],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message\"&gt;&lt;/xref&gt;</ph> class, using the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.XmlMessageFormatter\"&gt;&lt;/xref&gt;</ph> to serialize the specified object into the body of the message.","source":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class, using the <xref href=\"System.Messaging.XmlMessageFormatter\"></xref> to serialize the specified object into the body of the message."}],"pos":[14977,15196],"yaml":true},{"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter. The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.  \n  \n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \n  \n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \n|<xref:System.Messaging.Message.Body%2A>|The `body` parameter.|  \n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \n|<xref:System.Messaging.Message.BodyType%2A>|0|  \n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  \n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \n|<xref:System.Messaging.Message.Label%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|","nodes":[{"pos":[0,788],"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter. The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.","nodes":[{"content":"Use this overload to create a new instance of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class that contains the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> specified by the <ph id=\"ph3\">`body`</ph> parameter.","pos":[0,180],"source":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter."},{"content":"The <ph id=\"ph1\">`body`</ph> parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.","pos":[181,327],"source":" The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object."},{"content":"The body is serialized using the <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> unless you change the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before the <ph id=\"ph3\">&lt;xref:System.Messaging.Message&gt;</ph> is sent.","pos":[328,532],"source":" The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent."},{"content":"If you change the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property at any time before calling <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>, the message will be serialized according to the new property value.","pos":[533,788],"source":" If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value."}]},{"pos":[795,1217],"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","nodes":[{"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","pos":[0,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.","pos":[0,170],"source":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.","pos":[171,320],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.","pos":[321,422],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components."}]}]},{"pos":[1224,1325],"content":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph>.","pos":[0,101],"source":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>."}]},{"pos":[1332,1340],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[1341,1354],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[1398,1448],"content":"<xref:System.Messaging.Message.AcknowledgeType%2A>","nodes":[]},{"pos":[1476,1530],"content":"<xref:System.Messaging.Message.AdministrationQueue%2A>","nodes":[]},{"pos":[1542,1588],"content":"<xref:System.Messaging.Message.AppSpecific%2A>","nodes":[]},{"pos":[1589,1590],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[1595,1644],"content":"<xref:System.Messaging.Message.AttachSenderId%2A>","nodes":[]},{"pos":[1656,1717],"content":"<xref:System.Messaging.Message.AuthenticationProviderName%2A>","nodes":[]},{"pos":[1718,1767],"content":"Microsoft Base Cryptographic Provider version 1.0","nodes":[{"content":"Microsoft Base Cryptographic Provider version 1.0","pos":[0,49]}]},{"pos":[1772,1833],"content":"<xref:System.Messaging.Message.AuthenticationProviderType%2A>","nodes":[]},{"pos":[1868,1907],"content":"<xref:System.Messaging.Message.Body%2A>","nodes":[]},{"pos":[1908,1929],"content":"The <ph id=\"ph1\">`body`</ph> parameter.","source":"The `body` parameter."},{"pos":[1934,1979],"content":"<xref:System.Messaging.Message.BodyStream%2A>","nodes":[]},{"pos":[1998,2041],"content":"<xref:System.Messaging.Message.BodyType%2A>","nodes":[]},{"pos":[2042,2043],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[2048,2096],"content":"<xref:System.Messaging.Message.ConnectorType%2A>","nodes":[]},{"pos":[2114,2162],"content":"<xref:System.Messaging.Message.CorrelationId%2A>","nodes":[]},{"pos":[2163,2183],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2188,2246],"content":"<xref:System.Messaging.Message.DestinationSymmetricKey%2A>","nodes":[]},{"pos":[2247,2275],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2280,2331],"content":"<xref:System.Messaging.Message.DigitalSignature%2A>","nodes":[]},{"pos":[2332,2360],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2365,2419],"content":"<xref:System.Messaging.Message.EncryptionAlgorithm%2A>","nodes":[]},{"pos":[2450,2494],"content":"<xref:System.Messaging.Message.Extension%2A>","nodes":[]},{"pos":[2495,2523],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2528,2572],"content":"<xref:System.Messaging.Message.Formatter%2A>","nodes":[]},{"pos":[2599,2647],"content":"<xref:System.Messaging.Message.HashAlgorithm%2A>","nodes":[]},{"pos":[2672,2712],"content":"<xref:System.Messaging.Message.Label%2A>","nodes":[]},{"pos":[2713,2733],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2738,2781],"content":"<xref:System.Messaging.Message.Priority%2A>","nodes":[]},{"pos":[2811,2857],"content":"<xref:System.Messaging.Message.Recoverable%2A>","nodes":[]},{"pos":[2870,2918],"content":"<xref:System.Messaging.Message.ResponseQueue%2A>","nodes":[]},{"pos":[2930,2982],"content":"<xref:System.Messaging.Message.SenderCertificate%2A>","nodes":[]},{"pos":[2983,3011],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[3016,3067],"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A>","nodes":[]},{"pos":[3098,3149],"content":"<xref:System.Messaging.Message.TimeToReachQueue%2A>","nodes":[]},{"pos":[3180,3237],"content":"<xref:System.Messaging.Message.TransactionStatusQueue%2A>","nodes":[]},{"pos":[3249,3301],"content":"<xref:System.Messaging.Message.UseAuthentication%2A>","nodes":[]},{"pos":[3314,3367],"content":"<xref:System.Messaging.Message.UseDeadLetterQueue%2A>","nodes":[]},{"pos":[3380,3428],"content":"<xref:System.Messaging.Message.UseEncryption%2A>","nodes":[]},{"pos":[3441,3491],"content":"<xref:System.Messaging.Message.UseJournalQueue%2A>","nodes":[]},{"pos":[3504,3549],"content":"<xref:System.Messaging.Message.UseTracing%2A>","nodes":[]}],"pos":[15207,18809],"yaml":true,"extradata":"MT"},{"content":"The object to be serialized into the body of the message.","nodes":[{"pos":[0,57],"content":"The object to be serialized into the body of the message.","nodes":[{"content":"The object to be serialized into the body of the message.","pos":[0,57]}]}],"pos":[19441,19499],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class using the specified formatter to serialize the specified object into the body of the message.","nodes":[{"pos":[0,179],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message\"&gt;&lt;/xref&gt;</ph> class using the specified formatter to serialize the specified object into the body of the message.","source":"Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class using the specified formatter to serialize the specified object into the body of the message."}],"pos":[20637,20817],"yaml":true},{"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body. The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.  \n  \n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \n  \n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \n|<xref:System.Messaging.Message.Body%2A>|The `body` parameter.|  \n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \n|<xref:System.Messaging.Message.BodyType%2A>|0|  \n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.Formatter%2A>|The `formatter` parameter.|  \n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \n|<xref:System.Messaging.Message.Label%2A>|An empty string (\"\")|  \n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|","nodes":[{"pos":[0,635],"content":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body. The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.","nodes":[{"content":"Use this overload to create a new instance of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class that contains the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> specified by the <ph id=\"ph3\">`body`</ph> parameter and that uses any valid formatter to serialize the body.","pos":[0,236],"source":"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body."},{"content":"The <ph id=\"ph1\">`body`</ph> parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.","pos":[237,379],"source":" The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object."},{"content":"If you change the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property at any time before calling <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>, the message will be serialized according to the new property value.","pos":[380,635],"source":" If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value."}]},{"pos":[642,1064],"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","nodes":[{"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","pos":[0,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.","pos":[0,170],"source":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.","pos":[171,320],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.","pos":[321,422],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components."}]}]},{"pos":[1071,1172],"content":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph>.","pos":[0,101],"source":"The following table shows initial property values for an instance of <xref:System.Messaging.Message>."}]},{"pos":[1179,1187],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[1188,1201],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[1245,1295],"content":"<xref:System.Messaging.Message.AcknowledgeType%2A>","nodes":[]},{"pos":[1323,1377],"content":"<xref:System.Messaging.Message.AdministrationQueue%2A>","nodes":[]},{"pos":[1389,1435],"content":"<xref:System.Messaging.Message.AppSpecific%2A>","nodes":[]},{"pos":[1436,1437],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[1442,1491],"content":"<xref:System.Messaging.Message.AttachSenderId%2A>","nodes":[]},{"pos":[1503,1564],"content":"<xref:System.Messaging.Message.AuthenticationProviderName%2A>","nodes":[]},{"pos":[1565,1614],"content":"Microsoft Base Cryptographic Provider version 1.0","nodes":[{"content":"Microsoft Base Cryptographic Provider version 1.0","pos":[0,49]}]},{"pos":[1619,1680],"content":"<xref:System.Messaging.Message.AuthenticationProviderType%2A>","nodes":[]},{"pos":[1715,1754],"content":"<xref:System.Messaging.Message.Body%2A>","nodes":[]},{"pos":[1755,1776],"content":"The <ph id=\"ph1\">`body`</ph> parameter.","source":"The `body` parameter."},{"pos":[1781,1826],"content":"<xref:System.Messaging.Message.BodyStream%2A>","nodes":[]},{"pos":[1845,1888],"content":"<xref:System.Messaging.Message.BodyType%2A>","nodes":[]},{"pos":[1889,1890],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[1895,1943],"content":"<xref:System.Messaging.Message.ConnectorType%2A>","nodes":[]},{"pos":[1961,2009],"content":"<xref:System.Messaging.Message.CorrelationId%2A>","nodes":[]},{"pos":[2010,2030],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2035,2093],"content":"<xref:System.Messaging.Message.DestinationSymmetricKey%2A>","nodes":[]},{"pos":[2094,2122],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2127,2178],"content":"<xref:System.Messaging.Message.DigitalSignature%2A>","nodes":[]},{"pos":[2179,2207],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2212,2266],"content":"<xref:System.Messaging.Message.EncryptionAlgorithm%2A>","nodes":[]},{"pos":[2297,2341],"content":"<xref:System.Messaging.Message.Extension%2A>","nodes":[]},{"pos":[2342,2370],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2375,2419],"content":"<xref:System.Messaging.Message.Formatter%2A>","nodes":[]},{"pos":[2420,2446],"content":"The <ph id=\"ph1\">`formatter`</ph> parameter.","source":"The `formatter` parameter."},{"pos":[2451,2499],"content":"<xref:System.Messaging.Message.HashAlgorithm%2A>","nodes":[]},{"pos":[2524,2564],"content":"<xref:System.Messaging.Message.Label%2A>","nodes":[]},{"pos":[2565,2585],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[2590,2633],"content":"<xref:System.Messaging.Message.Priority%2A>","nodes":[]},{"pos":[2663,2709],"content":"<xref:System.Messaging.Message.Recoverable%2A>","nodes":[]},{"pos":[2722,2770],"content":"<xref:System.Messaging.Message.ResponseQueue%2A>","nodes":[]},{"pos":[2782,2834],"content":"<xref:System.Messaging.Message.SenderCertificate%2A>","nodes":[]},{"pos":[2835,2863],"content":"A zero-length array of bytes","nodes":[{"content":"A zero-length array of bytes","pos":[0,28]}]},{"pos":[2868,2919],"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A>","nodes":[]},{"pos":[2950,3001],"content":"<xref:System.Messaging.Message.TimeToReachQueue%2A>","nodes":[]},{"pos":[3032,3089],"content":"<xref:System.Messaging.Message.TransactionStatusQueue%2A>","nodes":[]},{"pos":[3101,3153],"content":"<xref:System.Messaging.Message.UseAuthentication%2A>","nodes":[]},{"pos":[3166,3219],"content":"<xref:System.Messaging.Message.UseDeadLetterQueue%2A>","nodes":[]},{"pos":[3232,3280],"content":"<xref:System.Messaging.Message.UseEncryption%2A>","nodes":[]},{"pos":[3293,3343],"content":"<xref:System.Messaging.Message.UseJournalQueue%2A>","nodes":[]},{"pos":[3356,3401],"content":"<xref:System.Messaging.Message.UseTracing%2A>","nodes":[]}],"pos":[20828,24282],"yaml":true,"extradata":"MT"},{"content":"The object to be serialized into the body of the message.","nodes":[{"pos":[0,57],"content":"The object to be serialized into the body of the message.","nodes":[{"content":"The object to be serialized into the body of the message.","pos":[0,57]}]}],"pos":[24930,24988],"yaml":true},{"content":"A <xref href=\"System.Messaging.IMessageFormatter\"></xref> that specifies the formatter with which to serialize the message body.","nodes":[{"pos":[0,128],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.IMessageFormatter\"&gt;&lt;/xref&gt;</ph> that specifies the formatter with which to serialize the message body.","source":"A <xref href=\"System.Messaging.IMessageFormatter\"></xref> that specifies the formatter with which to serialize the message body."}],"pos":[25074,25203],"yaml":true},{"content":"Gets or sets the type of acknowledgment message to be returned to the sending application.","nodes":[{"pos":[0,90],"content":"Gets or sets the type of acknowledgment message to be returned to the sending application.","nodes":[{"content":"Gets or sets the type of acknowledgment message to be returned to the sending application.","pos":[0,90]}]}],"pos":[26159,26250],"yaml":true},{"content":"The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application. Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.  \n  \n Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message. An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents. For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.","nodes":[{"pos":[0,467],"content":"The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application. Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","nodes":[{"content":"The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application. Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","pos":[0,467],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property specifies the type of acknowledgment messages requested by the sending application.","pos":[0,147],"source":"The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application."},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","pos":[148,467],"source":" Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue."}]}]},{"pos":[474,1113],"content":"Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message. An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents. For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.","nodes":[{"content":"Message Queuing returns notification by sending acknowledgment messages to the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property specified by the original message.","pos":[0,177],"source":"Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message."},{"content":"An acknowledgment message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property indicates the type of acknowledgment that it represents.","pos":[178,321],"source":" An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents."},{"content":"For example, if an acknowledgment message was sent because a message did not reach the destination before the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> interval expired, the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property of the acknowledgment message would contain the value <ph id=\"ph3\">`ReachQueueTimeout`</ph>.","pos":[322,639],"source":" For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`."}]}],"pos":[26261,27379],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.AcknowledgeTypes\"></xref> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application. The default is `None`.","nodes":[{"pos":[0,287],"content":"One of the <xref href=\"System.Messaging.AcknowledgeTypes\"></xref> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application. The default is `None`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AcknowledgeTypes\"&gt;&lt;/xref&gt;</ph> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.","pos":[0,264],"source":"One of the <xref href=\"System.Messaging.AcknowledgeTypes\"></xref> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application."},{"content":"The default is <ph id=\"ph1\">`None`</ph>.","pos":[265,287],"source":" The default is `None`."}]}],"pos":[28297,28585],"yaml":true},{"content":"The message is filtered to ignore the <xref href=\"System.Messaging.Message.AcknowledgeType\"></xref> property.","nodes":[{"pos":[0,109],"content":"The message is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AcknowledgeType\"&gt;&lt;/xref&gt;</ph> property.","source":"The message is filtered to ignore the <xref href=\"System.Messaging.Message.AcknowledgeType\"></xref> property."}],"pos":[28763,28873],"yaml":true},{"content":"Gets the classification of acknowledgment that this message represents.","nodes":[{"pos":[0,71],"content":"Gets the classification of acknowledgment that this message represents.","nodes":[{"content":"Gets the classification of acknowledgment that this message represents.","pos":[0,71]}]}],"pos":[29833,29905],"yaml":true},{"content":"When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.  \n  \n When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message. Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure. The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property. The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message. You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.  \n  \n If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment. Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.  \n  \n Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.","nodes":[{"pos":[0,170],"content":"When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.","nodes":[{"content":"When you receive a message from an administration queue, read the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property to verify the status of the original message.","pos":[0,170],"source":"When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message."}]},{"pos":[177,996],"content":"When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message. Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure. The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property. The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message. You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.","nodes":[{"content":"When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message. Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure. The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property. The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message. You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.","pos":[0,819],"nodes":[{"content":"When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.","pos":[0,116]},{"content":"Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.","pos":[117,300]},{"content":"The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property.","pos":[301,498],"source":" The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of an acknowledgment message identifies the acknowledgment message, not the original message.","pos":[499,643],"source":" The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message."},{"content":"You can find the identifier of the original message in the acknowledgment <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> instance's <ph id=\"ph2\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property.","pos":[644,819],"source":" You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property."}]}]},{"pos":[1003,1293],"content":"If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment. Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> instance represents an acknowledgment message, the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property specifies the type of acknowledgment.","pos":[0,187],"source":"If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property contains the value <ph id=\"ph2\">`Normal`</ph>.","pos":[188,290],"source":" Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`."}]},{"pos":[1300,1466],"content":"Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property of the original message to specify the circumstances under which acknowledgments will be returned.","pos":[0,166],"source":"Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned."}]}],"pos":[29916,31391],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.Acknowledgment\"></xref> enumeration values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Acknowledgment\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"One of the <xref href=\"System.Messaging.Acknowledgment\"></xref> enumeration values."}],"pos":[31630,31714],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.MessagePropertyFilter.Acknowledgment\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,243],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessagePropertyFilter.Acknowledgment\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.MessagePropertyFilter.Acknowledgment\"></xref> property."}],"pos":[31891,32143],"yaml":true},{"content":"Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.","nodes":[{"pos":[0,97],"content":"Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.","nodes":[{"content":"Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.","pos":[0,97]}]}],"pos":[33133,33231],"yaml":true},{"content":"The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue. The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.  \n  \n When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.","nodes":[{"pos":[0,302],"content":"The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue. The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.","nodes":[{"content":"The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue. The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.","pos":[0,302],"nodes":[{"content":"The queue specified in the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property can be any non-transactional queue.","pos":[0,126],"source":"The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue."},{"content":"The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.","pos":[127,302]}]}]},{"pos":[309,493],"content":"When the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property has any value other than <ph id=\"ph2\">`None`</ph>, the sending application must specify the queue to use as the administration queue.","source":"When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue."}],"pos":[33242,33740],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the administration queue used for system-generated acknowledgment messages. The default is `null`.","nodes":[{"pos":[0,168],"content":"The <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the administration queue used for system-generated acknowledgment messages. The default is `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> that specifies the administration queue used for system-generated acknowledgment messages.","pos":[0,145],"source":"The <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the administration queue used for system-generated acknowledgment messages."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[146,168],"source":" The default is `null`."}]}],"pos":[34658,34827],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AdministrationQueue\"></xref> property.","nodes":[{"pos":[0,119],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AdministrationQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AdministrationQueue\"></xref> property."}],"pos":[35009,35129],"yaml":true},{"content":"Gets or sets additional, application-specific information.","nodes":[{"pos":[0,58],"content":"Gets or sets additional, application-specific information.","nodes":[{"content":"Gets or sets additional, application-specific information.","pos":[0,58]}]}],"pos":[36071,36130],"yaml":true},{"content":"The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages. For example, you can use application-specific indexes. It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.  \n  \n Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.  \n  \n When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing. As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.","nodes":[{"pos":[0,340],"content":"The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages. For example, you can use application-specific indexes. It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.","nodes":[{"content":"The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages. For example, you can use application-specific indexes. It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.","pos":[0,340],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property contains application-specific information that you can use to organize different types of messages.","pos":[0,159],"source":"The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages."},{"content":"For example, you can use application-specific indexes.","pos":[160,214]},{"content":"It is the responsibility of the application to interpret <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property information.","pos":[215,340],"source":" It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information."}]}]},{"pos":[347,497],"content":"Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.","nodes":[{"content":"Whenever possible, you should include message data in the body of the message rather than the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property.","pos":[0,150],"source":"Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property."}]},{"pos":[504,868],"content":"When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing. As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.","nodes":[{"content":"When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing. As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.","pos":[0,364],"nodes":[{"content":"When working with foreign queues, use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property to specify message properties that do not exist in Message Queuing.","pos":[0,163],"source":"When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing."},{"content":"As with the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property, it is the responsibility of the application to understand the content of the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.","pos":[164,364],"source":" As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property."}]}]}],"pos":[36141,37016],"yaml":true,"extradata":"MT"},{"content":"Information that is specific to the application. The default is zero.","nodes":[{"pos":[0,69],"content":"Information that is specific to the application. The default is zero.","nodes":[{"content":"Information that is specific to the application. The default is zero.","pos":[0,69],"nodes":[{"content":"Information that is specific to the application.","pos":[0,48]},{"content":"The default is zero.","pos":[49,69]}]}]}],"pos":[37206,37276],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AppSpecific\"></xref> property.","nodes":[{"pos":[0,111],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AppSpecific\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AppSpecific\"></xref> property."}],"pos":[37450,37562],"yaml":true},{"content":"Gets the time that the message arrived in the destination queue.","nodes":[{"pos":[0,64],"content":"Gets the time that the message arrived in the destination queue.","nodes":[{"content":"Gets the time that the message arrived in the destination queue.","pos":[0,64]}]}],"pos":[38504,38569],"yaml":true},{"content":"The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue. The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.","nodes":[{"pos":[0,300],"content":"The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue. The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.","nodes":[{"content":"The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue. The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.","pos":[0,300],"nodes":[{"content":"The message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property indicates how quickly the message must be received from the destination queue.","pos":[0,153],"source":"The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property timer starts when the message is sent, not when the message arrives in the queue.","pos":[154,300],"source":" The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue."}]}]}],"pos":[38580,38881],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the message's arrival time in the destination queue. The time is adjusted from GMT to the local time of the computer on which the destination queue resides.","nodes":[{"pos":[0,211],"content":"A <xref href=\"System.DateTime\"></xref> that represents the message's arrival time in the destination queue. The time is adjusted from GMT to the local time of the computer on which the destination queue resides.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the message's arrival time in the destination queue.","pos":[0,107],"source":"A <xref href=\"System.DateTime\"></xref> that represents the message's arrival time in the destination queue."},{"content":"The time is adjusted from GMT to the local time of the computer on which the destination queue resides.","pos":[108,211]}]}],"pos":[39207,39419],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ArrivedTime\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,226],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.ArrivedTime\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ArrivedTime\"></xref> property."}],"pos":[39593,39828],"yaml":true},{"content":"Gets or sets a value that indicates whether the sender ID should be attached to the message.","nodes":[{"pos":[0,92],"content":"Gets or sets a value that indicates whether the sender ID should be attached to the message.","nodes":[{"content":"Gets or sets a value that indicates whether the sender ID should be attached to the message.","pos":[0,92]}]}],"pos":[40788,40881],"yaml":true},{"content":"The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user. The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.  \n  \n The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue. The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue. The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.  \n  \n> [!CAUTION]\n>  If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored. You can request acknowledgments when a message fails to reach a queue. Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.","nodes":[{"pos":[0,271],"content":"The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user. The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.","nodes":[{"content":"The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user. The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.","pos":[0,271],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property is an array of bytes that represents the identifier of the sending user.","pos":[0,129],"source":"The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user."},{"content":"The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.","pos":[130,271]}]}]},{"pos":[278,903],"content":"The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue. The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue. The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.","nodes":[{"content":"The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.","pos":[0,196]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> is trustworthy only if the message was authenticated when it reached the destination queue.","pos":[197,336],"source":" The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue."},{"content":"The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <ph id=\"ph1\">&lt;xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A&gt;</ph> property is <ph id=\"ph3\">`false`</ph>.","pos":[337,625],"source":" The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`."}]},{"pos":[911,1276],"content":"[!CAUTION]\n If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored. You can request acknowledgments when a message fails to reach a queue. Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.","leadings":["","> "],"nodes":[{"content":" If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored. You can request acknowledgments when a message fails to reach a queue. Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.","pos":[11,363],"nodes":[{"content":"If a message is rejected, it is either sent to the dead-letter queue (if <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>), or it is ignored.","pos":[1,157],"source":" If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored."},{"content":"You can request acknowledgments when a message fails to reach a queue.","pos":[158,228]},{"content":"Otherwise, when <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph> the message might be lost without warning.","pos":[229,352],"source":" Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning."}]}]}],"pos":[40892,42176],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Messaging.Message.SenderId\"></xref> should be attached to the message; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,146],"content":"`true` if the <xref href=\"System.Messaging.Message.SenderId\"></xref> should be attached to the message; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.Message.SenderId\"&gt;&lt;/xref&gt;</ph> should be attached to the message; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,123],"source":"`true` if the <xref href=\"System.Messaging.Message.SenderId\"></xref> should be attached to the message; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[124,146],"source":" The default is `true`."}]}],"pos":[42516,42665],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AttachSenderId\"></xref> property.","nodes":[{"pos":[0,114],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AttachSenderId\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AttachSenderId\"></xref> property."}],"pos":[42842,42957],"yaml":true},{"content":"Gets a value that indicates whether the message was authenticated.","nodes":[{"pos":[0,66],"content":"Gets a value that indicates whether the message was authenticated.","nodes":[{"content":"Gets a value that indicates whether the message was authenticated.","pos":[0,66]}]}],"pos":[43911,43978],"yaml":true},{"content":"The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested. If the message is in the queue, the message was authenticated. Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.  \n  \n You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards messages that fail authentication before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.","nodes":[{"pos":[0,427],"content":"The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested. If the message is in the queue, the message was authenticated. Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.","pos":[0,191],"source":"The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested."},{"content":"If the message is in the queue, the message was authenticated.","pos":[192,254]},{"content":"Conversely, if the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the receiving Queue Manager authenticated the message when it received that message.","pos":[255,427],"source":" Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message."}]},{"pos":[434,753],"content":"You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards messages that fail authentication before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.","nodes":[{"content":"You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards messages that fail authentication before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.","pos":[0,319],"nodes":[{"content":"You cannot determine if a message failed authentication by looking at its properties.","pos":[0,85]},{"content":"Message Queuing discards messages that fail authentication before they are delivered to the queue.","pos":[86,184]},{"content":"However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.","pos":[185,319]}]}]}],"pos":[43989,44747],"yaml":true,"extradata":"MT"},{"content":"`true` if authentication was requested for the message when it entered the queue; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if authentication was requested for the message when it entered the queue; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if authentication was requested for the message when it entered the queue; otherwise, `false`."}],"pos":[45074,45178],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Authenticated\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,228],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Authenticated\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Authenticated\"></xref> property."}],"pos":[45354,45591],"yaml":true},{"content":"Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.","nodes":[{"pos":[0,106],"content":"Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.","nodes":[{"content":"Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.","pos":[0,106]}]}],"pos":[46623,46730],"yaml":true},{"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.  \n  \n When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.  \n  \n The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string (\"\").","nodes":[{"pos":[0,401],"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","nodes":[{"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","pos":[0,401],"nodes":[{"content":"You typically use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> when working with foreign queues.","pos":[0,117],"source":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues."},{"content":"Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","pos":[118,401]}]}]},{"pos":[408,704],"content":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.","nodes":[{"content":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.","pos":[0,296],"nodes":[{"content":"When sending a message, always set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> properties together.","pos":[0,174],"source":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together."},{"content":"When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.","pos":[175,296]}]}]},{"pos":[711,839],"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> property cannot be <ph id=\"ph2\">`null`</ph>, but it can be an empty string (\"\").","source":"The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string (\"\")."}],"pos":[46741,47589],"yaml":true,"extradata":"MT"},{"content":"The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.","nodes":[{"pos":[0,159],"content":"The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.","nodes":[{"content":"The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.","pos":[0,159],"nodes":[{"content":"The name of the cryptographic provider used to generate the digital signature of the message.","pos":[0,93]},{"content":"The default is Microsoft Base Cryptographic Provider version 1.0.","pos":[94,159]}]}]}],"pos":[47813,47973],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> property could not be set.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> property.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AuthenticationProviderName\"&gt;&lt;/xref&gt;</ph> property could not be set.","source":"The <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> property could not be set."},{"pos":[110,114],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[121,247],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AuthenticationProviderName\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> property."}],"pos":[48162,48420],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> was set to `null`.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AuthenticationProviderName\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> was set to `null`."}],"pos":[48514,48610],"yaml":true},{"content":"Gets or sets the type of cryptographic provider used to generate the digital signature of the message.","nodes":[{"pos":[0,102],"content":"Gets or sets the type of cryptographic provider used to generate the digital signature of the message.","nodes":[{"content":"Gets or sets the type of cryptographic provider used to generate the digital signature of the message.","pos":[0,102]}]}],"pos":[49642,49745],"yaml":true},{"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.  \n  \n Only `RsaFull` is intended to be used with messaging.  \n  \n When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.","nodes":[{"pos":[0,487],"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","nodes":[{"content":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","pos":[0,487],"nodes":[{"content":"You typically use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A&gt;</ph> property when working with foreign queues to specify which cryptographic service provider is associated with a message.","pos":[0,203],"source":"You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message."},{"content":"Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.","pos":[204,487]}]}]},{"pos":[494,547],"content":"Only <ph id=\"ph1\">`RsaFull`</ph> is intended to be used with messaging.","source":"Only `RsaFull` is intended to be used with messaging."},{"pos":[554,850],"content":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.","nodes":[{"content":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.","pos":[0,296],"nodes":[{"content":"When sending a message, always set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> properties together.","pos":[0,174],"source":"When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together."},{"content":"When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.","pos":[175,296]}]}]}],"pos":[49756,50613],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.CryptographicProviderType\"></xref> values. The default is `RSA_FULL`.","nodes":[{"pos":[0,109],"content":"One of the <xref href=\"System.Messaging.CryptographicProviderType\"></xref> values. The default is `RSA_FULL`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.CryptographicProviderType\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,82],"source":"One of the <xref href=\"System.Messaging.CryptographicProviderType\"></xref> values."},{"content":"The default is <ph id=\"ph1\">`RSA_FULL`</ph>.","pos":[83,109],"source":" The default is `RSA_FULL`."}]}],"pos":[50902,51012],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.AuthenticationProviderType\"></xref> property could not be set.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AuthenticationProviderType\"></xref> property.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AuthenticationProviderType\"&gt;&lt;/xref&gt;</ph> property could not be set.","source":"The <xref href=\"System.Messaging.Message.AuthenticationProviderType\"></xref> property could not be set."},{"pos":[110,114],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[121,247],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.AuthenticationProviderType\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AuthenticationProviderType\"></xref> property."}],"pos":[51201,51459],"yaml":true},{"content":"Gets or sets the content of the message.","nodes":[{"pos":[0,40],"content":"Gets or sets the content of the message.","nodes":[{"content":"Gets or sets the content of the message.","pos":[0,40]}]}],"pos":[52359,52400],"yaml":true},{"content":"The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message. Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible. Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.  \n  \n The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB. If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.  \n  \n The string argument in `MessageQueue.Send(\"hello.\")` is an example of such a generic object.  \n  \n The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body. Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.  \n  \n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.  \n  \n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \n  \n> [!NOTE]\n>  Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.","nodes":[{"pos":[0,494],"content":"The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message. Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible. Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.","nodes":[{"content":"The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message. Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible. Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.","pos":[0,494],"nodes":[{"content":"The message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property usually contains the data associated with the message.","pos":[0,117],"source":"The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message."},{"content":"Although you can also send application-specific data in the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> properties, you should include message data in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> of the message whenever possible.","pos":[118,398],"source":" Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible."},{"content":"Only the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property contents are serialized or encrypted.","pos":[399,494],"source":" Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted."}]}]},{"pos":[501,1047],"content":"The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB. If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.","nodes":[{"content":"The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB. If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.","pos":[0,546],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can contain any object whose size does not exceed 4 MB.","pos":[0,108],"source":"The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB."},{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName&gt;</ph> to send any object that is not of type <ph id=\"ph2\">&lt;xref:System.Messaging.Message&gt;</ph> to the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, that object will be located in the <ph id=\"ph4\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the <ph id=\"ph5\">&lt;xref:System.Messaging.Message&gt;</ph> instance returned by <ph id=\"ph6\">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> or <ph id=\"ph7\">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>.","pos":[109,546],"source":" If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>."}]}]},{"pos":[1054,1146],"content":"The string argument in <ph id=\"ph1\">`MessageQueue.Send(\"hello.\")`</ph> is an example of such a generic object.","source":"The string argument in `MessageQueue.Send(\"hello.\")` is an example of such a generic object."},{"pos":[1153,1404],"content":"The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body. Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.","nodes":[{"content":"The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body. Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.","pos":[0,251],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property indicates the type of information that is stored in the message body.","pos":[0,126],"source":"The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body."},{"content":"Message Queuing uses this information to identify the type of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property contents.","pos":[127,251],"source":" Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents."}]}]},{"pos":[1411,1761],"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.","nodes":[{"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.","pos":[0,350],"nodes":[{"content":"Specify either the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id=\"ph3\">&lt;xref:System.Messaging.Message&gt;</ph> object.","pos":[0,188],"source":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.","pos":[189,350],"source":" The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object."}]}]},{"pos":[1768,2400],"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","nodes":[{"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","pos":[0,632],"nodes":[{"content":"Unless you write the contents of the message directly to the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.","pos":[0,207],"source":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.","pos":[208,447],"source":" When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property."},{"content":"If you send the message without specifying a value for the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id=\"ph2\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.","pos":[448,632],"source":" If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>."}]}]},{"pos":[2408,2685],"content":"[!NOTE]\n Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.","leadings":["","> "],"nodes":[{"content":"Attempting to set the body of a message to <ph id=\"ph1\">&lt;xref:System.Decimal.MaxValue&gt;</ph> will cause a <ph id=\"ph2\">&lt;xref:System.OverflowException&gt;</ph> when the <ph id=\"ph3\">`Send`</ph> method of the <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class is called and the <ph id=\"ph5\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used.","pos":[9,275],"source":" Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used."}]}],"pos":[52411,55114],"yaml":true,"extradata":"MT"},{"content":"An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.","nodes":[{"pos":[0,146],"content":"An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.","nodes":[{"content":"An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.","pos":[0,146],"nodes":[{"content":"An object that specifies the message contents.","pos":[0,46]},{"content":"The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.","pos":[47,146]}]}]}],"pos":[55922,56069],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.Formatter\"></xref> property is `null`.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Formatter\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.Formatter\"></xref> property is `null`."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,201],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Body\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property."}],"pos":[56236,56448],"yaml":true},{"content":"Gets or sets the information in the body of the message.","nodes":[{"pos":[0,56],"content":"Gets or sets the information in the body of the message.","nodes":[{"content":"Gets or sets the information in the body of the message.","pos":[0,56]}]}],"pos":[57378,57435],"yaml":true},{"content":"The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object. This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.  \n  \n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property. However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly. This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.  \n  \n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \n  \n If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property. Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.","nodes":[{"pos":[0,244],"content":"The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object. This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.","nodes":[{"content":"The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object. This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.","pos":[0,244],"nodes":[{"content":"The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object.","pos":[0,155]},{"content":"This information is serialized into a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> to be passed to the queue.","pos":[156,244],"source":" This information is serialized into a <xref:System.IO.Stream> to be passed to the queue."}]}]},{"pos":[251,826],"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property. However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly. This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.","nodes":[{"content":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property. However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly. This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.","pos":[0,575],"nodes":[{"content":"Specify either the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id=\"ph3\">&lt;xref:System.Messaging.Message&gt;</ph> object.","pos":[0,188],"source":"Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object."},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property, the contents are serialized into the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property.","pos":[189,346],"source":" If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property."},{"content":"However, you can choose to write the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property directly.","pos":[347,448],"source":" However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly."},{"content":"This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.","pos":[449,575]}]}]},{"pos":[833,1465],"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","nodes":[{"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","pos":[0,632],"nodes":[{"content":"Unless you write the contents of the message directly to the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.","pos":[0,207],"source":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.","pos":[208,447],"source":" When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property."},{"content":"If you send the message without specifying a value for the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id=\"ph2\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.","pos":[448,632],"source":" If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>."}]}]},{"pos":[1472,1792],"content":"If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property. Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.","nodes":[{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseEncryption%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> for the body of this message, the message will be encrypted when it is sent, not when you set the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property.","pos":[0,230],"source":"If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property."},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property is never encrypted.","pos":[231,320],"source":" Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted."}]}],"pos":[57446,59247],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that contains the serialized information included in the <xref href=\"System.Messaging.Message.Body\"></xref> of the message.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the serialized information included in the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.Message.Body\"&gt;&lt;/xref&gt;</ph> of the message.","source":"A <xref href=\"System.IO.Stream\"></xref> that contains the serialized information included in the <xref href=\"System.Messaging.Message.Body\"></xref> of the message."}],"pos":[59452,59616],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property.","nodes":[{"pos":[0,104],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Body\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property."}],"pos":[59789,59894],"yaml":true},{"content":"Gets or sets the type of data that the message body contains.","nodes":[{"pos":[0,61],"content":"Gets or sets the type of data that the message body contains.","nodes":[{"content":"Gets or sets the type of data that the message body contains.","pos":[0,61]}]}],"pos":[60818,60880],"yaml":true},{"content":"Message Queuing recognizes the body contents as an object or as a serialized stream. The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.  \n  \n The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body. If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.  \n  \n Other formatters can provide binding functionality also, as shown in the following C# code.  \n  \n```  \nmessage.Formatter = new ActiveXMessageFormatter();  \nobject myObject message.Body;  \nif (myObject is string) {  \n}  \nif (myObject is int) {  \n}  \nif (myObject is float) {  \n}  \n```","nodes":[{"pos":[0,250],"content":"Message Queuing recognizes the body contents as an object or as a serialized stream. The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.","nodes":[{"content":"Message Queuing recognizes the body contents as an object or as a serialized stream. The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.","pos":[0,250],"nodes":[{"content":"Message Queuing recognizes the body contents as an object or as a serialized stream.","pos":[0,84]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property indicates the type of the object within the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the message.","pos":[85,250],"source":" The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message."}]}]},{"pos":[257,521],"content":"The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body. If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.","nodes":[{"content":"The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body. If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.","pos":[0,264],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> performs binding between native types and the object in a message body.","pos":[0,119],"source":"The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body."},{"content":"If you use the <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>, the formatter sets the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property for you.","pos":[120,264],"source":" If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you."}]}]},{"pos":[528,619],"content":"Other formatters can provide binding functionality also, as shown in the following C# code.","nodes":[{"content":"Other formatters can provide binding functionality also, as shown in the following C# code.","pos":[0,91]}]}],"pos":[60891,61720],"yaml":true,"extradata":"MT"},{"content":"The message body's true type, such as a string, a date, a currency, or a number.","nodes":[{"pos":[0,80],"content":"The message body's true type, such as a string, a date, a currency, or a number.","nodes":[{"content":"The message body's true type, such as a string, a date, a currency, or a number.","pos":[0,80]}]}],"pos":[62034,62115],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property.","nodes":[{"pos":[0,104],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Body\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property."}],"pos":[62286,62391],"yaml":true},{"content":"Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.","nodes":[{"pos":[0,134],"content":"Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.","nodes":[{"content":"Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.","pos":[0,134]}]}],"pos":[63345,63480],"yaml":true},{"content":"Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing. An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:  \n  \n-   Whenever a connector application passes a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.  \n  \n-   Whenever the sending application, rather than Message Queuing, encrypts a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.  \n  \n You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):  \n  \n-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  \n  \n-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  \n  \n-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  \n  \n-   <xref:System.Messaging.Message.DigitalSignature%2A>  \n  \n-   <xref:System.Messaging.Message.MessageType%2A>  \n  \n-   <xref:System.Messaging.Message.SenderId%2A>","nodes":[{"pos":[0,290],"content":"Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing. An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:","nodes":[{"content":"Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing. An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:","pos":[0,290],"nodes":[{"content":"Message Queuing requires the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property be set whenever an application sets a message property that is usually set by Message Queuing.","pos":[0,181],"source":"Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing."},{"content":"An application typically uses a <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> in the following two cases:","pos":[182,290],"source":" An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:"}]}]},{"pos":[300,524],"content":"Whenever a connector application passes a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.","nodes":[{"content":"Whenever a connector application passes a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.","pos":[0,224],"nodes":[{"content":"Whenever a connector application passes a message.","pos":[0,50]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.","pos":[51,224],"source":" The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message."}]}]},{"pos":[534,800],"content":"Whenever the sending application, rather than Message Queuing, encrypts a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.","nodes":[{"content":"Whenever the sending application, rather than Message Queuing, encrypts a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.","pos":[0,266],"nodes":[{"content":"Whenever the sending application, rather than Message Queuing, encrypts a message.","pos":[0,82]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> tells Message Queuing to use the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property value to decrypt the message.","pos":[83,266],"source":" The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message."}]}]},{"pos":[807,998],"content":"You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):","nodes":[{"content":"You must set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):","pos":[0,191],"source":"You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):"}]},{"pos":[1008,1069],"content":"<xref:System.Messaging.Message.AuthenticationProviderName%2A>","nodes":[]},{"pos":[1079,1140],"content":"<xref:System.Messaging.Message.AuthenticationProviderType%2A>","nodes":[]},{"pos":[1150,1208],"content":"<xref:System.Messaging.Message.DestinationSymmetricKey%2A>","nodes":[]},{"pos":[1218,1269],"content":"<xref:System.Messaging.Message.DigitalSignature%2A>","nodes":[]},{"pos":[1279,1325],"content":"<xref:System.Messaging.Message.MessageType%2A>","nodes":[]},{"pos":[1335,1378],"content":"<xref:System.Messaging.Message.SenderId%2A>","nodes":[]}],"pos":[63491,64890],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Guid\"></xref> defined by the application and used in conjunction with connector applications or message encryption. This <xref href=\"System.Guid\"></xref> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.","nodes":[{"pos":[0,323],"content":"A <xref href=\"System.Guid\"></xref> defined by the application and used in conjunction with connector applications or message encryption. This <xref href=\"System.Guid\"></xref> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> defined by the application and used in conjunction with connector applications or message encryption.","pos":[0,136],"source":"A <xref href=\"System.Guid\"></xref> defined by the application and used in conjunction with connector applications or message encryption."},{"content":"This <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.","pos":[137,323],"source":" This <xref href=\"System.Guid\"></xref> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing."}]}],"pos":[65084,65408],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ConnectorType\"></xref> property.","nodes":[{"pos":[0,113],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.ConnectorType\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ConnectorType\"></xref> property."}],"pos":[65584,65698],"yaml":true},{"content":"Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.","nodes":[{"pos":[0,124],"content":"Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.","nodes":[{"content":"Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.","pos":[0,124]}]}],"pos":[66652,66777],"yaml":true},{"content":"When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message. In this manner, the correlation identifier ties the report or acknowledgment message to the original message.  \n  \n The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.  \n  \n Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.  \n  \n When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message. The sending application can then match your response message to the message that was sent.","nodes":[{"pos":[0,280],"content":"When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message. In this manner, the correlation identifier ties the report or acknowledgment message to the original message.","nodes":[{"content":"When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message. In this manner, the correlation identifier ties the report or acknowledgment message to the original message.","pos":[0,280],"nodes":[{"content":"When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.","pos":[0,170]},{"content":"In this manner, the correlation identifier ties the report or acknowledgment message to the original message.","pos":[171,280]}]}]},{"pos":[287,534],"content":"The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.","nodes":[{"content":"The sending application can then match the acknowledgment or report with the original message by using the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property to identify the original message's <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property.","pos":[0,247],"source":"The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property."}]},{"pos":[541,732],"content":"Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.","nodes":[{"content":"Connector applications also must set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the acknowledgment and report messages to the message identifier of the original message.","pos":[0,191],"source":"Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message."}]},{"pos":[739,1053],"content":"When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message. The sending application can then match your response message to the message that was sent.","nodes":[{"content":"When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message. The sending application can then match your response message to the message that was sent.","pos":[0,314],"nodes":[{"content":"When your application sends a response message to the sending application, you can set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the response message to the message identifier of the original message.","pos":[0,223],"source":"When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message."},{"content":"The sending application can then match your response message to the message that was sent.","pos":[224,314]}]}]}],"pos":[66788,67850],"yaml":true,"extradata":"MT"},{"content":"The message identifier specified by the <xref href=\"System.Messaging.Message.Id\"></xref> property of the original message. The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.","nodes":[{"pos":[0,291],"content":"The message identifier specified by the <xref href=\"System.Messaging.Message.Id\"></xref> property of the original message. The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.","nodes":[{"content":"The message identifier specified by the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Id\"&gt;&lt;/xref&gt;</ph> property of the original message.","pos":[0,122],"source":"The message identifier specified by the <xref href=\"System.Messaging.Message.Id\"></xref> property of the original message."},{"content":"The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.","pos":[123,291]}]}],"pos":[68720,69012],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.CorrelationId\"></xref> property.","nodes":[{"pos":[0,113],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.CorrelationId\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.CorrelationId\"></xref> property."}],"pos":[69188,69302],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.CorrelationId\"></xref> is `null`.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.CorrelationId\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.CorrelationId\"></xref> is `null`."}],"pos":[69396,69471],"yaml":true},{"content":"Gets the intended destination queue for a message.","nodes":[{"pos":[0,50],"content":"Gets the intended destination queue for a message.","nodes":[{"content":"Gets the intended destination queue for a message.","pos":[0,50]}]}],"pos":[70443,70494],"yaml":true},{"content":"The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue. Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.","nodes":[{"pos":[0,307],"content":"The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue. Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.","nodes":[{"content":"The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue. Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.","pos":[0,307],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DestinationQueue%2A&gt;</ph> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.","pos":[0,185],"source":"The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue."},{"content":"Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.","pos":[186,307]}]}]}],"pos":[70505,70813],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the intended destination queue for the message.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> that specifies the intended destination queue for the message.","source":"A <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the intended destination queue for the message."}],"pos":[71189,71305],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DestinationQueue\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,231],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.DestinationQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DestinationQueue\"></xref> property."}],"pos":[71484,71724],"yaml":true},{"content":"Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.","nodes":[{"pos":[0,113],"content":"Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.","nodes":[{"content":"Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.","pos":[0,113]}]}],"pos":[72738,72852],"yaml":true},{"content":"Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property. The first is when your application, rather than Message Queuing, encrypts a message. The second is when you send an encrypted message to a queuing system other than Message Queuing.  \n  \n Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager. When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.  \n  \n If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application. It is then the responsibility of the receiving application to decrypt the message using the symmetric key.  \n  \n When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.  \n  \n The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.","nodes":[{"pos":[0,287],"content":"Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property. The first is when your application, rather than Message Queuing, encrypts a message. The second is when you send an encrypted message to a queuing system other than Message Queuing.","nodes":[{"content":"Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property. The first is when your application, rather than Message Queuing, encrypts a message. The second is when you send an encrypted message to a queuing system other than Message Queuing.","pos":[0,287],"nodes":[{"content":"Two scenarios require you to use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property.","pos":[0,105],"source":"Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property."},{"content":"The first is when your application, rather than Message Queuing, encrypts a message.","pos":[106,190]},{"content":"The second is when you send an encrypted message to a queuing system other than Message Queuing.","pos":[191,287]}]}]},{"pos":[294,576],"content":"Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager. When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.","nodes":[{"content":"Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager. When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.","pos":[0,282],"nodes":[{"content":"Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.","pos":[0,116]},{"content":"When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.","pos":[117,282]}]}]},{"pos":[583,902],"content":"If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application. It is then the responsibility of the receiving application to decrypt the message using the symmetric key.","nodes":[{"content":"If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application. It is then the responsibility of the receiving application to decrypt the message using the symmetric key.","pos":[0,319],"nodes":[{"content":"If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.","pos":[0,212]},{"content":"It is then the responsibility of the receiving application to decrypt the message using the symmetric key.","pos":[213,319]}]}]},{"pos":[909,1279],"content":"When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.","nodes":[{"content":"When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.","pos":[0,370],"nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property, you must also set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property.","pos":[0,166],"source":"When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property."},{"content":"When the message is sent, Message Queuing ignores the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property if the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property is not also set.","pos":[167,370],"source":" When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set."}]}]},{"pos":[1286,1390],"content":"The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property has a maximum array size of 256.","pos":[0,104],"source":"The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256."}]}],"pos":[72863,74264],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.","nodes":[{"pos":[0,133],"content":"An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.","nodes":[{"content":"An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.","pos":[0,133],"nodes":[{"content":"An array of byte values that specifies the destination symmetric key used to encrypt the message.","pos":[0,97]},{"content":"The default is a zero-length array.","pos":[98,133]}]}]}],"pos":[74482,74616],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> property.","nodes":[{"pos":[0,123],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.DestinationSymmetricKey\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> property."}],"pos":[74802,74926],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> is `null`.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.DestinationSymmetricKey\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> is `null`."}],"pos":[75020,75105],"yaml":true},{"content":"Gets or sets the digital signature that Message Queuing uses to authenticate the message.","nodes":[{"pos":[0,89],"content":"Gets or sets the digital signature that Message Queuing uses to authenticate the message.","nodes":[{"content":"Gets or sets the digital signature that Message Queuing uses to authenticate the message.","pos":[0,89]}]}],"pos":[76077,76167],"yaml":true},{"content":"Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0. In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication. The receiving application uses this property to retrieve the digital signature attached to the message.  \n  \n You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0. The sending application must specify Message Queuing version 1.0 signatures when requesting authentication. If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.  \n  \n The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent. In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.  \n  \n The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.  \n  \n When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.","nodes":[{"pos":[0,391],"content":"Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0. In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication. The receiving application uses this property to retrieve the digital signature attached to the message.","nodes":[{"content":"Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0. In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication. The receiving application uses this property to retrieve the digital signature attached to the message.","pos":[0,391],"nodes":[{"content":"Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.","pos":[0,118]},{"content":"In most cases, Message Queuing generates and sets the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property when the sending application requests authentication.","pos":[119,287],"source":" In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication."},{"content":"The receiving application uses this property to retrieve the digital signature attached to the message.","pos":[288,391]}]}]},{"pos":[398,772],"content":"You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0. The sending application must specify Message Queuing version 1.0 signatures when requesting authentication. If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.","nodes":[{"content":"You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0. The sending application must specify Message Queuing version 1.0 signatures when requesting authentication. If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.","pos":[0,374],"nodes":[{"content":"You can only use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property when running Message Queuing version 2.0.","pos":[0,123],"source":"You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0."},{"content":"The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.","pos":[124,231]},{"content":"If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.","pos":[232,374]}]}]},{"pos":[779,1160],"content":"The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent. In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.","nodes":[{"content":"The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent. In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.","pos":[0,381],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property, together with the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property, is also used by connector applications when a message is sent.","pos":[0,209],"source":"The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent."},{"content":"In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.","pos":[210,381]}]}]},{"pos":[1167,1264],"content":"The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property has a maximum array size of 256.","pos":[0,97],"source":"The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256."}]},{"pos":[1271,1625],"content":"When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.","nodes":[{"content":"When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.","pos":[0,354],"nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property, you must also set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property.","pos":[0,159],"source":"When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property."},{"content":"When a message is sent, Message Queuing ignores the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property if the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property is not also set.","pos":[160,354],"source":" When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set."}]}]}],"pos":[76178,77814],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.","nodes":[{"pos":[0,150],"content":"An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.","nodes":[{"content":"An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.","pos":[0,150],"nodes":[{"content":"An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.","pos":[0,114]},{"content":"The default is a zero-length array.","pos":[115,150]}]}]}],"pos":[78018,78169],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property.","nodes":[{"pos":[0,116],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.DigitalSignature\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property."}],"pos":[78348,78465],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property is `null`.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.DigitalSignature\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property is `null`."}],"pos":[78559,78646],"yaml":true},{"content":"Gets or sets the encryption algorithm used to encrypt the body of a private message.","nodes":[{"pos":[0,84],"content":"Gets or sets the encryption algorithm used to encrypt the body of a private message.","nodes":[{"content":"Gets or sets the encryption algorithm used to encrypt the body of a private message.","pos":[0,84]}]}],"pos":[79636,79721],"yaml":true},{"content":"If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt. The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.  \n  \n A queue can require that incoming messages be encrypted. If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message. The sending application can request that a negative acknowledgment message be returned in such a case.","nodes":[{"pos":[0,245],"content":"If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt. The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.","nodes":[{"content":"If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt. The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.","pos":[0,245],"nodes":[{"content":"If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.","pos":[0,98]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A&gt;</ph> property specifies the algorithm used to encrypt the message body of a private message.","pos":[99,245],"source":" The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message."}]}]},{"pos":[252,635],"content":"A queue can require that incoming messages be encrypted. If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message. The sending application can request that a negative acknowledgment message be returned in such a case.","nodes":[{"content":"A queue can require that incoming messages be encrypted. If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message. The sending application can request that a negative acknowledgment message be returned in such a case.","pos":[0,383],"nodes":[{"content":"A queue can require that incoming messages be encrypted.","pos":[0,56]},{"content":"If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.","pos":[57,280]},{"content":"The sending application can request that a negative acknowledgment message be returned in such a case.","pos":[281,383]}]}]}],"pos":[79732,80372],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.EncryptionAlgorithm\"></xref> enumeration values. The default is `RC2`.","nodes":[{"pos":[0,110],"content":"One of the <xref href=\"System.Messaging.EncryptionAlgorithm\"></xref> enumeration values. The default is `RC2`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.EncryptionAlgorithm\"&gt;&lt;/xref&gt;</ph> enumeration values.","pos":[0,88],"source":"One of the <xref href=\"System.Messaging.EncryptionAlgorithm\"></xref> enumeration values."},{"content":"The default is <ph id=\"ph1\">`RC2`</ph>.","pos":[89,110],"source":" The default is `RC2`."}]}],"pos":[80635,80746],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.EncryptionAlgorithm\"></xref> property.","nodes":[{"pos":[0,119],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.EncryptionAlgorithm\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.EncryptionAlgorithm\"></xref> property."}],"pos":[80928,81048],"yaml":true},{"content":"Gets or sets additional, application-defined information associated with the message.","nodes":[{"pos":[0,85],"content":"Gets or sets additional, application-defined information associated with the message.","nodes":[{"content":"Gets or sets additional, application-defined information associated with the message.","pos":[0,85]}]}],"pos":[81978,82064],"yaml":true},{"content":"The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message. It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.  \n  \n Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.  \n  \n When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.  \n  \n A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.","nodes":[{"pos":[0,310],"content":"The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message. It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.","nodes":[{"content":"The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message. It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.","pos":[0,310],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property provides for application-defined information, like a large binary object, that is associated with the message.","pos":[0,168],"source":"The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message."},{"content":"It is the responsibility of the receiving application to interpret the contents of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.","pos":[169,310],"source":" It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property."}]}]},{"pos":[317,506],"content":"Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.","nodes":[{"content":"Where possible, you should include message data in the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the message rather than the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.","pos":[0,189],"source":"Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property."}]},{"pos":[513,676],"content":"When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.","nodes":[{"content":"When working with foreign queues, use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property to specify message properties that do not exist in Message Queuing.","pos":[0,163],"source":"When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing."}]},{"pos":[683,842],"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.","nodes":[{"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.","pos":[0,159],"nodes":[{"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing.","pos":[0,80]},{"content":"Message Queuing communicates with such queues through a connector application.","pos":[81,159]}]}]}],"pos":[82075,82926],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.","nodes":[{"pos":[0,134],"content":"An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.","nodes":[{"content":"An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.","pos":[0,134],"nodes":[{"content":"An array of byte values that provides application-defined information associated with the message.","pos":[0,98]},{"content":"The default is a zero-length array.","pos":[99,134]}]}]}],"pos":[83116,83251],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Extension\"></xref> property.","nodes":[{"pos":[0,109],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Extension\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Extension\"></xref> property."}],"pos":[83423,83533],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.Extension\"></xref> property is `null`.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Extension\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.Extension\"></xref> property is `null`."}],"pos":[83627,83707],"yaml":true},{"content":"Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.","nodes":[{"pos":[0,107],"content":"Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.","nodes":[{"content":"Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.","pos":[0,107]}]}],"pos":[84637,84745],"yaml":true},{"content":"Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message. When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue. When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.  \n  \n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \n  \n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","nodes":[{"pos":[0,395],"content":"Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message. When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue. When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.","nodes":[{"content":"Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message. When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue. When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.","pos":[0,395],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property when reading and writing a message.","pos":[0,97],"source":"Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message."},{"content":"When a message is sent to the queue, the formatter serializes the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property into a stream that can be sent to the message queue.","pos":[98,265],"source":" When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue."},{"content":"When reading from a queue, the formatter deserializes the message data into the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property.","pos":[266,395],"source":" When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property."}]}]},{"pos":[402,1034],"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","nodes":[{"content":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.","pos":[0,632],"nodes":[{"content":"Unless you write the contents of the message directly to the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.","pos":[0,207],"source":"Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.","pos":[208,447],"source":" When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property."},{"content":"If you send the message without specifying a value for the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id=\"ph2\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.","pos":[448,632],"source":" If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>."}]}]},{"pos":[1041,1463],"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","nodes":[{"content":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.","pos":[0,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.","pos":[0,170],"source":"The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.","pos":[171,320],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.","pos":[321,422],"source":" The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components."}]}]}],"pos":[84756,86226],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Messaging.IMessageFormatter\"></xref> that produces a stream to be written to or read from the message body. The default is <xref href=\"System.Messaging.XmlMessageFormatter\"></xref>.","nodes":[{"pos":[0,204],"content":"The <xref href=\"System.Messaging.IMessageFormatter\"></xref> that produces a stream to be written to or read from the message body. The default is <xref href=\"System.Messaging.XmlMessageFormatter\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.IMessageFormatter\"&gt;&lt;/xref&gt;</ph> that produces a stream to be written to or read from the message body.","pos":[0,130],"source":"The <xref href=\"System.Messaging.IMessageFormatter\"></xref> that produces a stream to be written to or read from the message body."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Messaging.XmlMessageFormatter\"&gt;&lt;/xref&gt;</ph>.","pos":[131,204],"source":" The default is <xref href=\"System.Messaging.XmlMessageFormatter\"></xref>."}]}],"pos":[87534,87739],"yaml":true},{"content":"The <xref href=\"System.Messaging.Message.Formatter\"></xref> property is `null`.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Formatter\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.Message.Formatter\"></xref> property is `null`."}],"pos":[87895,87975],"yaml":true},{"content":"Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.","nodes":[{"pos":[0,137],"content":"Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.","nodes":[{"content":"Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.","pos":[0,137]}]}],"pos":[88923,89061],"yaml":true},{"content":"On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message. The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.","nodes":[{"pos":[0,226],"content":"On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message. The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.","nodes":[{"content":"On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message. The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.","pos":[0,226],"nodes":[{"content":"On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.","pos":[0,115]},{"content":"The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.","pos":[116,226]}]}]}],"pos":[89072,89299],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.HashAlgorithm\"></xref> enumeration values. For Windows XP, the default is `SHA`. Otherwise, the default is `MD5`.","nodes":[{"pos":[0,153],"content":"One of the <xref href=\"System.Messaging.HashAlgorithm\"></xref> enumeration values. For Windows XP, the default is `SHA`. Otherwise, the default is `MD5`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> enumeration values.","pos":[0,82],"source":"One of the <xref href=\"System.Messaging.HashAlgorithm\"></xref> enumeration values."},{"content":"For Windows XP, the default is <ph id=\"ph1\">`SHA`</ph>.","pos":[83,120],"source":" For Windows XP, the default is `SHA`."},{"content":"Otherwise, the default is <ph id=\"ph1\">`MD5`</ph>.","pos":[121,153],"source":" Otherwise, the default is `MD5`."}]}],"pos":[89538,89692],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.HashAlgorithm\"></xref> property.","nodes":[{"pos":[0,113],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.HashAlgorithm\"></xref> property."}],"pos":[89868,89982],"yaml":true},{"content":"Gets the message's identifier.","nodes":[{"pos":[0,30],"content":"Gets the message's identifier.","nodes":[{"content":"Gets the message's identifier.","pos":[0,30]}]}],"pos":[90870,90901],"yaml":true},{"content":"Message Queuing generates a message identifier when the message is sent. The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer. The combination of the two items produces a message identifier that is unique on the network.  \n  \n Message Queuing generates message identifiers for all messages—including acknowledgment and report messages. An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message. You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.  \n  \n You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue. To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message. The application reading the response message can then use the correlation identifier of the response message to identify the original message.","nodes":[{"pos":[0,341],"content":"Message Queuing generates a message identifier when the message is sent. The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer. The combination of the two items produces a message identifier that is unique on the network.","nodes":[{"content":"Message Queuing generates a message identifier when the message is sent. The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer. The combination of the two items produces a message identifier that is unique on the network.","pos":[0,341],"nodes":[{"content":"Message Queuing generates a message identifier when the message is sent.","pos":[0,72]},{"content":"The identifier is composed of 20 bytes and includes two items: the machine <ph id=\"ph1\">&lt;xref:System.Guid&gt;</ph> of the sending computer and a unique identifier for the message on the computer.","pos":[73,247],"source":" The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer."},{"content":"The combination of the two items produces a message identifier that is unique on the network.","pos":[248,341]}]}]},{"pos":[348,776],"content":"Message Queuing generates message identifiers for all messages—including acknowledgment and report messages. An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message. You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.","nodes":[{"content":"Message Queuing generates message identifiers for all messages—including acknowledgment and report messages. An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message. You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.","pos":[0,428],"nodes":[{"content":"Message Queuing generates message identifiers for all messages—including acknowledgment and report messages.","pos":[0,108]},{"content":"An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.","pos":[109,239]},{"content":"You can find the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property value of the original message in the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of an acknowledgment message.","pos":[240,428],"source":" You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message."}]}]},{"pos":[783,1288],"content":"You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue. To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message. The application reading the response message can then use the correlation identifier of the response message to identify the original message.","nodes":[{"content":"You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue. To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message. The application reading the response message can then use the correlation identifier of the response message to identify the original message.","pos":[0,505],"nodes":[{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property when sending a response message to a response queue.","pos":[0,120],"source":"You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue."},{"content":"To include the identifier of the original message in a response message, set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the response message to the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of the original message.","pos":[121,362],"source":" To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message."},{"content":"The application reading the response message can then use the correlation identifier of the response message to identify the original message.","pos":[363,505]}]}]}],"pos":[90912,92207],"yaml":true,"extradata":"MT"},{"content":"The message's unique identifier, which is generated by Message Queuing.","nodes":[{"pos":[0,71],"content":"The message's unique identifier, which is generated by Message Queuing.","nodes":[{"content":"The message's unique identifier, which is generated by Message Queuing.","pos":[0,71]}]}],"pos":[93047,93119],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Id\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,217],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Id\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Id\"></xref> property."}],"pos":[93284,93510],"yaml":true},{"content":"Specifies that no time-out exists.","nodes":[{"pos":[0,34],"content":"Specifies that no time-out exists.","nodes":[{"content":"Specifies that no time-out exists.","pos":[0,34]}]}],"pos":[94473,94508],"yaml":true},{"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue. For the latter, the time-out is the time allowed for a message to reach the queue. In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.","nodes":[{"pos":[0,494],"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue. For the latter, the time-out is the time allowed for a message to reach the queue. In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.","nodes":[{"content":"<xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue. For the latter, the time-out is the time allowed for a message to reach the queue. In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.","pos":[0,494],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> require a value that specifies a time-out.","pos":[0,150],"source":"<xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out."},{"content":"For the former, the time-out is the maximum time allowed for a message to be received from the queue.","pos":[151,252]},{"content":"For the latter, the time-out is the time allowed for a message to reach the queue.","pos":[253,335]},{"content":"In both cases, you can specify the time-out as a number of seconds or use <ph id=\"ph1\">&lt;xref:System.Messaging.Message.InfiniteTimeout&gt;</ph> to indicate that no time-out exists.","pos":[336,494],"source":" In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists."}]}]}],"pos":[94519,95014],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the message was the first message sent in a transaction.","nodes":[{"pos":[0,92],"content":"Gets a value that indicates whether the message was the first message sent in a transaction.","nodes":[{"content":"Gets a value that indicates whether the message was the first message sent in a transaction.","pos":[0,92]}]}],"pos":[96215,96308],"yaml":true},{"content":"Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.  \n  \n This property is available only with Message Queuing version 2.0 and later.  \n  \n To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.  \n  \n If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.","nodes":[{"pos":[0,190],"content":"Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.","nodes":[{"content":"Receiving applications use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> property to verify that a message was the first message sent in a single transaction to a single queue.","pos":[0,190],"source":"Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue."}]},{"pos":[197,272],"content":"This property is available only with Message Queuing version 2.0 and later.","nodes":[{"content":"This property is available only with Message Queuing version 2.0 and later.","pos":[0,75]}]},{"pos":[279,689],"content":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","nodes":[{"content":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","pos":[0,410],"nodes":[{"content":"To verify transaction boundaries, you can use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> property along with two other properties: <ph id=\"ph2\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph>.","pos":[0,256],"source":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>."},{"content":"Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","pos":[257,410]}]}]},{"pos":[696,895],"content":"If only one message is sent in a transaction, the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties are both set to <ph id=\"ph3\">`true`</ph>.","source":"If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`."}],"pos":[96319,97223],"yaml":true,"extradata":"MT"},{"content":"`true` if the message was the first message sent in a transaction; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the message was the first message sent in a transaction; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was the first message sent in a transaction; otherwise, `false`."}],"pos":[97571,97660],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.IsFirstInTransaction\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,235],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.IsFirstInTransaction\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.IsFirstInTransaction\"></xref> property."}],"pos":[97843,98087],"yaml":true},{"content":"Gets a value that indicates whether the message was the last message sent in a transaction.","nodes":[{"pos":[0,91],"content":"Gets a value that indicates whether the message was the last message sent in a transaction.","nodes":[{"content":"Gets a value that indicates whether the message was the last message sent in a transaction.","pos":[0,91]}]}],"pos":[99077,99169],"yaml":true},{"content":"Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.  \n  \n This property is available only with Message Queuing version 2.0 and later.  \n  \n To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.  \n  \n If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.","nodes":[{"pos":[0,188],"content":"Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.","nodes":[{"content":"Receiving applications use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> property to verify that a message was the last message sent in a single transaction to a single queue.","pos":[0,188],"source":"Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue."}]},{"pos":[195,270],"content":"This property is available only with Message Queuing version 2.0 and later.","nodes":[{"content":"This property is available only with Message Queuing version 2.0 and later.","pos":[0,75]}]},{"pos":[277,688],"content":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","nodes":[{"content":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","pos":[0,411],"nodes":[{"content":"To verify transaction boundaries, you can use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> property along with two other properties: <ph id=\"ph2\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph>.","pos":[0,256],"source":"To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>."},{"content":"Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.","pos":[257,411]}]}]},{"pos":[695,894],"content":"If only one message is sent in a transaction, the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties are both set to <ph id=\"ph3\">`true`</ph>.","source":"If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`."}],"pos":[99180,100083],"yaml":true,"extradata":"MT"},{"content":"`true` if the message was the last message sent in a single transaction; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the message was the last message sent in a single transaction; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was the last message sent in a single transaction; otherwise, `false`."}],"pos":[100428,100523],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.IsLastInTransaction\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,234],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.IsLastInTransaction\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.IsLastInTransaction\"></xref> property."}],"pos":[100705,100948],"yaml":true},{"content":"Gets or sets an application-defined Unicode string that describes the message.","nodes":[{"pos":[0,78],"content":"Gets or sets an application-defined Unicode string that describes the message.","nodes":[{"content":"Gets or sets an application-defined Unicode string that describes the message.","pos":[0,78]}]}],"pos":[101854,101933],"yaml":true},{"content":"You can use a message label for several purposes. For example, you can use it for display purposes or to selectively process messages based on the label value. The label does not need to be unique across messages.  \n  \n Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms. It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.","nodes":[{"pos":[0,213],"content":"You can use a message label for several purposes. For example, you can use it for display purposes or to selectively process messages based on the label value. The label does not need to be unique across messages.","nodes":[{"content":"You can use a message label for several purposes. For example, you can use it for display purposes or to selectively process messages based on the label value. The label does not need to be unique across messages.","pos":[0,213],"nodes":[{"content":"You can use a message label for several purposes.","pos":[0,49]},{"content":"For example, you can use it for display purposes or to selectively process messages based on the label value.","pos":[50,159]},{"content":"The label does not need to be unique across messages.","pos":[160,213]}]}]},{"pos":[220,505],"content":"Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms. It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.","nodes":[{"content":"Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms. It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.","pos":[0,285],"nodes":[{"content":"Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.","pos":[0,140]},{"content":"It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.","pos":[141,285]}]}]}],"pos":[101944,102454],"yaml":true,"extradata":"MT"},{"content":"The label of the message. The default is an empty string (\"\").","nodes":[{"pos":[0,62],"content":"The label of the message. The default is an empty string (\"\").","nodes":[{"content":"The label of the message. The default is an empty string (\"\").","pos":[0,62],"nodes":[{"content":"The label of the message.","pos":[0,25]},{"content":"The default is an empty string (\"\").","pos":[26,62]}]}]}],"pos":[102768,102831],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Label\"></xref> property.","nodes":[{"pos":[0,105],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Label\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Label\"></xref> property."}],"pos":[102999,103105],"yaml":true},{"content":"Introduced in MSMQ 3.0. Gets the message's lookup identifier.","nodes":[{"pos":[0,61],"content":"Introduced in MSMQ 3.0. Gets the message's lookup identifier.","nodes":[{"content":"Introduced in MSMQ 3.0. Gets the message's lookup identifier.","pos":[0,61],"nodes":[{"content":"Introduced in MSMQ 3.0.","pos":[0,23]},{"content":"Gets the message's lookup identifier.","pos":[24,61]}]}]}],"pos":[104029,104091],"yaml":true},{"content":"The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier. The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue. The lookup identifier is not the same as the message identifier that is generated when the message is sent.  \n  \n Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues. In other words, this includes both messages sent by sending applications and by Message Queuing. The lookup identifier is unique to the queue and has no meaning outside the queue.  \n  \n If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.  \n  \n The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.  \n  \n A lookup identifier is used to read a specific message in the queue. Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,  \n  \n Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application. One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.","nodes":[{"pos":[0,401],"content":"The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier. The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue. The lookup identifier is not the same as the message identifier that is generated when the message is sent.","nodes":[{"content":"The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier. The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue. The lookup identifier is not the same as the message identifier that is generated when the message is sent.","pos":[0,401],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property provides read-only access to a message's lookup identifier.","pos":[0,116],"source":"The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier."},{"content":"The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.","pos":[117,293]},{"content":"The lookup identifier is not the same as the message identifier that is generated when the message is sent.","pos":[294,401]}]}]},{"pos":[408,842],"content":"Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues. In other words, this includes both messages sent by sending applications and by Message Queuing. The lookup identifier is unique to the queue and has no meaning outside the queue.","nodes":[{"content":"Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues. In other words, this includes both messages sent by sending applications and by Message Queuing. The lookup identifier is unique to the queue and has no meaning outside the queue.","pos":[0,434],"nodes":[{"content":"Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.","pos":[0,254]},{"content":"In other words, this includes both messages sent by sending applications and by Message Queuing.","pos":[255,351]},{"content":"The lookup identifier is unique to the queue and has no meaning outside the queue.","pos":[352,434]}]}]},{"pos":[849,1080],"content":"If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.","nodes":[{"content":"If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.","pos":[0,231]}]},{"pos":[1087,1196],"content":"The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property can only be read on messages retrieved from a queue.","pos":[0,109],"source":"The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue."}]},{"pos":[1203,1659],"content":"A lookup identifier is used to read a specific message in the queue. Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,","nodes":[{"content":"A lookup identifier is used to read a specific message in the queue. Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,","pos":[0,456],"nodes":[{"content":"A lookup identifier is used to read a specific message in the queue.","pos":[0,68]},{"content":"Once the lookup identifier of a message is known, the receiving application can call the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,","pos":[69,456],"source":" Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,"}]}]},{"pos":[1666,1970],"content":"Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application. One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.","nodes":[{"content":"Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application. One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.","pos":[0,304],"nodes":[{"content":"Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.","pos":[0,103]},{"content":"One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.","pos":[104,304]}]}]}],"pos":[104102,106085],"yaml":true,"extradata":"MT"},{"content":"The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.","nodes":[{"pos":[0,124],"content":"The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.","nodes":[{"content":"The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.","pos":[0,124]}]}],"pos":[106194,106319],"yaml":true},{"content":"MSMQ 3.0 is not installed.","nodes":[{"pos":[0,26],"content":"MSMQ 3.0 is not installed.","nodes":[{"content":"MSMQ 3.0 is not installed.","pos":[0,26]}]}],"pos":[106498,106525],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.LookupId\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,223],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.LookupId\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.LookupId\"></xref> property."}],"pos":[106635,106867],"yaml":true},{"content":"Gets the message type: `Normal`, `Acknowledgment`, or `Report`.","nodes":[{"pos":[0,63],"content":"Gets the message type: <ph id=\"ph1\">`Normal`</ph>, <ph id=\"ph2\">`Acknowledgment`</ph>, or <ph id=\"ph3\">`Report`</ph>.","source":"Gets the message type: `Normal`, `Acknowledgment`, or `Report`."}],"pos":[107700,107766],"yaml":true},{"content":"Message Queuing typically sets this property when it sends the message. A Message Queuing message can be one of the following types:  \n  \n-   `Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.  \n  \n-   `Acknowledgement`, which Message Queuing generates whenever the sending application requests one. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.  \n  \n-   `Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager. When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","nodes":[{"pos":[0,132],"content":"Message Queuing typically sets this property when it sends the message. A Message Queuing message can be one of the following types:","nodes":[{"content":"Message Queuing typically sets this property when it sends the message. A Message Queuing message can be one of the following types:","pos":[0,132],"nodes":[{"content":"Message Queuing typically sets this property when it sends the message.","pos":[0,71]},{"content":"A Message Queuing message can be one of the following types:","pos":[72,132]}]}]},{"pos":[142,281],"content":"<ph id=\"ph1\">`Normal`</ph>, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.","source":"`Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application."},{"pos":[291,648],"content":"`Acknowledgement`, which Message Queuing generates whenever the sending application requests one. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.","nodes":[{"content":"<ph id=\"ph1\">`Acknowledgement`</ph>, which Message Queuing generates whenever the sending application requests one.","pos":[0,97],"source":"`Acknowledgement`, which Message Queuing generates whenever the sending application requests one."},{"content":"For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.","pos":[98,228]},{"content":"Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.","pos":[229,357]}]},{"pos":[658,937],"content":"`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager. When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","nodes":[{"content":"<ph id=\"ph1\">`Report`</ph>, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.","pos":[0,105],"source":"`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager."},{"content":"When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","pos":[106,279]}]}],"pos":[107777,108723],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.Message.MessageType\"></xref> values.","nodes":[{"pos":[0,76],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.MessageType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Messaging.Message.MessageType\"></xref> values."}],"pos":[109082,109159],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.MessageType\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,226],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.MessageType\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.MessageType\"></xref> property."}],"pos":[109333,109568],"yaml":true},{"content":"Gets or sets the message priority, which determines where in the queue the message is placed.","nodes":[{"pos":[0,93],"content":"Gets or sets the message priority, which determines where in the queue the message is placed.","nodes":[{"content":"Gets or sets the message priority, which determines where in the queue the message is placed.","pos":[0,93]}]}],"pos":[110492,110586],"yaml":true},{"content":"The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination. Higher-priority messages are given preference during routing and inserted toward the front of the destination queue. Messages with the same priority are placed in the queue according to their arrival time.  \n  \n You can set a meaningful priority only for non-transactional messages. Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.","nodes":[{"pos":[0,373],"content":"The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination. Higher-priority messages are given preference during routing and inserted toward the front of the destination queue. Messages with the same priority are placed in the queue according to their arrival time.","nodes":[{"content":"The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination. Higher-priority messages are given preference during routing and inserted toward the front of the destination queue. Messages with the same priority are placed in the queue according to their arrival time.","pos":[0,373],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.","pos":[0,167],"source":"The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination."},{"content":"Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.","pos":[168,284]},{"content":"Messages with the same priority are placed in the queue according to their arrival time.","pos":[285,373]}]}]},{"pos":[380,597],"content":"You can set a meaningful priority only for non-transactional messages. Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.","nodes":[{"content":"You can set a meaningful priority only for non-transactional messages.","pos":[0,70]},{"content":"Message Queuing automatically sets the priority for transactional messages to <ph id=\"ph1\">`Lowest`</ph>, which causes transactional message priority to be ignored.","pos":[71,217],"source":" Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored."}]}],"pos":[110597,111199],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.MessagePriority\"></xref> values, which represent the priority levels of non-transactional messages. The default is `Normal`.","nodes":[{"pos":[0,164],"content":"One of the <xref href=\"System.Messaging.MessagePriority\"></xref> values, which represent the priority levels of non-transactional messages. The default is `Normal`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessagePriority\"&gt;&lt;/xref&gt;</ph> values, which represent the priority levels of non-transactional messages.","pos":[0,139],"source":"One of the <xref href=\"System.Messaging.MessagePriority\"></xref> values, which represent the priority levels of non-transactional messages."},{"content":"The default is <ph id=\"ph1\">`Normal`</ph>.","pos":[140,164],"source":" The default is `Normal`."}]}],"pos":[112070,112235],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Priority\"></xref> property.","nodes":[{"pos":[0,108],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Priority\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Priority\"></xref> property."}],"pos":[112406,112515],"yaml":true},{"content":"Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.","nodes":[{"pos":[0,140],"content":"Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.","nodes":[{"content":"Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.","pos":[0,140]}]}],"pos":[113457,113598],"yaml":true},{"content":"The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.  \n  \n If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer. Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.  \n  \n If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.","nodes":[{"pos":[0,200],"content":"The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.","pos":[0,200],"source":"The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue."}]},{"pos":[207,476],"content":"If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer. Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.","nodes":[{"content":"If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.","pos":[0,166]},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> could affect throughput.","pos":[167,269],"source":" Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput."}]},{"pos":[483,668],"content":"If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.","nodes":[{"content":"If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property.","pos":[0,185],"source":"If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property."}]}],"pos":[113609,114284],"yaml":true,"extradata":"MT"},{"content":"`true` if delivery of the message is guaranteed (through saving the message to disk while en route); `false` if delivery is not assured. The default is `false`.","nodes":[{"pos":[0,160],"content":"`true` if delivery of the message is guaranteed (through saving the message to disk while en route); `false` if delivery is not assured. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if delivery of the message is guaranteed (through saving the message to disk while en route); <ph id=\"ph2\">`false`</ph> if delivery is not assured.","pos":[0,136],"source":"`true` if delivery of the message is guaranteed (through saving the message to disk while en route); `false` if delivery is not assured."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[137,160],"source":" The default is `false`."}]}],"pos":[114615,114778],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Recoverable\"></xref> property.","nodes":[{"pos":[0,111],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.Recoverable\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Recoverable\"></xref> property."}],"pos":[114952,115064],"yaml":true},{"content":"Gets or sets the queue that receives application-generated response messages.","nodes":[{"pos":[0,77],"content":"Gets or sets the queue that receives application-generated response messages.","nodes":[{"content":"Gets or sets the queue that receives application-generated response messages.","pos":[0,77]}]}],"pos":[116018,116096],"yaml":true},{"content":"The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application. The sending application specifies response queues when the application sends its messages. Any available queue can be specified as a response queue.  \n  \n Messages returned to the response queue are application-specific. The application must define the contents of the messages as well as the action to take upon receipt of a message.","nodes":[{"pos":[0,354],"content":"The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application. The sending application specifies response queues when the application sends its messages. Any available queue can be specified as a response queue.","nodes":[{"content":"The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application. The sending application specifies response queues when the application sends its messages. Any available queue can be specified as a response queue.","pos":[0,354],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ResponseQueue%2A&gt;</ph> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.","pos":[0,205],"source":"The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application."},{"content":"The sending application specifies response queues when the application sends its messages.","pos":[206,296]},{"content":"Any available queue can be specified as a response queue.","pos":[297,354]}]}]},{"pos":[361,540],"content":"Messages returned to the response queue are application-specific. The application must define the contents of the messages as well as the action to take upon receipt of a message.","nodes":[{"content":"Messages returned to the response queue are application-specific. The application must define the contents of the messages as well as the action to take upon receipt of a message.","pos":[0,179],"nodes":[{"content":"Messages returned to the response queue are application-specific.","pos":[0,65]},{"content":"The application must define the contents of the messages as well as the action to take upon receipt of a message.","pos":[66,179]}]}]}],"pos":[116107,116652],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Messaging.MessageQueue\"></xref> to which application-generated response messages are returned. The default is `null`.","nodes":[{"pos":[0,140],"content":"The <xref href=\"System.Messaging.MessageQueue\"></xref> to which application-generated response messages are returned. The default is `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> to which application-generated response messages are returned.","pos":[0,117],"source":"The <xref href=\"System.Messaging.MessageQueue\"></xref> to which application-generated response messages are returned."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[118,140],"source":" The default is `null`."}]}],"pos":[117029,117170],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ResponseQueue\"></xref> property.","nodes":[{"pos":[0,113],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.ResponseQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ResponseQueue\"></xref> property."}],"pos":[117346,117460],"yaml":true},{"content":"Gets or sets the security context for a message.","nodes":[{"pos":[0,48],"content":"Gets or sets the security context for a message.","nodes":[{"content":"Gets or sets the security context for a message.","pos":[0,48]}]}],"pos":[118426,118475],"yaml":true},{"content":"A <xref href=\"System.Messaging.SecurityContext\"></xref> object that contains the security context for a message, if the property has previously been set; otherwise NULL.","nodes":[{"pos":[0,169],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.SecurityContext\"&gt;&lt;/xref&gt;</ph> object that contains the security context for a message, if the property has previously been set; otherwise NULL.","source":"A <xref href=\"System.Messaging.SecurityContext\"></xref> object that contains the security context for a message, if the property has previously been set; otherwise NULL."}],"pos":[118644,118814],"yaml":true},{"content":"Gets or sets the security certificate used to authenticate messages.","nodes":[{"pos":[0,68],"content":"Gets or sets the security certificate used to authenticate messages.","nodes":[{"content":"Gets or sets the security certificate used to authenticate messages.","pos":[0,68]}]}],"pos":[119771,119840],"yaml":true},{"content":"The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.  \n  \n Message Queuing can authenticate a message using either an internal or external security certificate. Message Queuing provides internal certificates, which are used to verify message integrity. A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message. In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender. An internal certificate has no usable value to a receiving application.  \n  \n An external certificate must be registered with the directory service of the Message Queuing system. An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.","nodes":[{"pos":[0,156],"content":"The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.","nodes":[{"content":"The receiving application uses the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property when the message includes an external security certificate.","pos":[0,156],"source":"The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate."}]},{"pos":[163,755],"content":"Message Queuing can authenticate a message using either an internal or external security certificate. Message Queuing provides internal certificates, which are used to verify message integrity. A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message. In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender. An internal certificate has no usable value to a receiving application.","nodes":[{"content":"Message Queuing can authenticate a message using either an internal or external security certificate. Message Queuing provides internal certificates, which are used to verify message integrity. A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message. In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender. An internal certificate has no usable value to a receiving application.","pos":[0,592],"nodes":[{"content":"Message Queuing can authenticate a message using either an internal or external security certificate.","pos":[0,101]},{"content":"Message Queuing provides internal certificates, which are used to verify message integrity.","pos":[102,193]},{"content":"A certification authority provides an external certificate, which you can access through the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property of the message.","pos":[194,364],"source":" A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message."},{"content":"In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.","pos":[365,520]},{"content":"An internal certificate has no usable value to a receiving application.","pos":[521,592]}]}]},{"pos":[762,1089],"content":"An external certificate must be registered with the directory service of the Message Queuing system. An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.","nodes":[{"content":"An external certificate must be registered with the directory service of the Message Queuing system. An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.","pos":[0,327],"nodes":[{"content":"An external certificate must be registered with the directory service of the Message Queuing system.","pos":[0,100]},{"content":"An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.","pos":[101,327]}]}]}],"pos":[119851,120947],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.","nodes":[{"pos":[0,163],"content":"An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.","nodes":[{"content":"An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.","pos":[0,163],"nodes":[{"content":"An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.","pos":[0,127]},{"content":"The default is a zero-length array.","pos":[128,163]}]}]}],"pos":[121153,121317],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderCertificate\"></xref> property.","nodes":[{"pos":[0,117],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.SenderCertificate\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderCertificate\"></xref> property."}],"pos":[121497,121615],"yaml":true},{"content":"Gets the identifier of the sending user.","nodes":[{"pos":[0,40],"content":"Gets the identifier of the sending user.","nodes":[{"content":"Gets the identifier of the sending user.","pos":[0,40]}]}],"pos":[122539,122580],"yaml":true},{"content":"If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent. This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue. If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated. Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.  \n  \n A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems. Message Queuing requires connector applications to provide sender identification. You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.","nodes":[{"pos":[0,718],"content":"If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent. This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue. If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated. Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AttachSenderId%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the sender identifier specified in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property is not attached to the message when it is sent.","pos":[0,217],"source":"If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent."},{"content":"This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.","pos":[218,343]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AttachSenderId%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property value is trustworthy only if the message was authenticated.","pos":[344,537],"source":" If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property in conjunction with the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property to verify the sender's access rights.","pos":[538,718],"source":" Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights."}]},{"pos":[725,1084],"content":"A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems. Message Queuing requires connector applications to provide sender identification. You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.","nodes":[{"content":"A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems. Message Queuing requires connector applications to provide sender identification. You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.","pos":[0,359],"nodes":[{"content":"A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.","pos":[0,146]},{"content":"Message Queuing requires connector applications to provide sender identification.","pos":[147,228]},{"content":"You must set the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property when sending a message through a connector application.","pos":[229,359],"source":" You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application."}]}]}],"pos":[122591,123680],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.","nodes":[{"pos":[0,214],"content":"An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.","nodes":[{"content":"An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.","pos":[0,214],"nodes":[{"content":"An array of byte values that identifies the sender.","pos":[0,51]},{"content":"The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.","pos":[52,214]}]}]}],"pos":[123863,124078],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderId\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,223],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.SenderId\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderId\"></xref> property."}],"pos":[124249,124481],"yaml":true},{"content":"Gets the version of Message Queuing used to send the message.","nodes":[{"pos":[0,61],"content":"Gets the version of Message Queuing used to send the message.","nodes":[{"content":"Gets the version of Message Queuing used to send the message.","pos":[0,61]}]}],"pos":[125435,125497],"yaml":true},{"content":"The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features. For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.  \n  \n The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.","nodes":[{"pos":[0,259],"content":"The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features. For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.","nodes":[{"content":"The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features. For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.","pos":[0,259],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderVersion%2A&gt;</ph> property is important for certain features.","pos":[0,96],"source":"The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features."},{"content":"For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.","pos":[97,259]}]}]},{"pos":[266,384],"content":"The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.","nodes":[{"content":"The sending Queue Manager sets the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SenderVersion%2A&gt;</ph> property when the message is sent.","pos":[0,118],"source":"The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent."}]}],"pos":[125508,125897],"yaml":true,"extradata":"MT"},{"content":"The version of Message Queuing used to send the message.","nodes":[{"pos":[0,56],"content":"The version of Message Queuing used to send the message.","nodes":[{"content":"The version of Message Queuing used to send the message.","pos":[0,56]}]}],"pos":[126222,126279],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderVersion\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,228],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.SenderVersion\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderVersion\"></xref> property."}],"pos":[126455,126692],"yaml":true},{"content":"Gets the date and time on the sending computer that the message was sent by the source queue manager.","nodes":[{"pos":[0,101],"content":"Gets the date and time on the sending computer that the message was sent by the source queue manager.","nodes":[{"content":"Gets the date and time on the sending computer that the message was sent by the source queue manager.","pos":[0,101]}]}],"pos":[127616,127718],"yaml":true},{"content":"The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created. This time zone could be different from those of the source and destination queues.","nodes":[{"pos":[0,266],"content":"The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created. This time zone could be different from those of the source and destination queues.","nodes":[{"content":"The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created. This time zone could be different from those of the source and destination queues.","pos":[0,266],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SentTime%2A&gt;</ph> property is adjusted to the local time of the computer on which this instance of the <ph id=\"ph2\">&lt;xref:System.Messaging.Message&gt;</ph> class was created.","pos":[0,183],"source":"The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created."},{"content":"This time zone could be different from those of the source and destination queues.","pos":[184,266]}]}]}],"pos":[127729,127996],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the time the message was sent.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the time the message was sent.","source":"A <xref href=\"System.DateTime\"></xref> that represents the time the message was sent."}],"pos":[128313,128399],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SentTime\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,223],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.SentTime\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SentTime\"></xref> property."}],"pos":[128570,128802],"yaml":true},{"content":"Gets the computer from which the message originated.","nodes":[{"pos":[0,52],"content":"Gets the computer from which the message originated.","nodes":[{"content":"Gets the computer from which the message originated.","pos":[0,52]}]}],"pos":[129756,129809],"yaml":true},{"content":"The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\\\\\). For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.","nodes":[{"pos":[0,215],"content":"The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\\\\\). For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.","nodes":[{"content":"The format of the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.SourceMachine%2A&gt;</ph> property does not include preceding two forward slashes (<ph id=\"ph2\">\\\\</ph><ph id=\"ph3\">\\\\</ph>).","pos":[0,130],"source":"The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\\\\\)."},{"content":"For example, <ph id=\"ph1\">`myServer`</ph> is a valid <ph id=\"ph2\">&lt;xref:System.Messaging.Message.SourceMachine%2A&gt;</ph>.","pos":[131,215],"source":" For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>."}]}],"pos":[129820,130036],"yaml":true,"extradata":"MT"},{"content":"The name of the computer from which the message was sent.","nodes":[{"pos":[0,57],"content":"The name of the computer from which the message was sent.","nodes":[{"content":"The name of the computer from which the message was sent.","pos":[0,57]}]}],"pos":[130364,130422],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SourceMachine\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,228],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.SourceMachine\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SourceMachine\"></xref> property."}],"pos":[130598,130835],"yaml":true},{"content":"The computer information or directory service could not be accessed.","nodes":[{"pos":[0,68],"content":"The computer information or directory service could not be accessed.","nodes":[{"content":"The computer information or directory service could not be accessed.","pos":[0,68]}]}],"pos":[130957,131026],"yaml":true},{"content":"Gets or sets the maximum amount of time for the message to be received from the destination queue.","nodes":[{"pos":[0,98],"content":"Gets or sets the maximum amount of time for the message to be received from the destination queue.","nodes":[{"content":"Gets or sets the maximum amount of time for the message to be received from the destination queue.","pos":[0,98]}]}],"pos":[131998,132097],"yaml":true},{"content":"The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue. The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.  \n  \n> [!CAUTION]\n>  When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing. Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.  \n  \n If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.  \n  \n You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.  \n  \n If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.  \n  \n When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.","nodes":[{"pos":[0,295],"content":"The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue. The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.","nodes":[{"content":"The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue. The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.","pos":[0,295],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property specifies the total time for a sent message to be received from the destination queue.","pos":[0,151],"source":"The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue."},{"content":"The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.","pos":[152,295]}]}]},{"pos":[303,667],"content":"[!CAUTION]\n When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing. Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.","leadings":["","> "],"nodes":[{"content":" When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing. Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.","pos":[11,362],"nodes":[{"content":"When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.","pos":[1,158]},{"content":"Otherwise, unpredictable behavior might result when sending a message whose <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property is not <ph id=\"ph2\">&lt;xref:System.Messaging.Message.InfiniteTimeout&gt;</ph>.","pos":[159,351],"source":" Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>."}]}]},{"pos":[674,1108],"content":"If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.","nodes":[{"content":"If the interval specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.","pos":[0,204],"source":"If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways."},{"content":"If the message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the message is sent to the dead-letter queue.","pos":[205,341],"source":" If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, the message is ignored.","pos":[342,434],"source":" If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored."}]},{"pos":[1115,1361],"content":"You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.","nodes":[{"content":"You can set the message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.","pos":[0,246],"source":"You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires."}]},{"pos":[1368,1630],"content":"If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.","nodes":[{"content":"If the value specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property is less than the value specified by the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property, <ph id=\"ph3\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> takes precedence.","pos":[0,262],"source":"If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence."}]},{"pos":[1637,1800],"content":"When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.","nodes":[{"content":"When several messages are sent in a single transaction, Message Queuing uses the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property of the first message.","pos":[0,163],"source":"When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message."}]}],"pos":[132108,133922],"yaml":true,"extradata":"MT"},{"content":"The total time for a sent message to be received from the destination queue. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,154],"content":"The total time for a sent message to be received from the destination queue. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.","nodes":[{"content":"The total time for a sent message to be received from the destination queue.","pos":[0,76]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","pos":[77,154],"source":" The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>."}]}],"pos":[134361,134516],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> property.","nodes":[{"pos":[0,116],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TimeToBeReceived\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> property."}],"pos":[134695,134812],"yaml":true},{"content":"The value specified for <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> is invalid.","nodes":[{"pos":[0,98],"content":"The value specified for <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TimeToBeReceived\"&gt;&lt;/xref&gt;</ph> is invalid.","source":"The value specified for <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> is invalid."}],"pos":[134906,135005],"yaml":true},{"content":"Gets or sets the maximum amount of time for the message to reach the queue.","nodes":[{"pos":[0,75],"content":"Gets or sets the maximum amount of time for the message to reach the queue.","nodes":[{"content":"Gets or sets the maximum amount of time for the message to reach the queue.","pos":[0,75]}]}],"pos":[136032,136108],"yaml":true},{"content":"If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored  \n  \n You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.  \n  \n If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message. If the queue is local, the message always reaches it.  \n  \n If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.  \n  \n When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.","nodes":[{"pos":[0,431],"content":"If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored","nodes":[{"content":"If the interval specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.","pos":[0,202],"source":"If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways."},{"content":"If the message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the message is sent to the dead-letter queue.","pos":[203,339],"source":" If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, the message is ignored","pos":[340,431],"source":" If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored"}]},{"pos":[438,682],"content":"You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.","nodes":[{"content":"You can set he message's <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.","pos":[0,244],"source":"You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires."}]},{"pos":[689,938],"content":"If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message. If the queue is local, the message always reaches it.","nodes":[{"content":"If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message. If the queue is local, the message always reaches it.","pos":[0,249],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message.","pos":[0,195],"source":"If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message."},{"content":"If the queue is local, the message always reaches it.","pos":[196,249]}]}]},{"pos":[945,1210],"content":"If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.","nodes":[{"content":"If the value specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property is greater than the value specified by the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property, <ph id=\"ph3\">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> takes precedence.","pos":[0,265],"source":"If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence."}]},{"pos":[1217,1380],"content":"When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.","nodes":[{"content":"When several messages are sent in a single transaction, Message Queuing uses the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property of the first message.","pos":[0,163],"source":"When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message."}]}],"pos":[136119,137510],"yaml":true,"extradata":"MT"},{"content":"The time limit for the message to reach the destination queue, beginning from the time the message is sent. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,185],"content":"The time limit for the message to reach the destination queue, beginning from the time the message is sent. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.","nodes":[{"content":"The time limit for the message to reach the destination queue, beginning from the time the message is sent.","pos":[0,107]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","pos":[108,185],"source":" The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>."}]}],"pos":[137949,138135],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> property.","nodes":[{"pos":[0,116],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TimeToReachQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> property."}],"pos":[138314,138431],"yaml":true},{"content":"The value specified for <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> is invalid. It might represent a negative number.","nodes":[{"pos":[0,136],"content":"The value specified for <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> is invalid. It might represent a negative number.","nodes":[{"content":"The value specified for <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TimeToReachQueue\"&gt;&lt;/xref&gt;</ph> is invalid.","pos":[0,98],"source":"The value specified for <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> is invalid."},{"content":"It might represent a negative number.","pos":[99,136]}]}],"pos":[138525,138662],"yaml":true},{"content":"Gets the identifier for the transaction of which the message was a part.","nodes":[{"pos":[0,72],"content":"Gets the identifier for the transaction of which the message was a part.","nodes":[{"content":"Gets the identifier for the transaction of which the message was a part.","pos":[0,72]}]}],"pos":[139671,139744],"yaml":true},{"content":"Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction. The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.  \n  \n This property is available only for Message Queuing version 2.0 and later.  \n  \n Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>. Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.  \n  \n You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.","nodes":[{"pos":[0,298],"content":"Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction. The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.","nodes":[{"content":"Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction. The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.","pos":[0,298],"nodes":[{"content":"Receiving applications use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph> property to verify that a message was sent as part of a specific transaction.","pos":[0,157],"source":"Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction."},{"content":"The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.","pos":[158,298]}]}]},{"pos":[305,379],"content":"This property is available only for Message Queuing version 2.0 and later.","nodes":[{"content":"This property is available only for Message Queuing version 2.0 and later.","pos":[0,74]}]},{"pos":[386,656],"content":"Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>. Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.","nodes":[{"content":"Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <bpt id=\"p1\">&lt;sup&gt;</bpt>20<ept id=\"p1\">&lt;/sup&gt;</ept>.","pos":[0,159],"source":"Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>."},{"content":"Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.","pos":[160,270]}]},{"pos":[663,911],"content":"You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph> property along with the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties to verify transaction boundaries.","pos":[0,248],"source":"You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries."}]}],"pos":[139755,140675],"yaml":true,"extradata":"MT"},{"content":"The identifier for the transaction associated with the message.","nodes":[{"pos":[0,63],"content":"The identifier for the transaction associated with the message.","nodes":[{"content":"The identifier for the transaction associated with the message.","pos":[0,63]}]}],"pos":[141003,141067],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TransactionId\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,228],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TransactionId\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TransactionId\"></xref> property."}],"pos":[141243,141480],"yaml":true},{"content":"Gets the transaction status queue on the source computer.","nodes":[{"pos":[0,57],"content":"Gets the transaction status queue on the source computer.","nodes":[{"content":"Gets the transaction status queue on the source computer.","pos":[0,57]}]}],"pos":[142488,142546],"yaml":true},{"content":"The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications. Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.  \n  \n A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.  \n  \n The connector application can use the transaction status queue to send acknowledgment messages back to the sending application. The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.","nodes":[{"pos":[0,342],"content":"The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications. Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.","nodes":[{"content":"The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications. Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.","pos":[0,342],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A&gt;</ph> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.","pos":[0,200],"source":"The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications."},{"content":"Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.","pos":[201,342]}]}]},{"pos":[349,508],"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.","nodes":[{"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.","pos":[0,159],"nodes":[{"content":"A foreign queue exists in a queuing system other than Microsoft Message Queuing.","pos":[0,80]},{"content":"Message Queuing communicates with such queues through a connector application.","pos":[81,159]}]}]},{"pos":[515,780],"content":"The connector application can use the transaction status queue to send acknowledgment messages back to the sending application. The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.","nodes":[{"content":"The connector application can use the transaction status queue to send acknowledgment messages back to the sending application. The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.","pos":[0,265],"nodes":[{"content":"The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.","pos":[0,127]},{"content":"The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.","pos":[128,265]}]}]}],"pos":[142557,143344],"yaml":true,"extradata":"MT"},{"content":"The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is `null`.","nodes":[{"pos":[0,159],"content":"The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is `null`.","nodes":[{"content":"The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.","pos":[0,136]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[137,159],"source":" The default is `null`."}]}],"pos":[143743,143903],"yaml":true},{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.  \n  \n -or-  \n  \n The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TransactionStatusQueue\"></xref> property.","nodes":[{"pos":[0,97],"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","nodes":[{"content":"The message has not been sent. This property can only be read on messages retrieved from a queue.","pos":[0,97],"nodes":[{"content":"The message has not been sent.","pos":[0,30]},{"content":"This property can only be read on messages retrieved from a queue.","pos":[31,97]}]}]},{"pos":[104,108],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[115,237],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.TransactionStatusQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TransactionStatusQueue\"></xref> property."}],"pos":[144088,144334],"yaml":true},{"content":"Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.","nodes":[{"pos":[0,105],"content":"Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.","nodes":[{"content":"Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.","pos":[0,105]}]}],"pos":[145312,145418],"yaml":true},{"content":"The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated. If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.  \n  \n If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.  \n  \n You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards such messages before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.","nodes":[{"pos":[0,316],"content":"The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated. If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.","nodes":[{"content":"The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated. If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.","pos":[0,316],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseAuthentication%2A&gt;</ph> property specifies whether the message needs to be authenticated.","pos":[0,122],"source":"The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated."},{"content":"If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.","pos":[123,316]}]}]},{"pos":[323,520],"content":"If <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseAuthentication%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph> and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.","source":"If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue."},{"pos":[527,824],"content":"You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards such messages before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.","nodes":[{"content":"You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards such messages before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.","pos":[0,297],"nodes":[{"content":"You cannot determine if a message failed authentication by looking at its properties.","pos":[0,85]},{"content":"Message Queuing discards such messages before they are delivered to the queue.","pos":[86,164]},{"content":"However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.","pos":[165,297]}]}]}],"pos":[145429,146260],"yaml":true,"extradata":"MT"},{"content":"`true` if the sending application requested authentication for the message; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the sending application requested authentication for the message; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the sending application requested authentication for the message; otherwise, `false`."}],"pos":[146465,146563],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseAuthentication\"></xref> property.","nodes":[{"pos":[0,117],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.UseAuthentication\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseAuthentication\"></xref> property."}],"pos":[146743,146861],"yaml":true},{"content":"Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.","nodes":[{"pos":[0,132],"content":"Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.","nodes":[{"content":"Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.","pos":[0,132]}]}],"pos":[147845,147978],"yaml":true},{"content":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message. Delivery failure could be caused by a message timer expiring, for example.  \n  \n In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.  \n  \n When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed. Messages stored in dead-letter queues count against the size quota for the computer where the queue resides. The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.  \n  \n You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","nodes":[{"pos":[0,488],"content":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message. Delivery failure could be caused by a message timer expiring, for example.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> properties specify how Message Queuing tracks a message.","pos":[0,169],"source":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.","pos":[170,413],"source":" If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message."},{"content":"Delivery failure could be caused by a message timer expiring, for example.","pos":[414,488]}]},{"pos":[495,686],"content":"In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.","nodes":[{"content":"In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.","pos":[0,191]}]},{"pos":[693,1087],"content":"When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed. Messages stored in dead-letter queues count against the size quota for the computer where the queue resides. The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.","nodes":[{"content":"When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed. Messages stored in dead-letter queues count against the size quota for the computer where the queue resides. The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.","pos":[0,394],"nodes":[{"content":"When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.","pos":[0,133]},{"content":"Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.","pos":[134,242]},{"content":"The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.","pos":[243,394]}]}]},{"pos":[1094,1204],"content":"You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","nodes":[{"content":"You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","pos":[0,110],"nodes":[{"content":"You do not create a journal or dead-letter queue.","pos":[0,49]},{"content":"These are both system queues that Message Queuing generates.","pos":[50,110]}]}]}],"pos":[147989,149202],"yaml":true,"extradata":"MT"},{"content":"`true` if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,152],"content":"`true` if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,128],"source":"`true` if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[129,152],"source":" The default is `false`."}]}],"pos":[149554,149709],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseDeadLetterQueue\"></xref> property.","nodes":[{"pos":[0,118],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.UseDeadLetterQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseDeadLetterQueue\"></xref> property."}],"pos":[149890,150009],"yaml":true},{"content":"Gets or sets a value that indicates whether to make the message private.","nodes":[{"pos":[0,72],"content":"Gets or sets a value that indicates whether to make the message private.","nodes":[{"content":"Gets or sets a value that indicates whether to make the message private.","pos":[0,72]}]}],"pos":[150963,151036],"yaml":true},{"content":"If a message is private, its body is encrypted before it is sent and decrypted when it is received. To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.  \n  \n When sending private messages, your application does not need to perform the message encryption. Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service. When receiving private messages, the receiving Queue Manager always decrypts the message body.","nodes":[{"pos":[0,230],"content":"If a message is private, its body is encrypted before it is sent and decrypted when it is received. To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.","nodes":[{"content":"If a message is private, its body is encrypted before it is sent and decrypted when it is received. To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.","pos":[0,230],"nodes":[{"content":"If a message is private, its body is encrypted before it is sent and decrypted when it is received.","pos":[0,99]},{"content":"To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.","pos":[100,230]}]}]},{"pos":[237,608],"content":"When sending private messages, your application does not need to perform the message encryption. Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service. When receiving private messages, the receiving Queue Manager always decrypts the message body.","nodes":[{"content":"When sending private messages, your application does not need to perform the message encryption. Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service. When receiving private messages, the receiving Queue Manager always decrypts the message body.","pos":[0,371],"nodes":[{"content":"When sending private messages, your application does not need to perform the message encryption.","pos":[0,96]},{"content":"Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.","pos":[97,276]},{"content":"When receiving private messages, the receiving Queue Manager always decrypts the message body.","pos":[277,371]}]}]}],"pos":[151047,151660],"yaml":true,"extradata":"MT"},{"content":"`true` to require Message Queuing to encrypt the message; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,101],"content":"`true` to require Message Queuing to encrypt the message; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to require Message Queuing to encrypt the message; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,77],"source":"`true` to require Message Queuing to encrypt the message; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[78,101],"source":" The default is `false`."}]}],"pos":[151997,152101],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseEncryption\"></xref> property.","nodes":[{"pos":[0,113],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.UseEncryption\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseEncryption\"></xref> property."}],"pos":[152277,152391],"yaml":true},{"content":"Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.","nodes":[{"pos":[0,130],"content":"Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.","nodes":[{"content":"Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.","pos":[0,130]}]}],"pos":[153357,153488],"yaml":true},{"content":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.  \n  \n The sent message is only copied to the journal queue if the destination queue is on a remote computer. If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.  \n  \n When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed. Messages stored in journal queues count against the quota for the computer where the queue resides. (The computer quota is set by the administrator.)  \n  \n You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","nodes":[{"pos":[0,349],"content":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> properties specify how Message Queuing tracks a message.","pos":[0,169],"source":"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.","pos":[170,349],"source":" If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted."}]},{"pos":[356,601],"content":"The sent message is only copied to the journal queue if the destination queue is on a remote computer. If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.","nodes":[{"content":"The sent message is only copied to the journal queue if the destination queue is on a remote computer. If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.","pos":[0,245],"nodes":[{"content":"The sent message is only copied to the journal queue if the destination queue is on a remote computer.","pos":[0,102]},{"content":"If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.","pos":[103,245]}]}]},{"pos":[608,876],"content":"When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed. Messages stored in journal queues count against the quota for the computer where the queue resides. (The computer quota is set by the administrator.)","nodes":[{"content":"When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed. Messages stored in journal queues count against the quota for the computer where the queue resides. (The computer quota is set by the administrator.)","pos":[0,268],"nodes":[{"content":"When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.","pos":[0,118]},{"content":"Messages stored in journal queues count against the quota for the computer where the queue resides.","pos":[119,218]},{"content":"(The computer quota is set by the administrator.)","pos":[219,268]}]}]},{"pos":[883,993],"content":"You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","nodes":[{"content":"You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.","pos":[0,110],"nodes":[{"content":"You do not create a journal or dead-letter queue.","pos":[0,49]},{"content":"These are both system queues that Message Queuing generates.","pos":[50,110]}]}]}],"pos":[153499,154501],"yaml":true,"extradata":"MT"},{"content":"`true` to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,244],"content":"`true` to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,220],"source":"`true` to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[221,244],"source":" The default is `false`."}]}],"pos":[154844,155091],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseJournalQueue\"></xref> property.","nodes":[{"pos":[0,115],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.UseJournalQueue\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseJournalQueue\"></xref> property."}],"pos":[155269,155385],"yaml":true},{"content":"Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.","nodes":[{"pos":[0,104],"content":"Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.","nodes":[{"content":"Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.","pos":[0,104]}]}],"pos":[156321,156426],"yaml":true},{"content":"The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue. If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server. The report queue is specified by the source Queue Manager. Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.  \n  \n Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. The administrator configures these settings.","nodes":[{"pos":[0,515],"content":"The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue. If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server. The report queue is specified by the source Queue Manager. Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseTracing%2A&gt;</ph> property specifies whether to track the route of a message as it moves toward its destination queue.","pos":[0,150],"source":"The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue."},{"content":"If <ph id=\"ph1\">`true`</ph>, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.","pos":[151,306],"source":" If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server."},{"content":"The report queue is specified by the source Queue Manager.","pos":[307,365]},{"content":"Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.","pos":[366,515]}]},{"pos":[522,683],"content":"Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. The administrator configures these settings.","nodes":[{"content":"Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. The administrator configures these settings.","pos":[0,161],"nodes":[{"content":"Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.","pos":[0,116]},{"content":"The administrator configures these settings.","pos":[117,161]}]}]}],"pos":[156437,157125],"yaml":true,"extradata":"MT"},{"content":"`true` if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,199],"content":"`true` if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,175],"source":"`true` if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[176,199],"source":" The default is `false`."}]}],"pos":[157453,157655],"yaml":true},{"content":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseTracing\"></xref> property.","nodes":[{"pos":[0,110],"content":"The message queue is filtered to ignore the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Message.UseTracing\"&gt;&lt;/xref&gt;</ph> property.","source":"The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseTracing\"></xref> property."}],"pos":[157828,157939],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.Message\n  commentId: T:System.Messaging.Message\n  id: Message\n  children:\n  - System.Messaging.Message.#ctor\n  - System.Messaging.Message.#ctor(System.Object)\n  - System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)\n  - System.Messaging.Message.AcknowledgeType\n  - System.Messaging.Message.Acknowledgment\n  - System.Messaging.Message.AdministrationQueue\n  - System.Messaging.Message.AppSpecific\n  - System.Messaging.Message.ArrivedTime\n  - System.Messaging.Message.AttachSenderId\n  - System.Messaging.Message.Authenticated\n  - System.Messaging.Message.AuthenticationProviderName\n  - System.Messaging.Message.AuthenticationProviderType\n  - System.Messaging.Message.Body\n  - System.Messaging.Message.BodyStream\n  - System.Messaging.Message.BodyType\n  - System.Messaging.Message.ConnectorType\n  - System.Messaging.Message.CorrelationId\n  - System.Messaging.Message.DestinationQueue\n  - System.Messaging.Message.DestinationSymmetricKey\n  - System.Messaging.Message.DigitalSignature\n  - System.Messaging.Message.EncryptionAlgorithm\n  - System.Messaging.Message.Extension\n  - System.Messaging.Message.Formatter\n  - System.Messaging.Message.HashAlgorithm\n  - System.Messaging.Message.Id\n  - System.Messaging.Message.InfiniteTimeout\n  - System.Messaging.Message.IsFirstInTransaction\n  - System.Messaging.Message.IsLastInTransaction\n  - System.Messaging.Message.Label\n  - System.Messaging.Message.LookupId\n  - System.Messaging.Message.MessageType\n  - System.Messaging.Message.Priority\n  - System.Messaging.Message.Recoverable\n  - System.Messaging.Message.ResponseQueue\n  - System.Messaging.Message.SecurityContext\n  - System.Messaging.Message.SenderCertificate\n  - System.Messaging.Message.SenderId\n  - System.Messaging.Message.SenderVersion\n  - System.Messaging.Message.SentTime\n  - System.Messaging.Message.SourceMachine\n  - System.Messaging.Message.TimeToBeReceived\n  - System.Messaging.Message.TimeToReachQueue\n  - System.Messaging.Message.TransactionId\n  - System.Messaging.Message.TransactionStatusQueue\n  - System.Messaging.Message.UseAuthentication\n  - System.Messaging.Message.UseDeadLetterQueue\n  - System.Messaging.Message.UseEncryption\n  - System.Messaging.Message.UseJournalQueue\n  - System.Messaging.Message.UseTracing\n  langs:\n  - csharp\n  name: Message\n  nameWithType: Message\n  fullName: System.Messaging.Message\n  type: Class\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Provides access to the properties needed to define a Message Queuing message.\n  remarks: \"Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.  \\n  \\n <xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties. The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages. When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.  \\n  \\n The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue. You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue. The types of settings include formatter, label, encryption, and authentication. You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages. Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis. <xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.  \\n  \\n Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties. When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.  \\n  \\n The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify. The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property. You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message. You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.  \\n  \\n The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property apply only to messages that are not of type <xref:System.Messaging.Message>. If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.  \\n  \\n For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.\"\n  example:\n  - \"The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.  \\n  \\n [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]\\n [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]\\n [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  \\n  \\n The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.  \\n  \\n [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]\\n [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]\\n [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]\"\n  syntax:\n    content: 'public class Message : System.ComponentModel.Component'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.#ctor\n  commentId: M:System.Messaging.Message.#ctor\n  id: '#ctor'\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Message()\n  nameWithType: Message.Message()\n  fullName: Message.Message()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class with an empty body.\n  remarks: \"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.  \\n  \\n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.  \\n  \\n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.  \\n  \\n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \\n  \\n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \\n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \\n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \\n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \\n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \\n|<xref:System.Messaging.Message.Body%2A>|`null`|  \\n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \\n|<xref:System.Messaging.Message.BodyType%2A>|0|  \\n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \\n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \\n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  \\n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \\n|<xref:System.Messaging.Message.Label%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \\n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \\n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|\"\n  example:\n  - \"The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \\n  \\n [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]\\n [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]\\n [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]\"\n  syntax:\n    content: public Message ();\n    parameters: []\n  overload: System.Messaging.Message.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.#ctor(System.Object)\n  commentId: M:System.Messaging.Message.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Message(Object)\n  nameWithType: Message.Message(Object)\n  fullName: Message.Message(Object)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class, using the <xref href=\"System.Messaging.XmlMessageFormatter\"></xref> to serialize the specified object into the body of the message.\n  remarks: \"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter. The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.  \\n  \\n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \\n  \\n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \\n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \\n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \\n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \\n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \\n|<xref:System.Messaging.Message.Body%2A>|The `body` parameter.|  \\n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \\n|<xref:System.Messaging.Message.BodyType%2A>|0|  \\n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \\n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \\n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  \\n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \\n|<xref:System.Messaging.Message.Label%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \\n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \\n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|\"\n  example:\n  - \"The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.  \\n  \\n [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]\\n [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]\\n [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]\"\n  syntax:\n    content: public Message (object body);\n    parameters:\n    - id: body\n      type: System.Object\n      description: The object to be serialized into the body of the message.\n  overload: System.Messaging.Message.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)\n  commentId: M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)\n  id: '#ctor(System.Object,System.Messaging.IMessageFormatter)'\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Message(Object, IMessageFormatter)\n  nameWithType: Message.Message(Object, IMessageFormatter)\n  fullName: Message.Message(Object, IMessageFormatter)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.Message\"></xref> class using the specified formatter to serialize the specified object into the body of the message.\n  remarks: \"Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body. The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object. If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.  \\n  \\n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.  \\n  \\n The following table shows initial property values for an instance of <xref:System.Messaging.Message>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  \\n|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.AppSpecific%2A>|0|  \\n|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  \\n|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|Microsoft Base Cryptographic Provider version 1.0|  \\n|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  \\n|<xref:System.Messaging.Message.Body%2A>|The `body` parameter.|  \\n|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  \\n|<xref:System.Messaging.Message.BodyType%2A>|0|  \\n|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  \\n|<xref:System.Messaging.Message.CorrelationId%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.DigitalSignature%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  \\n|<xref:System.Messaging.Message.Extension%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.Formatter%2A>|The `formatter` parameter.|  \\n|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  \\n|<xref:System.Messaging.Message.Label%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  \\n|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  \\n|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.SenderCertificate%2A>|A zero-length array of bytes|  \\n|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  \\n|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  \\n|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  \\n|<xref:System.Messaging.Message.UseTracing%2A>|`false`|\"\n  example:\n  - >-\n    [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]\n     [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]\n     [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]\n  syntax:\n    content: public Message (object body, System.Messaging.IMessageFormatter formatter);\n    parameters:\n    - id: body\n      type: System.Object\n      description: The object to be serialized into the body of the message.\n    - id: formatter\n      type: System.Messaging.IMessageFormatter\n      description: A <xref href=\"System.Messaging.IMessageFormatter\"></xref> that specifies the formatter with which to serialize the message body.\n  overload: System.Messaging.Message.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AcknowledgeType\n  commentId: P:System.Messaging.Message.AcknowledgeType\n  id: AcknowledgeType\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AcknowledgeType\n  nameWithType: Message.AcknowledgeType\n  fullName: Message.AcknowledgeType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the type of acknowledgment message to be returned to the sending application.\n  remarks: \"The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application. Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.  \\n  \\n Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message. An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents. For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.\"\n  example:\n  - \"The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \\n  \\n [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]\\n [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]\\n [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAcknowledgeType\")]\n\n      public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: One of the <xref href=\"System.Messaging.AcknowledgeTypes\"></xref> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application. The default is `None`.\n  overload: System.Messaging.Message.AcknowledgeType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message is filtered to ignore the <xref href=\"System.Messaging.Message.AcknowledgeType\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Acknowledgment\n  commentId: P:System.Messaging.Message.Acknowledgment\n  id: Acknowledgment\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Acknowledgment\n  nameWithType: Message.Acknowledgment\n  fullName: Message.Acknowledgment\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the classification of acknowledgment that this message represents.\n  remarks: \"When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.  \\n  \\n When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message. Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure. The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property. The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message. You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.  \\n  \\n If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment. Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.  \\n  \\n Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAcknowledgement\")]\n\n      public System.Messaging.Acknowledgment Acknowledgment { get; }\n    return:\n      type: System.Messaging.Acknowledgment\n      description: One of the <xref href=\"System.Messaging.Acknowledgment\"></xref> enumeration values.\n  overload: System.Messaging.Message.Acknowledgment*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.MessagePropertyFilter.Acknowledgment\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AdministrationQueue\n  commentId: P:System.Messaging.Message.AdministrationQueue\n  id: AdministrationQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AdministrationQueue\n  nameWithType: Message.AdministrationQueue\n  fullName: Message.AdministrationQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.\n  remarks: \"The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue. The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.  \\n  \\n When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.\"\n  example:\n  - \"The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \\n  \\n [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]\\n [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]\\n [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAdministrationQueue\")]\n\n      public System.Messaging.MessageQueue AdministrationQueue { get; set; }\n    return:\n      type: System.Messaging.MessageQueue\n      description: The <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the administration queue used for system-generated acknowledgment messages. The default is `null`.\n  overload: System.Messaging.Message.AdministrationQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AdministrationQueue\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AppSpecific\n  commentId: P:System.Messaging.Message.AppSpecific\n  id: AppSpecific\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AppSpecific\n  nameWithType: Message.AppSpecific\n  fullName: Message.AppSpecific\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets additional, application-specific information.\n  remarks: \"The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages. For example, you can use application-specific indexes. It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.  \\n  \\n Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.  \\n  \\n When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing. As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAppSpecific\")]\n\n      public int AppSpecific { get; set; }\n    return:\n      type: System.Int32\n      description: Information that is specific to the application. The default is zero.\n  overload: System.Messaging.Message.AppSpecific*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AppSpecific\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.ArrivedTime\n  commentId: P:System.Messaging.Message.ArrivedTime\n  id: ArrivedTime\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: ArrivedTime\n  nameWithType: Message.ArrivedTime\n  fullName: Message.ArrivedTime\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the time that the message arrived in the destination queue.\n  remarks: The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue. The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.ArrivedTime%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgArrivedTime\")]\n\n      public DateTime ArrivedTime { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the message's arrival time in the destination queue. The time is adjusted from GMT to the local time of the computer on which the destination queue resides.\n  overload: System.Messaging.Message.ArrivedTime*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.ArrivedTime\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AttachSenderId\n  commentId: P:System.Messaging.Message.AttachSenderId\n  id: AttachSenderId\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AttachSenderId\n  nameWithType: Message.AttachSenderId\n  fullName: Message.AttachSenderId\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the sender ID should be attached to the message.\n  remarks: \"The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user. The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.  \\n  \\n The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue. The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue. The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.  \\n  \\n> [!CAUTION]\\n>  If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored. You can request acknowledgments when a message fails to reach a queue. Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.AttachSenderId%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAttachSenderId\")]\n\n      public bool AttachSenderId { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Messaging.Message.SenderId\"></xref> should be attached to the message; otherwise, `false`. The default is `true`.'\n  overload: System.Messaging.Message.AttachSenderId*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.AttachSenderId\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Authenticated\n  commentId: P:System.Messaging.Message.Authenticated\n  id: Authenticated\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Authenticated\n  nameWithType: Message.Authenticated\n  fullName: Message.Authenticated\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets a value that indicates whether the message was authenticated.\n  remarks: \"The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested. If the message is in the queue, the message was authenticated. Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.  \\n  \\n You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards messages that fail authentication before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.Authenticated%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAuthenticated\")]\n\n      public bool Authenticated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if authentication was requested for the message when it entered the queue; otherwise, `false`.'\n  overload: System.Messaging.Message.Authenticated*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.Authenticated\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AuthenticationProviderName\n  commentId: P:System.Messaging.Message.AuthenticationProviderName\n  id: AuthenticationProviderName\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AuthenticationProviderName\n  nameWithType: Message.AuthenticationProviderName\n  fullName: Message.AuthenticationProviderName\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.\n  remarks: \"You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.  \\n  \\n When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.  \\n  \\n The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string (\\\"\\\").\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAuthenticationProviderName\")]\n\n      public string AuthenticationProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.\n  overload: System.Messaging.Message.AuthenticationProviderName*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Messaging.Message.AuthenticationProviderName\\\"></xref> property could not be set.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.AuthenticationProviderName\\\"></xref> property.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.AuthenticationProviderName\"></xref> was set to `null`.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.AuthenticationProviderType\n  commentId: P:System.Messaging.Message.AuthenticationProviderType\n  id: AuthenticationProviderType\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: AuthenticationProviderType\n  nameWithType: Message.AuthenticationProviderType\n  fullName: Message.AuthenticationProviderType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the type of cryptographic provider used to generate the digital signature of the message.\n  remarks: \"You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message. Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.  \\n  \\n Only `RsaFull` is intended to be used with messaging.  \\n  \\n When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together. When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgAuthenticationProviderType\")]\n\n      public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: One of the <xref href=\"System.Messaging.CryptographicProviderType\"></xref> values. The default is `RSA_FULL`.\n  overload: System.Messaging.Message.AuthenticationProviderType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Messaging.Message.AuthenticationProviderType\\\"></xref> property could not be set.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.AuthenticationProviderType\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Body\n  commentId: P:System.Messaging.Message.Body\n  id: Body\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Body\n  nameWithType: Message.Body\n  fullName: Message.Body\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the content of the message.\n  remarks: \"The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message. Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible. Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.  \\n  \\n The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB. If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.  \\n  \\n The string argument in `MessageQueue.Send(\\\"hello.\\\")` is an example of such a generic object.  \\n  \\n The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body. Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.  \\n  \\n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.  \\n  \\n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \\n  \\n> [!NOTE]\\n>  Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.\"\n  example:\n  - \"The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \\n  \\n [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]\\n [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]\\n [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public object Body { get; set; }\n    return:\n      type: System.Object\n      description: An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.\n  overload: System.Messaging.Message.Body*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Messaging.Message.Formatter\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.Body\\\"></xref> property.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.BodyStream\n  commentId: P:System.Messaging.Message.BodyStream\n  id: BodyStream\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: BodyStream\n  nameWithType: Message.BodyStream\n  fullName: Message.BodyStream\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the information in the body of the message.\n  remarks: \"The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object. This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.  \\n  \\n Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object. If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property. However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly. This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.  \\n  \\n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \\n  \\n If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property. Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgBodyStream\")]\n\n      public System.IO.Stream BodyStream { get; set; }\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that contains the serialized information included in the <xref href=\"System.Messaging.Message.Body\"></xref> of the message.\n  overload: System.Messaging.Message.BodyStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.BodyType\n  commentId: P:System.Messaging.Message.BodyType\n  id: BodyType\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: BodyType\n  nameWithType: Message.BodyType\n  fullName: Message.BodyType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the type of data that the message body contains.\n  remarks: \"Message Queuing recognizes the body contents as an object or as a serialized stream. The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.  \\n  \\n The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body. If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.  \\n  \\n Other formatters can provide binding functionality also, as shown in the following C# code.  \\n  \\n```  \\nmessage.Formatter = new ActiveXMessageFormatter();  \\nobject myObject message.Body;  \\nif (myObject is string) {  \\n}  \\nif (myObject is int) {  \\n}  \\nif (myObject is float) {  \\n}  \\n```\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.BodyType%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgBodyType\")]\n\n      public int BodyType { get; set; }\n    return:\n      type: System.Int32\n      description: The message body's true type, such as a string, a date, a currency, or a number.\n  overload: System.Messaging.Message.BodyType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Body\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.ConnectorType\n  commentId: P:System.Messaging.Message.ConnectorType\n  id: ConnectorType\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: ConnectorType\n  nameWithType: Message.ConnectorType\n  fullName: Message.ConnectorType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.\n  remarks: \"Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing. An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:  \\n  \\n-   Whenever a connector application passes a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.  \\n  \\n-   Whenever the sending application, rather than Message Queuing, encrypts a message. The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.  \\n  \\n You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):  \\n  \\n-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  \\n  \\n-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  \\n  \\n-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  \\n  \\n-   <xref:System.Messaging.Message.DigitalSignature%2A>  \\n  \\n-   <xref:System.Messaging.Message.MessageType%2A>  \\n  \\n-   <xref:System.Messaging.Message.SenderId%2A>\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgConnectorType\")]\n\n      public Guid ConnectorType { get; set; }\n    return:\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> defined by the application and used in conjunction with connector applications or message encryption. This <xref href=\"System.Guid\"></xref> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.\n  overload: System.Messaging.Message.ConnectorType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ConnectorType\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.CorrelationId\n  commentId: P:System.Messaging.Message.CorrelationId\n  id: CorrelationId\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: CorrelationId\n  nameWithType: Message.CorrelationId\n  fullName: Message.CorrelationId\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.\n  remarks: \"When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message. In this manner, the correlation identifier ties the report or acknowledgment message to the original message.  \\n  \\n The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.  \\n  \\n Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.  \\n  \\n When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message. The sending application can then match your response message to the message that was sent.\"\n  example:\n  - \"The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \\n  \\n [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]\\n [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]\\n [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgCorrelationId\")]\n\n      public string CorrelationId { get; set; }\n    return:\n      type: System.String\n      description: The message identifier specified by the <xref href=\"System.Messaging.Message.Id\"></xref> property of the original message. The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.\n  overload: System.Messaging.Message.CorrelationId*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.CorrelationId\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.CorrelationId\"></xref> is `null`.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.DestinationQueue\n  commentId: P:System.Messaging.Message.DestinationQueue\n  id: DestinationQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: DestinationQueue\n  nameWithType: Message.DestinationQueue\n  fullName: Message.DestinationQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the intended destination queue for a message.\n  remarks: The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue. Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.DestinationQueue%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgDestinationQueue\")]\n\n      public System.Messaging.MessageQueue DestinationQueue { get; }\n    return:\n      type: System.Messaging.MessageQueue\n      description: A <xref href=\"System.Messaging.MessageQueue\"></xref> that specifies the intended destination queue for the message.\n  overload: System.Messaging.Message.DestinationQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.DestinationQueue\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.DestinationSymmetricKey\n  commentId: P:System.Messaging.Message.DestinationSymmetricKey\n  id: DestinationSymmetricKey\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: DestinationSymmetricKey\n  nameWithType: Message.DestinationSymmetricKey\n  fullName: Message.DestinationSymmetricKey\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.\n  remarks: \"Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property. The first is when your application, rather than Message Queuing, encrypts a message. The second is when you send an encrypted message to a queuing system other than Message Queuing.  \\n  \\n Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager. When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.  \\n  \\n If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application. It is then the responsibility of the receiving application to decrypt the message using the symmetric key.  \\n  \\n When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.  \\n  \\n The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgDestinationSymmetricKey\")]\n\n      public byte[] DestinationSymmetricKey { get; set; }\n    return:\n      type: System.Byte[]\n      description: An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.\n  overload: System.Messaging.Message.DestinationSymmetricKey*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.DestinationSymmetricKey\"></xref> is `null`.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.DigitalSignature\n  commentId: P:System.Messaging.Message.DigitalSignature\n  id: DigitalSignature\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: DigitalSignature\n  nameWithType: Message.DigitalSignature\n  fullName: Message.DigitalSignature\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the digital signature that Message Queuing uses to authenticate the message.\n  remarks: \"Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0. In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication. The receiving application uses this property to retrieve the digital signature attached to the message.  \\n  \\n You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0. The sending application must specify Message Queuing version 1.0 signatures when requesting authentication. If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.  \\n  \\n The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent. In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.  \\n  \\n The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.  \\n  \\n When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property. When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgDigitalSignature\")]\n\n      public byte[] DigitalSignature { get; set; }\n    return:\n      type: System.Byte[]\n      description: An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.\n  overload: System.Messaging.Message.DigitalSignature*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.DigitalSignature\"></xref> property is `null`.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.EncryptionAlgorithm\n  commentId: P:System.Messaging.Message.EncryptionAlgorithm\n  id: EncryptionAlgorithm\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: EncryptionAlgorithm\n  nameWithType: Message.EncryptionAlgorithm\n  fullName: Message.EncryptionAlgorithm\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the encryption algorithm used to encrypt the body of a private message.\n  remarks: \"If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt. The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.  \\n  \\n A queue can require that incoming messages be encrypted. If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message. The sending application can request that a negative acknowledgment message be returned in such a case.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgEncryptionAlgorithm\")]\n\n      public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }\n    return:\n      type: System.Messaging.EncryptionAlgorithm\n      description: One of the <xref href=\"System.Messaging.EncryptionAlgorithm\"></xref> enumeration values. The default is `RC2`.\n  overload: System.Messaging.Message.EncryptionAlgorithm*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.EncryptionAlgorithm\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Extension\n  commentId: P:System.Messaging.Message.Extension\n  id: Extension\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Extension\n  nameWithType: Message.Extension\n  fullName: Message.Extension\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets additional, application-defined information associated with the message.\n  remarks: \"The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message. It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.  \\n  \\n Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.  \\n  \\n When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.  \\n  \\n A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgExtension\")]\n\n      public byte[] Extension { get; set; }\n    return:\n      type: System.Byte[]\n      description: An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.\n  overload: System.Messaging.Message.Extension*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Extension\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.Extension\"></xref> property is `null`.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Formatter\n  commentId: P:System.Messaging.Message.Formatter\n  id: Formatter\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Formatter\n  nameWithType: Message.Formatter\n  fullName: Message.Formatter\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.\n  remarks: \"Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message. When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue. When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.  \\n  \\n Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message. When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property. If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.  \\n  \\n The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format. The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation. The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.\"\n  example:\n  - \"The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.  \\n  \\n [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]\\n [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]\\n [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  \\n  \\n The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.  \\n  \\n [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]\\n [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]\\n [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Messaging.IMessageFormatter Formatter { get; set; }\n    return:\n      type: System.Messaging.IMessageFormatter\n      description: The <xref href=\"System.Messaging.IMessageFormatter\"></xref> that produces a stream to be written to or read from the message body. The default is <xref href=\"System.Messaging.XmlMessageFormatter\"></xref>.\n  overload: System.Messaging.Message.Formatter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.Message.Formatter\"></xref> property is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.HashAlgorithm\n  commentId: P:System.Messaging.Message.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: Message.HashAlgorithm\n  fullName: Message.HashAlgorithm\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.\n  remarks: On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message. The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgHashAlgorithm\")]\n\n      public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }\n    return:\n      type: System.Messaging.HashAlgorithm\n      description: One of the <xref href=\"System.Messaging.HashAlgorithm\"></xref> enumeration values. For Windows XP, the default is `SHA`. Otherwise, the default is `MD5`.\n  overload: System.Messaging.Message.HashAlgorithm*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.HashAlgorithm\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Id\n  commentId: P:System.Messaging.Message.Id\n  id: Id\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Id\n  nameWithType: Message.Id\n  fullName: Message.Id\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the message's identifier.\n  remarks: \"Message Queuing generates a message identifier when the message is sent. The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer. The combination of the two items produces a message identifier that is unique on the network.  \\n  \\n Message Queuing generates message identifiers for all messages—including acknowledgment and report messages. An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message. You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.  \\n  \\n You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue. To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message. The application reading the response message can then use the correlation identifier of the response message to identify the original message.\"\n  example:\n  - \"The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \\n  \\n [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]\\n [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]\\n [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgId\")]\n\n      public string Id { get; }\n    return:\n      type: System.String\n      description: The message's unique identifier, which is generated by Message Queuing.\n  overload: System.Messaging.Message.Id*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.Id\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.InfiniteTimeout\n  commentId: F:System.Messaging.Message.InfiniteTimeout\n  id: InfiniteTimeout\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: InfiniteTimeout\n  nameWithType: Message.InfiniteTimeout\n  fullName: Message.InfiniteTimeout\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Specifies that no time-out exists.\n  remarks: <xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue. For the latter, the time-out is the time allowed for a message to reach the queue. In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.\n  example:\n  - The following code example demonstrates the use of the <xref:System.Messaging.Message.InfiniteTimeout> field.\n  syntax:\n    content: public static readonly TimeSpan InfiniteTimeout;\n    return:\n      type: System.TimeSpan\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.IsFirstInTransaction\n  commentId: P:System.Messaging.Message.IsFirstInTransaction\n  id: IsFirstInTransaction\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: IsFirstInTransaction\n  nameWithType: Message.IsFirstInTransaction\n  fullName: Message.IsFirstInTransaction\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets a value that indicates whether the message was the first message sent in a transaction.\n  remarks: \"Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.  \\n  \\n This property is available only with Message Queuing version 2.0 and later.  \\n  \\n To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.  \\n  \\n If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.IsFirstInTransaction%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgIsFirstInTransaction\")]\n\n      public bool IsFirstInTransaction { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the message was the first message sent in a transaction; otherwise, `false`.'\n  overload: System.Messaging.Message.IsFirstInTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.IsFirstInTransaction\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.IsLastInTransaction\n  commentId: P:System.Messaging.Message.IsLastInTransaction\n  id: IsLastInTransaction\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: IsLastInTransaction\n  nameWithType: Message.IsLastInTransaction\n  fullName: Message.IsLastInTransaction\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets a value that indicates whether the message was the last message sent in a transaction.\n  remarks: \"Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.  \\n  \\n This property is available only with Message Queuing version 2.0 and later.  \\n  \\n To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>. Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.  \\n  \\n If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.IsLastInTransaction%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgIsLastInTransaction\")]\n\n      public bool IsLastInTransaction { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the message was the last message sent in a single transaction; otherwise, `false`.'\n  overload: System.Messaging.Message.IsLastInTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.IsLastInTransaction\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Label\n  commentId: P:System.Messaging.Message.Label\n  id: Label\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Label\n  nameWithType: Message.Label\n  fullName: Message.Label\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets an application-defined Unicode string that describes the message.\n  remarks: \"You can use a message label for several purposes. For example, you can use it for display purposes or to selectively process messages based on the label value. The label does not need to be unique across messages.  \\n  \\n Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms. It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Label%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgLabel\")]\n\n      public string Label { get; set; }\n    return:\n      type: System.String\n      description: The label of the message. The default is an empty string (\"\").\n  overload: System.Messaging.Message.Label*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Label\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.LookupId\n  commentId: P:System.Messaging.Message.LookupId\n  id: LookupId\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: LookupId\n  nameWithType: Message.LookupId\n  fullName: Message.LookupId\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Introduced in MSMQ 3.0. Gets the message's lookup identifier.\n  remarks: \"The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier. The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue. The lookup identifier is not the same as the message identifier that is generated when the message is sent.  \\n  \\n Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues. In other words, this includes both messages sent by sending applications and by Message Queuing. The lookup identifier is unique to the queue and has no meaning outside the queue.  \\n  \\n If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.  \\n  \\n The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.  \\n  \\n A lookup identifier is used to read a specific message in the queue. Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,  \\n  \\n Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application. One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.\"\n  syntax:\n    content: public long LookupId { get; }\n    return:\n      type: System.Int64\n      description: The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.\n  overload: System.Messaging.Message.LookupId*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: MSMQ 3.0 is not installed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.LookupId\\\"></xref> property.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.MessageType\n  commentId: P:System.Messaging.Message.MessageType\n  id: MessageType\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: MessageType\n  nameWithType: Message.MessageType\n  fullName: Message.MessageType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: 'Gets the message type: `Normal`, `Acknowledgment`, or `Report`.'\n  remarks: \"Message Queuing typically sets this property when it sends the message. A Message Queuing message can be one of the following types:  \\n  \\n-   `Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.  \\n  \\n-   `Acknowledgement`, which Message Queuing generates whenever the sending application requests one. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.  \\n  \\n-   `Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager. When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.MessageType%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgMessageType\")]\n\n      public System.Messaging.MessageType MessageType { get; }\n    return:\n      type: System.Messaging.MessageType\n      description: One of the <xref href=\"System.Messaging.Message.MessageType\"></xref> values.\n  overload: System.Messaging.Message.MessageType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.MessageType\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Priority\n  commentId: P:System.Messaging.Message.Priority\n  id: Priority\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Priority\n  nameWithType: Message.Priority\n  fullName: Message.Priority\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the message priority, which determines where in the queue the message is placed.\n  remarks: \"The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination. Higher-priority messages are given preference during routing and inserted toward the front of the destination queue. Messages with the same priority are placed in the queue according to their arrival time.  \\n  \\n You can set a meaningful priority only for non-transactional messages. Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.\"\n  example:\n  - \"The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \\n  \\n [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]\\n [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]\\n [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgPriority\")]\n\n      public System.Messaging.MessagePriority Priority { get; set; }\n    return:\n      type: System.Messaging.MessagePriority\n      description: One of the <xref href=\"System.Messaging.MessagePriority\"></xref> values, which represent the priority levels of non-transactional messages. The default is `Normal`.\n  overload: System.Messaging.Message.Priority*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Priority\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.Recoverable\n  commentId: P:System.Messaging.Message.Recoverable\n  id: Recoverable\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: Recoverable\n  nameWithType: Message.Recoverable\n  fullName: Message.Recoverable\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.\n  remarks: \"The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.  \\n  \\n If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer. Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.  \\n  \\n If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Recoverable%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgRecoverable\")]\n\n      public bool Recoverable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if delivery of the message is guaranteed (through saving the message to disk while en route); `false` if delivery is not assured. The default is `false`.'\n  overload: System.Messaging.Message.Recoverable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.Recoverable\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.ResponseQueue\n  commentId: P:System.Messaging.Message.ResponseQueue\n  id: ResponseQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: ResponseQueue\n  nameWithType: Message.ResponseQueue\n  fullName: Message.ResponseQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the queue that receives application-generated response messages.\n  remarks: \"The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application. The sending application specifies response queues when the application sends its messages. Any available queue can be specified as a response queue.  \\n  \\n Messages returned to the response queue are application-specific. The application must define the contents of the messages as well as the action to take upon receipt of a message.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.ResponseQueue%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgResponseQueue\")]\n\n      public System.Messaging.MessageQueue ResponseQueue { get; set; }\n    return:\n      type: System.Messaging.MessageQueue\n      description: The <xref href=\"System.Messaging.MessageQueue\"></xref> to which application-generated response messages are returned. The default is `null`.\n  overload: System.Messaging.Message.ResponseQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.ResponseQueue\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SecurityContext\n  commentId: P:System.Messaging.Message.SecurityContext\n  id: SecurityContext\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SecurityContext\n  nameWithType: Message.SecurityContext\n  fullName: Message.SecurityContext\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the security context for a message.\n  syntax:\n    content: public System.Messaging.SecurityContext SecurityContext { get; set; }\n    return:\n      type: System.Messaging.SecurityContext\n      description: A <xref href=\"System.Messaging.SecurityContext\"></xref> object that contains the security context for a message, if the property has previously been set; otherwise NULL.\n  overload: System.Messaging.Message.SecurityContext*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SenderCertificate\n  commentId: P:System.Messaging.Message.SenderCertificate\n  id: SenderCertificate\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SenderCertificate\n  nameWithType: Message.SenderCertificate\n  fullName: Message.SenderCertificate\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the security certificate used to authenticate messages.\n  remarks: \"The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.  \\n  \\n Message Queuing can authenticate a message using either an internal or external security certificate. Message Queuing provides internal certificates, which are used to verify message integrity. A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message. In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender. An internal certificate has no usable value to a receiving application.  \\n  \\n An external certificate must be registered with the directory service of the Message Queuing system. An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgSenderCertificate\")]\n\n      public byte[] SenderCertificate { get; set; }\n    return:\n      type: System.Byte[]\n      description: An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.\n  overload: System.Messaging.Message.SenderCertificate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.SenderCertificate\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SenderId\n  commentId: P:System.Messaging.Message.SenderId\n  id: SenderId\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SenderId\n  nameWithType: Message.SenderId\n  fullName: Message.SenderId\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the identifier of the sending user.\n  remarks: \"If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent. This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue. If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated. Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.  \\n  \\n A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems. Message Queuing requires connector applications to provide sender identification. You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgSenderId\")]\n\n      public byte[] SenderId { get; }\n    return:\n      type: System.Byte[]\n      description: An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.\n  overload: System.Messaging.Message.SenderId*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.SenderId\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SenderVersion\n  commentId: P:System.Messaging.Message.SenderVersion\n  id: SenderVersion\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SenderVersion\n  nameWithType: Message.SenderVersion\n  fullName: Message.SenderVersion\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the version of Message Queuing used to send the message.\n  remarks: \"The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features. For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.  \\n  \\n The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.SenderVersion%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgSenderVersion\")]\n\n      public long SenderVersion { get; }\n    return:\n      type: System.Int64\n      description: The version of Message Queuing used to send the message.\n  overload: System.Messaging.Message.SenderVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.SenderVersion\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SentTime\n  commentId: P:System.Messaging.Message.SentTime\n  id: SentTime\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SentTime\n  nameWithType: Message.SentTime\n  fullName: Message.SentTime\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the date and time on the sending computer that the message was sent by the source queue manager.\n  remarks: The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created. This time zone could be different from those of the source and destination queues.\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.SentTime%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgSentTime\")]\n\n      public DateTime SentTime { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the time the message was sent.\n  overload: System.Messaging.Message.SentTime*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.SentTime\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.SourceMachine\n  commentId: P:System.Messaging.Message.SourceMachine\n  id: SourceMachine\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: SourceMachine\n  nameWithType: Message.SourceMachine\n  fullName: Message.SourceMachine\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the computer from which the message originated.\n  remarks: The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\\\\\). For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.SourceMachine%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgSourceMachine\")]\n\n      public string SourceMachine { get; }\n    return:\n      type: System.String\n      description: The name of the computer from which the message was sent.\n  overload: System.Messaging.Message.SourceMachine*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.SourceMachine\\\"></xref> property.\"\n  - type: System.Messaging.MessageQueueException\n    commentId: T:System.Messaging.MessageQueueException\n    description: The computer information or directory service could not be accessed.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.TimeToBeReceived\n  commentId: P:System.Messaging.Message.TimeToBeReceived\n  id: TimeToBeReceived\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: TimeToBeReceived\n  nameWithType: Message.TimeToBeReceived\n  fullName: Message.TimeToBeReceived\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the maximum amount of time for the message to be received from the destination queue.\n  remarks: \"The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue. The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.  \\n  \\n> [!CAUTION]\\n>  When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing. Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.  \\n  \\n If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.  \\n  \\n You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.  \\n  \\n If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.  \\n  \\n When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))]\n\n      [System.Messaging.MessagingDescription(\"MsgTimeToBeReceived\")]\n\n      public TimeSpan TimeToBeReceived { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The total time for a sent message to be received from the destination queue. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.\n  overload: System.Messaging.Message.TimeToBeReceived*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for <xref href=\"System.Messaging.Message.TimeToBeReceived\"></xref> is invalid.\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.TimeToReachQueue\n  commentId: P:System.Messaging.Message.TimeToReachQueue\n  id: TimeToReachQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: TimeToReachQueue\n  nameWithType: Message.TimeToReachQueue\n  fullName: Message.TimeToReachQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the maximum amount of time for the message to reach the queue.\n  remarks: \"If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways. If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored  \\n  \\n You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.  \\n  \\n If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message. If the queue is local, the message always reaches it.  \\n  \\n If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.  \\n  \\n When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToReachQueue%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))]\n\n      [System.Messaging.MessagingDescription(\"MsgTimeToReachQueue\")]\n\n      public TimeSpan TimeToReachQueue { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time limit for the message to reach the destination queue, beginning from the time the message is sent. The default is <xref href=\"System.Messaging.Message.InfiniteTimeout\"></xref>.\n  overload: System.Messaging.Message.TimeToReachQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for <xref href=\"System.Messaging.Message.TimeToReachQueue\"></xref> is invalid. It might represent a negative number.\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.TransactionId\n  commentId: P:System.Messaging.Message.TransactionId\n  id: TransactionId\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: TransactionId\n  nameWithType: Message.TransactionId\n  fullName: Message.TransactionId\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the identifier for the transaction of which the message was a part.\n  remarks: \"Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction. The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.  \\n  \\n This property is available only for Message Queuing version 2.0 and later.  \\n  \\n Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>. Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.  \\n  \\n You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionId%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgTransactionId\")]\n\n      public string TransactionId { get; }\n    return:\n      type: System.String\n      description: The identifier for the transaction associated with the message.\n  overload: System.Messaging.Message.TransactionId*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.TransactionId\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.TransactionStatusQueue\n  commentId: P:System.Messaging.Message.TransactionStatusQueue\n  id: TransactionStatusQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: TransactionStatusQueue\n  nameWithType: Message.TransactionStatusQueue\n  fullName: Message.TransactionStatusQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the transaction status queue on the source computer.\n  remarks: \"The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications. Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.  \\n  \\n A foreign queue exists in a queuing system other than Microsoft Message Queuing. Message Queuing communicates with such queues through a connector application.  \\n  \\n The connector application can use the transaction status queue to send acknowledgment messages back to the sending application. The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.\"\n  example:\n  - The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionStatusQueue%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgTransactionStatusQueue\")]\n\n      public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }\n    return:\n      type: System.Messaging.MessageQueue\n      description: The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is `null`.\n  overload: System.Messaging.Message.TransactionStatusQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The message has not been sent. This property can only be read on messages retrieved from a queue.  \\n  \\n -or-  \\n  \\n The message queue is filtered to ignore the <xref href=\\\"System.Messaging.Message.TransactionStatusQueue\\\"></xref> property.\"\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.UseAuthentication\n  commentId: P:System.Messaging.Message.UseAuthentication\n  id: UseAuthentication\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: UseAuthentication\n  nameWithType: Message.UseAuthentication\n  fullName: Message.UseAuthentication\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.\n  remarks: \"The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated. If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.  \\n  \\n If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.  \\n  \\n You cannot determine if a message failed authentication by looking at its properties. Message Queuing discards such messages before they are delivered to the queue. However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.\"\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgUseAuthentication\")]\n\n      public bool UseAuthentication { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the sending application requested authentication for the message; otherwise, `false`.'\n  overload: System.Messaging.Message.UseAuthentication*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseAuthentication\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.UseDeadLetterQueue\n  commentId: P:System.Messaging.Message.UseDeadLetterQueue\n  id: UseDeadLetterQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: UseDeadLetterQueue\n  nameWithType: Message.UseDeadLetterQueue\n  fullName: Message.UseDeadLetterQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.\n  remarks: \"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message. Delivery failure could be caused by a message timer expiring, for example.  \\n  \\n In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.  \\n  \\n When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed. Messages stored in dead-letter queues count against the size quota for the computer where the queue resides. The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.  \\n  \\n You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgUseDeadLetterQueue\")]\n\n      public bool UseDeadLetterQueue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, `false`. The default is `false`.'\n  overload: System.Messaging.Message.UseDeadLetterQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseDeadLetterQueue\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.UseEncryption\n  commentId: P:System.Messaging.Message.UseEncryption\n  id: UseEncryption\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: UseEncryption\n  nameWithType: Message.UseEncryption\n  fullName: Message.UseEncryption\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether to make the message private.\n  remarks: \"If a message is private, its body is encrypted before it is sent and decrypted when it is received. To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.  \\n  \\n When sending private messages, your application does not need to perform the message encryption. Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service. When receiving private messages, the receiving Queue Manager always decrypts the message body.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseEncryption%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgUseEncryption\")]\n\n      public bool UseEncryption { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to require Message Queuing to encrypt the message; otherwise, `false`. The default is `false`.'\n  overload: System.Messaging.Message.UseEncryption*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseEncryption\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.UseJournalQueue\n  commentId: P:System.Messaging.Message.UseJournalQueue\n  id: UseJournalQueue\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: UseJournalQueue\n  nameWithType: Message.UseJournalQueue\n  fullName: Message.UseJournalQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.\n  remarks: \"The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message. If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.  \\n  \\n The sent message is only copied to the journal queue if the destination queue is on a remote computer. If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.  \\n  \\n When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed. Messages stored in journal queues count against the quota for the computer where the queue resides. (The computer quota is set by the administrator.)  \\n  \\n You do not create a journal or dead-letter queue. These are both system queues that Message Queuing generates.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseJournalQueue%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgUseJournalQueue\")]\n\n      public bool UseJournalQueue { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, `false`. The default is `false`.\"\n  overload: System.Messaging.Message.UseJournalQueue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseJournalQueue\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.Message.UseTracing\n  commentId: P:System.Messaging.Message.UseTracing\n  id: UseTracing\n  parent: System.Messaging.Message\n  langs:\n  - csharp\n  name: UseTracing\n  nameWithType: Message.UseTracing\n  fullName: Message.UseTracing\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.\n  remarks: \"The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue. If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server. The report queue is specified by the source Queue Manager. Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.  \\n  \\n Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. The administrator configures these settings.\"\n  example:\n  - The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseTracing%2A> property.\n  syntax:\n    content: >-\n      [System.Messaging.MessagingDescription(\"MsgUseTracing\")]\n\n      public bool UseTracing { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, `false`. The default is `false`.\"\n  overload: System.Messaging.Message.UseTracing*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message queue is filtered to ignore the <xref href=\"System.Messaging.Message.UseTracing\"></xref> property.\n  attributes:\n  - type: System.Messaging.MessagingDescriptionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Messaging.MessageQueueException\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueException\n  nameWithType: MessageQueueException\n  fullName: System.Messaging.MessageQueueException\n- uid: System.Messaging.Message.#ctor\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Message()\n  nameWithType: Message.Message()\n  fullName: Message.Message()\n- uid: System.Messaging.Message.#ctor(System.Object)\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Message(Object)\n  nameWithType: Message.Message(Object)\n  fullName: Message.Message(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Message(Object, IMessageFormatter)\n  nameWithType: Message.Message(Object, IMessageFormatter)\n  fullName: Message.Message(Object, IMessageFormatter)\n- uid: System.Messaging.IMessageFormatter\n  parent: System.Messaging\n  isExternal: false\n  name: IMessageFormatter\n  nameWithType: IMessageFormatter\n  fullName: System.Messaging.IMessageFormatter\n- uid: System.Messaging.Message.AcknowledgeType\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AcknowledgeType\n  nameWithType: Message.AcknowledgeType\n  fullName: Message.AcknowledgeType\n- uid: System.Messaging.AcknowledgeTypes\n  parent: System.Messaging\n  isExternal: false\n  name: AcknowledgeTypes\n  nameWithType: AcknowledgeTypes\n  fullName: System.Messaging.AcknowledgeTypes\n- uid: System.Messaging.Message.Acknowledgment\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Acknowledgment\n  nameWithType: Message.Acknowledgment\n  fullName: Message.Acknowledgment\n- uid: System.Messaging.Acknowledgment\n  parent: System.Messaging\n  isExternal: false\n  name: Acknowledgment\n  nameWithType: Acknowledgment\n  fullName: System.Messaging.Acknowledgment\n- uid: System.Messaging.Message.AdministrationQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AdministrationQueue\n  nameWithType: Message.AdministrationQueue\n  fullName: Message.AdministrationQueue\n- uid: System.Messaging.MessageQueue\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueue\n  nameWithType: MessageQueue\n  fullName: System.Messaging.MessageQueue\n- uid: System.Messaging.Message.AppSpecific\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AppSpecific\n  nameWithType: Message.AppSpecific\n  fullName: Message.AppSpecific\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Messaging.Message.ArrivedTime\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ArrivedTime\n  nameWithType: Message.ArrivedTime\n  fullName: Message.ArrivedTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Messaging.Message.AttachSenderId\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AttachSenderId\n  nameWithType: Message.AttachSenderId\n  fullName: Message.AttachSenderId\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.Message.Authenticated\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Authenticated\n  nameWithType: Message.Authenticated\n  fullName: Message.Authenticated\n- uid: System.Messaging.Message.AuthenticationProviderName\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AuthenticationProviderName\n  nameWithType: Message.AuthenticationProviderName\n  fullName: Message.AuthenticationProviderName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.Message.AuthenticationProviderType\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AuthenticationProviderType\n  nameWithType: Message.AuthenticationProviderType\n  fullName: Message.AuthenticationProviderType\n- uid: System.Messaging.CryptographicProviderType\n  parent: System.Messaging\n  isExternal: false\n  name: CryptographicProviderType\n  nameWithType: CryptographicProviderType\n  fullName: System.Messaging.CryptographicProviderType\n- uid: System.Messaging.Message.Body\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Body\n  nameWithType: Message.Body\n  fullName: Message.Body\n- uid: System.Messaging.Message.BodyStream\n  parent: System.Messaging.Message\n  isExternal: false\n  name: BodyStream\n  nameWithType: Message.BodyStream\n  fullName: Message.BodyStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Messaging.Message.BodyType\n  parent: System.Messaging.Message\n  isExternal: false\n  name: BodyType\n  nameWithType: Message.BodyType\n  fullName: Message.BodyType\n- uid: System.Messaging.Message.ConnectorType\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ConnectorType\n  nameWithType: Message.ConnectorType\n  fullName: Message.ConnectorType\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Messaging.Message.CorrelationId\n  parent: System.Messaging.Message\n  isExternal: false\n  name: CorrelationId\n  nameWithType: Message.CorrelationId\n  fullName: Message.CorrelationId\n- uid: System.Messaging.Message.DestinationQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DestinationQueue\n  nameWithType: Message.DestinationQueue\n  fullName: Message.DestinationQueue\n- uid: System.Messaging.Message.DestinationSymmetricKey\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DestinationSymmetricKey\n  nameWithType: Message.DestinationSymmetricKey\n  fullName: Message.DestinationSymmetricKey\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.Message.DigitalSignature\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DigitalSignature\n  nameWithType: Message.DigitalSignature\n  fullName: Message.DigitalSignature\n- uid: System.Messaging.Message.EncryptionAlgorithm\n  parent: System.Messaging.Message\n  isExternal: false\n  name: EncryptionAlgorithm\n  nameWithType: Message.EncryptionAlgorithm\n  fullName: Message.EncryptionAlgorithm\n- uid: System.Messaging.EncryptionAlgorithm\n  parent: System.Messaging\n  isExternal: false\n  name: EncryptionAlgorithm\n  nameWithType: EncryptionAlgorithm\n  fullName: System.Messaging.EncryptionAlgorithm\n- uid: System.Messaging.Message.Extension\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Extension\n  nameWithType: Message.Extension\n  fullName: Message.Extension\n- uid: System.Messaging.Message.Formatter\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Formatter\n  nameWithType: Message.Formatter\n  fullName: Message.Formatter\n- uid: System.Messaging.Message.HashAlgorithm\n  parent: System.Messaging.Message\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: Message.HashAlgorithm\n  fullName: Message.HashAlgorithm\n- uid: System.Messaging.HashAlgorithm\n  parent: System.Messaging\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Messaging.HashAlgorithm\n- uid: System.Messaging.Message.Id\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Id\n  nameWithType: Message.Id\n  fullName: Message.Id\n- uid: System.Messaging.Message.InfiniteTimeout\n  parent: System.Messaging.Message\n  isExternal: false\n  name: InfiniteTimeout\n  nameWithType: Message.InfiniteTimeout\n  fullName: Message.InfiniteTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Messaging.Message.IsFirstInTransaction\n  parent: System.Messaging.Message\n  isExternal: false\n  name: IsFirstInTransaction\n  nameWithType: Message.IsFirstInTransaction\n  fullName: Message.IsFirstInTransaction\n- uid: System.Messaging.Message.IsLastInTransaction\n  parent: System.Messaging.Message\n  isExternal: false\n  name: IsLastInTransaction\n  nameWithType: Message.IsLastInTransaction\n  fullName: Message.IsLastInTransaction\n- uid: System.Messaging.Message.Label\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Label\n  nameWithType: Message.Label\n  fullName: Message.Label\n- uid: System.Messaging.Message.LookupId\n  parent: System.Messaging.Message\n  isExternal: false\n  name: LookupId\n  nameWithType: Message.LookupId\n  fullName: Message.LookupId\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Messaging.Message.MessageType\n  parent: System.Messaging.Message\n  isExternal: false\n  name: MessageType\n  nameWithType: Message.MessageType\n  fullName: Message.MessageType\n- uid: System.Messaging.MessageType\n  parent: System.Messaging\n  isExternal: false\n  name: MessageType\n  nameWithType: MessageType\n  fullName: System.Messaging.MessageType\n- uid: System.Messaging.Message.Priority\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Priority\n  nameWithType: Message.Priority\n  fullName: Message.Priority\n- uid: System.Messaging.MessagePriority\n  parent: System.Messaging\n  isExternal: false\n  name: MessagePriority\n  nameWithType: MessagePriority\n  fullName: System.Messaging.MessagePriority\n- uid: System.Messaging.Message.Recoverable\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Recoverable\n  nameWithType: Message.Recoverable\n  fullName: Message.Recoverable\n- uid: System.Messaging.Message.ResponseQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ResponseQueue\n  nameWithType: Message.ResponseQueue\n  fullName: Message.ResponseQueue\n- uid: System.Messaging.Message.SecurityContext\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SecurityContext\n  nameWithType: Message.SecurityContext\n  fullName: Message.SecurityContext\n- uid: System.Messaging.SecurityContext\n  parent: System.Messaging\n  isExternal: false\n  name: SecurityContext\n  nameWithType: SecurityContext\n  fullName: System.Messaging.SecurityContext\n- uid: System.Messaging.Message.SenderCertificate\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderCertificate\n  nameWithType: Message.SenderCertificate\n  fullName: Message.SenderCertificate\n- uid: System.Messaging.Message.SenderId\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderId\n  nameWithType: Message.SenderId\n  fullName: Message.SenderId\n- uid: System.Messaging.Message.SenderVersion\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderVersion\n  nameWithType: Message.SenderVersion\n  fullName: Message.SenderVersion\n- uid: System.Messaging.Message.SentTime\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SentTime\n  nameWithType: Message.SentTime\n  fullName: Message.SentTime\n- uid: System.Messaging.Message.SourceMachine\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SourceMachine\n  nameWithType: Message.SourceMachine\n  fullName: Message.SourceMachine\n- uid: System.Messaging.Message.TimeToBeReceived\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TimeToBeReceived\n  nameWithType: Message.TimeToBeReceived\n  fullName: Message.TimeToBeReceived\n- uid: System.Messaging.Message.TimeToReachQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TimeToReachQueue\n  nameWithType: Message.TimeToReachQueue\n  fullName: Message.TimeToReachQueue\n- uid: System.Messaging.Message.TransactionId\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TransactionId\n  nameWithType: Message.TransactionId\n  fullName: Message.TransactionId\n- uid: System.Messaging.Message.TransactionStatusQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TransactionStatusQueue\n  nameWithType: Message.TransactionStatusQueue\n  fullName: Message.TransactionStatusQueue\n- uid: System.Messaging.Message.UseAuthentication\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseAuthentication\n  nameWithType: Message.UseAuthentication\n  fullName: Message.UseAuthentication\n- uid: System.Messaging.Message.UseDeadLetterQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseDeadLetterQueue\n  nameWithType: Message.UseDeadLetterQueue\n  fullName: Message.UseDeadLetterQueue\n- uid: System.Messaging.Message.UseEncryption\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseEncryption\n  nameWithType: Message.UseEncryption\n  fullName: Message.UseEncryption\n- uid: System.Messaging.Message.UseJournalQueue\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: Message.UseJournalQueue\n  fullName: Message.UseJournalQueue\n- uid: System.Messaging.Message.UseTracing\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseTracing\n  nameWithType: Message.UseTracing\n  fullName: Message.UseTracing\n- uid: System.Messaging.Message.#ctor*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Message\n  nameWithType: Message.Message\n  fullName: Message.Message\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AcknowledgeType*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AcknowledgeType\n  nameWithType: Message.AcknowledgeType\n  fullName: Message.AcknowledgeType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Acknowledgment*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Acknowledgment\n  nameWithType: Message.Acknowledgment\n  fullName: Message.Acknowledgment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AdministrationQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AdministrationQueue\n  nameWithType: Message.AdministrationQueue\n  fullName: Message.AdministrationQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AppSpecific*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AppSpecific\n  nameWithType: Message.AppSpecific\n  fullName: Message.AppSpecific\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.ArrivedTime*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ArrivedTime\n  nameWithType: Message.ArrivedTime\n  fullName: Message.ArrivedTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AttachSenderId*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AttachSenderId\n  nameWithType: Message.AttachSenderId\n  fullName: Message.AttachSenderId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Authenticated*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Authenticated\n  nameWithType: Message.Authenticated\n  fullName: Message.Authenticated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AuthenticationProviderName*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AuthenticationProviderName\n  nameWithType: Message.AuthenticationProviderName\n  fullName: Message.AuthenticationProviderName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.AuthenticationProviderType*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: AuthenticationProviderType\n  nameWithType: Message.AuthenticationProviderType\n  fullName: Message.AuthenticationProviderType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Body*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Body\n  nameWithType: Message.Body\n  fullName: Message.Body\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.BodyStream*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: BodyStream\n  nameWithType: Message.BodyStream\n  fullName: Message.BodyStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.BodyType*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: BodyType\n  nameWithType: Message.BodyType\n  fullName: Message.BodyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.ConnectorType*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ConnectorType\n  nameWithType: Message.ConnectorType\n  fullName: Message.ConnectorType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.CorrelationId*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: CorrelationId\n  nameWithType: Message.CorrelationId\n  fullName: Message.CorrelationId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.DestinationQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DestinationQueue\n  nameWithType: Message.DestinationQueue\n  fullName: Message.DestinationQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.DestinationSymmetricKey*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DestinationSymmetricKey\n  nameWithType: Message.DestinationSymmetricKey\n  fullName: Message.DestinationSymmetricKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.DigitalSignature*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: DigitalSignature\n  nameWithType: Message.DigitalSignature\n  fullName: Message.DigitalSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.EncryptionAlgorithm*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: EncryptionAlgorithm\n  nameWithType: Message.EncryptionAlgorithm\n  fullName: Message.EncryptionAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Extension*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Extension\n  nameWithType: Message.Extension\n  fullName: Message.Extension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Formatter*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Formatter\n  nameWithType: Message.Formatter\n  fullName: Message.Formatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.HashAlgorithm*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: Message.HashAlgorithm\n  fullName: Message.HashAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Id*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Id\n  nameWithType: Message.Id\n  fullName: Message.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.IsFirstInTransaction*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: IsFirstInTransaction\n  nameWithType: Message.IsFirstInTransaction\n  fullName: Message.IsFirstInTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.IsLastInTransaction*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: IsLastInTransaction\n  nameWithType: Message.IsLastInTransaction\n  fullName: Message.IsLastInTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Label*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Label\n  nameWithType: Message.Label\n  fullName: Message.Label\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.LookupId*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: LookupId\n  nameWithType: Message.LookupId\n  fullName: Message.LookupId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.MessageType*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: MessageType\n  nameWithType: Message.MessageType\n  fullName: Message.MessageType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Priority*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Priority\n  nameWithType: Message.Priority\n  fullName: Message.Priority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.Recoverable*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: Recoverable\n  nameWithType: Message.Recoverable\n  fullName: Message.Recoverable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.ResponseQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: ResponseQueue\n  nameWithType: Message.ResponseQueue\n  fullName: Message.ResponseQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SecurityContext*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SecurityContext\n  nameWithType: Message.SecurityContext\n  fullName: Message.SecurityContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SenderCertificate*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderCertificate\n  nameWithType: Message.SenderCertificate\n  fullName: Message.SenderCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SenderId*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderId\n  nameWithType: Message.SenderId\n  fullName: Message.SenderId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SenderVersion*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SenderVersion\n  nameWithType: Message.SenderVersion\n  fullName: Message.SenderVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SentTime*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SentTime\n  nameWithType: Message.SentTime\n  fullName: Message.SentTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.SourceMachine*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: SourceMachine\n  nameWithType: Message.SourceMachine\n  fullName: Message.SourceMachine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.TimeToBeReceived*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TimeToBeReceived\n  nameWithType: Message.TimeToBeReceived\n  fullName: Message.TimeToBeReceived\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.TimeToReachQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TimeToReachQueue\n  nameWithType: Message.TimeToReachQueue\n  fullName: Message.TimeToReachQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.TransactionId*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TransactionId\n  nameWithType: Message.TransactionId\n  fullName: Message.TransactionId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.TransactionStatusQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: TransactionStatusQueue\n  nameWithType: Message.TransactionStatusQueue\n  fullName: Message.TransactionStatusQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.UseAuthentication*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseAuthentication\n  nameWithType: Message.UseAuthentication\n  fullName: Message.UseAuthentication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.UseDeadLetterQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseDeadLetterQueue\n  nameWithType: Message.UseDeadLetterQueue\n  fullName: Message.UseDeadLetterQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.UseEncryption*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseEncryption\n  nameWithType: Message.UseEncryption\n  fullName: Message.UseEncryption\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.UseJournalQueue*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: Message.UseJournalQueue\n  fullName: Message.UseJournalQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Messaging.Message.UseTracing*\n  parent: System.Messaging.Message\n  isExternal: false\n  name: UseTracing\n  nameWithType: Message.UseTracing\n  fullName: Message.UseTracing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Message.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n"}