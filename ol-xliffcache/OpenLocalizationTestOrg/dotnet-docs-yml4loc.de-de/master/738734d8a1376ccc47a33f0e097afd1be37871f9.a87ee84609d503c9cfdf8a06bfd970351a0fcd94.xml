{"nodes":[{"content":"Specifies that a class provides event or instance instrumentation.  \n  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"pos":[0,66],"content":"Specifies that a class provides event or instance instrumentation.","nodes":[{"content":"Specifies that a class provides event or instance instrumentation.","pos":[0,66]}]},{"pos":[73,389],"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[0,193]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[194,316],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]}],"pos":[971,1365],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that is used if this type is derived from another type that has the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from **__ExtrinsicEvent**).","nodes":[{"pos":[0,465],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"&gt;&lt;/xref&gt;</ph> class that is used if this type is derived from another type that has the <ph id=\"ph2\">&lt;xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"&gt;&lt;/xref&gt;</ph> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from <bpt id=\"p1\">**</bpt>__ExtrinsicEvent<ept id=\"p1\">**</ept>).","source":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that is used if this type is derived from another type that has the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from **__ExtrinsicEvent**)."}],"pos":[6634,7100],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[7111,7378],"yaml":true,"extradata":"MT"},{"content":"The type of instrumentation provided by this class.","nodes":[{"pos":[0,51],"content":"The type of instrumentation provided by this class.","nodes":[{"content":"The type of instrumentation provided by this class.","pos":[0,51]}]}],"pos":[7646,7698],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that has schema for an existing base class. The class must contain proper member definitions for the properties of the existing WMI base class.","nodes":[{"pos":[0,268],"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that has schema for an existing base class. The class must contain proper member definitions for the properties of the existing WMI base class.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"&gt;&lt;/xref&gt;</ph> class that has schema for an existing base class.","pos":[0,168],"source":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that has schema for an existing base class."},{"content":"The class must contain proper member definitions for the properties of the existing WMI base class.","pos":[169,268]}]}],"pos":[9185,9454],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[9465,9732],"yaml":true,"extradata":"MT"},{"content":"The type of instrumentation provided by this class.","nodes":[{"pos":[0,51],"content":"The type of instrumentation provided by this class.","nodes":[{"content":"The type of instrumentation provided by this class.","pos":[0,51]}]}],"pos":[10029,10081],"yaml":true},{"content":"The name of the base class.","nodes":[{"pos":[0,27],"content":"The name of the base class.","nodes":[{"content":"The name of the base class.","pos":[0,27]}]}],"pos":[10157,10185],"yaml":true},{"content":"Gets or sets the type of instrumentation provided by this class.","nodes":[{"pos":[0,64],"content":"Gets or sets the type of instrumentation provided by this class.","nodes":[{"content":"Gets or sets the type of instrumentation provided by this class.","pos":[0,64]}]}],"pos":[11385,11450],"yaml":true},{"content":"## Property Value  \n Contains an <xref:System.Management.Instrumentation.InstrumentationType> value that indicates whether this is an instrumented event, instance, or abstract class.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,182],"content":"Contains an <xref:System.Management.Instrumentation.InstrumentationType> value that indicates whether this is an instrumented event, instance, or abstract class.","nodes":[{"content":"Contains an <ph id=\"ph1\">&lt;xref:System.Management.Instrumentation.InstrumentationType&gt;</ph> value that indicates whether this is an instrumented event, instance, or abstract class.","pos":[0,161],"source":"Contains an <xref:System.Management.Instrumentation.InstrumentationType> value that indicates whether this is an instrumented event, instance, or abstract class."}]},{"pos":[191,214],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[218,451],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[11461,11919],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.Management.Instrumentation.InstrumentationType\"></xref> enumeration value containing the type of instrumentation provided by this class.","nodes":[{"pos":[0,166],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentationType\"&gt;&lt;/xref&gt;</ph> enumeration value containing the type of instrumentation provided by this class.","source":"Returns an <xref href=\"System.Management.Instrumentation.InstrumentationType\"></xref> enumeration value containing the type of instrumentation provided by this class."}],"pos":[12129,12296],"yaml":true},{"content":"Gets or sets the name of the base class of this instrumentation class.","nodes":[{"pos":[0,70],"content":"Gets or sets the name of the base class of this instrumentation class.","nodes":[{"content":"Gets or sets the name of the base class of this instrumentation class.","pos":[0,70]}]}],"pos":[13516,13587],"yaml":true},{"content":"## Property Value  \n If not `null`, this string indicates the WMI base class that this class inherits from in the CIM schema.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,17],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[21,125],"content":"If not <ph id=\"ph1\">`null`</ph>, this string indicates the WMI base class that this class inherits from in the CIM schema.","source":"If not `null`, this string indicates the WMI base class that this class inherits from in the CIM schema."},{"pos":[134,157],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[161,394],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[13598,13999],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.String\"></xref> value containing the name of the base class of this instrumentation class.","nodes":[{"pos":[0,119],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value containing the name of the base class of this instrumentation class.","source":"Returns a <xref href=\"System.String\"></xref> value containing the name of the base class of this instrumentation class."}],"pos":[14123,14243],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute\n  commentId: T:System.Management.Instrumentation.InstrumentationClassAttribute\n  id: InstrumentationClassAttribute\n  children:\n  - System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)\n  - System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)\n  - System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType\n  - System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName\n  langs:\n  - csharp\n  name: InstrumentationClassAttribute\n  nameWithType: InstrumentationClassAttribute\n  fullName: System.Management.Instrumentation.InstrumentationClassAttribute\n  type: Class\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: \"Specifies that a class provides event or instance instrumentation.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)]\n\n      public class InstrumentationClassAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)\n  commentId: M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)\n  id: '#ctor(System.Management.Instrumentation.InstrumentationType)'\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  langs:\n  - csharp\n  name: InstrumentationClassAttribute(InstrumentationType)\n  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)\n  fullName: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)\n  type: Constructor\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that is used if this type is derived from another type that has the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from **__ExtrinsicEvent**).\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType);\n    parameters:\n    - id: instrumentationType\n      type: System.Management.Instrumentation.InstrumentationType\n      description: The type of instrumentation provided by this class.\n  overload: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)\n  commentId: M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)\n  id: '#ctor(System.Management.Instrumentation.InstrumentationType,System.String)'\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  langs:\n  - csharp\n  name: InstrumentationClassAttribute(InstrumentationType, String)\n  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType, String)\n  fullName: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType, String)\n  type: Constructor\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentationClassAttribute\"></xref> class that has schema for an existing base class. The class must contain proper member definitions for the properties of the existing WMI base class.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType, string managedBaseClassName);\n    parameters:\n    - id: instrumentationType\n      type: System.Management.Instrumentation.InstrumentationType\n      description: The type of instrumentation provided by this class.\n    - id: managedBaseClassName\n      type: System.String\n      description: The name of the base class.\n  overload: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType\n  commentId: P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType\n  id: InstrumentationType\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  langs:\n  - csharp\n  name: InstrumentationType\n  nameWithType: InstrumentationClassAttribute.InstrumentationType\n  fullName: InstrumentationClassAttribute.InstrumentationType\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets the type of instrumentation provided by this class.\n  remarks: \"## Property Value  \\n Contains an <xref:System.Management.Instrumentation.InstrumentationType> value that indicates whether this is an instrumented event, instance, or abstract class.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public System.Management.Instrumentation.InstrumentationType InstrumentationType { get; }\n    return:\n      type: System.Management.Instrumentation.InstrumentationType\n      description: Returns an <xref href=\"System.Management.Instrumentation.InstrumentationType\"></xref> enumeration value containing the type of instrumentation provided by this class.\n  overload: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName\n  commentId: P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName\n  id: ManagedBaseClassName\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  langs:\n  - csharp\n  name: ManagedBaseClassName\n  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName\n  fullName: InstrumentationClassAttribute.ManagedBaseClassName\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets the name of the base class of this instrumentation class.\n  remarks: \"## Property Value  \\n If not `null`, this string indicates the WMI base class that this class inherits from in the CIM schema.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public string ManagedBaseClassName { get; }\n    return:\n      type: System.String\n      description: Returns a <xref href=\"System.String\"></xref> value containing the name of the base class of this instrumentation class.\n  overload: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: InstrumentationClassAttribute(InstrumentationType)\n  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)\n  fullName: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)\n- uid: System.Management.Instrumentation.InstrumentationType\n  parent: System.Management.Instrumentation\n  isExternal: false\n  name: InstrumentationType\n  nameWithType: InstrumentationType\n  fullName: System.Management.Instrumentation.InstrumentationType\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: InstrumentationClassAttribute(InstrumentationType, String)\n  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType, String)\n  fullName: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: InstrumentationType\n  nameWithType: InstrumentationClassAttribute.InstrumentationType\n  fullName: InstrumentationClassAttribute.InstrumentationType\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: ManagedBaseClassName\n  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName\n  fullName: InstrumentationClassAttribute.ManagedBaseClassName\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: InstrumentationClassAttribute\n  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute\n  fullName: InstrumentationClassAttribute.InstrumentationClassAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType*\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: InstrumentationType\n  nameWithType: InstrumentationClassAttribute.InstrumentationType\n  fullName: InstrumentationClassAttribute.InstrumentationType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName*\n  parent: System.Management.Instrumentation.InstrumentationClassAttribute\n  isExternal: false\n  name: ManagedBaseClassName\n  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName\n  fullName: InstrumentationClassAttribute.ManagedBaseClassName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentationClassAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}