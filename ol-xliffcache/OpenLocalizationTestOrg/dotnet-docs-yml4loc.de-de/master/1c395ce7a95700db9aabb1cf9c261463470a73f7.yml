### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  commentId: T:System.ServiceModel.Dispatcher.MessageFilter
  id: MessageFilter
  children:
  - System.ServiceModel.Dispatcher.MessageFilter.#ctor
  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageFilter
  nameWithType: MessageFilter
  fullName: System.ServiceModel.Dispatcher.MessageFilter
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: '`abstract` base class for different classes of filters used to query messages.'
  remarks: "<xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages. Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message. A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.  \n  \n Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter. The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.  \n  \n The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change. The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.  \n  \n The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:  \n  \n-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.  \n  \n-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.  \n  \n-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.  \n  \n-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.  \n  \n-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.  \n  \n <xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))]

      public abstract class MessageFilter
  inheritance:
  - System.Object
  derivedClasses:
  - System.ServiceModel.CorrelationActionMessageFilter
  - System.ServiceModel.Dispatcher.ActionMessageFilter
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  - System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  - System.ServiceModel.Dispatcher.MatchAllMessageFilter
  - System.ServiceModel.Dispatcher.MatchNoneMessageFilter
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  - System.ServiceModel.Dispatcher.StrictAndMessageFilter
  - System.ServiceModel.Dispatcher.XPathMessageFilter
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
  - type: System.Runtime.Serialization.KnownTypeAttribute
  - type: System.Runtime.Serialization.KnownTypeAttribute
  - type: System.Runtime.Serialization.KnownTypeAttribute
  - type: System.Runtime.Serialization.KnownTypeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: MessageFilter.MessageFilter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: When called in a derived class, initializes a new instance of the <xref href="System.ServiceModel.Dispatcher.MessageFilter"></xref> class.
  remarks: The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.
  syntax:
    content: protected MessageFilter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: CreateFilterTable<FilterData>()
  nameWithType: MessageFilter.CreateFilterTable<FilterData>()
  fullName: MessageFilter.CreateFilterTable<FilterData>()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Creates a filter table for a filter that has a specified type of data associated with it.
  remarks: This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Users should create a filter table by calling a constructor for the filter table. The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially. Override this method to associate a custom filter table when implementing a filter.
  syntax:
    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    typeParameters:
    - id: FilterData
      description: Data associated with the filters in the table.
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: An <xref href="System.ServiceModel.Dispatcher.IMessageFilterTable`1"></xref> object to which filters associated with <code>FilterData</code> can be added.
  overload: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: MessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.
  remarks: This method cannot inspect the contents of the message body.
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> object to test.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.Channels.Message"></xref> object satisfies the filter criteria; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: MessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.
  remarks: The message must be fully buffered if the body is to be inspected by the filter. The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter. The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection. The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: The <xref href="System.ServiceModel.Channels.MessageBuffer"></xref> object to test.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.Channels.MessageBuffer"></xref> object satisfies the filter criteria; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: MessageFilter.MessageFilter()
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>()
  nameWithType: MessageFilter.CreateFilterTable<FilterData>()
  fullName: MessageFilter.CreateFilterTable<FilterData>()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  name: IMessageFilterTable<TFilterData>
  nameWithType: IMessageFilterTable<TFilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>
- uid: FilterData
  name: FilterData
  nameWithType: FilterData
  fullName: FilterData
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: System.ServiceModel.Dispatcher.IMessageFilterTable
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: MessageFilter.Match(Message)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: MessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match
  nameWithType: MessageFilter.Match
  fullName: MessageFilter.Match
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter
  nameWithType: MessageFilter.MessageFilter
  fullName: MessageFilter.MessageFilter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: MessageFilter.CreateFilterTable<FilterData>
  fullName: MessageFilter.CreateFilterTable<FilterData>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
