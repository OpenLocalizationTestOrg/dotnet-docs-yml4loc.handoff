{"nodes":[{"content":"Provides unique identification for events whose handlers are stored into an internal hashtable.","nodes":[{"pos":[0,95],"content":"Provides unique identification for events whose handlers are stored into an internal hashtable.","nodes":[{"content":"Provides unique identification for events whose handlers are stored into an internal hashtable.","pos":[0,95]}]}],"pos":[402,498],"yaml":true},{"content":"> [!IMPORTANT]\n>  This type exists specifically so that compilers, build rules, or other enforcement mechanisms can verify that all event keys of this type are created exclusively by private static fields on the event-declaring class. Failure to make the event key private raises the possibility of event spoofing.","nodes":[{"pos":[2,314],"content":"[!IMPORTANT]\n This type exists specifically so that compilers, build rules, or other enforcement mechanisms can verify that all event keys of this type are created exclusively by private static fields on the event-declaring class. Failure to make the event key private raises the possibility of event spoofing.","leadings":["","> "],"nodes":[{"content":" This type exists specifically so that compilers, build rules, or other enforcement mechanisms can verify that all event keys of this type are created exclusively by private static fields on the event-declaring class. Failure to make the event key private raises the possibility of event spoofing.","pos":[13,310],"nodes":[{"content":"This type exists specifically so that compilers, build rules, or other enforcement mechanisms can verify that all event keys of this type are created exclusively by private static fields on the event-declaring class.","pos":[1,217]},{"content":"Failure to make the event key private raises the possibility of event spoofing.","pos":[218,297]}]}]}],"pos":[509,836],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.EventPrivateKey\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventPrivateKey\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.EventPrivateKey\"></xref> class."}],"pos":[2144,2237],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.EventPrivateKey\n  commentId: T:System.Windows.EventPrivateKey\n  id: EventPrivateKey\n  children:\n  - System.Windows.EventPrivateKey.#ctor\n  langs:\n  - csharp\n  name: EventPrivateKey\n  nameWithType: EventPrivateKey\n  fullName: System.Windows.EventPrivateKey\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides unique identification for events whose handlers are stored into an internal hashtable.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This type exists specifically so that compilers, build rules, or other enforcement mechanisms can verify that all event keys of this type are created exclusively by private static fields on the event-declaring class. Failure to make the event key private raises the possibility of event spoofing.\n  syntax:\n    content: public class EventPrivateKey\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventPrivateKey.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.EventPrivateKey.#ctor\n  commentId: M:System.Windows.EventPrivateKey.#ctor\n  id: '#ctor'\n  parent: System.Windows.EventPrivateKey\n  langs:\n  - csharp\n  name: EventPrivateKey()\n  nameWithType: EventPrivateKey.EventPrivateKey()\n  fullName: EventPrivateKey.EventPrivateKey()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.EventPrivateKey\"></xref> class.\n  syntax:\n    content: public EventPrivateKey ();\n    parameters: []\n  overload: System.Windows.EventPrivateKey.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventPrivateKey.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.EventPrivateKey.#ctor\n  parent: System.Windows.EventPrivateKey\n  isExternal: false\n  name: EventPrivateKey()\n  nameWithType: EventPrivateKey.EventPrivateKey()\n  fullName: EventPrivateKey.EventPrivateKey()\n- uid: System.Windows.EventPrivateKey.#ctor*\n  parent: System.Windows.EventPrivateKey\n  isExternal: false\n  name: EventPrivateKey\n  nameWithType: EventPrivateKey.EventPrivateKey\n  fullName: EventPrivateKey.EventPrivateKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventPrivateKey.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}