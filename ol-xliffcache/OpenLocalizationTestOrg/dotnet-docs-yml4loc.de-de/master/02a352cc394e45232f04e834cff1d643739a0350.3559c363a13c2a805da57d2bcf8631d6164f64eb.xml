{"nodes":[{"content":"Represents a lambda expression used as an l-value, which supports binding of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments.","nodes":[{"pos":[0,148],"content":"Represents a lambda expression used as an l-value, which supports binding of <ph id=\"ph1\">&lt;xref href=\"System.Activities.ArgumentDirection.Out\"&gt;&lt;/xref&gt;</ph> arguments.","source":"Represents a lambda expression used as an l-value, which supports binding of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments."}],"pos":[1020,1169],"yaml":true},{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.  \n  \n This activity uses the LINQ to Entity provider to evaluate LINQ expressions. Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model. For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.","nodes":[{"pos":[0,634],"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","nodes":[{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","pos":[0,634],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is used for lambda expressions specified in code and cannot be serialized to XAML.","pos":[0,139],"source":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML."},{"content":"If an attempt to serialize a workflow that contains a <ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is made, a <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.LambdaSerializationException&gt;</ph> is thrown.","pos":[140,338],"source":" If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown."},{"content":"If the containing workflow requires XAML serialization, use <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> or use <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> to convert the <ph id=\"ph3\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> to a format that can be serialized.","pos":[339,634],"source":" If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized."}]}]},{"pos":[641,934],"content":"This activity uses the LINQ to Entity provider to evaluate LINQ expressions. Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model. For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.","nodes":[{"content":"This activity uses the LINQ to Entity provider to evaluate LINQ expressions. Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model. For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.","pos":[0,293],"nodes":[{"content":"This activity uses the LINQ to Entity provider to evaluate LINQ expressions.","pos":[0,76]},{"content":"Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model.","pos":[77,175]},{"content":"For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.","pos":[176,293]}]}]}],"pos":[1180,2119],"yaml":true,"extradata":"MT"},{"content":"The type of value returned by the expression.","nodes":[{"pos":[0,45],"content":"The type of value returned by the expression.","nodes":[{"content":"The type of value returned by the expression.","pos":[0,45]}]}],"pos":[2362,2408],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.LambdaReference`1\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.LambdaReference`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.LambdaReference`1\"></xref> class."}],"pos":[5538,5648],"yaml":true},{"content":"The value of the expression.","nodes":[{"pos":[0,28],"content":"The value of the expression.","nodes":[{"content":"The value of the expression.","pos":[0,28]}]}],"pos":[5955,5984],"yaml":true},{"content":"This method always returns `true` and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.","nodes":[{"pos":[0,295],"content":"This method always returns <ph id=\"ph1\">`true`</ph> and is used in conjunction with <ph id=\"ph2\">&lt;xref href=\"System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\"&gt;&lt;/xref&gt;</ph> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.","source":"This method always returns `true` and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML."}],"pos":[8725,9021],"yaml":true},{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","nodes":[{"pos":[0,634],"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","nodes":[{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","pos":[0,634],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is used for lambda expressions specified in code and cannot be serialized to XAML.","pos":[0,139],"source":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML."},{"content":"If an attempt to serialize a workflow that contains a <ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is made, a <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.LambdaSerializationException&gt;</ph> is thrown.","pos":[140,338],"source":" If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown."},{"content":"If the containing workflow requires XAML serialization, use <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> or use <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> to convert the <ph id=\"ph3\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> to a format that can be serialized.","pos":[339,634],"source":" If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized."}]}]}],"pos":[9032,9667],"yaml":true,"extradata":"MT"},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[9889,9938],"yaml":true},{"content":"This method always returns `true`.","nodes":[{"pos":[0,34],"content":"This method always returns <ph id=\"ph1\">`true`</ph>.","source":"This method always returns `true`."}],"pos":[9996,10031],"yaml":true},{"content":"Throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.","nodes":[{"pos":[0,353],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.LambdaSerializationException\"&gt;&lt;/xref&gt;</ph> and is used in conjunction with <ph id=\"ph2\">&lt;xref href=\"System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\"&gt;&lt;/xref&gt;</ph> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.","source":"Throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML."}],"pos":[11364,11718],"yaml":true},{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","nodes":[{"pos":[0,634],"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","nodes":[{"content":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.","pos":[0,634],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is used for lambda expressions specified in code and cannot be serialized to XAML.","pos":[0,139],"source":"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML."},{"content":"If an attempt to serialize a workflow that contains a <ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> is made, a <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.LambdaSerializationException&gt;</ph> is thrown.","pos":[140,338],"source":" If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown."},{"content":"If the containing workflow requires XAML serialization, use <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> or use <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> to convert the <ph id=\"ph3\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> to a format that can be serialized.","pos":[339,634],"source":" If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized."}]}]}],"pos":[11729,12364],"yaml":true,"extradata":"MT"},{"content":"The context information that is used for conversion.","nodes":[{"pos":[0,52],"content":"The context information that is used for conversion.","nodes":[{"content":"The context information that is used for conversion.","pos":[0,52]}]}],"pos":[12585,12638],"yaml":true},{"content":"This method throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> when called.","nodes":[{"pos":[0,113],"content":"This method throws a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.LambdaSerializationException\"&gt;&lt;/xref&gt;</ph> when called.","source":"This method throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> when called."}],"pos":[12695,12809],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.LambdaReference`1\n  commentId: T:System.Activities.Expressions.LambdaReference`1\n  id: LambdaReference`1\n  children:\n  - System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  langs:\n  - csharp\n  name: LambdaReference<T>\n  nameWithType: LambdaReference<T>\n  fullName: System.Activities.Expressions.LambdaReference<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Represents a lambda expression used as an l-value, which supports binding of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments.\n  remarks: \"<xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.  \\n  \\n This activity uses the LINQ to Entity provider to evaluate LINQ expressions. Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model. For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.\"\n  syntax:\n    content: 'public sealed class LambdaReference<T> : System.Activities.CodeActivity<System.Activities.Location<T>>, System.Activities.XamlIntegration.IValueSerializableExpression'\n    typeParameters:\n    - id: T\n      description: The type of value returned by the expression.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.XamlIntegration.IValueSerializableExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  commentId: M:System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: LambdaReference<T>.LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n  fullName: LambdaReference<T>.LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.LambdaReference`1\"></xref> class.\n  syntax:\n    content: public LambdaReference (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> locationExpression);\n    parameters:\n    - id: locationExpression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: The value of the expression.\n  overload: System.Activities.Expressions.LambdaReference`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  commentId: M:System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: ''\n  overload: System.Activities.Expressions.LambdaReference`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  fullName: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: This method always returns `true` and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.\n  remarks: <xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.\n  syntax:\n    content: public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: This method always returns `true`.\n  overload: System.Activities.Expressions.LambdaReference`1.CanConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  fullName: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> and is used in conjunction with <xref href=\"System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\"></xref> to provide descriptive error messages when an attempt is made to serialize this activity to XAML.\n  remarks: <xref:System.Activities.Expressions.LambdaReference%601> is used for lambda expressions specified in code and cannot be serialized to XAML. If an attempt to serialize a workflow that contains a <xref:System.Activities.Expressions.LambdaReference%601> is made, a <xref:System.Activities.Expressions.LambdaSerializationException> is thrown. If the containing workflow requires XAML serialization, use <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> or use <xref:System.Activities.Expressions.ExpressionServices> to convert the <xref:System.Activities.Expressions.LambdaReference%601> to a format that can be serialized.\n  syntax:\n    content: public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: The context information that is used for conversion.\n    return:\n      type: System.String\n      description: This method throws a <xref href=\"System.Activities.Expressions.LambdaSerializationException\"></xref> when called.\n  overload: System.Activities.Expressions.LambdaReference`1.ConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  commentId: M:System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: LambdaReference<T>.Execute(CodeActivityContext)\n  fullName: LambdaReference<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override System.Activities.Location<T> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: ''\n    return:\n      type: System.Activities.Location`1\n      description: ''\n  overload: System.Activities.Expressions.LambdaReference`1.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\nreferences:\n- uid: System.Activities.CodeActivity`1\n  name: CodeActivity<TResult>\n  nameWithType: CodeActivity<TResult>\n  fullName: System.Activities.CodeActivity<TResult>\n- uid: System.Activities.Location`1\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.CodeActivity{System.Activities.Location{T}}\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivity<Location<T>>\n  nameWithType: CodeActivity<Location<T>>\n  fullName: System.Activities.CodeActivity<System.Activities.Location<T>>\n  spec.csharp:\n  - uid: System.Activities.CodeActivity`1\n    name: CodeActivity\n    nameWithType: CodeActivity\n    fullName: System.Activities.CodeActivity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: System.Activities.Location\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: LambdaReference<T>.LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n  fullName: LambdaReference<T>.LambdaReference<T>(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.ActivityContext\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: System.Activities.ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  fullName: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  fullName: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: LambdaReference<T>.Execute(CodeActivityContext)\n  fullName: LambdaReference<T>.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: LambdaReference<T>\n  nameWithType: LambdaReference<T>.LambdaReference<T>\n  fullName: LambdaReference<T>.LambdaReference<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: LambdaReference<T>.CacheMetadata\n  fullName: LambdaReference<T>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: LambdaReference<T>.CanConvertToString\n  fullName: LambdaReference<T>.CanConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: ConvertToString\n  nameWithType: LambdaReference<T>.ConvertToString\n  fullName: LambdaReference<T>.ConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Activities.Expressions.LambdaReference`1.Execute*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: Execute\n  nameWithType: LambdaReference<T>.Execute\n  fullName: LambdaReference<T>.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/LambdaReference`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.CodeActivity`1.Implementation\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: CodeActivity<TResult>.Implementation\n  fullName: CodeActivity<TResult>.Implementation\n- uid: System.Activities.CodeActivity`1.ImplementationVersion\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: CodeActivity<TResult>.ImplementationVersion\n  fullName: CodeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.XamlIntegration.IValueSerializableExpression\n  parent: System.Activities.XamlIntegration\n  isExternal: false\n  name: IValueSerializableExpression\n  nameWithType: IValueSerializableExpression\n  fullName: System.Activities.XamlIntegration.IValueSerializableExpression\n"}