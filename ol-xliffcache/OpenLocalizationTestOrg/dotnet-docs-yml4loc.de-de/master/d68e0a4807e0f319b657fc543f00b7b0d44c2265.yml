### YamlMime:ManagedReference
items:
- uid: System.Device.Location
  id: System.Device.Location
  children:
  - System.Device.Location.CivicAddress
  - System.Device.Location.CivicAddressResolver
  - System.Device.Location.GeoCoordinate
  - System.Device.Location.GeoCoordinateWatcher
  - System.Device.Location.GeoPosition`1
  - System.Device.Location.GeoPositionAccuracy
  - System.Device.Location.GeoPositionChangedEventArgs`1
  - System.Device.Location.GeoPositionPermission
  - System.Device.Location.GeoPositionStatus
  - System.Device.Location.GeoPositionStatusChangedEventArgs
  - System.Device.Location.ICivicAddressResolver
  - System.Device.Location.IGeoPositionWatcher`1
  - System.Device.Location.ResolveAddressCompletedEventArgs
  langs:
  - csharp
  name: System.Device.Location
  nameWithType: System.Device.Location
  fullName: System.Device.Location
  type: Namespace
  summary: The <xref href="System.Device.Location"></xref> namespace allows application developers to easily access the computer's location by using a single API.  Location information may come from multiple providers, such as GPS, Wi-Fi triangulation, and cell phone tower triangulation. The <xref href="System.Device.Location"></xref> classes provide a single API to encapsulate the multiple location providers on a computer and support seamless prioritization and transitioning between them. As a result, application developers who use this API do not need to tailor applications to specific hardware configurations.
  remarks: "The <xref:System.Device.Location.GeoCoordinateWatcher> class supplies location data that is based on latitude and longitude coordinates. The <xref:System.Device.Location.CivicAddressResolver> and <xref:System.Device.Location.ICivicAddressResolver> types provide the ability to resolve from a coordinate location to a civic address. Additionally, the <xref:System.Device.Location.IGeoPositionWatcher%601> interface can be implemented to extend the types of location data that are supplied.  \n  \n In Windows 7, all the <xref:System.Device.Location> classes are fully functional if a location provider is installed and can determine the computer's location. On Windows 7 Starter Edition, the Default Location Provider that can be set in Control Panel is the only location provider that is supported.  \n  \n **Note** In versions of Windows prior to Windows 7, the following conditions apply:  \n  \n-   All <xref:System.Device.Location> objects that have constructors can be created, but the <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> property will always have the value <xref:System.Device.Location.GeoPositionStatus.Disabled>.  \n  \n-   The location indicated by the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> will always be <xref:System.Device.Location.GeoCoordinate.Unknown>.  \n  \n-   No location events will be raised."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Device.Location.xml
  ms.technology:
  - dotnet-standard
  manager: martinek
references:
- uid: System.Device.Location.CivicAddress
  parent: System.Device.Location
  isExternal: false
  name: CivicAddress
  nameWithType: CivicAddress
  fullName: System.Device.Location.CivicAddress
- uid: System.Device.Location.CivicAddressResolver
  parent: System.Device.Location
  isExternal: false
  name: CivicAddressResolver
  nameWithType: CivicAddressResolver
  fullName: System.Device.Location.CivicAddressResolver
- uid: System.Device.Location.GeoCoordinate
  parent: System.Device.Location
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
- uid: System.Device.Location.GeoCoordinateWatcher
  parent: System.Device.Location
  isExternal: false
  name: GeoCoordinateWatcher
  nameWithType: GeoCoordinateWatcher
  fullName: System.Device.Location.GeoCoordinateWatcher
- uid: System.Device.Location.GeoPosition`1
  parent: System.Device.Location
  isExternal: false
  name: GeoPosition<T>
  nameWithType: GeoPosition<T>
  fullName: System.Device.Location.GeoPosition<T>
- uid: System.Device.Location.GeoPositionAccuracy
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionAccuracy
  nameWithType: GeoPositionAccuracy
  fullName: System.Device.Location.GeoPositionAccuracy
- uid: System.Device.Location.GeoPositionChangedEventArgs`1
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionChangedEventArgs<T>
  nameWithType: GeoPositionChangedEventArgs<T>
  fullName: System.Device.Location.GeoPositionChangedEventArgs<T>
- uid: System.Device.Location.GeoPositionPermission
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionPermission
  nameWithType: GeoPositionPermission
  fullName: System.Device.Location.GeoPositionPermission
- uid: System.Device.Location.GeoPositionStatus
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatus
  nameWithType: GeoPositionStatus
  fullName: System.Device.Location.GeoPositionStatus
- uid: System.Device.Location.GeoPositionStatusChangedEventArgs
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatusChangedEventArgs
  nameWithType: GeoPositionStatusChangedEventArgs
  fullName: System.Device.Location.GeoPositionStatusChangedEventArgs
- uid: System.Device.Location.ICivicAddressResolver
  parent: System.Device.Location
  isExternal: false
  name: ICivicAddressResolver
  nameWithType: ICivicAddressResolver
  fullName: System.Device.Location.ICivicAddressResolver
- uid: System.Device.Location.IGeoPositionWatcher`1
  parent: System.Device.Location
  isExternal: false
  name: IGeoPositionWatcher<T>
  nameWithType: IGeoPositionWatcher<T>
  fullName: System.Device.Location.IGeoPositionWatcher<T>
- uid: System.Device.Location.ResolveAddressCompletedEventArgs
  parent: System.Device.Location
  isExternal: false
  name: ResolveAddressCompletedEventArgs
  nameWithType: ResolveAddressCompletedEventArgs
  fullName: System.Device.Location.ResolveAddressCompletedEventArgs
