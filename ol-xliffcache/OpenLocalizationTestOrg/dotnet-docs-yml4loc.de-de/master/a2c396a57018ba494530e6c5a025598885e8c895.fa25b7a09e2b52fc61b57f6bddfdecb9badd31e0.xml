{"nodes":[{"content":"Used to set the default loader optimization policy for the main method of an executable application.","nodes":[{"pos":[0,100],"content":"Used to set the default loader optimization policy for the main method of an executable application.","nodes":[{"content":"Used to set the default loader optimization policy for the main method of an executable application.","pos":[0,100]}]}],"pos":[614,715],"yaml":true},{"content":"The <xref:System.LoaderOptimizationAttribute> can only be set on the main method for an executable application and is ignored on all other methods.  \n  \n The <xref:System.LoaderOptimizationAttribute> attribute is specified with a <xref:System.LoaderOptimization> enumeration value, which tells the loader what type of application to optimize for: `SingleDomain`, `MultiDomain`, or `MultiDomainHost`.  \n  \n This attribute is only a hint to the loader and does not affect program behavior.  \n  \n> [!NOTE]\n>  If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain> is created using the <xref:System.LoaderOptimization.MultiDomain> flag, the effect is the same as specifying the <xref:System.LoaderOptimization.MultiDomainHost> flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <xref:System.LoaderOptimization.MultiDomain> flag.","nodes":[{"pos":[0,147],"content":"The <xref:System.LoaderOptimizationAttribute> can only be set on the main method for an executable application and is ignored on all other methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.LoaderOptimizationAttribute&gt;</ph> can only be set on the main method for an executable application and is ignored on all other methods.","pos":[0,147],"source":"The <xref:System.LoaderOptimizationAttribute> can only be set on the main method for an executable application and is ignored on all other methods."}]},{"pos":[154,399],"content":"The <ph id=\"ph1\">&lt;xref:System.LoaderOptimizationAttribute&gt;</ph> attribute is specified with a <ph id=\"ph2\">&lt;xref:System.LoaderOptimization&gt;</ph> enumeration value, which tells the loader what type of application to optimize for: <ph id=\"ph3\">`SingleDomain`</ph>, <ph id=\"ph4\">`MultiDomain`</ph>, or <ph id=\"ph5\">`MultiDomainHost`</ph>.","source":"The <xref:System.LoaderOptimizationAttribute> attribute is specified with a <xref:System.LoaderOptimization> enumeration value, which tells the loader what type of application to optimize for: `SingleDomain`, `MultiDomain`, or `MultiDomainHost`."},{"pos":[406,487],"content":"This attribute is only a hint to the loader and does not affect program behavior.","nodes":[{"content":"This attribute is only a hint to the loader and does not affect program behavior.","pos":[0,81]}]},{"pos":[495,1090],"content":"[!NOTE]\n If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain> is created using the <xref:System.LoaderOptimization.MultiDomain> flag, the effect is the same as specifying the <xref:System.LoaderOptimization.MultiDomainHost> flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <xref:System.LoaderOptimization.MultiDomain> flag.","leadings":["","> "],"nodes":[{"content":" If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain> is created using the <xref:System.LoaderOptimization.MultiDomain> flag, the effect is the same as specifying the <xref:System.LoaderOptimization.MultiDomainHost> flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <xref:System.LoaderOptimization.MultiDomain> flag.","pos":[8,593],"nodes":[{"content":"If custom code access security policy is set for the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>, by using the <ph id=\"ph2\">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> property, and the <ph id=\"ph3\">&lt;xref:System.AppDomain&gt;</ph> is created using the <ph id=\"ph4\">&lt;xref:System.LoaderOptimization.MultiDomain&gt;</ph> flag, the effect is the same as specifying the <ph id=\"ph5\">&lt;xref:System.LoaderOptimization.MultiDomainHost&gt;</ph> flag; that is, only assemblies in the GAC are shared.","pos":[1,395],"source":" If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain> is created using the <xref:System.LoaderOptimization.MultiDomain> flag, the effect is the same as specifying the <xref:System.LoaderOptimization.MultiDomainHost> flag; that is, only assemblies in the GAC are shared."},{"content":"When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <ph id=\"ph1\">&lt;xref:System.LoaderOptimization.MultiDomain&gt;</ph> flag.","pos":[396,585],"source":" When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <xref:System.LoaderOptimization.MultiDomain> flag."}]}]}],"pos":[726,1826],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimizationAttribute\"&gt;&lt;/xref&gt;</ph> class to the specified value.","source":"Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value."}],"pos":[7136,7256],"yaml":true},{"content":"A value equivalent to a <xref href=\"System.LoaderOptimization\"></xref> constant.","nodes":[{"pos":[0,80],"content":"A value equivalent to a <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization\"&gt;&lt;/xref&gt;</ph> constant.","source":"A value equivalent to a <xref href=\"System.LoaderOptimization\"></xref> constant."}],"pos":[7403,7484],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimizationAttribute\"&gt;&lt;/xref&gt;</ph> class to the specified value.","source":"Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value."}],"pos":[8910,9030],"yaml":true},{"content":"A <xref href=\"System.LoaderOptimization\"></xref> constant.","nodes":[{"pos":[0,58],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization\"&gt;&lt;/xref&gt;</ph> constant.","source":"A <xref href=\"System.LoaderOptimization\"></xref> constant."}],"pos":[9205,9264],"yaml":true},{"content":"Gets the current <xref href=\"System.LoaderOptimization\"></xref> value for this instance.","nodes":[{"pos":[0,88],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization\"&gt;&lt;/xref&gt;</ph> value for this instance.","source":"Gets the current <xref href=\"System.LoaderOptimization\"></xref> value for this instance."}],"pos":[10478,10567],"yaml":true},{"content":"A <xref href=\"System.LoaderOptimization\"></xref> constant.","nodes":[{"pos":[0,58],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization\"&gt;&lt;/xref&gt;</ph> constant.","source":"A <xref href=\"System.LoaderOptimization\"></xref> constant."}],"pos":[10700,10759],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.LoaderOptimizationAttribute\n  commentId: T:System.LoaderOptimizationAttribute\n  id: LoaderOptimizationAttribute\n  children:\n  - System.LoaderOptimizationAttribute.#ctor(System.Byte)\n  - System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)\n  - System.LoaderOptimizationAttribute.Value\n  langs:\n  - csharp\n  name: LoaderOptimizationAttribute\n  nameWithType: LoaderOptimizationAttribute\n  fullName: System.LoaderOptimizationAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Used to set the default loader optimization policy for the main method of an executable application.\n  remarks: \"The <xref:System.LoaderOptimizationAttribute> can only be set on the main method for an executable application and is ignored on all other methods.  \\n  \\n The <xref:System.LoaderOptimizationAttribute> attribute is specified with a <xref:System.LoaderOptimization> enumeration value, which tells the loader what type of application to optimize for: `SingleDomain`, `MultiDomain`, or `MultiDomainHost`.  \\n  \\n This attribute is only a hint to the loader and does not affect program behavior.  \\n  \\n> [!NOTE]\\n>  If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain> is created using the <xref:System.LoaderOptimization.MultiDomain> flag, the effect is the same as specifying the <xref:System.LoaderOptimization.MultiDomainHost> flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the <xref:System.LoaderOptimization.MultiDomain> flag.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class LoaderOptimizationAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.LoaderOptimizationAttribute.#ctor(System.Byte)\n  commentId: M:System.LoaderOptimizationAttribute.#ctor(System.Byte)\n  id: '#ctor(System.Byte)'\n  parent: System.LoaderOptimizationAttribute\n  langs:\n  - csharp\n  name: LoaderOptimizationAttribute(Byte)\n  nameWithType: LoaderOptimizationAttribute.LoaderOptimizationAttribute(Byte)\n  fullName: LoaderOptimizationAttribute.LoaderOptimizationAttribute(Byte)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value.\n  syntax:\n    content: public LoaderOptimizationAttribute (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: A value equivalent to a <xref href=\"System.LoaderOptimization\"></xref> constant.\n  overload: System.LoaderOptimizationAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)\n  commentId: M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)\n  id: '#ctor(System.LoaderOptimization)'\n  parent: System.LoaderOptimizationAttribute\n  langs:\n  - csharp\n  name: LoaderOptimizationAttribute(LoaderOptimization)\n  nameWithType: LoaderOptimizationAttribute.LoaderOptimizationAttribute(LoaderOptimization)\n  fullName: LoaderOptimizationAttribute.LoaderOptimizationAttribute(LoaderOptimization)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to the specified value.\n  syntax:\n    content: public LoaderOptimizationAttribute (LoaderOptimization value);\n    parameters:\n    - id: value\n      type: System.LoaderOptimization\n      description: A <xref href=\"System.LoaderOptimization\"></xref> constant.\n  overload: System.LoaderOptimizationAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.LoaderOptimizationAttribute.Value\n  commentId: P:System.LoaderOptimizationAttribute.Value\n  id: Value\n  parent: System.LoaderOptimizationAttribute\n  langs:\n  - csharp\n  name: Value\n  nameWithType: LoaderOptimizationAttribute.Value\n  fullName: LoaderOptimizationAttribute.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the current <xref href=\"System.LoaderOptimization\"></xref> value for this instance.\n  syntax:\n    content: public LoaderOptimization Value { get; }\n    return:\n      type: System.LoaderOptimization\n      description: A <xref href=\"System.LoaderOptimization\"></xref> constant.\n  overload: System.LoaderOptimizationAttribute.Value*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.LoaderOptimizationAttribute.#ctor(System.Byte)\n  parent: System.LoaderOptimizationAttribute\n  isExternal: false\n  name: LoaderOptimizationAttribute(Byte)\n  nameWithType: LoaderOptimizationAttribute.LoaderOptimizationAttribute(Byte)\n  fullName: LoaderOptimizationAttribute.LoaderOptimizationAttribute(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)\n  parent: System.LoaderOptimizationAttribute\n  isExternal: false\n  name: LoaderOptimizationAttribute(LoaderOptimization)\n  nameWithType: LoaderOptimizationAttribute.LoaderOptimizationAttribute(LoaderOptimization)\n  fullName: LoaderOptimizationAttribute.LoaderOptimizationAttribute(LoaderOptimization)\n- uid: System.LoaderOptimization\n  parent: System\n  isExternal: false\n  name: LoaderOptimization\n  nameWithType: LoaderOptimization\n  fullName: System.LoaderOptimization\n- uid: System.LoaderOptimizationAttribute.Value\n  parent: System.LoaderOptimizationAttribute\n  isExternal: false\n  name: Value\n  nameWithType: LoaderOptimizationAttribute.Value\n  fullName: LoaderOptimizationAttribute.Value\n- uid: System.LoaderOptimizationAttribute.#ctor*\n  parent: System.LoaderOptimizationAttribute\n  isExternal: false\n  name: LoaderOptimizationAttribute\n  nameWithType: LoaderOptimizationAttribute.LoaderOptimizationAttribute\n  fullName: LoaderOptimizationAttribute.LoaderOptimizationAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n- uid: System.LoaderOptimizationAttribute.Value*\n  parent: System.LoaderOptimizationAttribute\n  isExternal: false\n  name: Value\n  nameWithType: LoaderOptimizationAttribute.Value\n  fullName: LoaderOptimizationAttribute.Value\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimizationAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}