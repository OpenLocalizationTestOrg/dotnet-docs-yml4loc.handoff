{"nodes":[{"content":"Specifies that a property, field, or parameter value should be provided by the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>.object","nodes":[{"pos":[0,169],"content":"Specifies that a property, field, or parameter value should be provided by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;&lt;/xref&gt;</ph>.object","source":"Specifies that a property, field, or parameter value should be provided by the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>.object"}],"pos":[1161,1331],"yaml":true},{"content":"In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part. It can decorate a property, a field, or a method. During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.  \n  \n Whether an import matches a given export is determined primarily by comparing the contract name and the contract type. Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member. If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified. The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata. For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.","nodes":[{"pos":[0,493],"content":"In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part. It can decorate a property, a field, or a method. During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.","nodes":[{"content":"In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part. It can decorate a property, a field, or a method. During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.","pos":[0,493],"nodes":[{"content":"In the Attributed Programming Model, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.ImportAttribute&gt;</ph> is used to declare the imports, or dependencies, of a given part.","pos":[0,163],"source":"In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part."},{"content":"It can decorate a property, a field, or a method.","pos":[164,213]},{"content":"During composition, a part's imports will be filled by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object to which that part belongs, by using the exports provided to that <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object.","pos":[214,493],"source":" During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object."}]}]},{"pos":[500,1293],"content":"Whether an import matches a given export is determined primarily by comparing the contract name and the contract type. Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member. If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified. The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata. For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.","nodes":[{"content":"Whether an import matches a given export is determined primarily by comparing the contract name and the contract type. Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member. If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified. The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata. For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.","pos":[0,793],"nodes":[{"content":"Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.","pos":[0,118]},{"content":"Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.","pos":[119,293]},{"content":"If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.","pos":[294,508]},{"content":"The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.","pos":[509,688]},{"content":"For more information about metadata, see <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.PartMetadataAttribute&gt;</ph>.","pos":[689,793],"source":" For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>."}]}]}],"pos":[1342,2640],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the default contract name.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute\"&gt;&lt;/xref&gt;</ph> class, importing the export with the default contract name.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the default contract name."}],"pos":[8219,8384],"yaml":true},{"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"pos":[0,228],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.","nodes":[{"content":"The default contract name is the result of calling the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that this is marked with this attribute.","pos":[0,228],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute."}]},{"pos":[235,382],"content":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"content":"The contract name is compared by using the <ph id=\"ph1\">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.","pos":[0,147],"source":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]}],"pos":[8395,8782],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name.","nodes":[{"pos":[0,166],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute\"&gt;&lt;/xref&gt;</ph> class, importing the export with the specified contract name.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name."}],"pos":[10154,10321],"yaml":true},{"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"pos":[0,223],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.","nodes":[{"content":"The default contract name is the result of calling the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that is marked with this attribute.","pos":[0,223],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute."}]},{"pos":[230,377],"content":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"content":"The contract name is compared by using the <ph id=\"ph1\">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.","pos":[0,147],"source":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]}],"pos":[10332,10714],"yaml":true,"extradata":"MT"},{"content":"The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name.","nodes":[{"pos":[0,110],"content":"The contract name of the export to import, or <ph id=\"ph1\">`null`</ph> or an empty string (\"\") to use the default contract name.","source":"The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name."}],"pos":[10867,10978],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the contract name derived from the specified type.","nodes":[{"pos":[0,188],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute\"&gt;&lt;/xref&gt;</ph> class, importing the export with the contract name derived from the specified type.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the contract name derived from the specified type."}],"pos":[12269,12458],"yaml":true},{"content":"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.  \n  \n The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"pos":[0,156],"content":"The contract name is the result of calling the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on <ph id=\"ph2\">`contractType`</ph>.","source":"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`."},{"pos":[163,386],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.","nodes":[{"content":"The default contract name is the result of calling the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that is marked with this attribute.","pos":[0,223],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute."}]},{"pos":[393,540],"content":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","nodes":[{"content":"The contract name is compared by using the <ph id=\"ph1\">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.","pos":[0,147],"source":"The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]}],"pos":[12469,13016],"yaml":true,"extradata":"MT"},{"content":"The type to derive the contract name of the export from, or `null` to use the default contract name.","nodes":[{"pos":[0,100],"content":"The type to derive the contract name of the export from, or <ph id=\"ph1\">`null`</ph> to use the default contract name.","source":"The type to derive the contract name of the export from, or `null` to use the default contract name."}],"pos":[13165,13266],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name and type.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute\"&gt;&lt;/xref&gt;</ph> class, importing the export with the specified contract name and type.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name and type."}],"pos":[14623,14799],"yaml":true},{"content":"The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name.","nodes":[{"pos":[0,110],"content":"The contract name of the export to import, or <ph id=\"ph1\">`null`</ph> or an empty string (\"\") to use the default contract name.","source":"The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name."}],"pos":[14971,15082],"yaml":true},{"content":"The type of the export to import.","nodes":[{"pos":[0,33],"content":"The type of the export to import.","nodes":[{"content":"The type of the export to import.","pos":[0,33]}]}],"pos":[15148,15182],"yaml":true},{"content":"Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.","nodes":[{"pos":[0,188],"content":"Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.","nodes":[{"content":"Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.","pos":[0,188]}]}],"pos":[16423,16612],"yaml":true},{"content":"The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types. For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.","nodes":[{"pos":[0,300],"content":"The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types. For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.","nodes":[{"content":"The default value of the type of a property, field, or parameter is <ph id=\"ph1\">`null`</ph> for reference types and zero for numeric value types.","pos":[0,128],"source":"The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types."},{"content":"For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or <ph id=\"ph1\">`null`</ph> if the field is a reference type.","pos":[129,300],"source":" For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type."}]}],"pos":[16623,16924],"yaml":true,"extradata":"MT"},{"content":"`true` if the property, field, or parameter will be set to its type's default value when there is no export with the <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> in the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,336],"content":"`true` if the property, field, or parameter will be set to its type's default value when there is no export with the <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> in the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the property, field, or parameter will be set to its type's default value when there is no export with the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,312],"source":"`true` if the property, field, or parameter will be set to its type's default value when there is no export with the <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> in the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[313,336],"source":" The default is `false`."}]}],"pos":[17044,17387],"yaml":true},{"content":"Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.","nodes":[{"pos":[0,153],"content":"Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.","nodes":[{"content":"Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.","pos":[0,153]}]}],"pos":[18671,18825],"yaml":true},{"content":"`true` if the property or field allows recomposition when exports with a matching <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,324],"content":"`true` if the property or field allows recomposition when exports with a matching <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the property or field allows recomposition when exports with a matching <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"&gt;&lt;/xref&gt;</ph> are added or removed from the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,300],"source":"`true` if the property or field allows recomposition when exports with a matching <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[301,324],"source":" The default is `false`."}]}],"pos":[18951,19278],"yaml":true},{"content":"Gets the contract name of the export to import.","nodes":[{"pos":[0,47],"content":"Gets the contract name of the export to import.","nodes":[{"content":"Gets the contract name of the export to import.","pos":[0,47]}]}],"pos":[20532,20580],"yaml":true},{"content":"The contract name of the export to import. The default is an empty string (\"\").","nodes":[{"pos":[0,79],"content":"The contract name of the export to import. The default is an empty string (\"\").","nodes":[{"content":"The contract name of the export to import. The default is an empty string (\"\").","pos":[0,79],"nodes":[{"content":"The contract name of the export to import.","pos":[0,42]},{"content":"The default is an empty string (\"\").","pos":[43,79]}]}]}],"pos":[20696,20776],"yaml":true},{"content":"Gets the type of the export to import.","nodes":[{"pos":[0,38],"content":"Gets the type of the export to import.","nodes":[{"content":"Gets the type of the export to import.","pos":[0,38]}]}],"pos":[22024,22063],"yaml":true},{"content":"The type of the export to import.","nodes":[{"pos":[0,33],"content":"The type of the export to import.","nodes":[{"content":"The type of the export to import.","pos":[0,33]}]}],"pos":[22175,22209],"yaml":true},{"content":"Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import.","nodes":[{"pos":[0,188],"content":"Gets or sets a value that indicates that the importer requires a specific <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;&lt;/xref&gt;</ph> for the exports used to satisfy this import.","source":"Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import."}],"pos":[23517,23706],"yaml":true},{"content":"One of the following values:  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>. This is the default.  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"></xref> to require that all used exports be shared by all parts in the container.  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance.","nodes":[{"pos":[0,28],"content":"One of the following values:","nodes":[{"content":"One of the following values:","pos":[0,28]}]},{"pos":[35,245],"content":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>. This is the default.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"&gt;&lt;/xref&gt;</ph>, if the importer does not require a specific <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;&lt;/xref&gt;</ph>.","pos":[0,189],"source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>."},{"content":"This is the default.","pos":[190,210]}]},{"pos":[252,402],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"&gt;&lt;/xref&gt;</ph> to require that all used exports be shared by all parts in the container.","source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"></xref> to require that all used exports be shared by all parts in the container."},{"pos":[409,604],"content":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"&gt;&lt;/xref&gt;</ph> to require that all used exports be non-shared in a container.","pos":[0,142],"source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all used exports be non-shared in a container."},{"content":"In this case, each part receives their own instance.","pos":[143,195]}]}],"pos":[23914,24535],"yaml":true},{"content":"Gets or sets a value that specifies the scopes from which this import may be satisfied.","nodes":[{"pos":[0,87],"content":"Gets or sets a value that specifies the scopes from which this import may be satisfied.","nodes":[{"content":"Gets or sets a value that specifies the scopes from which this import may be satisfied.","pos":[0,87]}]}],"pos":[25757,25845],"yaml":true},{"content":"A value that specifies the scopes from which this import may be satisfied.","nodes":[{"pos":[0,74],"content":"A value that specifies the scopes from which this import may be satisfied.","nodes":[{"content":"A value that specifies the scopes from which this import may be satisfied.","pos":[0,74]}]}],"pos":[26033,26108],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ImportAttribute\n  commentId: T:System.ComponentModel.Composition.ImportAttribute\n  id: ImportAttribute\n  children:\n  - System.ComponentModel.Composition.ImportAttribute.#ctor\n  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)\n  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)\n  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.Composition.ImportAttribute.AllowDefault\n  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition\n  - System.ComponentModel.Composition.ImportAttribute.ContractName\n  - System.ComponentModel.Composition.ImportAttribute.ContractType\n  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy\n  - System.ComponentModel.Composition.ImportAttribute.Source\n  langs:\n  - csharp\n  name: ImportAttribute\n  nameWithType: ImportAttribute\n  fullName: System.ComponentModel.Composition.ImportAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Specifies that a property, field, or parameter value should be provided by the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>.object\n  remarks: \"In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part. It can decorate a property, a field, or a method. During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.  \\n  \\n Whether an import matches a given export is determined primarily by comparing the contract name and the contract type. Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member. If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified. The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata. For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.\"\n  example:\n  - \"The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.  \\n  \\n [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]\\n [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]\n\n      public class ImportAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor\n  commentId: M:System.ComponentModel.Composition.ImportAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ImportAttribute()\n  nameWithType: ImportAttribute.ImportAttribute()\n  fullName: ImportAttribute.ImportAttribute()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the default contract name.\n  remarks: \"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportAttribute ();\n    parameters: []\n  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)\n  commentId: M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ImportAttribute(String)\n  nameWithType: ImportAttribute.ImportAttribute(String)\n  fullName: ImportAttribute.ImportAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name.\n  remarks: \"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportAttribute (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name.\n  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)\n  commentId: M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ImportAttribute(Type)\n  nameWithType: ImportAttribute.ImportAttribute(Type)\n  fullName: ImportAttribute.ImportAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the contract name derived from the specified type.\n  remarks: \"The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.  \\n  \\n The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public ImportAttribute (Type contractType);\n    parameters:\n    - id: contractType\n      type: System.Type\n      description: The type to derive the contract name of the export from, or `null` to use the default contract name.\n  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)\n  commentId: M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ImportAttribute(String, Type)\n  nameWithType: ImportAttribute.ImportAttribute(String, Type)\n  fullName: ImportAttribute.ImportAttribute(String, Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ImportAttribute\"></xref> class, importing the export with the specified contract name and type.\n  syntax:\n    content: public ImportAttribute (string contractName, Type contractType);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the export to import, or `null` or an empty string (\"\") to use the default contract name.\n    - id: contractType\n      type: System.Type\n      description: The type of the export to import.\n  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.AllowDefault\n  id: AllowDefault\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: AllowDefault\n  nameWithType: ImportAttribute.AllowDefault\n  fullName: ImportAttribute.AllowDefault\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.\n  remarks: The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types. For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.\n  syntax:\n    content: public bool AllowDefault { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the property, field, or parameter will be set to its type's default value when there is no export with the <xref href=\\\"System.ComponentModel.Composition.ImportAttribute.ContractName\\\"></xref> in the <xref href=\\\"System.ComponentModel.Composition.Hosting.CompositionContainer\\\"></xref>; otherwise, `false`. The default is `false`.\"\n  overload: System.ComponentModel.Composition.ImportAttribute.AllowDefault*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition\n  id: AllowRecomposition\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: AllowRecomposition\n  nameWithType: ImportAttribute.AllowRecomposition\n  fullName: ImportAttribute.AllowRecomposition\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.\n  syntax:\n    content: public bool AllowRecomposition { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property or field allows recomposition when exports with a matching <xref href=\"System.ComponentModel.Composition.ImportAttribute.ContractName\"></xref> are added or removed from the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref>; otherwise, `false`. The default is `false`.'\n  overload: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractName\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.ContractName\n  id: ContractName\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ContractName\n  nameWithType: ImportAttribute.ContractName\n  fullName: ImportAttribute.ContractName\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the contract name of the export to import.\n  syntax:\n    content: public string ContractName { get; }\n    return:\n      type: System.String\n      description: The contract name of the export to import. The default is an empty string (\"\").\n  overload: System.ComponentModel.Composition.ImportAttribute.ContractName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractType\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.ContractType\n  id: ContractType\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: ContractType\n  nameWithType: ImportAttribute.ContractType\n  fullName: ImportAttribute.ContractType\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the type of the export to import.\n  syntax:\n    content: public Type ContractType { get; }\n    return:\n      type: System.Type\n      description: The type of the export to import.\n  overload: System.ComponentModel.Composition.ImportAttribute.ContractType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy\n  id: RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: RequiredCreationPolicy\n  nameWithType: ImportAttribute.RequiredCreationPolicy\n  fullName: ImportAttribute.RequiredCreationPolicy\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import.\n  syntax:\n    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }\n    return:\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: \"One of the following values:  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.Any\\\"></xref>, if the importer does not require a specific <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref>. This is the default.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.Shared\\\"></xref> to require that all used exports be shared by all parts in the container.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.NonShared\\\"></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance.\"\n  overload: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ImportAttribute.Source\n  commentId: P:System.ComponentModel.Composition.ImportAttribute.Source\n  id: Source\n  parent: System.ComponentModel.Composition.ImportAttribute\n  langs:\n  - csharp\n  name: Source\n  nameWithType: ImportAttribute.Source\n  fullName: ImportAttribute.Source\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets or sets a value that specifies the scopes from which this import may be satisfied.\n  syntax:\n    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }\n    return:\n      type: System.ComponentModel.Composition.ImportSource\n      description: A value that specifies the scopes from which this import may be satisfied.\n  overload: System.ComponentModel.Composition.ImportAttribute.Source*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ImportAttribute()\n  nameWithType: ImportAttribute.ImportAttribute()\n  fullName: ImportAttribute.ImportAttribute()\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ImportAttribute(String)\n  nameWithType: ImportAttribute.ImportAttribute(String)\n  fullName: ImportAttribute.ImportAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ImportAttribute(Type)\n  nameWithType: ImportAttribute.ImportAttribute(Type)\n  fullName: ImportAttribute.ImportAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ImportAttribute(String, Type)\n  nameWithType: ImportAttribute.ImportAttribute(String, Type)\n  fullName: ImportAttribute.ImportAttribute(String, Type)\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: AllowDefault\n  nameWithType: ImportAttribute.AllowDefault\n  fullName: ImportAttribute.AllowDefault\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: AllowRecomposition\n  nameWithType: ImportAttribute.AllowRecomposition\n  fullName: ImportAttribute.AllowRecomposition\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractName\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportAttribute.ContractName\n  fullName: ImportAttribute.ContractName\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractType\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ContractType\n  nameWithType: ImportAttribute.ContractType\n  fullName: ImportAttribute.ContractType\n- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ImportAttribute.RequiredCreationPolicy\n  fullName: ImportAttribute.RequiredCreationPolicy\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.ImportAttribute.Source\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: Source\n  nameWithType: ImportAttribute.Source\n  fullName: ImportAttribute.Source\n- uid: System.ComponentModel.Composition.ImportSource\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ImportSource\n  nameWithType: ImportSource\n  fullName: System.ComponentModel.Composition.ImportSource\n- uid: System.ComponentModel.Composition.ImportAttribute.#ctor*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ImportAttribute\n  nameWithType: ImportAttribute.ImportAttribute\n  fullName: ImportAttribute.ImportAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: AllowDefault\n  nameWithType: ImportAttribute.AllowDefault\n  fullName: ImportAttribute.AllowDefault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: AllowRecomposition\n  nameWithType: ImportAttribute.AllowRecomposition\n  fullName: ImportAttribute.AllowRecomposition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractName*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportAttribute.ContractName\n  fullName: ImportAttribute.ContractName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.ContractType*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: ContractType\n  nameWithType: ImportAttribute.ContractType\n  fullName: ImportAttribute.ContractType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ImportAttribute.RequiredCreationPolicy\n  fullName: ImportAttribute.RequiredCreationPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.ComponentModel.Composition.ImportAttribute.Source*\n  parent: System.ComponentModel.Composition.ImportAttribute\n  isExternal: false\n  name: Source\n  nameWithType: ImportAttribute.Source\n  fullName: ImportAttribute.Source\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ImportAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}