{"nodes":[{"content":"Provides data for the `EmulateRecognizeCompleted` event of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> classes.","nodes":[{"pos":[0,210],"content":"Provides data for the <ph id=\"ph1\">`EmulateRecognizeCompleted`</ph> event of the <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;&lt;/xref&gt;</ph> classes.","source":"Provides data for the `EmulateRecognizeCompleted` event of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> classes."}],"pos":[588,799],"yaml":true},{"content":"An instance of <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.  \n  \n Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.  \n  \n If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.  \n  \n <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>.","nodes":[{"pos":[0,450],"content":"An instance of <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.","nodes":[{"content":"An instance of <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.","pos":[0,450],"nodes":[{"content":"An instance of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs&gt;</ph> is created when the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt;</ph> object raises the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted&gt;</ph> event.","pos":[0,267],"source":"An instance of <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event."},{"content":"To obtain information about the result of recognition, access the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A&gt;</ph> property in the handler for the event.","pos":[268,450],"source":" To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event."}]}]},{"pos":[457,765],"content":"Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.","nodes":[{"content":"Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.","pos":[0,308],"nodes":[{"content":"Emulation is the process by which text, instead of audio, is the input to a speech recognition engine.","pos":[0,102]},{"content":"To bypass the audio inputs for a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt;</ph> object during emulation, use the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A&gt;</ph> method.","pos":[103,308],"source":" To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method."}]}]},{"pos":[772,1074],"content":"If the speech recognition engine encounters an exception during the recognition operation, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> property is set to the exception and the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A&gt;</ph> property is set to <ph id=\"ph3\">`null`</ph>.","source":"If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`."},{"pos":[1081,1215],"content":"<xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs&gt;</ph> derives from <ph id=\"ph2\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph>.","pos":[0,134],"source":"<xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>."}]}],"pos":[810,2034],"yaml":true,"extradata":"MT"},{"content":"Gets the results of emulated recognition.","nodes":[{"pos":[0,41],"content":"Gets the results of emulated recognition.","nodes":[{"content":"Gets the results of emulated recognition.","pos":[0,41]}]}],"pos":[4948,4990],"yaml":true},{"content":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.  \n  \n If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.","nodes":[{"pos":[0,347],"content":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.","nodes":[{"content":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.","pos":[0,347],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.RecognitionResult&gt;</ph> object derives from <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.RecognizedPhrase&gt;</ph> and contains full information about a phrase returned by a recognition operation.","pos":[0,206],"source":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation."},{"content":"You can obtain a list off all the recognition candidates from the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.RecognitionResult.Alternates%2A&gt;</ph> property.","pos":[207,347],"source":" You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property."}]}]},{"pos":[354,637],"content":"If recognizer encounters an exception during the recognition operation, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> property is set to the exception and the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A&gt;</ph> property is set to <ph id=\"ph3\">`null`</ph>.","source":"If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`."}],"pos":[5001,5643],"yaml":true,"extradata":"MT"},{"content":"Detailed information about the results of recognition, or `null` if an error occurred.","nodes":[{"pos":[0,86],"content":"Detailed information about the results of recognition, or <ph id=\"ph1\">`null`</ph> if an error occurred.","source":"Detailed information about the results of recognition, or `null` if an error occurred."}],"pos":[5820,5907],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  commentId: T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  id: EmulateRecognizeCompletedEventArgs\n  children:\n  - System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  langs:\n  - csharp\n  name: EmulateRecognizeCompletedEventArgs\n  nameWithType: EmulateRecognizeCompletedEventArgs\n  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Provides data for the `EmulateRecognizeCompleted` event of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> classes.\n  remarks: \"An instance of <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.  \\n  \\n Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.  \\n  \\n If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.  \\n  \\n <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>.\"\n  example:\n  - \"The following example adds an event handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event to a <xref:System.Speech.Recognition.SpeechRecognitionEngine>. The handler gets the recognized text from the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property.  \\n  \\n```csharp  \\n  \\nprivate SpeechRecognitionEngine sre;  \\n  \\n// Initialize the speech recognition engine.   \\nprivate void Initialize()  \\n{  \\n  sre = new SpeechRecognitionEngine();  \\n  \\n  // Add a handler for the EmulateRecognizeCompleted event.  \\n  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  \\n  \\n  // Add other initialization code here.  \\n}  \\n  \\n// Handle the EmulateRecognizeCompleted event.   \\nvoid sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  string phrase = e.Result.Text;  \\n  \\n  // Add event handler code here.  \\n}  \\n  \\n```\"\n  syntax:\n    content: 'public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.AsyncCompletedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  - System.ComponentModel.AsyncCompletedEventArgs.Error\n  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - System.ComponentModel.AsyncCompletedEventArgs.UserState\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/EmulateRecognizeCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  commentId: P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  id: Result\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  langs:\n  - csharp\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n  fullName: EmulateRecognizeCompletedEventArgs.Result\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the results of emulated recognition.\n  remarks: \"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.  \\n  \\n If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.\"\n  syntax:\n    content: public System.Speech.Recognition.RecognitionResult Result { get; }\n    return:\n      type: System.Speech.Recognition.RecognitionResult\n      description: Detailed information about the results of recognition, or `null` if an error occurred.\n  overload: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/EmulateRecognizeCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n  fullName: EmulateRecognizeCompletedEventArgs.Result\n- uid: System.Speech.Recognition.RecognitionResult\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognitionResult\n  nameWithType: RecognitionResult\n  fullName: System.Speech.Recognition.RecognitionResult\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n  fullName: EmulateRecognizeCompletedEventArgs.Result\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/EmulateRecognizeCompletedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Cancelled\n  nameWithType: AsyncCompletedEventArgs.Cancelled\n  fullName: AsyncCompletedEventArgs.Cancelled\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Error\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Error\n  nameWithType: AsyncCompletedEventArgs.Error\n  fullName: AsyncCompletedEventArgs.Error\n- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: RaiseExceptionIfNecessary()\n  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n  fullName: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: UserState\n  nameWithType: AsyncCompletedEventArgs.UserState\n  fullName: AsyncCompletedEventArgs.UserState\n"}