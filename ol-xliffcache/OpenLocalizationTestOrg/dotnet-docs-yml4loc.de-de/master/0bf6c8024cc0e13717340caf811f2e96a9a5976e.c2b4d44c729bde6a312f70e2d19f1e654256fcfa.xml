{"nodes":[{"content":"Represents an abstraction of the caller's context, which provides access to the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref>, <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref>, and <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> objects. This class cannot be inherited.","nodes":[{"pos":[0,311],"content":"Represents an abstraction of the caller's context, which provides access to the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref>, <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref>, and <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> objects. This class cannot be inherited.","nodes":[{"content":"Represents an abstraction of the caller's context, which provides access to the <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlPipe\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,279],"source":"Represents an abstraction of the caller's context, which provides access to the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref>, <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref>, and <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> objects."},{"content":"This class cannot be inherited.","pos":[280,311]}]}],"pos":[590,902],"yaml":true},{"content":"The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures). It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.","nodes":[{"pos":[0,434],"content":"The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures). It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.","nodes":[{"content":"The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures). It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.","pos":[0,434],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlContext&gt;</ph> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures).","pos":[0,199],"source":"The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures)."},{"content":"It can also be used to obtain a <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.","pos":[200,434],"source":" It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication."}]}]}],"pos":[913,1348],"yaml":true,"extradata":"MT"},{"content":"Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.","nodes":[{"pos":[0,111],"content":"Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.","nodes":[{"content":"Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.","pos":[0,111]}]}],"pos":[3440,3552],"yaml":true},{"content":"If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.  \n  \n If this property returns false, any attempt to open a connection object that has \"context connection=true\" in the connection string fails.  \n  \n This property is read-only.  \n  \n When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.","nodes":[{"pos":[0,156],"content":"If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.","nodes":[{"content":"If this property returns false, all the other <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlContext&gt;</ph> members throw an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> if used.","pos":[0,156],"source":"If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used."}]},{"pos":[163,301],"content":"If this property returns false, any attempt to open a connection object that has \"context connection=true\" in the connection string fails.","nodes":[{"content":"If this property returns false, any attempt to open a connection object that has \"context connection=true\" in the connection string fails.","pos":[0,138]}]},{"pos":[308,335],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]},{"pos":[342,575],"content":"When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.","nodes":[{"content":"When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.","pos":[0,233]}]}],"pos":[3563,4149],"yaml":true,"extradata":"MT"},{"content":"`True` if the context connection is available and the other <xref href=\"Microsoft.SqlServer.Server.SqlContext\"></xref> members can be accessed.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`True`</ph> if the context connection is available and the other <ph id=\"ph2\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlContext\"&gt;&lt;/xref&gt;</ph> members can be accessed.","source":"`True` if the context connection is available and the other <xref href=\"Microsoft.SqlServer.Server.SqlContext\"></xref> members can be accessed."}],"pos":[4270,4416],"yaml":true},{"content":"Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.","nodes":[{"pos":[0,132],"content":"Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.","nodes":[{"content":"Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.","pos":[0,132]}]}],"pos":[5314,5447],"yaml":true},{"content":"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.  \n  \n This property is read-only.","nodes":[{"pos":[0,84],"content":"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.","nodes":[{"content":"If invoked from outside SQL Server, a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","pos":[0,84],"source":"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown."}]},{"pos":[91,118],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[5458,5581],"yaml":true,"extradata":"MT"},{"content":"An instance of <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> if a pipe is available, or `null` if called in a context where pipe is not available (for example, in a user-defined function).","nodes":[{"pos":[0,198],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlPipe\"&gt;&lt;/xref&gt;</ph> if a pipe is available, or <ph id=\"ph2\">`null`</ph> if called in a context where pipe is not available (for example, in a user-defined function).","source":"An instance of <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> if a pipe is available, or `null` if called in a context where pipe is not available (for example, in a user-defined function)."}],"pos":[5745,5944],"yaml":true},{"content":"Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.","nodes":[{"pos":[0,151],"content":"Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.","nodes":[{"content":"Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.","pos":[0,151]}]}],"pos":[6895,7047],"yaml":true},{"content":"The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.  \n  \n If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.  \n  \n This property is read-only.","nodes":[{"pos":[0,131],"content":"The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlTriggerContext&gt;</ph> object can only be retrieved from within a common language runtime trigger.","pos":[0,131],"source":"The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger."}]},{"pos":[138,305],"content":"If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A&gt;</ph> property is accessed from outside of SQL Server, a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","pos":[0,167],"source":"If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown."}]},{"pos":[312,339],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[7058,7404],"yaml":true,"extradata":"MT"},{"content":"An instance of <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref> if a trigger context is available, or `null` if called outside of a trigger invocation.","nodes":[{"pos":[0,168],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"&gt;&lt;/xref&gt;</ph> if a trigger context is available, or <ph id=\"ph2\">`null`</ph> if called outside of a trigger invocation.","source":"An instance of <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref> if a trigger context is available, or `null` if called outside of a trigger invocation."}],"pos":[7598,7767],"yaml":true},{"content":"The Microsoft Windows identity of the caller.","nodes":[{"pos":[0,45],"content":"The Microsoft Windows identity of the caller.","nodes":[{"content":"The Microsoft Windows identity of the caller.","pos":[0,45]}]}],"pos":[8734,8780],"yaml":true},{"content":"Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account. If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property. After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.  \n  \n If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.  \n  \n Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property.  \n  \n This property is read-only.","nodes":[{"pos":[0,463],"content":"Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account. If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property. After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.","nodes":[{"content":"Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account. If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property. After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.","pos":[0,463],"nodes":[{"content":"Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account.","pos":[0,109]},{"content":"If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property.","pos":[110,306]},{"content":"After obtaining the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object, callers can impersonate the client account and perform actions on their behalf.","pos":[307,463],"source":" After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf."}]}]},{"pos":[470,554],"content":"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.","nodes":[{"content":"If invoked from outside SQL Server, a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","pos":[0,84],"source":"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown."}]},{"pos":[561,656],"content":"Only assemblies marked with <ph id=\"ph1\">`EXTERNAL_ACCESS`</ph> or <ph id=\"ph2\">`UNSAFE`</ph> permissions can access this property.","source":"Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property."},{"pos":[663,690],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[8791,9490],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance representing the Windows identity of the caller, or `null` if the client was authenticated using SQL Server Authentication.","nodes":[{"pos":[0,197],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> instance representing the Windows identity of the caller, or <ph id=\"ph2\">`null`</ph> if the client was authenticated using SQL Server Authentication.","source":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance representing the Windows identity of the caller, or `null` if the client was authenticated using SQL Server Authentication."}],"pos":[10325,10523],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlContext\n  commentId: T:Microsoft.SqlServer.Server.SqlContext\n  id: SqlContext\n  children:\n  - Microsoft.SqlServer.Server.SqlContext.IsAvailable\n  - Microsoft.SqlServer.Server.SqlContext.Pipe\n  - Microsoft.SqlServer.Server.SqlContext.TriggerContext\n  - Microsoft.SqlServer.Server.SqlContext.WindowsIdentity\n  langs:\n  - csharp\n  name: SqlContext\n  nameWithType: SqlContext\n  fullName: Microsoft.SqlServer.Server.SqlContext\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Represents an abstraction of the caller's context, which provides access to the <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref>, <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref>, and <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> objects. This class cannot be inherited.\n  remarks: The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures). It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.\n  example:\n  - \"The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \\n  \\n [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]\"\n  syntax:\n    content: public sealed class SqlContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable\n  commentId: P:Microsoft.SqlServer.Server.SqlContext.IsAvailable\n  id: IsAvailable\n  parent: Microsoft.SqlServer.Server.SqlContext\n  langs:\n  - csharp\n  name: IsAvailable\n  nameWithType: SqlContext.IsAvailable\n  fullName: SqlContext.IsAvailable\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.\n  remarks: \"If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.  \\n  \\n If this property returns false, any attempt to open a connection object that has \\\"context connection=true\\\" in the connection string fails.  \\n  \\n This property is read-only.  \\n  \\n When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.\"\n  syntax:\n    content: public static bool IsAvailable { get; }\n    return:\n      type: System.Boolean\n      description: '`True` if the context connection is available and the other <xref href=\"Microsoft.SqlServer.Server.SqlContext\"></xref> members can be accessed.'\n  overload: Microsoft.SqlServer.Server.SqlContext.IsAvailable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlContext.Pipe\n  commentId: P:Microsoft.SqlServer.Server.SqlContext.Pipe\n  id: Pipe\n  parent: Microsoft.SqlServer.Server.SqlContext\n  langs:\n  - csharp\n  name: Pipe\n  nameWithType: SqlContext.Pipe\n  fullName: SqlContext.Pipe\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.\n  remarks: \"If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.  \\n  \\n This property is read-only.\"\n  syntax:\n    content: public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }\n    return:\n      type: Microsoft.SqlServer.Server.SqlPipe\n      description: An instance of <xref href=\"Microsoft.SqlServer.Server.SqlPipe\"></xref> if a pipe is available, or `null` if called in a context where pipe is not available (for example, in a user-defined function).\n  overload: Microsoft.SqlServer.Server.SqlContext.Pipe*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext\n  commentId: P:Microsoft.SqlServer.Server.SqlContext.TriggerContext\n  id: TriggerContext\n  parent: Microsoft.SqlServer.Server.SqlContext\n  langs:\n  - csharp\n  name: TriggerContext\n  nameWithType: SqlContext.TriggerContext\n  fullName: SqlContext.TriggerContext\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.\n  remarks: \"The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.  \\n  \\n If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.  \\n  \\n This property is read-only.\"\n  syntax:\n    content: public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }\n    return:\n      type: Microsoft.SqlServer.Server.SqlTriggerContext\n      description: An instance of <xref href=\"Microsoft.SqlServer.Server.SqlTriggerContext\"></xref> if a trigger context is available, or `null` if called outside of a trigger invocation.\n  overload: Microsoft.SqlServer.Server.SqlContext.TriggerContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity\n  commentId: P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity\n  id: WindowsIdentity\n  parent: Microsoft.SqlServer.Server.SqlContext\n  langs:\n  - csharp\n  name: WindowsIdentity\n  nameWithType: SqlContext.WindowsIdentity\n  fullName: SqlContext.WindowsIdentity\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The Microsoft Windows identity of the caller.\n  remarks: \"Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account. If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property. After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.  \\n  \\n If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.  \\n  \\n Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property.  \\n  \\n This property is read-only.\"\n  example:\n  - \"The following example shows how to get the Windows identity of the calling client and impersonate the client. See \\\"Impersonation Sample\\\" in SQL Server Books Online for an example of impersonation using the <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> property.  \\n  \\n [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]\"\n  syntax:\n    content: public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance representing the Windows identity of the caller, or `null` if the client was authenticated using SQL Server Authentication.\n  overload: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n  manager: mblythe\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: IsAvailable\n  nameWithType: SqlContext.IsAvailable\n  fullName: SqlContext.IsAvailable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlContext.Pipe\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: Pipe\n  nameWithType: SqlContext.Pipe\n  fullName: SqlContext.Pipe\n- uid: Microsoft.SqlServer.Server.SqlPipe\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlPipe\n  nameWithType: SqlPipe\n  fullName: Microsoft.SqlServer.Server.SqlPipe\n- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: TriggerContext\n  nameWithType: SqlContext.TriggerContext\n  fullName: SqlContext.TriggerContext\n- uid: Microsoft.SqlServer.Server.SqlTriggerContext\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlTriggerContext\n  nameWithType: SqlTriggerContext\n  fullName: Microsoft.SqlServer.Server.SqlTriggerContext\n- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: SqlContext.WindowsIdentity\n  fullName: SqlContext.WindowsIdentity\n- uid: System.Security.Principal.WindowsIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: WindowsIdentity\n  fullName: System.Security.Principal.WindowsIdentity\n- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable*\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: IsAvailable\n  nameWithType: SqlContext.IsAvailable\n  fullName: SqlContext.IsAvailable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n- uid: Microsoft.SqlServer.Server.SqlContext.Pipe*\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: Pipe\n  nameWithType: SqlContext.Pipe\n  fullName: SqlContext.Pipe\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext*\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: TriggerContext\n  nameWithType: SqlContext.TriggerContext\n  fullName: SqlContext.TriggerContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*\n  parent: Microsoft.SqlServer.Server.SqlContext\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: SqlContext.WindowsIdentity\n  fullName: SqlContext.WindowsIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}