{"nodes":[{"content":"Provides a method for reading values of a particular type from the configuration.","nodes":[{"pos":[0,81],"content":"Provides a method for reading values of a particular type from the configuration.","nodes":[{"content":"Provides a method for reading values of a particular type from the configuration.","pos":[0,81]}]}],"pos":[561,643],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.AppSettingsReader\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.AppSettingsReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.AppSettingsReader\"></xref> class."}],"pos":[3626,3727],"yaml":true},{"content":"Gets the value for a specified key from the <xref href=\"System.Configuration.ConfigurationSettings.AppSettings\"></xref> property and returns an object of the specified type containing the value from the configuration.","nodes":[{"pos":[0,217],"content":"Gets the value for a specified key from the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationSettings.AppSettings\"&gt;&lt;/xref&gt;</ph> property and returns an object of the specified type containing the value from the configuration.","source":"Gets the value for a specified key from the <xref href=\"System.Configuration.ConfigurationSettings.AppSettings\"></xref> property and returns an object of the specified type containing the value from the configuration."}],"pos":[6550,6768],"yaml":true},{"content":"The key for which to get the value.","nodes":[{"pos":[0,35],"content":"The key for which to get the value.","nodes":[{"content":"The key for which to get the value.","pos":[0,35]}]}],"pos":[7493,7529],"yaml":true},{"content":"The type of the object to return.","nodes":[{"pos":[0,33],"content":"The type of the object to return.","nodes":[{"content":"The type of the object to return.","pos":[0,33]}]}],"pos":[7587,7621],"yaml":true},{"content":"The value of the specified key.","nodes":[{"pos":[0,31],"content":"The value of the specified key.","nodes":[{"content":"The value of the specified key.","pos":[0,31]}]}],"pos":[7678,7710],"yaml":true},{"content":"<code>key</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."},{"pos":[34,41],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[48,76],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[7887,7971],"yaml":true},{"content":"<code>key</code> does not exist in the `<appSettings>` configuration section.  \n  \n \\- or -  \n  \n The value in the `<appSettings>` configuration section for <code>key</code> is not of type <code>type</code>.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> does not exist in the `<ph id=\"ph2\">&lt;appSettings&gt;</ph>` configuration section.","source":"<code>key</code> does not exist in the `<appSettings>` configuration section."},{"pos":[84,91],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[98,207],"content":"The value in the <ph id=\"ph1\">`&lt;appSettings&gt;`</ph> configuration section for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The value in the `<appSettings>` configuration section for <code>key</code> is not of type <code>type</code>."}],"pos":[8081,8296],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.AppSettingsReader\n  commentId: T:System.Configuration.AppSettingsReader\n  id: AppSettingsReader\n  children:\n  - System.Configuration.AppSettingsReader.#ctor\n  - System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  langs:\n  - csharp\n  name: AppSettingsReader\n  nameWithType: AppSettingsReader\n  fullName: System.Configuration.AppSettingsReader\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Provides a method for reading values of a particular type from the configuration.\n  remarks: ''\n  example:\n  - \"The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.  \\n  \\n```  \\nusing System;  \\nusing System.Configuration;  \\n  \\nclass Program  \\n{  \\n    static void Main(string[] args)  \\n    {  \\n        var reader = new AppSettingsReader();  \\n  \\n        var stringSetting = reader.GetValue(\\\"String setting\\\", typeof(string));  \\n        Console.WriteLine(\\\"String setting: \\\" + stringSetting);  \\n  \\n        var dateTimeSetting = reader.GetValue(\\\"DateTime setting\\\", typeof(DateTime));  \\n        Console.WriteLine(\\\"DateTime setting: \\\" + dateTimeSetting);  \\n  \\n        try  \\n        {  \\n            var missingSetting = reader.GetValue(\\\"Int setting\\\", typeof(Int32));  \\n        }  \\n        catch (InvalidOperationException e)  \\n        {  \\n            Console.WriteLine(\\\"Missing key error: \\\" + e.Message);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Press any key to continue\\\");  \\n        Console.ReadKey();  \\n    }  \\n}  \\n```  \\n  \\n The following example demonstrates a configuration file used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <appSettings>  \\n        <add key=\\\"String setting\\\" value=\\\"String retrieved from App.Config\\\"/>  \\n        <add key=\\\"Date setting\\\" value=\\\"Thursday, December 01, 2005 12:53:56 PM\\\"/>  \\n    </appSettings>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public class AppSettingsReader\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.AppSettingsReader.#ctor\n  commentId: M:System.Configuration.AppSettingsReader.#ctor\n  id: '#ctor'\n  parent: System.Configuration.AppSettingsReader\n  langs:\n  - csharp\n  name: AppSettingsReader()\n  nameWithType: AppSettingsReader.AppSettingsReader()\n  fullName: AppSettingsReader.AppSettingsReader()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.AppSettingsReader\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.  \\n  \\n```  \\nusing System;  \\nusing System.Configuration;  \\n  \\nclass Program  \\n{  \\n    static void Main(string[] args)  \\n    {  \\n        var reader = new AppSettingsReader();  \\n  \\n        var stringSetting = reader.GetValue(\\\"String setting\\\", typeof(string));  \\n        Console.WriteLine(\\\"String setting: \\\" + stringSetting);  \\n  \\n        var dateTimeSetting = reader.GetValue(\\\"DateTime setting\\\", typeof(DateTime));  \\n        Console.WriteLine(\\\"DateTime setting: \\\" + dateTimeSetting);  \\n  \\n        try  \\n        {  \\n            var missingSetting = reader.GetValue(\\\"Int setting\\\", typeof(Int32));  \\n        }  \\n        catch (InvalidOperationException e)  \\n        {  \\n            Console.WriteLine(\\\"Missing key error: \\\" + e.Message);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Press any key to continue\\\");  \\n        Console.ReadKey();  \\n    }  \\n}  \\n```  \\n  \\n The following example demonstrates a configuration file used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <appSettings>  \\n        <add key=\\\"String setting\\\" value=\\\"String retrieved from App.Config\\\"/>  \\n        <add key=\\\"Date setting\\\" value=\\\"Thursday, December 01, 2005 12:53:56 PM\\\"/>  \\n    </appSettings>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public AppSettingsReader ();\n    parameters: []\n  overload: System.Configuration.AppSettingsReader.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  commentId: M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  id: GetValue(System.String,System.Type)\n  parent: System.Configuration.AppSettingsReader\n  langs:\n  - csharp\n  name: GetValue(String, Type)\n  nameWithType: AppSettingsReader.GetValue(String, Type)\n  fullName: AppSettingsReader.GetValue(String, Type)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the value for a specified key from the <xref href=\"System.Configuration.ConfigurationSettings.AppSettings\"></xref> property and returns an object of the specified type containing the value from the configuration.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.AppSettingsReader.GetValue%2A> method to retrieve the value for each key in the `<appSettings>` section of the configuration file.  \\n  \\n [!code-csharp[System.Configuration.AppSettingsReader#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/CS/AppSettingsReader.cs#2)]\\n [!code-vb[System.Configuration.AppSettingsReader#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/VB/AppSettingsReader.vb#2)]\"\n  syntax:\n    content: public object GetValue (string key, Type type);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key for which to get the value.\n    - id: type\n      type: System.Type\n      description: The type of the object to return.\n    return:\n      type: System.Object\n      description: The value of the specified key.\n  overload: System.Configuration.AppSettingsReader.GetValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>key</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>key</code> does not exist in the `<appSettings>` configuration section.  \\n  \\n \\\\- or -  \\n  \\n The value in the `<appSettings>` configuration section for <code>key</code> is not of type <code>type</code>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Configuration.AppSettingsReader.#ctor\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: AppSettingsReader()\n  nameWithType: AppSettingsReader.AppSettingsReader()\n  fullName: AppSettingsReader.AppSettingsReader()\n- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: GetValue(String, Type)\n  nameWithType: AppSettingsReader.GetValue(String, Type)\n  fullName: AppSettingsReader.GetValue(String, Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.AppSettingsReader.#ctor*\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: AppSettingsReader\n  nameWithType: AppSettingsReader.AppSettingsReader\n  fullName: AppSettingsReader.AppSettingsReader\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml\n- uid: System.Configuration.AppSettingsReader.GetValue*\n  parent: System.Configuration.AppSettingsReader\n  isExternal: false\n  name: GetValue\n  nameWithType: AppSettingsReader.GetValue\n  fullName: AppSettingsReader.GetValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}