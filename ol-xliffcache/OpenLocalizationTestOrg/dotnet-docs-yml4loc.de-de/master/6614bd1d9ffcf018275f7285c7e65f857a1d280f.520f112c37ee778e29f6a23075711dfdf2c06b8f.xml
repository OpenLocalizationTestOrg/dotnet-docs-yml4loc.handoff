{"nodes":[{"content":"Provides methods for creating graphics buffers that can be used for double buffering.","nodes":[{"pos":[0,85],"content":"Provides methods for creating graphics buffers that can be used for double buffering.","nodes":[{"content":"Provides methods for creating graphics buffers that can be used for double buffering.","pos":[0,85]}]}],"pos":[864,950],"yaml":true},{"content":"The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.  \n  \n> [!NOTE]\n>  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.  \n  \n The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.  \n  \n You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.  \n  \n For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).","nodes":[{"pos":[0,236],"content":"The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.","pos":[0,236],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class allows you to implement custom double buffering for your graphics.","pos":[0,122],"source":"The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics."},{"content":"Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.","pos":[123,236]}]}]},{"pos":[244,733],"content":"[!NOTE]\n The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.","leadings":["","> "],"nodes":[{"content":" The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.","pos":[8,487],"nodes":[{"content":"The simplest way to use double buffering is to set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.","pos":[1,217],"source":" The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.","pos":[218,440],"source":" Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code."},{"content":"This flag is set to <ph id=\"ph1\">`true`</ph> by default.","pos":[441,479],"source":" This flag is set to `true` by default."}]}]},{"pos":[740,1127],"content":"The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.","nodes":[{"content":"The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.","pos":[0,387],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class provides methods for creating and configuring a graphics buffer.","pos":[0,120],"source":"The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method creates a <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.","pos":[121,387],"source":" The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device."}]}]},{"pos":[1134,1638],"content":"You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.","nodes":[{"content":"You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.","pos":[0,504],"nodes":[{"content":"You can retrieve the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,209],"source":"You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property."},{"content":"For graphically intensive applications such as animation, you can create a dedicated <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> using the constructor, but for most applications the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</ph> property will be sufficient.","pos":[210,504],"source":" For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient."}]}]},{"pos":[1645,1956],"content":"For more information on drawing buffered graphics and custom buffering implementations, see <bpt id=\"p1\">[</bpt>Double Buffered Graphics<ept id=\"p1\">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p2\">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.","source":"For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)."}],"pos":[961,2929],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.BufferedGraphicsContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref> class."}],"pos":[5015,5116],"yaml":true},{"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.  \n  \n> [!NOTE]\n>  You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.  \n  \n For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).","nodes":[{"pos":[0,325],"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.","nodes":[{"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.","pos":[0,325],"nodes":[{"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instead of the default instance provided by the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>.","pos":[0,257],"source":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>."},{"content":"This allows you to create and manage graphics buffers individually.","pos":[258,325]}]}]},{"pos":[333,504],"content":"[!NOTE]\n You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.","leadings":["","> "],"nodes":[{"content":"You should always call <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you finish using a dedicated <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.","pos":[9,169],"source":" You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>."}]},{"pos":[511,694],"content":"For more information about dedicated graphics buffers, see <bpt id=\"p1\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p1\">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.","source":"For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)."}],"pos":[5127,5829],"yaml":true,"extradata":"MT"},{"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.","nodes":[{"pos":[0,133],"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>."}],"pos":[7132,7266],"yaml":true},{"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","nodes":[{"pos":[0,671],"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","nodes":[{"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","pos":[0,671],"nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.","pos":[0,348],"source":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer."},{"content":"The new <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id=\"ph4\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.","pos":[349,671],"source":" The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed."}]}]}],"pos":[7277,7949],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Graphics\"></xref> to match the pixel format for the new buffer to.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> to match the pixel format for the new buffer to.","source":"The <xref href=\"System.Drawing.Graphics\"></xref> to match the pixel format for the new buffer to."}],"pos":[8854,8952],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> indicating the size of the buffer to create.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create."}],"pos":[9034,9127],"yaml":true},{"content":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.BufferedGraphics\"&gt;&lt;/xref&gt;</ph> that can be used to draw to a buffer of the specified dimensions.","source":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions."}],"pos":[9202,9323],"yaml":true},{"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.","nodes":[{"pos":[0,133],"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>."}],"pos":[10516,10650],"yaml":true},{"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","nodes":[{"pos":[0,671],"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","nodes":[{"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","pos":[0,671],"nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.","pos":[0,348],"source":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer."},{"content":"The new <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id=\"ph4\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.","pos":[349,671],"source":" The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed."}]}]}],"pos":[10661,11333],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> to a device context to match the pixel format of the new buffer to.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> to a device context to match the pixel format of the new buffer to.","source":"An <xref href=\"System.IntPtr\"></xref> to a device context to match the pixel format of the new buffer to."}],"pos":[12199,12305],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> indicating the size of the buffer to create.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create."}],"pos":[12387,12480],"yaml":true},{"content":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.BufferedGraphics\"&gt;&lt;/xref&gt;</ph> that can be used to draw to a buffer of the specified dimensions.","source":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions."}],"pos":[12555,12676],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref>.","nodes":[{"pos":[0,95],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.BufferedGraphicsContext\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref>."}],"pos":[13692,13788],"yaml":true},{"content":"Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>. The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state. After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.","nodes":[{"pos":[0,768],"content":"Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>. The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state. After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.","pos":[0,140],"source":"Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> in an unusable state.","pos":[141,287],"source":" The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> was occupying.","pos":[288,562],"source":" After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[563,768],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[776,1135],"content":"[!NOTE]\n Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.","pos":[8,357],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.","pos":[1,162],"source":" Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.","pos":[163,349],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>."}]}]}],"pos":[13799,14940],"yaml":true,"extradata":"MT"},{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"pos":[0,124],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]}],"pos":[16027,16152],"yaml":true},{"content":"Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.","nodes":[{"pos":[0,102],"content":"Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.","nodes":[{"content":"Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.","pos":[0,102]}]}],"pos":[17257,17360],"yaml":true},{"content":"If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.","nodes":[{"pos":[0,131],"content":"If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.","nodes":[{"content":"If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.","pos":[0,131]}]}],"pos":[17371,17503],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the maximum size of the buffer to use.","nodes":[{"pos":[0,51],"content":"Gets or sets the maximum size of the buffer to use.","nodes":[{"content":"Gets or sets the maximum size of the buffer to use.","pos":[0,51]}]}],"pos":[18622,18674],"yaml":true},{"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.","nodes":[{"pos":[0,380],"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.","nodes":[{"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.","pos":[0,380],"nodes":[{"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.","pos":[0,109]},{"content":"You can allocate a buffer of any size, however any buffer with dimensions greater than the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> size will be used temporarily and then discarded when the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object is released.","pos":[110,380],"source":" You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released."}]}]}],"pos":[18685,19066],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> indicating the maximum size of the buffer dimensions.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> indicating the maximum size of the buffer dimensions.","source":"A <xref href=\"System.Drawing.Size\"></xref> indicating the maximum size of the buffer dimensions."}],"pos":[19846,19943],"yaml":true},{"content":"The height or width of the size is less than or equal to zero.","nodes":[{"pos":[0,62],"content":"The height or width of the size is less than or equal to zero.","nodes":[{"content":"The height or width of the size is less than or equal to zero.","pos":[0,62]}]}],"pos":[20117,20180],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.BufferedGraphicsContext\n  commentId: T:System.Drawing.BufferedGraphicsContext\n  id: BufferedGraphicsContext\n  children:\n  - System.Drawing.BufferedGraphicsContext.#ctor\n  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  - System.Drawing.BufferedGraphicsContext.Dispose\n  - System.Drawing.BufferedGraphicsContext.Finalize\n  - System.Drawing.BufferedGraphicsContext.Invalidate\n  - System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  langs:\n  - csharp\n  name: BufferedGraphicsContext\n  nameWithType: BufferedGraphicsContext\n  fullName: System.Drawing.BufferedGraphicsContext\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Provides methods for creating graphics buffers that can be used for double buffering.\n  remarks: \"The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.  \\n  \\n> [!NOTE]\\n>  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.  \\n  \\n The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.  \\n  \\n You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.  \\n  \\n For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).\"\n  example:\n  - \"The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]\\n [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]\\n [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]\"\n  syntax:\n    content: 'public sealed class BufferedGraphicsContext : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.#ctor\n  commentId: M:System.Drawing.BufferedGraphicsContext.#ctor\n  id: '#ctor'\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: BufferedGraphicsContext()\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()\n  fullName: BufferedGraphicsContext.BufferedGraphicsContext()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref> class.\n  remarks: \"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.  \\n  \\n> [!NOTE]\\n>  You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.  \\n  \\n For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).\"\n  syntax:\n    content: public BufferedGraphicsContext ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Allocate(Graphics, Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(Graphics, Rectangle)\n  fullName: BufferedGraphicsContext.Allocate(Graphics, Rectangle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.\n  remarks: When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.\n  example:\n  - \"The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]\\n [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]\\n [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]\"\n  syntax:\n    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);\n    parameters:\n    - id: targetGraphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to match the pixel format for the new buffer to.\n    - id: targetRectangle\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.\n    return:\n      type: System.Drawing.BufferedGraphics\n      description: A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.Allocate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  id: Allocate(System.IntPtr,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Allocate(IntPtr, Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(IntPtr, Rectangle)\n  fullName: BufferedGraphicsContext.Allocate(IntPtr, Rectangle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.\n  remarks: When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.\n  example:\n  - \"The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]\\n [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]\\n [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]\"\n  syntax:\n    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);\n    parameters:\n    - id: targetDC\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> to a device context to match the pixel format of the new buffer to.\n    - id: targetRectangle\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.\n    return:\n      type: System.Drawing.BufferedGraphics\n      description: A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.Allocate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.Dispose\n  commentId: M:System.Drawing.BufferedGraphicsContext.Dispose\n  id: Dispose\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BufferedGraphicsContext.Dispose()\n  fullName: BufferedGraphicsContext.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref>.\n  remarks: \"Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>. The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state. After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.Finalize\n  commentId: M:System.Drawing.BufferedGraphicsContext.Finalize\n  id: Finalize\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: BufferedGraphicsContext.Finalize()\n  fullName: BufferedGraphicsContext.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~BufferedGraphicsContext ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate\n  commentId: M:System.Drawing.BufferedGraphicsContext.Invalidate\n  id: Invalidate\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Invalidate()\n  nameWithType: BufferedGraphicsContext.Invalidate()\n  fullName: BufferedGraphicsContext.Invalidate()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.\n  remarks: If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.\n  syntax:\n    content: public void Invalidate ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  commentId: P:System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  id: MaximumBuffer\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n  fullName: BufferedGraphicsContext.MaximumBuffer\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the maximum size of the buffer to use.\n  remarks: This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.\n  example:\n  - \"The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]\\n [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]\\n [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Size MaximumBuffer { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> indicating the maximum size of the buffer dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The height or width of the size is less than or equal to zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Drawing.BufferedGraphicsContext.#ctor\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: BufferedGraphicsContext()\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()\n  fullName: BufferedGraphicsContext.BufferedGraphicsContext()\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate(Graphics, Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(Graphics, Rectangle)\n  fullName: BufferedGraphicsContext.Allocate(Graphics, Rectangle)\n- uid: System.Drawing.BufferedGraphics\n  parent: System.Drawing\n  isExternal: false\n  name: BufferedGraphics\n  nameWithType: BufferedGraphics\n  fullName: System.Drawing.BufferedGraphics\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate(IntPtr, Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(IntPtr, Rectangle)\n  fullName: BufferedGraphicsContext.Allocate(IntPtr, Rectangle)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.BufferedGraphicsContext.Dispose\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: BufferedGraphicsContext.Dispose()\n  fullName: BufferedGraphicsContext.Dispose()\n- uid: System.Drawing.BufferedGraphicsContext.Finalize\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Finalize()\n  nameWithType: BufferedGraphicsContext.Finalize()\n  fullName: BufferedGraphicsContext.Finalize()\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Invalidate()\n  nameWithType: BufferedGraphicsContext.Invalidate()\n  fullName: BufferedGraphicsContext.Invalidate()\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n  fullName: BufferedGraphicsContext.MaximumBuffer\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.BufferedGraphicsContext.#ctor*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: BufferedGraphicsContext\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext\n  fullName: BufferedGraphicsContext.BufferedGraphicsContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Drawing.BufferedGraphicsContext.Allocate*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate\n  nameWithType: BufferedGraphicsContext.Allocate\n  fullName: BufferedGraphicsContext.Allocate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Drawing.BufferedGraphicsContext.Dispose*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Dispose\n  nameWithType: BufferedGraphicsContext.Dispose\n  fullName: BufferedGraphicsContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Drawing.BufferedGraphicsContext.Finalize*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Finalize\n  nameWithType: BufferedGraphicsContext.Finalize\n  fullName: BufferedGraphicsContext.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Invalidate\n  nameWithType: BufferedGraphicsContext.Invalidate\n  fullName: BufferedGraphicsContext.Invalidate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n  fullName: BufferedGraphicsContext.MaximumBuffer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/BufferedGraphicsContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}