{"nodes":[{"content":"Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).","nodes":[{"pos":[0,131],"content":"Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).","nodes":[{"content":"Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).","pos":[0,131]}]}],"pos":[1244,1376],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> class."}],"pos":[5568,5686],"yaml":true},{"content":"Gets the XPathFilter objects that are used for message logging.","nodes":[{"pos":[0,63],"content":"Gets the XPathFilter objects that are used for message logging.","nodes":[{"content":"Gets the XPathFilter objects that are used for message logging.","pos":[0,63]}]}],"pos":[6871,6935],"yaml":true},{"content":"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.  \n  \n Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.","nodes":[{"pos":[0,218],"content":"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.","nodes":[{"content":"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.","pos":[0,218],"nodes":[{"content":"Message filters are applied at the service and transport level.","pos":[0,63]},{"content":"When one or more filters are defined, only messages that match at least one of the filters are logged.","pos":[64,166]},{"content":"If no filter is defined, all messages pass through.","pos":[167,218]}]}]},{"pos":[225,402],"content":"Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.","nodes":[{"content":"Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.","pos":[0,177],"nodes":[{"content":"Filters support the full XPath syntax, and are applied in the order they appear in the configuration file.","pos":[0,106]},{"content":"A syntactically incorrect filter results in a configuration exception.","pos":[107,177]}]}]}],"pos":[6946,7353],"yaml":true,"extradata":"MT"},{"content":"A collection of XPathFilter objects that are used for message logging.","nodes":[{"pos":[0,70],"content":"A collection of XPathFilter objects that are used for message logging.","nodes":[{"content":"A collection of XPathFilter objects that are used for message logging.","pos":[0,70]}]}],"pos":[7831,7902],"yaml":true},{"content":"Gets or sets a value that specifies whether the entire message (message header and body) is logged.","nodes":[{"pos":[0,99],"content":"Gets or sets a value that specifies whether the entire message (message header and body) is logged.","nodes":[{"content":"Gets or sets a value that specifies whether the entire message (message header and body) is logged.","pos":[0,99]}]}],"pos":[9144,9244],"yaml":true},{"content":"This setting affects all message logging levels (service, transport, and malformed).","nodes":[{"pos":[0,84],"content":"This setting affects all message logging levels (service, transport, and malformed).","nodes":[{"content":"This setting affects all message logging levels (service, transport, and malformed).","pos":[0,84]}]}],"pos":[9255,9340],"yaml":true,"extradata":"MT"},{"content":"`true` if the entire message (message header and body) is logged; otherwise, `false`. The default is `false`, which means that only the message header is logged.","nodes":[{"pos":[0,161],"content":"`true` if the entire message (message header and body) is logged; otherwise, `false`. The default is `false`, which means that only the message header is logged.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the entire message (message header and body) is logged; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,85],"source":"`true` if the entire message (message header and body) is logged; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>, which means that only the message header is logged.","pos":[86,161],"source":" The default is `false`, which means that only the message header is logged."}]}],"pos":[9594,9758],"yaml":true},{"content":"Gets or sets a value that indicates whether the known Pii identifier is logged.","nodes":[{"pos":[0,79],"content":"Gets or sets a value that indicates whether the known Pii identifier is logged.","nodes":[{"content":"Gets or sets a value that indicates whether the known Pii identifier is logged.","pos":[0,79]}]}],"pos":[10979,11059],"yaml":true},{"content":"`true` if the known Pii is logged; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the known Pii is logged; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the known Pii is logged; otherwise, `false`."}],"pos":[11303,11360],"yaml":true},{"content":"Gets or sets a value that specifies whether malformed messages are logged.","nodes":[{"pos":[0,74],"content":"Gets or sets a value that specifies whether malformed messages are logged.","nodes":[{"content":"Gets or sets a value that specifies whether malformed messages are logged.","pos":[0,74]}]}],"pos":[12630,12705],"yaml":true},{"content":"`true` if malformed messages are logged; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,84],"content":"`true` if malformed messages are logged; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if malformed messages are logged; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,60],"source":"`true` if malformed messages are logged; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[61,84],"source":" The default is `false`."}]}],"pos":[12967,13054],"yaml":true},{"content":"Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).","nodes":[{"pos":[0,138],"content":"Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).","nodes":[{"content":"Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).","pos":[0,138]}]}],"pos":[14363,14502],"yaml":true},{"content":"`true` if messages are traced at the service level (before encryption and transport-related transforms); otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,148],"content":"`true` if messages are traced at the service level (before encryption and transport-related transforms); otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,124],"source":"`true` if messages are traced at the service level (before encryption and transport-related transforms); otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[125,148],"source":" The default is `false`."}]}],"pos":[14774,14925],"yaml":true},{"content":"Gets or sets a value that specifies whether messages are traced at the transport level.","nodes":[{"pos":[0,87],"content":"Gets or sets a value that specifies whether messages are traced at the transport level.","nodes":[{"content":"Gets or sets a value that specifies whether messages are traced at the transport level.","pos":[0,87]}]}],"pos":[16251,16339],"yaml":true},{"content":"Any filters specified in the configuration file are applied, and only messages that match the filters are traced.","nodes":[{"pos":[0,113],"content":"Any filters specified in the configuration file are applied, and only messages that match the filters are traced.","nodes":[{"content":"Any filters specified in the configuration file are applied, and only messages that match the filters are traced.","pos":[0,113]}]}],"pos":[16350,16464],"yaml":true,"extradata":"MT"},{"content":"`true` if messages are traced at the transport level; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,97],"content":"`true` if messages are traced at the transport level; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if messages are traced at the transport level; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if messages are traced at the transport level; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[74,97],"source":" The default is `false`."}]}],"pos":[16740,16840],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of messages to log.","nodes":[{"pos":[0,74],"content":"Gets or sets a value that specifies the maximum number of messages to log.","nodes":[{"content":"Gets or sets a value that specifies the maximum number of messages to log.","pos":[0,74]}]}],"pos":[18102,18177],"yaml":true},{"content":"The maximum number of messages to log. The default is 1000.","nodes":[{"pos":[0,59],"content":"The maximum number of messages to log. The default is 1000.","nodes":[{"content":"The maximum number of messages to log. The default is 1000.","pos":[0,59],"nodes":[{"content":"The maximum number of messages to log.","pos":[0,38]},{"content":"The default is 1000.","pos":[39,59]}]}]}],"pos":[18488,18548],"yaml":true},{"content":"Gets or sets a value that specifies the maximum size, in bytes, of a message to log.","nodes":[{"pos":[0,84],"content":"Gets or sets a value that specifies the maximum size, in bytes, of a message to log.","nodes":[{"content":"Gets or sets a value that specifies the maximum size, in bytes, of a message to log.","pos":[0,84]}]}],"pos":[19886,19971],"yaml":true},{"content":"The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.","nodes":[{"pos":[0,165],"content":"The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.","nodes":[{"content":"The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.","pos":[0,165],"nodes":[{"content":"The maximum size, in bytes, of a message to log.","pos":[0,48]},{"content":"Messages larger than the limit are not logged.","pos":[49,95]},{"content":"This setting affects all trace levels.","pos":[96,134]},{"content":"The default is Int32.MaxValue.","pos":[135,165]}]}]}],"pos":[20292,20458],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.MessageLoggingElement\n  commentId: T:System.ServiceModel.Configuration.MessageLoggingElement\n  id: MessageLoggingElement\n  children:\n  - System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  - System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  - System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  - System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  - System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  langs:\n  - csharp\n  name: MessageLoggingElement\n  nameWithType: MessageLoggingElement\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).\n  syntax:\n    content: 'public sealed class MessageLoggingElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MessageLoggingElement()\n  nameWithType: MessageLoggingElement.MessageLoggingElement()\n  fullName: MessageLoggingElement.MessageLoggingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> class.\n  syntax:\n    content: public MessageLoggingElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  id: Filters\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n  fullName: MessageLoggingElement.Filters\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the XPathFilter objects that are used for message logging.\n  remarks: \"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.  \\n  \\n Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.\"\n  example:\n  - The following is an example in configuring a filter that records only messages that have a SOAP Header section.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filters\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters { get; }\n    return:\n      type: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n      description: A collection of XPathFilter objects that are used for message logging.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.Filters*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  id: LogEntireMessage\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n  fullName: MessageLoggingElement.LogEntireMessage\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether the entire message (message header and body) is logged.\n  remarks: This setting affects all message logging levels (service, transport, and malformed).\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"logEntireMessage\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool LogEntireMessage { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the entire message (message header and body) is logged; otherwise, `false`. The default is `false`, which means that only the message header is logged.'\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  id: LogKnownPii\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n  fullName: MessageLoggingElement.LogKnownPii\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the known Pii identifier is logged.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"logKnownPii\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool LogKnownPii { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the known Pii is logged; otherwise, `false`.'\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  id: LogMalformedMessages\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n  fullName: MessageLoggingElement.LogMalformedMessages\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether malformed messages are logged.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"logMalformedMessages\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool LogMalformedMessages { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if malformed messages are logged; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  id: LogMessagesAtServiceLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n  fullName: MessageLoggingElement.LogMessagesAtServiceLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"logMessagesAtServiceLevel\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool LogMessagesAtServiceLevel { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if messages are traced at the service level (before encryption and transport-related transforms); otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  id: LogMessagesAtTransportLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n  fullName: MessageLoggingElement.LogMessagesAtTransportLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are traced at the transport level.\n  remarks: Any filters specified in the configuration file are applied, and only messages that match the filters are traced.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"logMessagesAtTransportLevel\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool LogMessagesAtTransportLevel { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if messages are traced at the transport level; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  id: MaxMessagesToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n  fullName: MessageLoggingElement.MaxMessagesToLog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of messages to log.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxMessagesToLog\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=-1)]\n\n      public int MaxMessagesToLog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of messages to log. The default is 1000.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  id: MaxSizeOfMessageToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n  fullName: MessageLoggingElement.MaxSizeOfMessageToLog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum size, in bytes, of a message to log.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxSizeOfMessageToLog\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=-1)]\n\n      public int MaxSizeOfMessageToLog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  commentId: P:System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n  fullName: MessageLoggingElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MessageLoggingElement()\n  nameWithType: MessageLoggingElement.MessageLoggingElement()\n  fullName: MessageLoggingElement.MessageLoggingElement()\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n  fullName: MessageLoggingElement.Filters\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: XPathMessageFilterElementCollection\n  nameWithType: XPathMessageFilterElementCollection\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n  fullName: MessageLoggingElement.LogEntireMessage\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n  fullName: MessageLoggingElement.LogKnownPii\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n  fullName: MessageLoggingElement.LogMalformedMessages\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n  fullName: MessageLoggingElement.LogMessagesAtServiceLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n  fullName: MessageLoggingElement.LogMessagesAtTransportLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n  fullName: MessageLoggingElement.MaxMessagesToLog\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n  fullName: MessageLoggingElement.MaxSizeOfMessageToLog\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n  fullName: MessageLoggingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MessageLoggingElement\n  nameWithType: MessageLoggingElement.MessageLoggingElement\n  fullName: MessageLoggingElement.MessageLoggingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n  fullName: MessageLoggingElement.Filters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n  fullName: MessageLoggingElement.LogEntireMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n  fullName: MessageLoggingElement.LogKnownPii\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n  fullName: MessageLoggingElement.LogMalformedMessages\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n  fullName: MessageLoggingElement.LogMessagesAtServiceLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n  fullName: MessageLoggingElement.LogMessagesAtTransportLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n  fullName: MessageLoggingElement.MaxMessagesToLog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n  fullName: MessageLoggingElement.MaxSizeOfMessageToLog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n  fullName: MessageLoggingElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageLoggingElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}