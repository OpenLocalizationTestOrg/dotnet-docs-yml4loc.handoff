{"nodes":[{"content":"Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.","nodes":[{"pos":[0,121],"content":"Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.","nodes":[{"content":"Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.","pos":[0,121]}]}],"pos":[1288,1410],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level. Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.  \n  \n For more information about choosing between service, endpoint, and contract behaviors, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).  \n  \n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior.  \n  \n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application.  \n  \n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application.  \n  \n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature.  \n  \n <xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.  \n  \n> [!NOTE]\n>  All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> as parameters. These parameters are for examination; if you modify the objects the execution behavior is undefined.  \n  \n <xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both. To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. There are two ways to do this.  \n  \n The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.  \n  \n> [!NOTE]\n>  The behavior is applied to all contracts of the same type. For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.  \n  \n The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:  \n  \n-   A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint.  \n  \n-   A service class.  In this case, the behavior is applied to all endpoints regardless of contract.  \n  \n-   A callback class.  In this case, the behavior is applied to the duplex client's endpoint.  \n  \n The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName>. In this case, the behavior is as follows:  \n  \n-   A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint and [!INCLUDE[indigo1](~/includes/indigo1-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \n  \n-   A service class.  In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \n  \n-   A callback class.  In this case, the behavior is applied to the duplex client's endpoint and [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \n  \n To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called. There are two ways to do this:  \n  \n-   Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called.  \n  \n-   Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>.  \n  \n For more information on programmatically adding <xref:System.ServiceModel.Description.IContractBehavior> types to either the client or service application, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).","nodes":[{"pos":[0,508],"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level. Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level. Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.","pos":[0,508],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.","pos":[0,175],"source":"Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level."},{"content":"Unlike <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.","pos":[176,508],"source":" Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute."}]}]},{"pos":[515,749],"content":"For more information about choosing between service, endpoint, and contract behaviors, see <bpt id=\"p1\">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id=\"p1\">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.","source":"For more information about choosing between service, endpoint, and contract behaviors, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)."},{"pos":[759,924],"content":"Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with custom data to support the behavior.","pos":[0,165],"source":"Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior."}]},{"pos":[934,1108],"content":"Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a client application.","pos":[0,174],"source":"Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application."}]},{"pos":[1118,1295],"content":"Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a service application.","pos":[0,177],"source":"Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application."}]},{"pos":[1305,1448],"content":"Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to ensure that a contract can support a particular feature.","pos":[0,143],"source":"Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature."}]},{"pos":[1455,1654],"content":"<xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.","pos":[0,199],"source":"<xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value."}]},{"pos":[1662,2037],"content":"[!NOTE]\n All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> as parameters. These parameters are for examination; if you modify the objects the execution behavior is undefined.","leadings":["","> "],"nodes":[{"content":" All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> as parameters. These parameters are for examination; if you modify the objects the execution behavior is undefined.","pos":[8,373],"nodes":[{"content":"All of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> methods pass <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt;</ph> as parameters.","pos":[1,264],"source":" All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> as parameters."},{"content":"These parameters are for examination; if you modify the objects the execution behavior is undefined.","pos":[265,365]}]}]},{"pos":[2044,2662],"content":"<xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both. To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. There are two ways to do this.","nodes":[{"content":"<xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both. To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. There are two ways to do this.","pos":[0,618],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types can be used on either the service or the client, or both.","pos":[0,120],"source":"<xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both."},{"content":"To perform a customization task on the service, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime, which occurs when the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method is called on the <ph id=\"ph4\">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph> object.","pos":[121,587],"source":" To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object."},{"content":"There are two ways to do this.","pos":[588,618]}]}]},{"pos":[2669,3145],"content":"The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.","nodes":[{"content":"The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.","pos":[0,476],"nodes":[{"content":"The first method is to programmatically add the custom contract behavior to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method is called on the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph> object.","pos":[0,365],"source":"The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object."},{"content":"When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.","pos":[366,476]}]}]},{"pos":[3153,3389],"content":"[!NOTE]\n The behavior is applied to all contracts of the same type. For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.","leadings":["","> "],"nodes":[{"content":" The behavior is applied to all contracts of the same type. For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.","pos":[8,234],"nodes":[{"content":"The behavior is applied to all contracts of the same type.","pos":[1,59]},{"content":"For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.","pos":[60,226]}]}]},{"pos":[3396,3537],"content":"The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:","nodes":[{"content":"The second method is to create a custom attribute that implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> and apply that to:","pos":[0,141],"source":"The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:"}]},{"pos":[3547,3653],"content":"A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint.","nodes":[{"content":"A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint.","pos":[0,106],"nodes":[{"content":"A contract interface.","pos":[0,21]},{"content":"In this case, the behavior is applied to all contracts of that type in any endpoint.","pos":[22,106]}]}]},{"pos":[3663,3759],"content":"A service class.  In this case, the behavior is applied to all endpoints regardless of contract.","nodes":[{"content":"A service class.  In this case, the behavior is applied to all endpoints regardless of contract.","pos":[0,96],"nodes":[{"content":"A service class.","pos":[0,16]},{"content":"In this case, the behavior is applied to all endpoints regardless of contract.","pos":[18,96]}]}]},{"pos":[3769,3858],"content":"A callback class.  In this case, the behavior is applied to the duplex client's endpoint.","nodes":[{"content":"A callback class.  In this case, the behavior is applied to the duplex client's endpoint.","pos":[0,89],"nodes":[{"content":"A callback class.","pos":[0,17]},{"content":"In this case, the behavior is applied to the duplex client's endpoint.","pos":[19,89]}]}]},{"pos":[3865,4090],"content":"The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName>. In this case, the behavior is as follows:","nodes":[{"content":"The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName>. In this case, the behavior is as follows:","pos":[0,225],"nodes":[{"content":"The behavior of the second approach varies slightly if the custom attribute also implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,183],"source":"The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName>."},{"content":"In this case, the behavior is as follows:","pos":[184,225]}]}]},{"pos":[4100,4399],"content":"A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint and [!INCLUDE[indigo1](~/includes/indigo1-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.","nodes":[{"content":"A contract interface.","pos":[0,21]},{"content":"In this case, the behavior is applied to all contracts of that type in any endpoint and <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignores the value of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName&gt;</ph> property.","pos":[22,299],"source":" In this case, the behavior is applied to all contracts of that type in any endpoint and [!INCLUDE[indigo1](~/includes/indigo1-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property."}]},{"pos":[4409,4643],"content":"A service class.  In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.","nodes":[{"content":"A service class.  In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.","pos":[0,234],"nodes":[{"content":"A service class.","pos":[0,16]},{"content":"In this case, the behavior is applied only to endpoints the contract of which is the value of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName&gt;</ph> property.","pos":[18,234],"source":"  In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property."}]}]},{"pos":[4653,4935],"content":"A callback class.  In this case, the behavior is applied to the duplex client's endpoint and [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.","nodes":[{"content":"A callback class.","pos":[0,17]},{"content":"In this case, the behavior is applied to the duplex client's endpoint and <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> ignores the value of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName&gt;</ph> property.","pos":[19,282],"source":"  In this case, the behavior is applied to the duplex client's endpoint and [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property."}]},{"pos":[4942,5382],"content":"To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called. There are two ways to do this:","nodes":[{"content":"To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called. There are two ways to do this:","pos":[0,440],"nodes":[{"content":"To perform the customization task on the client for which it is intended, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the client runtime, which occurs when <ph id=\"ph3\">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,409],"source":"To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called."},{"content":"There are two ways to do this:","pos":[410,440]}]}]},{"pos":[5392,5656],"content":"Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called.","nodes":[{"content":"Programmatically add the custom contract behavior to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,264],"source":"Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called."}]},{"pos":[5666,5770],"content":"Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>.","nodes":[{"content":"Create a custom attribute that also implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.","pos":[0,104],"source":"Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>."}]},{"pos":[5777,6080],"content":"For more information on programmatically adding <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types to either the client or service application, see <bpt id=\"p1\">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id=\"p1\">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.","source":"For more information on programmatically adding <xref:System.ServiceModel.Description.IContractBehavior> types to either the client or service application, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)."}],"pos":[1421,7550],"yaml":true,"extradata":"MT"},{"content":"Configures any binding elements to support the contract behavior.","nodes":[{"pos":[0,65],"content":"Configures any binding elements to support the contract behavior.","nodes":[{"content":"Configures any binding elements to support the contract behavior.","pos":[0,65]}]}],"pos":[10760,10826],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior.  \n  \n This method is called once for each endpoint that uses the specified service contract.","nodes":[{"pos":[0,199],"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the contract behavior.","pos":[0,199],"source":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior."}]},{"pos":[206,292],"content":"This method is called once for each endpoint that uses the specified service contract.","nodes":[{"content":"This method is called once for each endpoint that uses the specified service contract.","pos":[0,86]}]}],"pos":[10837,11134],"yaml":true,"extradata":"MT"},{"content":"The contract description to modify.","nodes":[{"pos":[0,35],"content":"The contract description to modify.","nodes":[{"content":"The contract description to modify.","pos":[0,35]}]}],"pos":[11527,11563],"yaml":true},{"content":"The endpoint to modify.","nodes":[{"pos":[0,23],"content":"The endpoint to modify.","nodes":[{"content":"The endpoint to modify.","pos":[0,23]}]}],"pos":[11661,11685],"yaml":true},{"content":"The objects that binding elements require to support the behavior.","nodes":[{"pos":[0,66],"content":"The objects that binding elements require to support the behavior.","nodes":[{"content":"The objects that binding elements require to support the behavior.","pos":[0,66]}]}],"pos":[11800,11867],"yaml":true},{"content":"Implements a modification or extension of the client across a contract.","nodes":[{"pos":[0,71],"content":"Implements a modification or extension of the client across a contract.","nodes":[{"content":"Implements a modification or extension of the client across a contract.","pos":[0,71]}]}],"pos":[13743,13815],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation. For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.  \n  \n The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application.  \n  \n This method is called once for each endpoint that uses the specified service contract.  \n  \n Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property.  \n  \n Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.","nodes":[{"pos":[0,410],"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation. For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation. For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.","pos":[0,410],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.","pos":[0,215],"source":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation."},{"content":"For details about what customizations you can do with a client run-time object, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.","pos":[216,410],"source":" For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>."}]}]},{"pos":[417,634],"content":"The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method can throw a <ph id=\"ph2\">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a service application.","pos":[0,217],"source":"The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application."}]},{"pos":[641,727],"content":"This method is called once for each endpoint that uses the specified service contract.","nodes":[{"content":"This method is called once for each endpoint that uses the specified service contract.","pos":[0,86]}]},{"pos":[734,1145],"content":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property.","nodes":[{"content":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and that returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property.","pos":[0,411],"source":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property."}]},{"pos":[1152,1487],"content":"Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.","nodes":[{"content":"Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.","pos":[0,335],"source":"Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property."}]}],"pos":[13826,15324],"yaml":true,"extradata":"MT"},{"content":"The contract description for which the extension is intended.","nodes":[{"pos":[0,61],"content":"The contract description for which the extension is intended.","nodes":[{"content":"The contract description for which the extension is intended.","pos":[0,61]}]}],"pos":[16642,16704],"yaml":true},{"content":"The endpoint.","nodes":[{"pos":[0,13],"content":"The endpoint.","nodes":[{"content":"The endpoint.","pos":[0,13]}]}],"pos":[16802,16816],"yaml":true},{"content":"The client runtime.","nodes":[{"pos":[0,19],"content":"The client runtime.","nodes":[{"content":"The client runtime.","pos":[0,19]}]}],"pos":[16916,16936],"yaml":true},{"content":"Implements a modification or extension of the client across a contract.","nodes":[{"pos":[0,71],"content":"Implements a modification or extension of the client across a contract.","nodes":[{"content":"Implements a modification or extension of the client across a contract.","pos":[0,71]}]}],"pos":[18835,18907],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract. For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.  \n  \n The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.  \n  \n This method is called once for each endpoint that uses the specified service contract.  \n  \n Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property.  \n  \n In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.","nodes":[{"pos":[0,450],"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract. For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract. For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.","pos":[0,450],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.","pos":[0,251],"source":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract."},{"content":"For details about what customizations you can perform in a service application, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.","pos":[252,450],"source":" For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>."}]}]},{"pos":[457,675],"content":"The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method can throw a <ph id=\"ph2\">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.","pos":[0,218],"source":"The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application."}]},{"pos":[682,768],"content":"This method is called once for each endpoint that uses the specified service contract.","nodes":[{"content":"This method is called once for each endpoint that uses the specified service contract.","pos":[0,86]}]},{"pos":[775,1188],"content":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property.","nodes":[{"content":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and that returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> property.","pos":[0,413],"source":"Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property."}]},{"pos":[1195,1543],"content":"In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.","nodes":[{"content":"In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.","pos":[0,348],"source":"In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property."}]}],"pos":[18918,20472],"yaml":true,"extradata":"MT"},{"content":"The contract description to be modified.","nodes":[{"pos":[0,40],"content":"The contract description to be modified.","nodes":[{"content":"The contract description to be modified.","pos":[0,40]}]}],"pos":[21796,21837],"yaml":true},{"content":"The endpoint that exposes the contract.","nodes":[{"pos":[0,39],"content":"The endpoint that exposes the contract.","nodes":[{"content":"The endpoint that exposes the contract.","pos":[0,39]}]}],"pos":[21935,21975],"yaml":true},{"content":"The dispatch runtime that controls service execution.","nodes":[{"pos":[0,53],"content":"The dispatch runtime that controls service execution.","nodes":[{"content":"The dispatch runtime that controls service execution.","pos":[0,53]}]}],"pos":[22079,22133],"yaml":true},{"content":"Implement to confirm that the contract and endpoint can support the contract behavior.","nodes":[{"pos":[0,86],"content":"Implement to confirm that the contract and endpoint can support the contract behavior.","nodes":[{"content":"Implement to confirm that the contract and endpoint can support the contract behavior.","pos":[0,86]}]}],"pos":[23764,23851],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior. Implementations can inspect the description and either throw or return no value.  \n  \n This method is called once for each endpoint that uses the specified service contract.","nodes":[{"pos":[0,266],"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior. Implementations can inspect the description and either throw or return no value.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior. Implementations can inspect the description and either throw or return no value.","pos":[0,266],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to confirm that the contract description is sufficient to support the custom contract behavior.","pos":[0,185],"source":"Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior."},{"content":"Implementations can inspect the description and either throw or return no value.","pos":[186,266]}]}]},{"pos":[273,359],"content":"This method is called once for each endpoint that uses the specified service contract.","nodes":[{"content":"This method is called once for each endpoint that uses the specified service contract.","pos":[0,86]}]}],"pos":[23862,24226],"yaml":true,"extradata":"MT"},{"content":"The contract to validate.","nodes":[{"pos":[0,25],"content":"The contract to validate.","nodes":[{"content":"The contract to validate.","pos":[0,25]}]}],"pos":[24532,24558],"yaml":true},{"content":"The endpoint to validate.","nodes":[{"pos":[0,25],"content":"The endpoint to validate.","nodes":[{"content":"The endpoint to validate.","pos":[0,25]}]}],"pos":[24656,24682],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.IContractBehavior\n  commentId: T:System.ServiceModel.Description.IContractBehavior\n  id: IContractBehavior\n  children:\n  - System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  - System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)\n  - System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)\n  langs:\n  - csharp\n  name: IContractBehavior\n  nameWithType: IContractBehavior\n  fullName: System.ServiceModel.Description.IContractBehavior\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.\n  remarks: \"Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level. Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.  \\n  \\n For more information about choosing between service, endpoint, and contract behaviors, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).  \\n  \\n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior.  \\n  \\n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application.  \\n  \\n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application.  \\n  \\n-   Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature.  \\n  \\n <xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.  \\n  \\n> [!NOTE]\\n>  All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> as parameters. These parameters are for examination; if you modify the objects the execution behavior is undefined.  \\n  \\n <xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both. To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. There are two ways to do this.  \\n  \\n The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> object. When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.  \\n  \\n> [!NOTE]\\n>  The behavior is applied to all contracts of the same type. For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.  \\n  \\n The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:  \\n  \\n-   A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint.  \\n  \\n-   A service class.  In this case, the behavior is applied to all endpoints regardless of contract.  \\n  \\n-   A callback class.  In this case, the behavior is applied to the duplex client's endpoint.  \\n  \\n The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=fullName>. In this case, the behavior is as follows:  \\n  \\n-   A contract interface. In this case, the behavior is applied to all contracts of that type in any endpoint and [!INCLUDE[indigo1](~/includes/indigo1-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \\n  \\n-   A service class.  In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \\n  \\n-   A callback class.  In this case, the behavior is applied to the duplex client's endpoint and [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=fullName> property.  \\n  \\n To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called. There are two ways to do this:  \\n  \\n-   Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName> is called.  \\n  \\n-   Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>.  \\n  \\n For more information on programmatically adding <xref:System.ServiceModel.Description.IContractBehavior> types to either the client or service application, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).\"\n  example:\n  - \"The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public interface IContractBehavior\n  derivedClasses:\n  - System.ServiceModel.DeliveryRequirementsAttribute\n  - System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute\n  - System.ServiceModel.Description.ServiceMetadataContractBehavior\n  - System.ServiceModel.Security.WSTrustServiceContract\n  - System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  id: AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Description.IContractBehavior\n  langs:\n  - csharp\n  name: AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n  nameWithType: IContractBehavior.AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n  fullName: IContractBehavior.AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Configures any binding elements to support the contract behavior.\n  remarks: \"Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior.  \\n  \\n This method is called once for each endpoint that uses the specified service contract.\"\n  syntax:\n    content: public void AddBindingParameters (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);\n    parameters:\n    - id: contractDescription\n      type: System.ServiceModel.Description.ContractDescription\n      description: The contract description to modify.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The endpoint to modify.\n    - id: bindingParameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The objects that binding elements require to support the behavior.\n  overload: System.ServiceModel.Description.IContractBehavior.AddBindingParameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  commentId: M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  id: ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  parent: System.ServiceModel.Description.IContractBehavior\n  langs:\n  - csharp\n  name: ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n  nameWithType: IContractBehavior.ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n  fullName: IContractBehavior.ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Implements a modification or extension of the client across a contract.\n  remarks: \"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation. For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.  \\n  \\n The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application.  \\n  \\n This method is called once for each endpoint that uses the specified service contract.  \\n  \\n Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property.  \\n  \\n Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.\"\n  example:\n  - \"The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public void ApplyClientBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);\n    parameters:\n    - id: contractDescription\n      type: System.ServiceModel.Description.ContractDescription\n      description: The contract description for which the extension is intended.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The endpoint.\n    - id: clientRuntime\n      type: System.ServiceModel.Dispatcher.ClientRuntime\n      description: The client runtime.\n  overload: System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)\n  commentId: M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)\n  id: ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)\n  parent: System.ServiceModel.Description.IContractBehavior\n  langs:\n  - csharp\n  name: ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n  nameWithType: IContractBehavior.ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n  fullName: IContractBehavior.ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Implements a modification or extension of the client across a contract.\n  remarks: \"Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract. For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.  \\n  \\n The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.  \\n  \\n This method is called once for each endpoint that uses the specified service contract.  \\n  \\n Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property.  \\n  \\n In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.\"\n  example:\n  - \"The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime);\n    parameters:\n    - id: contractDescription\n      type: System.ServiceModel.Description.ContractDescription\n      description: The contract description to be modified.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The endpoint that exposes the contract.\n    - id: dispatchRuntime\n      type: System.ServiceModel.Dispatcher.DispatchRuntime\n      description: The dispatch runtime that controls service execution.\n  overload: System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)\n  id: Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Description.IContractBehavior\n  langs:\n  - csharp\n  name: Validate(ContractDescription, ServiceEndpoint)\n  nameWithType: IContractBehavior.Validate(ContractDescription, ServiceEndpoint)\n  fullName: IContractBehavior.Validate(ContractDescription, ServiceEndpoint)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Implement to confirm that the contract and endpoint can support the contract behavior.\n  remarks: \"Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior. Implementations can inspect the description and either throw or return no value.  \\n  \\n This method is called once for each endpoint that uses the specified service contract.\"\n  syntax:\n    content: public void Validate (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: contractDescription\n      type: System.ServiceModel.Description.ContractDescription\n      description: The contract to validate.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The endpoint to validate.\n  overload: System.ServiceModel.Description.IContractBehavior.Validate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n  nameWithType: IContractBehavior.AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n  fullName: IContractBehavior.AddBindingParameters(ContractDescription, ServiceEndpoint, BindingParameterCollection)\n- uid: System.ServiceModel.Description.ContractDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n  nameWithType: IContractBehavior.ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n  fullName: IContractBehavior.ApplyClientBehavior(ContractDescription, ServiceEndpoint, ClientRuntime)\n- uid: System.ServiceModel.Dispatcher.ClientRuntime\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: ClientRuntime\n  nameWithType: ClientRuntime\n  fullName: System.ServiceModel.Dispatcher.ClientRuntime\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n  nameWithType: IContractBehavior.ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n  fullName: IContractBehavior.ApplyDispatchBehavior(ContractDescription, ServiceEndpoint, DispatchRuntime)\n- uid: System.ServiceModel.Dispatcher.DispatchRuntime\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: DispatchRuntime\n  nameWithType: DispatchRuntime\n  fullName: System.ServiceModel.Dispatcher.DispatchRuntime\n- uid: System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: Validate(ContractDescription, ServiceEndpoint)\n  nameWithType: IContractBehavior.Validate(ContractDescription, ServiceEndpoint)\n  fullName: IContractBehavior.Validate(ContractDescription, ServiceEndpoint)\n- uid: System.ServiceModel.Description.IContractBehavior.AddBindingParameters*\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: AddBindingParameters\n  nameWithType: IContractBehavior.AddBindingParameters\n  fullName: IContractBehavior.AddBindingParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior*\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: ApplyClientBehavior\n  nameWithType: IContractBehavior.ApplyClientBehavior\n  fullName: IContractBehavior.ApplyClientBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n- uid: System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior*\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior\n  nameWithType: IContractBehavior.ApplyDispatchBehavior\n  fullName: IContractBehavior.ApplyDispatchBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n- uid: System.ServiceModel.Description.IContractBehavior.Validate*\n  parent: System.ServiceModel.Description.IContractBehavior\n  isExternal: false\n  name: Validate\n  nameWithType: IContractBehavior.Validate\n  fullName: IContractBehavior.Validate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/IContractBehavior.xml\n"}