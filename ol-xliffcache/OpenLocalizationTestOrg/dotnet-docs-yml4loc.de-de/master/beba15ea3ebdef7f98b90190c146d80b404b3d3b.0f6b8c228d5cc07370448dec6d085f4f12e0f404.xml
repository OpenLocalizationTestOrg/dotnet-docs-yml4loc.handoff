{"nodes":[{"content":"Represents a security key that is generated using the RSA algorithm. This class cannot be inherited.","nodes":[{"pos":[0,100],"content":"Represents a security key that is generated using the RSA algorithm. This class cannot be inherited.","nodes":[{"content":"Represents a security key that is generated using the RSA algorithm. This class cannot be inherited.","pos":[0,100],"nodes":[{"content":"Represents a security key that is generated using the RSA algorithm.","pos":[0,68]},{"content":"This class cannot be inherited.","pos":[69,100]}]}]}],"pos":[1399,1500],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityKey\"></xref> class using the specified RSA algorithm.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityKey\"&gt;&lt;/xref&gt;</ph> class using the specified RSA algorithm.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityKey\"></xref> class using the specified RSA algorithm."}],"pos":[3162,3301],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.RSA\"></xref> that represents an RSA algorithm.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> that represents an RSA algorithm.","source":"An <xref href=\"System.Security.Cryptography.RSA\"></xref> that represents an RSA algorithm."}],"pos":[3480,3571],"yaml":true},{"content":"<code>rsa</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;rsa&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rsa</code> is `null`."}],"pos":[3749,3777],"yaml":true},{"content":"Decrypts the specified encrypted key.","nodes":[{"pos":[0,37],"content":"Decrypts the specified encrypted key.","nodes":[{"content":"Decrypts the specified encrypted key.","pos":[0,37]}]}],"pos":[4899,4937],"yaml":true},{"content":"The cryptographic algorithm that was used to encrypt the key. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"pos":[0,260],"content":"The cryptographic algorithm that was used to encrypt the key. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"content":"The cryptographic algorithm that was used to encrypt the key.","pos":[0,61]},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;&lt;/xref&gt;</ph>.","pos":[62,260],"source":" The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>."}]}],"pos":[5111,5372],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the encrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key."}],"pos":[5435,5513],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the decrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key."}],"pos":[5570,5648],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"pos":[0,239],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;&lt;/xref&gt;</ph>.","pos":[41,239],"source":" The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>."}]}],"pos":[5877,6117],"yaml":true},{"content":"<code>keyData</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;keyData&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyData</code> is `null`."}],"pos":[6219,6251],"yaml":true},{"content":"Encrypts the specified key using the specified algorithm.","nodes":[{"pos":[0,57],"content":"Encrypts the specified key using the specified algorithm.","nodes":[{"content":"Encrypts the specified key using the specified algorithm.","pos":[0,57]}]}],"pos":[7373,7431],"yaml":true},{"content":"The cryptographic algorithm to encrypt the key with.","nodes":[{"pos":[0,52],"content":"The cryptographic algorithm to encrypt the key with.","nodes":[{"content":"The cryptographic algorithm to encrypt the key with.","pos":[0,52]}]}],"pos":[7605,7658],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the key.","nodes":[{"pos":[0,67],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the key."}],"pos":[7721,7789],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the encrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key."}],"pos":[7846,7924],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"pos":[0,239],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;&lt;/xref&gt;</ph>.","pos":[41,239],"source":" The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>."}]}],"pos":[8153,8393],"yaml":true},{"content":"<code>keyData</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;keyData&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyData</code> is `null`."}],"pos":[8495,8527],"yaml":true},{"content":"Gets the specified asymmetric cryptographic algorithm.","nodes":[{"pos":[0,54],"content":"Gets the specified asymmetric cryptographic algorithm.","nodes":[{"content":"Gets the specified asymmetric cryptographic algorithm.","pos":[0,54]}]}],"pos":[9727,9782],"yaml":true},{"content":"The asymmetric algorithm to create.","nodes":[{"pos":[0,35],"content":"The asymmetric algorithm to create.","nodes":[{"content":"The asymmetric algorithm to create.","pos":[0,35]}]}],"pos":[10011,10047],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;&lt;/xref&gt;</ph> that represents the specified asymmetric cryptographic algorithm.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm."}],"pos":[10217,10356],"yaml":true},{"content":"<code>requiresPrivateKey</code> is `true` and a private key is not available.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;requiresPrivateKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and a private key is not available.","source":"<code>requiresPrivateKey</code> is `true` and a private key is not available."}],"pos":[10597,10675],"yaml":true},{"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","nodes":[{"pos":[0,77],"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","nodes":[{"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","pos":[0,77]}]}],"pos":[11839,11917],"yaml":true},{"content":"The hash algorithm. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,132],"content":"The hash algorithm. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"The hash algorithm.","pos":[0,19]},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[20,132],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[12129,12262],"yaml":true},{"content":"A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> that generates hashes for digital signatures.","source":"A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures."}],"pos":[12348,12460],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,153],"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,153],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[12707,12861],"yaml":true},{"content":"Gets the de-formatter algorithm for the digital signature.","nodes":[{"pos":[0,58],"content":"Gets the de-formatter algorithm for the digital signature.","nodes":[{"content":"Gets the de-formatter algorithm for the digital signature.","pos":[0,58]}]}],"pos":[13995,14054],"yaml":true},{"content":"The de-formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,188],"content":"The de-formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"The de-formatter algorithm for the digital signature to get an instance of.","pos":[0,75]},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[76,188],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[14278,14467],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;&lt;/xref&gt;</ph> that represents the de-formatter algorithm for the digital signature.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature."}],"pos":[14570,14724],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,153],"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,153],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[14966,15120],"yaml":true},{"content":"Gets the formatter algorithm for the digital signature.","nodes":[{"pos":[0,55],"content":"Gets the formatter algorithm for the digital signature.","nodes":[{"content":"Gets the formatter algorithm for the digital signature.","pos":[0,55]}]}],"pos":[16242,16298],"yaml":true},{"content":"The formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,185],"content":"The formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"The formatter algorithm for the digital signature to get an instance of.","pos":[0,72]},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[73,185],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[16518,16704],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature.","nodes":[{"pos":[0,150],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;&lt;/xref&gt;</ph> that represents the formatter algorithm for the digital signature.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature."}],"pos":[16805,16956],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"pos":[0,153],"content":"<code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithm is <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,153],"source":" The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>."}]}],"pos":[17196,17350],"yaml":true},{"content":"Gets a value that indicates whether the private key is available.","nodes":[{"pos":[0,65],"content":"Gets a value that indicates whether the private key is available.","nodes":[{"content":"Gets a value that indicates whether the private key is available.","pos":[0,65]}]}],"pos":[18361,18427],"yaml":true},{"content":"`true` when the private key is available; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> when the private key is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when the private key is available; otherwise, `false`."}],"pos":[18566,18630],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","nodes":[{"pos":[0,81],"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","pos":[0,81]}]}],"pos":[19839,19921],"yaml":true},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[20088,20117],"yaml":true},{"content":"`true` when the specified algorithm uses asymmetric keys; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm uses asymmetric keys; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when the specified algorithm uses asymmetric keys; otherwise, `false`."}],"pos":[20175,20255],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","nodes":[{"pos":[0,87],"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","pos":[0,87]}]}],"pos":[21466,21554],"yaml":true},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[21720,21749],"yaml":true},{"content":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,314],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm is <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>; otherwise, `false`."}],"pos":[21807,22124],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","nodes":[{"pos":[0,80],"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","pos":[0,80]}]}],"pos":[23334,23415],"yaml":true},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[23581,23610],"yaml":true},{"content":"`true` when the specified algorithm uses symmetric keys; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm uses symmetric keys; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when the specified algorithm uses symmetric keys; otherwise, `false`."}],"pos":[23668,23747],"yaml":true},{"content":"Gets the size, in bits, of the key.","nodes":[{"pos":[0,35],"content":"Gets the size, in bits, of the key.","nodes":[{"content":"Gets the size, in bits, of the key.","pos":[0,35]}]}],"pos":[24812,24848],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed. It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","nodes":[{"pos":[0,345],"content":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed. It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","nodes":[{"content":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed. It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","pos":[0,345],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.","pos":[0,206],"source":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed."},{"content":"It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","pos":[207,345]}]}]}],"pos":[24859,25205],"yaml":true,"extradata":"MT"},{"content":"The size, in bits, of the key.","nodes":[{"pos":[0,30],"content":"The size, in bits, of the key.","nodes":[{"content":"The size, in bits, of the key.","pos":[0,30]}]}],"pos":[25321,25352],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.RsaSecurityKey\n  commentId: T:System.IdentityModel.Tokens.RsaSecurityKey\n  id: RsaSecurityKey\n  children:\n  - System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)\n  - System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  - System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey\n  - System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.RsaSecurityKey.KeySize\n  langs:\n  - csharp\n  name: RsaSecurityKey\n  nameWithType: RsaSecurityKey\n  fullName: System.IdentityModel.Tokens.RsaSecurityKey\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a security key that is generated using the RSA algorithm. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class RsaSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKey\n  - System.IdentityModel.Tokens.AsymmetricSecurityKey\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)\n  id: '#ctor(System.Security.Cryptography.RSA)'\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: RsaSecurityKey(RSA)\n  nameWithType: RsaSecurityKey.RsaSecurityKey(RSA)\n  fullName: RsaSecurityKey.RsaSecurityKey(RSA)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityKey\"></xref> class using the specified RSA algorithm.\n  syntax:\n    content: public RsaSecurityKey (System.Security.Cryptography.RSA rsa);\n    parameters:\n    - id: rsa\n      type: System.Security.Cryptography.RSA\n      description: An <xref href=\"System.Security.Cryptography.RSA\"></xref> that represents an RSA algorithm.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rsa</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])\n  id: DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: DecryptKey(String, Byte[])\n  nameWithType: RsaSecurityKey.DecryptKey(String, Byte[])\n  fullName: RsaSecurityKey.DecryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Decrypts the specified encrypted key.\n  syntax:\n    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm that was used to encrypt the key. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyData</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])\n  id: EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: EncryptKey(String, Byte[])\n  nameWithType: RsaSecurityKey.EncryptKey(String, Byte[])\n  fullName: RsaSecurityKey.EncryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Encrypts the specified key using the specified algorithm.\n  syntax:\n    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm to encrypt the key with.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the key.\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref> and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyData</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  id: GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: GetAsymmetricAlgorithm(String, Boolean)\n  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  fullName: RsaSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the specified asymmetric cryptographic algorithm.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The asymmetric algorithm to create.\n    - id: requiresPrivateKey\n      type: System.Boolean\n      description: ''\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>requiresPrivateKey</code> is `true` and a private key is not available.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)\n  id: GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: RsaSecurityKey.GetHashAlgorithmForSignature(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a cryptographic algorithm that generates a hash for a digital signature.\n  syntax:\n    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The hash algorithm. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n    return:\n      type: System.Security.Cryptography.HashAlgorithm\n      description: A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)\n  id: GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureDeformatter(String)\n  nameWithType: RsaSecurityKey.GetSignatureDeformatter(String)\n  fullName: RsaSecurityKey.GetSignatureDeformatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the de-formatter algorithm for the digital signature.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The de-formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureDeformatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)\n  id: GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureFormatter(String)\n  nameWithType: RsaSecurityKey.GetSignatureFormatter(String)\n  fullName: RsaSecurityKey.GetSignatureFormatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the formatter algorithm for the digital signature.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The formatter algorithm for the digital signature to get an instance of. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureFormatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>algorithm</code> is not supported. The supported algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey\n  id: HasPrivateKey\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: HasPrivateKey()\n  nameWithType: RsaSecurityKey.HasPrivateKey()\n  fullName: RsaSecurityKey.HasPrivateKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the private key is available.\n  syntax:\n    content: public override bool HasPrivateKey ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` when the private key is available; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)\n  id: IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: RsaSecurityKey.IsAsymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses asymmetric keys.\n  syntax:\n    content: public override bool IsAsymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm uses asymmetric keys; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)\n  id: IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: IsSupportedAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsSupportedAlgorithm(String)\n  fullName: RsaSecurityKey.IsSupportedAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm is supported by this class.\n  syntax:\n    content: public override bool IsSupportedAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)\n  id: IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: RsaSecurityKey.IsSymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses symmetric keys.\n  syntax:\n    content: public override bool IsSymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm uses symmetric keys; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize\n  commentId: P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize\n  id: KeySize\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: RsaSecurityKey.KeySize\n  fullName: RsaSecurityKey.KeySize\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the size, in bits, of the key.\n  remarks: The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed. It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.\n  syntax:\n    content: public override int KeySize { get; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the key.\n  overload: System.IdentityModel.Tokens.RsaSecurityKey.KeySize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: AsymmetricSecurityKey\n  nameWithType: AsymmetricSecurityKey\n  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: RsaSecurityKey(RSA)\n  nameWithType: RsaSecurityKey.RsaSecurityKey(RSA)\n  fullName: RsaSecurityKey.RsaSecurityKey(RSA)\n- uid: System.Security.Cryptography.RSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: DecryptKey(String, Byte[])\n  nameWithType: RsaSecurityKey.DecryptKey(String, Byte[])\n  fullName: RsaSecurityKey.DecryptKey(String, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: EncryptKey(String, Byte[])\n  nameWithType: RsaSecurityKey.EncryptKey(String, Byte[])\n  fullName: RsaSecurityKey.EncryptKey(String, Byte[])\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm(String, Boolean)\n  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  fullName: RsaSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: RsaSecurityKey.GetHashAlgorithmForSignature(String)\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter(String)\n  nameWithType: RsaSecurityKey.GetSignatureDeformatter(String)\n  fullName: RsaSecurityKey.GetSignatureDeformatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureDeformatter\n  nameWithType: AsymmetricSignatureDeformatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter(String)\n  nameWithType: RsaSecurityKey.GetSignatureFormatter(String)\n  fullName: RsaSecurityKey.GetSignatureFormatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: HasPrivateKey()\n  nameWithType: RsaSecurityKey.HasPrivateKey()\n  fullName: RsaSecurityKey.HasPrivateKey()\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: RsaSecurityKey.IsAsymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsSupportedAlgorithm(String)\n  fullName: RsaSecurityKey.IsSupportedAlgorithm(String)\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: RsaSecurityKey.IsSymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: RsaSecurityKey.KeySize\n  fullName: RsaSecurityKey.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: RsaSecurityKey\n  nameWithType: RsaSecurityKey.RsaSecurityKey\n  fullName: RsaSecurityKey.RsaSecurityKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: DecryptKey\n  nameWithType: RsaSecurityKey.DecryptKey\n  fullName: RsaSecurityKey.DecryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: EncryptKey\n  nameWithType: RsaSecurityKey.EncryptKey\n  fullName: RsaSecurityKey.EncryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm\n  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm\n  fullName: RsaSecurityKey.GetAsymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature\n  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature\n  fullName: RsaSecurityKey.GetHashAlgorithmForSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter\n  nameWithType: RsaSecurityKey.GetSignatureDeformatter\n  fullName: RsaSecurityKey.GetSignatureDeformatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter\n  nameWithType: RsaSecurityKey.GetSignatureFormatter\n  fullName: RsaSecurityKey.GetSignatureFormatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: HasPrivateKey\n  nameWithType: RsaSecurityKey.HasPrivateKey\n  fullName: RsaSecurityKey.HasPrivateKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm\n  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm\n  fullName: RsaSecurityKey.IsAsymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm\n  nameWithType: RsaSecurityKey.IsSupportedAlgorithm\n  fullName: RsaSecurityKey.IsSupportedAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm\n  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm\n  fullName: RsaSecurityKey.IsSymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize*\n  parent: System.IdentityModel.Tokens.RsaSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: RsaSecurityKey.KeySize\n  fullName: RsaSecurityKey.KeySize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/RsaSecurityKey.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}