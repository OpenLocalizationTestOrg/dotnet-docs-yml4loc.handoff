### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  commentId: T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  id: SqlPersistenceProviderFactory
  children:
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  langs:
  - csharp
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  type: Class
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: A system-provided <xref href="System.ServiceModel.Persistence.PersistenceProviderFactory"></xref> implementation used to create a <xref href="System.ServiceModel.Persistence.LockingPersistenceProvider"></xref> instance that uses a SQL database to store persisted service state data.
  remarks: "The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \n  \n In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.  \n  \n> [!NOTE]\n>  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.  \n  \n> [!NOTE]\n>  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProviderFactory
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory"></xref> class, configured with the specified parameter collection.
  remarks: This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]"
  syntax:
    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: The collection of parameters used by the new persistence provider factory. Valid parameters include `lockTimeout`, `connectionStringName`, and `serializeAsText`.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory"></xref> class, configured with the specified connection string.
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: The connection parameters for the new persistence provider instance.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String, Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory"></xref> class, configured with the specified connection string and `serializeAsText` parameters.
  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);
    parameters:
    - id: connectionString
      type: System.String
      description: The connection parameters for the new persistence provider instance.
    - id: serializeAsText
      type: System.Boolean
      description: Specifies whether data is serialized as text rather than binary.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory"></xref> class, configured with the specified connection string, `serializeAsText`, and `lockTimeout` parameters.
  remarks: "The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.  \n  \n The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);
    parameters:
    - id: connectionString
      type: System.String
      description: The connection parameters for the new persistence provider factory instance.
    - id: serializeAsText
      type: System.Boolean
      description: Specifies whether data is serialized as text rather than binary.
    - id: lockTimeout
      type: System.TimeSpan
      description: The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of `TimeSpan.Zero` specifies that no locking is used.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  id: ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: SqlPersistenceProviderFactory.ConnectionString
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Gets the connection parameters for persistence provider instances created with this factory.
  remarks: ''
  example:
  - "The following code example shows how to set and access the `ConnectionString` property.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: The connection parameters for persistence provider instances created with this factory.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  id: CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: SqlPersistenceProviderFactory.CreateProvider(Guid)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Initializes a new <xref href="System.ServiceModel.Persistence.LockingPersistenceProvider"></xref> instance that uses a SQL database as its persistence store.
  remarks: The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.
  example:
  - "The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]"
  syntax:
    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: The unique identifier of the persistence provider being created.
    return:
      type: System.ServiceModel.Persistence.PersistenceProvider
      description: A newly-created <xref href="System.ServiceModel.Persistence.PersistenceProvider"></xref>.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Gets the default time-out value used when persistence providers created with this factory are closed.
  remarks: The default value for close time-out is 15 seconds.
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default time-out value.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Gets the default time-out value used when persistence provider is opened.
  remarks: The default value for open time-out is 15 seconds.
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default time-out value.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  id: LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: SqlPersistenceProviderFactory.LockTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.
  remarks: A time-out of `TimeSpan.Zero` specifies that no locking is used.
  example:
  - "The following code example shows how to access the `LockTimeout` property.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]"
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: The time-out value for lock ownership.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: SqlPersistenceProviderFactory.OnAbort()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the Abort phase.
  remarks: '`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.'
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the beginning of the Close phase.
  remarks: The Close phase occurs when the service is closed.
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this attempt.
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.
    return:
      type: System.IAsyncResult
      description: The state of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> asynchronous method call.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the beginning of the Open phase.
  remarks: The Open phase occurs when the service is opened.
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this attempt.
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.
    return:
      type: System.IAsyncResult
      description: The state of the <xref href="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> asynchronous method call.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the Close phase.
  remarks: The Close phase occurs when the service is closed.
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this attempt.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the end of the Close phase.
  remarks: The Close phase occurs when the service is closed.
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: A reference to the result of the operation.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the end of the Open phase.
  remarks: The Open phase occurs when the service is opened.
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: A reference to the result of the operation.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Represents the Open phase.
  remarks: The Open phase occurs when the service is opened.
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this attempt.
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  id: SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: SqlPersistenceProviderFactory.SerializeAsText
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.
  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.
  example:
  - "The following code example shows how to access the `SerializeAsText` property.  \n  \n [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]"
  syntax:
    content: public bool SerializeAsText { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the service information is serialized as text; otherwise, `false`.'
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Persistence.PersistenceProviderFactory
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProviderFactory
  nameWithType: PersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.PersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String, Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: SqlPersistenceProviderFactory.CreateProvider(Guid)
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: SqlPersistenceProviderFactory.OnAbort()
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: SqlPersistenceProviderFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: SqlPersistenceProviderFactory.SerializeAsText
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: SqlPersistenceProviderFactory.ConnectionString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider
  nameWithType: SqlPersistenceProviderFactory.CreateProvider
  fullName: SqlPersistenceProviderFactory.CreateProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: SqlPersistenceProviderFactory.LockTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort
  nameWithType: SqlPersistenceProviderFactory.OnAbort
  fullName: SqlPersistenceProviderFactory.OnAbort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose
  fullName: SqlPersistenceProviderFactory.OnBeginClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen
  fullName: SqlPersistenceProviderFactory.OnBeginOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose
  nameWithType: SqlPersistenceProviderFactory.OnClose
  fullName: SqlPersistenceProviderFactory.OnClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose
  nameWithType: SqlPersistenceProviderFactory.OnEndClose
  fullName: SqlPersistenceProviderFactory.OnEndClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen
  fullName: SqlPersistenceProviderFactory.OnEndOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen
  nameWithType: SqlPersistenceProviderFactory.OnOpen
  fullName: SqlPersistenceProviderFactory.OnOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: SqlPersistenceProviderFactory.SerializeAsText
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: CommunicationObject.OnClosed()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  nameWithType: CommunicationObject.OnOpened()
  fullName: CommunicationObject.OnOpened()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: CommunicationObject.OnOpening()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: CommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: CommunicationObject.ThrowIfDisposed()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()
