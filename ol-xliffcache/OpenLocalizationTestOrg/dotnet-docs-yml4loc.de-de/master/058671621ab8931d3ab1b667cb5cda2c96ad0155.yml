### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseWheelEventArgs
  commentId: T:System.Windows.Input.MouseWheelEventArgs
  id: MouseWheelEventArgs
  children:
  - System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  - System.Windows.Input.MouseWheelEventArgs.Delta
  - System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  langs:
  - csharp
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Provides data for various events that report changes to the mouse wheel delta value of a mouse device.
  remarks: "<xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:  \n  \n-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> (attached event)  \n  \n-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> (attached event)  \n  \n The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).  \n  \n This event is raised even for small mouse wheel movements. For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold. Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update. Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific."
  example:
  - "The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative. The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.  \n  \n [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]\n [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]"
  syntax:
    content: 'public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Input.MouseEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  commentId: M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)'
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: MouseWheelEventArgs(MouseDevice, Int32, Int32)
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice, Int32, Int32)
  fullName: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice, Int32, Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Initializes a new instance of the <xref href="System.Windows.Input.MouseWheelEventArgs"></xref> class.
  syntax:
    content: public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: The mouse device associated with this event.
    - id: timestamp
      type: System.Int32
      description: The time when the input occurred.
    - id: delta
      type: System.Int32
      description: The amount the wheel has changed.
  overload: System.Windows.Input.MouseWheelEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseWheelEventArgs.Delta
  commentId: P:System.Windows.Input.MouseWheelEventArgs.Delta
  id: Delta
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
  fullName: MouseWheelEventArgs.Delta
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets a value that indicates the amount that the mouse wheel has changed.
  remarks: The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.
  example:
  - "The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative. The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.  \n  \n [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]\n [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]"
  syntax:
    content: public int Delta { get; }
    return:
      type: System.Int32
      description: The amount the wheel has changed. This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).
  overload: System.Windows.Input.MouseWheelEventArgs.Delta*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  commentId: M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: MouseWheelEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: MouseWheelEventArgs.InvokeEventHandler(Delegate, Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.
  remarks: This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: The generic handler to call in a type-specific way.
    - id: genericTarget
      type: System.Object
      description: The target to call the handler on.
  overload: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: MouseWheelEventArgs(MouseDevice, Int32, Int32)
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice, Int32, Int32)
  fullName: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice, Int32, Int32)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseWheelEventArgs.Delta
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
  fullName: MouseWheelEventArgs.Delta
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: MouseWheelEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: MouseWheelEventArgs.InvokeEventHandler(Delegate, Object)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs
  fullName: MouseWheelEventArgs.MouseWheelEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
- uid: System.Windows.Input.MouseWheelEventArgs.Delta*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
  fullName: MouseWheelEventArgs.Delta
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseWheelEventArgs.InvokeEventHandler
  fullName: MouseWheelEventArgs.InvokeEventHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseWheelEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
- uid: System.Windows.Input.InputEventArgs.Device
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Device
  nameWithType: InputEventArgs.Device
  fullName: InputEventArgs.Device
- uid: System.Windows.Input.InputEventArgs.Timestamp
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: InputEventArgs.Timestamp
  fullName: InputEventArgs.Timestamp
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: MouseEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: MouseEventArgs.XButton2
