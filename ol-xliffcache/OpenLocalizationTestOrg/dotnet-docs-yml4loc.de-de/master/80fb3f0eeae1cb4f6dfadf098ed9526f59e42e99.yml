### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  commentId: T:System.DirectoryServices.AccountManagement.UserPrincipal
  id: UserPrincipal
  children:
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.UserPrincipal.Current
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  - System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  - System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  - System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  - System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  langs:
  - csharp
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
  type: Class
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Encapsulates principals that are user accounts.
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UserPrincipal : System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: UserPrincipal.UserPrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Initializes a new instance of the <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> class by using the specified context.
  remarks: The user principal account is not persisted when it is created. To save the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.
  example:
  - "The following code example connects to the LDAP domain \"fabrikam.com\" with the username and password initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor to \"administrator\" and \"securelyStoredPassword.\"  \n  \n The properties set in the example, such as user name and e-mail address, are created under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  \n  \n```  \n  \nPrincipalContext ctx = new PrincipalContext(  \n                                         ContextType.Domain,  \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",  \n                                         \"administrator\",   \n                                         \"securelyStoredPassword\");   \n  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \nusr.Name = \"Jim Daly\";  \nusr.Description = \"This is the user account for Jim Daly\";  \nusr.EmailAddress = \"jimdaly@fabrikam.com\";  \nusr.SetPassword(\"securelyStoredPassword\");  \nusr.Save();  \n  \nusr.Dispose();  \nctx.Dispose();   \n```"
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> that specifies the server or domain against which operations are performed.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext, String, String, Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext, String, String, Boolean)
  fullName: UserPrincipal.UserPrincipal(PrincipalContext, String, String, Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Initializes a new instance of the <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> class by using the specified context, SAM account name, password, and enabled value.
  remarks: The user principal account is not persisted when it is created. To save the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> that specifies the server or domain against which operations are performed.
    - id: samAccountName
      type: System.String
      description: The SAM account name for this user principal.
    - id: password
      type: System.String
      description: The password for this account.
    - id: enabled
      type: System.Boolean
      description: A Boolean value that specifies whether the account is enabled.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: UserPrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns an <xref href="System.DirectoryServices.AccountManagement.AdvancedFilters"></xref> object to set read-only properties before passing the object to the <xref href="System.DirectoryServices.AccountManagement.PrincipalSearcher"></xref>.
  syntax:
    content: public override System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: An <xref href="System.DirectoryServices.AccountManagement.AdvancedFilters"></xref> object.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.Current
  id: Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: UserPrincipal.Current
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets a user principal object that represents the current user under which the thread is running.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal Current { get; }
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: A <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> representing the current user.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: The user principal object for the current user could not be found. The principal object may contain an access control list to prevent access by unauthorized users.
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: Multiple user principal objects matching the current user were found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  id: EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: UserPrincipal.EmailAddress
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the e-mail address for this account.
  syntax:
    content: public string EmailAddress { get; set; }
    return:
      type: System.String
      description: The e-mail address of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  id: EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: UserPrincipal.EmployeeId
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the employee ID for this user principal.
  syntax:
    content: public string EmployeeId { get; set; }
    return:
      type: System.String
      description: The employee ID of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> objects for users that have an incorrect password attempt recorded in the specified date and time range.
  remarks: The time will default to UTC. If you want to specify the time in local time, then specify the <xref:System.DateTime.Kind%2A> property of the `time` object as <xref:System.DateTimeKind?displayProperty=fullName>.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> object that specifies the server or domain against which operations are performed.
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded.
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: A <xref href="System.DirectoryServices.AccountManagement.MatchType"></xref> enumeration value that specifies the type of match that is applied to the <code>time</code> parameter.
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: A <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> that contains one or more <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> objects, or an empty collection if no results are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByExpirationTime(PrincipalContext, DateTime, MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> objects for users that have an account expiration time in the specified date and time range.
  remarks: The time will default to UTC. If you want to specify the time in local time, then specify the <xref:System.DateTime.Kind%2A> property of the `time` object as <xref:System.DateTimeKind?displayProperty=fullName>.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> object that specifies the server or domain against which operations are performed.
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded.
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: A <xref href="System.DirectoryServices.AccountManagement.MatchType"></xref> enumeration value that specifies the type of match that is applied to the <code>time</code> parameter.
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: A <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> that contains one or more <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> objects, or an empty collection if no results are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext, IdentityType, String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)
  fullName: UserPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a user principal object that matches the specified identity type, and value. This version of the <xref href="System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*"></xref> method determines the format of the identity value.
  remarks: ''
  example:
  - "The following code connects to the local computer store. Since the credentials are not specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, the credentials of the user running the current thread are used.  \n  \n A search is performed to find the user who has SamAccountName \"Guest\".  \n  \n If the user is found, a check is performed to determine whether this user's account is enabled. If the account is not enabled, the example code enables it.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Machine);  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx,   \n                                           IdentityType.SamAccountName,   \n                                           \"Guest\");  \n  \nif(usr != null)  \n{  \n    if (usr.Enabled == false)  \n        usr.Enabled = true;  \n  \n    usr.Save();  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> that specifies the server or domain against which operations are performed.
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: A <xref href="System.DirectoryServices.AccountManagement.IdentityType"></xref> enumeration value that specifies the format of the <code>identityValue</code> parameter.
    - id: identityValue
      type: System.String
      description: The identity of the user principal. This parameter can be any format that is contained in the <xref href="System.DirectoryServices.AccountManagement.IdentityType"></xref> enumeration.
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: A <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> object that matches the specified identity value and type, or null if no matches are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: Multiple user principal objects matching the current user object were found.
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: The identity value is not a valid <xref href="System.DirectoryServices.AccountManagement.IdentityType"></xref> enumeration value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext, String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext, String)
  fullName: UserPrincipal.FindByIdentity(PrincipalContext, String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a user principal object that matches the specified identity value.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> that specifies the server or domain against which operations are performed.
    - id: identityValue
      type: System.String
      description: The identity of the user principal. This parameter can be any format that is contained in the <xref href="System.DirectoryServices.AccountManagement.IdentityType"></xref> enumeration.
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: A <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> object that matches the specified identity value, or null if no matches are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: Multiple user principal objects matching the current user object were found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByLockoutTime(PrincipalContext, DateTime, MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> objects for users that have an account lockout time in the specified date and time range.
  remarks: The time will default to UTC. If you want to specify the time in local time, then specify the <xref:System.DateTime.Kind%2A> property of the `time` object as <xref:System.DateTimeKind?displayProperty=fullName>.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> object that specifies the server or domain against which operations are performed.
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded.
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: A <xref href="System.DirectoryServices.AccountManagement.MatchType"></xref> enumeration value that specifies the type of match that is applied to the <code>time</code> parameter.
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: A <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> that contains one or more <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> objects, or an empty collection if no results are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByLogonTime(PrincipalContext, DateTime, MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> objects for users that have account logon recorded in the specified date and time range.
  remarks: The time will default to UTC. If you want to specify the time in local time, then specify the <xref:System.DateTime.Kind%2A> property of the `time` object as <xref:System.DateTimeKind?displayProperty=fullName>.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> object that specifies the server or domain against which operations are performed.
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded.
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: A <xref href="System.DirectoryServices.AccountManagement.MatchType"></xref> enumeration value that specifies the type of match that is applied to the <code>time</code> parameter.
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: A <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> that contains one or more <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> objects, or an empty collection if no results are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> objects for users that have set their password within the specified date and time range.
  remarks: The time will default to UTC. If you want to specify the time in local time, then specify the <xref:System.DateTime.Kind%2A> property of the `time` object as <xref:System.DateTimeKind?displayProperty=fullName>.
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: The <xref href="System.DirectoryServices.AccountManagement.PrincipalContext"></xref> object that specifies the server or domain against which operations are performed.
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded.
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: A <xref href="System.DirectoryServices.AccountManagement.MatchType"></xref> enumeration value that specifies the type of match that is applied to the <code>time</code> parameter.
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: A <xref href="System.DirectoryServices.AccountManagement.PrincipalSearchResult`1"></xref> that contains one or more <xref href="System.DirectoryServices.AccountManagement.UserPrincipal"></xref> objects, or an empty collection if no results are found.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  commentId: M:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  id: GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: UserPrincipal.GetAuthorizationGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Returns a collection of principal objects that contains all the authorization groups of which this user is a member. This function only returns groups that are security groups; distribution groups are not returned.
  remarks: "This method searches all groups recursively and returns the groups in which the user is a member. The returned set may also include additional groups that system would consider the user a member of for authorization purposes.  \n  \n The groups that are returned by this method may include groups from a different scope and store than the principal. For example, if the principal is an AD DS object that has a DN of \"CN=SpecialGroups,DC=Fabrikam,DC=com, the returned set can contain groups that belong to the \"CN=NormalGroups,DC=Fabrikam,DC=com."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetAuthorizationGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: A collection of <xref href="System.DirectoryServices.AccountManagement.Principal"></xref> objects that contain the groups of which the user is a member, or null if the user does not belong to any groups.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: The attempt to retrieve authorization groups failed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The retrieval of authorization groups is not supported by this operating system.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  id: GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: UserPrincipal.GivenName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the given name for the user principal.
  syntax:
    content: public string GivenName { get; set; }
    return:
      type: System.String
      description: The given name of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  id: MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: UserPrincipal.MiddleName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the middle name for the user principal.
  syntax:
    content: public string MiddleName { get; set; }
    return:
      type: System.String
      description: The middle name of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  id: Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: UserPrincipal.Surname
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the surname for the user principal.
  syntax:
    content: public string Surname { get; set; }
    return:
      type: System.String
      description: The surname of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  commentId: P:System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  id: VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: UserPrincipal.VoiceTelephoneNumber
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: Gets or sets the voice telephone number for the user principal.
  syntax:
    content: public string VoiceTelephoneNumber { get; set; }
    return:
      type: System.String
      description: The voice telephone number of the user principal.
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying store does not support this property.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
references:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: UserPrincipal.UserPrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext, String, String, Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext, String, String, Boolean)
  fullName: UserPrincipal.UserPrincipal(PrincipalContext, String, String, Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: UserPrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: UserPrincipal.Current
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: UserPrincipal.EmailAddress
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: UserPrincipal.EmployeeId
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<UserPrincipal>
  nameWithType: PrincipalSearchResult<UserPrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.UserPrincipal
    name: UserPrincipal
    nameWithType: UserPrincipal
    fullName: System.DirectoryServices.AccountManagement.UserPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByExpirationTime(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext, IdentityType, String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)
  fullName: UserPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext, String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext, String)
  fullName: UserPrincipal.FindByIdentity(PrincipalContext, String)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByLockoutTime(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByLogonTime(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
  fullName: UserPrincipal.FindByPasswordSetTime(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: UserPrincipal.GetAuthorizationGroups()
- uid: System.DirectoryServices.AccountManagement.Principal
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: System.DirectoryServices.AccountManagement.Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: UserPrincipal.GivenName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: UserPrincipal.MiddleName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: UserPrincipal.Surname
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: UserPrincipal.VoiceTelephoneNumber
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal.UserPrincipal
  fullName: UserPrincipal.UserPrincipal
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: UserPrincipal.AdvancedSearchFilter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: UserPrincipal.Current
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: UserPrincipal.EmailAddress
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: UserPrincipal.EmployeeId
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: UserPrincipal.FindByBadPasswordAttempt
  fullName: UserPrincipal.FindByBadPasswordAttempt
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: UserPrincipal.FindByExpirationTime
  fullName: UserPrincipal.FindByExpirationTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity
  nameWithType: UserPrincipal.FindByIdentity
  fullName: UserPrincipal.FindByIdentity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: UserPrincipal.FindByLockoutTime
  fullName: UserPrincipal.FindByLockoutTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: UserPrincipal.FindByLogonTime
  fullName: UserPrincipal.FindByLogonTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: UserPrincipal.FindByPasswordSetTime
  fullName: UserPrincipal.FindByPasswordSetTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups
  nameWithType: UserPrincipal.GetAuthorizationGroups
  fullName: UserPrincipal.GetAuthorizationGroups
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: UserPrincipal.GivenName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: UserPrincipal.MiddleName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: UserPrincipal.Surname
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: UserPrincipal.VoiceTelephoneNumber
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/UserPrincipal.xml
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: Principal.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: Principal.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: Principal.ToString()
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: Principal.CheckDisposedOrDeleted()
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
  fullName: Principal.Context
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: Principal.Delete()
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
  fullName: Principal.Description
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: Principal.Dispose()
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: Principal.ExtensionGet(String)
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet(String, Object)
  nameWithType: Principal.ExtensionSet(String, Object)
  fullName: Principal.ExtensionSet(String, Object)
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)
  fullName: Principal.FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext, Type, String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext, Type, String)
  fullName: Principal.FindByIdentityWithType(PrincipalContext, Type, String)
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: Principal.GetGroups()
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: Principal.GetGroups(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: Principal.GetUnderlyingObject()
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: Principal.GetUnderlyingObjectType()
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
  fullName: Principal.Guid
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(PrincipalContext, IdentityType, String)
  nameWithType: Principal.IsMemberOf(PrincipalContext, IdentityType, String)
  fullName: Principal.IsMemberOf(PrincipalContext, IdentityType, String)
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: Principal.IsMemberOf(GroupPrincipal)
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
  fullName: Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save()
  nameWithType: Principal.Save()
  fullName: Principal.Save()
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: Principal.Save(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
  fullName: Principal.Sid
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: Principal.UserPrincipalName
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: AuthenticablePrincipal.AccountExpirationDate
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: AuthenticablePrincipal.BadLogonCount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: AuthenticablePrincipal.Certificates
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword(String, String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String, String)
  fullName: AuthenticablePrincipal.ChangePassword(String, String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: AuthenticablePrincipal.Enabled
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: AuthenticablePrincipal.ExpirePasswordNow()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt<T>(PrincipalContext, DateTime, MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt<T>(PrincipalContext, DateTime, MatchType)
  fullName: AuthenticablePrincipal.FindByBadPasswordAttempt<T>(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime<T>(PrincipalContext, DateTime, MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime<T>(PrincipalContext, DateTime, MatchType)
  fullName: AuthenticablePrincipal.FindByExpirationTime<T>(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime<T>(PrincipalContext, DateTime, MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime<T>(PrincipalContext, DateTime, MatchType)
  fullName: AuthenticablePrincipal.FindByLockoutTime<T>(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime<T>(PrincipalContext, DateTime, MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime<T>(PrincipalContext, DateTime, MatchType)
  fullName: AuthenticablePrincipal.FindByLogonTime<T>(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime<T>(PrincipalContext, DateTime, MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime<T>(PrincipalContext, DateTime, MatchType)
  fullName: AuthenticablePrincipal.FindByPasswordSetTime<T>(PrincipalContext, DateTime, MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: AuthenticablePrincipal.IsAccountLockedOut()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: AuthenticablePrincipal.PermittedLogonTimes
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: AuthenticablePrincipal.RefreshExpiredPassword()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: AuthenticablePrincipal.SetPassword(String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: AuthenticablePrincipal.UnlockAccount()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: AuthenticablePrincipal.UserCannotChangePassword
