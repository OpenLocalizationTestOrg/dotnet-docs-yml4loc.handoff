{"nodes":[{"content":"Represents assembly binding information that can be added to an instance of <xref href=\"System.AppDomain\"></xref>.","nodes":[{"pos":[0,114],"content":"Represents assembly binding information that can be added to an instance of <ph id=\"ph1\">&lt;xref href=\"System.AppDomain\"&gt;&lt;/xref&gt;</ph>.","source":"Represents assembly binding information that can be added to an instance of <xref href=\"System.AppDomain\"></xref>."}],"pos":[752,867],"yaml":true},{"content":"Members of this interface are used with the <xref:System.AppDomain.GetData%2A?displayProperty=fullName> and <xref:System.AppDomain.SetData%2A?displayProperty=fullName> methods to identify the <xref:System.AppDomain> data to use.","nodes":[{"pos":[0,228],"content":"Members of this interface are used with the <xref:System.AppDomain.GetData%2A?displayProperty=fullName> and <xref:System.AppDomain.SetData%2A?displayProperty=fullName> methods to identify the <xref:System.AppDomain> data to use.","nodes":[{"content":"Members of this interface are used with the <ph id=\"ph1\">&lt;xref:System.AppDomain.GetData%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt;</ph> methods to identify the <ph id=\"ph3\">&lt;xref:System.AppDomain&gt;</ph> data to use.","pos":[0,228],"source":"Members of this interface are used with the <xref:System.AppDomain.GetData%2A?displayProperty=fullName> and <xref:System.AppDomain.SetData%2A?displayProperty=fullName> methods to identify the <xref:System.AppDomain> data to use."}]}],"pos":[878,1107],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the directory containing the application.","nodes":[{"pos":[0,66],"content":"Gets or sets the name of the directory containing the application.","nodes":[{"content":"Gets or sets the name of the directory containing the application.","pos":[0,66]}]}],"pos":[2705,2772],"yaml":true},{"content":"Used when getting or setting the assembly cache manager's APPBASE variable. This is the directory where the assembly manager should begin probing for assemblies. This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,256],"content":"Used when getting or setting the assembly cache manager's APPBASE variable. This is the directory where the assembly manager should begin probing for assemblies. This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"Used when getting or setting the assembly cache manager's APPBASE variable. This is the directory where the assembly manager should begin probing for assemblies. This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","pos":[0,256],"nodes":[{"content":"Used when getting or setting the assembly cache manager's APPBASE variable.","pos":[0,75]},{"content":"This is the directory where the assembly manager should begin probing for assemblies.","pos":[76,161]},{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[162,256],"source":" This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}]}],"pos":[2783,3040],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containg the name of the application base directory.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containg the name of the application base directory.","source":"A <xref href=\"System.String\"></xref> containg the name of the application base directory."}],"pos":[3164,3254],"yaml":true},{"content":"Gets or sets the name of the application.","nodes":[{"pos":[0,41],"content":"Gets or sets the name of the application.","nodes":[{"content":"Gets or sets the name of the application.","pos":[0,41]}]}],"pos":[4336,4378],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that is the name of the application.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that is the name of the application.","source":"A <xref href=\"System.String\"></xref> that is the name of the application."}],"pos":[4502,4576],"yaml":true},{"content":"Gets and sets the name of an area specific to the application where files are shadow copied.","nodes":[{"pos":[0,92],"content":"Gets and sets the name of an area specific to the application where files are shadow copied.","nodes":[{"content":"Gets and sets the name of an area specific to the application where files are shadow copied.","pos":[0,92]}]}],"pos":[5622,5715],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that is the fully-qualified name of the directory path and file name where files are shadow copied.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that is the fully-qualified name of the directory path and file name where files are shadow copied.","source":"A <xref href=\"System.String\"></xref> that is the fully-qualified name of the directory path and file name where files are shadow copied."}],"pos":[5833,5970],"yaml":true},{"content":"Gets and sets the name of the configuration file for an application domain.","nodes":[{"pos":[0,75],"content":"Gets and sets the name of the configuration file for an application domain.","nodes":[{"content":"Gets and sets the name of the configuration file for an application domain.","pos":[0,75]}]}],"pos":[7058,7134],"yaml":true},{"content":"The configuration file describes the search rules and configuration data for the application domain. The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.  \n  \n For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer. Only the host knows the specifics of the configuration data for a particular circumstance.  \n  \n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,248],"content":"The configuration file describes the search rules and configuration data for the application domain. The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.","nodes":[{"content":"The configuration file describes the search rules and configuration data for the application domain. The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.","pos":[0,248],"nodes":[{"content":"The configuration file describes the search rules and configuration data for the application domain.","pos":[0,100]},{"content":"The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.","pos":[101,248]}]}]},{"pos":[255,557],"content":"For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer. Only the host knows the specifics of the configuration data for a particular circumstance.","nodes":[{"content":"For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer. Only the host knows the specifics of the configuration data for a particular circumstance.","pos":[0,302],"nodes":[{"content":"For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.","pos":[0,211]},{"content":"Only the host knows the specifics of the configuration data for a particular circumstance.","pos":[212,302]}]}]},{"pos":[564,658],"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[0,94],"source":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}],"pos":[7145,7810],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that specifies the name of the configuration file.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that specifies the name of the configuration file.","source":"A <xref href=\"System.String\"></xref> that specifies the name of the configuration file."}],"pos":[7936,8024],"yaml":true},{"content":"Gets or sets the directory where dynamically generated files are stored and accessed.","nodes":[{"pos":[0,85],"content":"Gets or sets the directory where dynamically generated files are stored and accessed.","nodes":[{"content":"Gets or sets the directory where dynamically generated files are stored and accessed.","pos":[0,85]}]}],"pos":[9084,9170],"yaml":true},{"content":"When an <xref:System.AppDomain> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies. This directory is logically located under the <xref:System.AppDomainSetup.ApplicationBase%2A>, although it can reside in another part of the directory.  \n  \n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,282],"content":"When an <xref:System.AppDomain> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies. This directory is logically located under the <xref:System.AppDomainSetup.ApplicationBase%2A>, although it can reside in another part of the directory.","nodes":[{"content":"When an <xref:System.AppDomain> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies. This directory is logically located under the <xref:System.AppDomainSetup.ApplicationBase%2A>, although it can reside in another part of the directory.","pos":[0,282],"nodes":[{"content":"When an <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies.","pos":[0,130],"source":"When an <xref:System.AppDomain> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies."},{"content":"This directory is logically located under the <ph id=\"ph1\">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, although it can reside in another part of the directory.","pos":[131,282],"source":" This directory is logically located under the <xref:System.AppDomainSetup.ApplicationBase%2A>, although it can reside in another part of the directory."}]}]},{"pos":[289,383],"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[0,94],"source":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}],"pos":[9181,9569],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that specifies the directory containing dynamic assemblies.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that specifies the directory containing dynamic assemblies.","source":"A <xref href=\"System.String\"></xref> that specifies the directory containing dynamic assemblies."}],"pos":[9689,9786],"yaml":true},{"content":"Gets or sets the location of the license file associated with this domain.","nodes":[{"pos":[0,74],"content":"Gets or sets the location of the license file associated with this domain.","nodes":[{"content":"Gets or sets the location of the license file associated with this domain.","pos":[0,74]}]}],"pos":[10840,10915],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that specifies the name of the license file.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that specifies the name of the license file.","source":"A <xref href=\"System.String\"></xref> that specifies the name of the license file."}],"pos":[11035,11117],"yaml":true},{"content":"Gets or sets the list of directories that is combined with the <xref href=\"System.AppDomainSetup.ApplicationBase\"></xref> directory to probe for private assemblies.","nodes":[{"pos":[0,164],"content":"Gets or sets the list of directories that is combined with the <ph id=\"ph1\">&lt;xref href=\"System.AppDomainSetup.ApplicationBase\"&gt;&lt;/xref&gt;</ph> directory to probe for private assemblies.","source":"Gets or sets the list of directories that is combined with the <xref href=\"System.AppDomainSetup.ApplicationBase\"></xref> directory to probe for private assemblies."}],"pos":[12189,12354],"yaml":true},{"content":"Private assemblies are deployed in the same directory structure as the application.","nodes":[{"pos":[0,83],"content":"Private assemblies are deployed in the same directory structure as the application.","nodes":[{"content":"Private assemblies are deployed in the same directory structure as the application.","pos":[0,83]}]}],"pos":[12365,12449],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.","source":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon."}],"pos":[12572,12692],"yaml":true},{"content":"Gets or sets the private binary directory path used to locate an application.","nodes":[{"pos":[0,77],"content":"Gets or sets the private binary directory path used to locate an application.","nodes":[{"content":"Gets or sets the private binary directory path used to locate an application.","pos":[0,77]}]}],"pos":[13797,13875],"yaml":true},{"content":"Set this property to exclude the application directory path from the search for the application. The search is restricted to private and global binary directory paths, and the global assembly cache.  \n  \n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,198],"content":"Set this property to exclude the application directory path from the search for the application. The search is restricted to private and global binary directory paths, and the global assembly cache.","nodes":[{"content":"Set this property to exclude the application directory path from the search for the application. The search is restricted to private and global binary directory paths, and the global assembly cache.","pos":[0,198],"nodes":[{"content":"Set this property to exclude the application directory path from the search for the application.","pos":[0,96]},{"content":"The search is restricted to private and global binary directory paths, and the global assembly cache.","pos":[97,198]}]}]},{"pos":[205,299],"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[0,94],"source":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}],"pos":[13886,14190],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.","source":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon."}],"pos":[14318,14438],"yaml":true},{"content":"Gets or sets the names of the directories containing assemblies to be shadow copied.","nodes":[{"pos":[0,84],"content":"Gets or sets the names of the directories containing assemblies to be shadow copied.","nodes":[{"content":"Gets or sets the names of the directories containing assemblies to be shadow copied.","pos":[0,84]}]}],"pos":[15560,15645],"yaml":true},{"content":"All directories specified by <xref:System.AppDomainSetup.PrivateBinPath%2A>, including the directory specified by <xref:System.AppDomainSetup.ApplicationBase%2A>, are shadow copied by default if this property is not set.  \n  \n If an executable file is in use, updates to the executable file are stored in a shadow copy directory. Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.  \n  \n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,220],"content":"All directories specified by <xref:System.AppDomainSetup.PrivateBinPath%2A>, including the directory specified by <xref:System.AppDomainSetup.ApplicationBase%2A>, are shadow copied by default if this property is not set.","nodes":[{"content":"All directories specified by <ph id=\"ph1\">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>, including the directory specified by <ph id=\"ph2\">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, are shadow copied by default if this property is not set.","pos":[0,220],"source":"All directories specified by <xref:System.AppDomainSetup.PrivateBinPath%2A>, including the directory specified by <xref:System.AppDomainSetup.ApplicationBase%2A>, are shadow copied by default if this property is not set."}]},{"pos":[227,464],"content":"If an executable file is in use, updates to the executable file are stored in a shadow copy directory. Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.","nodes":[{"content":"If an executable file is in use, updates to the executable file are stored in a shadow copy directory. Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.","pos":[0,237],"nodes":[{"content":"If an executable file is in use, updates to the executable file are stored in a shadow copy directory.","pos":[0,102]},{"content":"Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.","pos":[103,237]}]}]},{"pos":[471,565],"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[0,94],"source":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}],"pos":[15656,16228],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.","source":"A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon."}],"pos":[16358,16478],"yaml":true},{"content":"Gets or sets a string that indicates whether shadow copying is turned on or off.","nodes":[{"pos":[0,80],"content":"Gets or sets a string that indicates whether shadow copying is turned on or off.","nodes":[{"content":"Gets or sets a string that indicates whether shadow copying is turned on or off.","pos":[0,80]}]}],"pos":[17566,17647],"yaml":true},{"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"pos":[0,94],"content":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.","nodes":[{"content":"This property cannot be changed after the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.","pos":[0,94],"source":"This property cannot be changed after the <xref:System.AppDomain> has finished its first bind."}]}],"pos":[17658,17753],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the value \"true\" to indicate that shadow copying is turned on; or \"false\" to indicate that shadow copying is turned off.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the value \"true\" to indicate that shadow copying is turned on; or \"false\" to indicate that shadow copying is turned off.","source":"A <xref href=\"System.String\"></xref> containing the value \"true\" to indicate that shadow copying is turned on; or \"false\" to indicate that shadow copying is turned off."}],"pos":[17877,18046],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IAppDomainSetup\n  commentId: T:System.IAppDomainSetup\n  id: IAppDomainSetup\n  children:\n  - System.IAppDomainSetup.ApplicationBase\n  - System.IAppDomainSetup.ApplicationName\n  - System.IAppDomainSetup.CachePath\n  - System.IAppDomainSetup.ConfigurationFile\n  - System.IAppDomainSetup.DynamicBase\n  - System.IAppDomainSetup.LicenseFile\n  - System.IAppDomainSetup.PrivateBinPath\n  - System.IAppDomainSetup.PrivateBinPathProbe\n  - System.IAppDomainSetup.ShadowCopyDirectories\n  - System.IAppDomainSetup.ShadowCopyFiles\n  langs:\n  - csharp\n  name: IAppDomainSetup\n  nameWithType: IAppDomainSetup\n  fullName: System.IAppDomainSetup\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Represents assembly binding information that can be added to an instance of <xref href=\"System.AppDomain\"></xref>.\n  remarks: Members of this interface are used with the <xref:System.AppDomain.GetData%2A?displayProperty=fullName> and <xref:System.AppDomain.SetData%2A?displayProperty=fullName> methods to identify the <xref:System.AppDomain> data to use.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"27FFF232-A7A8-40dd-8D4A-734AD59FCD41\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IAppDomainSetup\n  derivedClasses:\n  - System.AppDomainSetup\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.ApplicationBase\n  commentId: P:System.IAppDomainSetup.ApplicationBase\n  id: ApplicationBase\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: ApplicationBase\n  nameWithType: IAppDomainSetup.ApplicationBase\n  fullName: IAppDomainSetup.ApplicationBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the name of the directory containing the application.\n  remarks: Used when getting or setting the assembly cache manager's APPBASE variable. This is the directory where the assembly manager should begin probing for assemblies. This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\n  syntax:\n    content: public string ApplicationBase { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containg the name of the application base directory.\n  overload: System.IAppDomainSetup.ApplicationBase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.ApplicationName\n  commentId: P:System.IAppDomainSetup.ApplicationName\n  id: ApplicationName\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: IAppDomainSetup.ApplicationName\n  fullName: IAppDomainSetup.ApplicationName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the name of the application.\n  syntax:\n    content: public string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that is the name of the application.\n  overload: System.IAppDomainSetup.ApplicationName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.CachePath\n  commentId: P:System.IAppDomainSetup.CachePath\n  id: CachePath\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: CachePath\n  nameWithType: IAppDomainSetup.CachePath\n  fullName: IAppDomainSetup.CachePath\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets and sets the name of an area specific to the application where files are shadow copied.\n  syntax:\n    content: public string CachePath { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that is the fully-qualified name of the directory path and file name where files are shadow copied.\n  overload: System.IAppDomainSetup.CachePath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.ConfigurationFile\n  commentId: P:System.IAppDomainSetup.ConfigurationFile\n  id: ConfigurationFile\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: ConfigurationFile\n  nameWithType: IAppDomainSetup.ConfigurationFile\n  fullName: IAppDomainSetup.ConfigurationFile\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets and sets the name of the configuration file for an application domain.\n  remarks: \"The configuration file describes the search rules and configuration data for the application domain. The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.  \\n  \\n For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer. Only the host knows the specifics of the configuration data for a particular circumstance.  \\n  \\n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\"\n  syntax:\n    content: public string ConfigurationFile { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that specifies the name of the configuration file.\n  overload: System.IAppDomainSetup.ConfigurationFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.DynamicBase\n  commentId: P:System.IAppDomainSetup.DynamicBase\n  id: DynamicBase\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: DynamicBase\n  nameWithType: IAppDomainSetup.DynamicBase\n  fullName: IAppDomainSetup.DynamicBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the directory where dynamically generated files are stored and accessed.\n  remarks: \"When an <xref:System.AppDomain> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies. This directory is logically located under the <xref:System.AppDomainSetup.ApplicationBase%2A>, although it can reside in another part of the directory.  \\n  \\n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\"\n  syntax:\n    content: public string DynamicBase { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that specifies the directory containing dynamic assemblies.\n  overload: System.IAppDomainSetup.DynamicBase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.LicenseFile\n  commentId: P:System.IAppDomainSetup.LicenseFile\n  id: LicenseFile\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: LicenseFile\n  nameWithType: IAppDomainSetup.LicenseFile\n  fullName: IAppDomainSetup.LicenseFile\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the location of the license file associated with this domain.\n  syntax:\n    content: public string LicenseFile { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that specifies the name of the license file.\n  overload: System.IAppDomainSetup.LicenseFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.PrivateBinPath\n  commentId: P:System.IAppDomainSetup.PrivateBinPath\n  id: PrivateBinPath\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: PrivateBinPath\n  nameWithType: IAppDomainSetup.PrivateBinPath\n  fullName: IAppDomainSetup.PrivateBinPath\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the list of directories that is combined with the <xref href=\"System.AppDomainSetup.ApplicationBase\"></xref> directory to probe for private assemblies.\n  remarks: Private assemblies are deployed in the same directory structure as the application.\n  syntax:\n    content: public string PrivateBinPath { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.\n  overload: System.IAppDomainSetup.PrivateBinPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.PrivateBinPathProbe\n  commentId: P:System.IAppDomainSetup.PrivateBinPathProbe\n  id: PrivateBinPathProbe\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: PrivateBinPathProbe\n  nameWithType: IAppDomainSetup.PrivateBinPathProbe\n  fullName: IAppDomainSetup.PrivateBinPathProbe\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the private binary directory path used to locate an application.\n  remarks: \"Set this property to exclude the application directory path from the search for the application. The search is restricted to private and global binary directory paths, and the global assembly cache.  \\n  \\n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\"\n  syntax:\n    content: public string PrivateBinPathProbe { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.\n  overload: System.IAppDomainSetup.PrivateBinPathProbe*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.ShadowCopyDirectories\n  commentId: P:System.IAppDomainSetup.ShadowCopyDirectories\n  id: ShadowCopyDirectories\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: ShadowCopyDirectories\n  nameWithType: IAppDomainSetup.ShadowCopyDirectories\n  fullName: IAppDomainSetup.ShadowCopyDirectories\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets the names of the directories containing assemblies to be shadow copied.\n  remarks: \"All directories specified by <xref:System.AppDomainSetup.PrivateBinPath%2A>, including the directory specified by <xref:System.AppDomainSetup.ApplicationBase%2A>, are shadow copied by default if this property is not set.  \\n  \\n If an executable file is in use, updates to the executable file are stored in a shadow copy directory. Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.  \\n  \\n This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\"\n  syntax:\n    content: public string ShadowCopyDirectories { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing a list of directory names, where each name is separated by a semicolon.\n  overload: System.IAppDomainSetup.ShadowCopyDirectories*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IAppDomainSetup.ShadowCopyFiles\n  commentId: P:System.IAppDomainSetup.ShadowCopyFiles\n  id: ShadowCopyFiles\n  parent: System.IAppDomainSetup\n  langs:\n  - csharp\n  name: ShadowCopyFiles\n  nameWithType: IAppDomainSetup.ShadowCopyFiles\n  fullName: IAppDomainSetup.ShadowCopyFiles\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets or sets a string that indicates whether shadow copying is turned on or off.\n  remarks: This property cannot be changed after the <xref:System.AppDomain> has finished its first bind.\n  syntax:\n    content: public string ShadowCopyFiles { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the value \"true\" to indicate that shadow copying is turned on; or \"false\" to indicate that shadow copying is turned off.\n  overload: System.IAppDomainSetup.ShadowCopyFiles*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IAppDomainSetup.ApplicationBase\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ApplicationBase\n  nameWithType: IAppDomainSetup.ApplicationBase\n  fullName: IAppDomainSetup.ApplicationBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IAppDomainSetup.ApplicationName\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ApplicationName\n  nameWithType: IAppDomainSetup.ApplicationName\n  fullName: IAppDomainSetup.ApplicationName\n- uid: System.IAppDomainSetup.CachePath\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: CachePath\n  nameWithType: IAppDomainSetup.CachePath\n  fullName: IAppDomainSetup.CachePath\n- uid: System.IAppDomainSetup.ConfigurationFile\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ConfigurationFile\n  nameWithType: IAppDomainSetup.ConfigurationFile\n  fullName: IAppDomainSetup.ConfigurationFile\n- uid: System.IAppDomainSetup.DynamicBase\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: DynamicBase\n  nameWithType: IAppDomainSetup.DynamicBase\n  fullName: IAppDomainSetup.DynamicBase\n- uid: System.IAppDomainSetup.LicenseFile\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: LicenseFile\n  nameWithType: IAppDomainSetup.LicenseFile\n  fullName: IAppDomainSetup.LicenseFile\n- uid: System.IAppDomainSetup.PrivateBinPath\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: PrivateBinPath\n  nameWithType: IAppDomainSetup.PrivateBinPath\n  fullName: IAppDomainSetup.PrivateBinPath\n- uid: System.IAppDomainSetup.PrivateBinPathProbe\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: PrivateBinPathProbe\n  nameWithType: IAppDomainSetup.PrivateBinPathProbe\n  fullName: IAppDomainSetup.PrivateBinPathProbe\n- uid: System.IAppDomainSetup.ShadowCopyDirectories\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ShadowCopyDirectories\n  nameWithType: IAppDomainSetup.ShadowCopyDirectories\n  fullName: IAppDomainSetup.ShadowCopyDirectories\n- uid: System.IAppDomainSetup.ShadowCopyFiles\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ShadowCopyFiles\n  nameWithType: IAppDomainSetup.ShadowCopyFiles\n  fullName: IAppDomainSetup.ShadowCopyFiles\n- uid: System.IAppDomainSetup.ApplicationBase*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ApplicationBase\n  nameWithType: IAppDomainSetup.ApplicationBase\n  fullName: IAppDomainSetup.ApplicationBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.ApplicationName*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ApplicationName\n  nameWithType: IAppDomainSetup.ApplicationName\n  fullName: IAppDomainSetup.ApplicationName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.CachePath*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: CachePath\n  nameWithType: IAppDomainSetup.CachePath\n  fullName: IAppDomainSetup.CachePath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.ConfigurationFile*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ConfigurationFile\n  nameWithType: IAppDomainSetup.ConfigurationFile\n  fullName: IAppDomainSetup.ConfigurationFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.DynamicBase*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: DynamicBase\n  nameWithType: IAppDomainSetup.DynamicBase\n  fullName: IAppDomainSetup.DynamicBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.LicenseFile*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: LicenseFile\n  nameWithType: IAppDomainSetup.LicenseFile\n  fullName: IAppDomainSetup.LicenseFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.PrivateBinPath*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: PrivateBinPath\n  nameWithType: IAppDomainSetup.PrivateBinPath\n  fullName: IAppDomainSetup.PrivateBinPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.PrivateBinPathProbe*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: PrivateBinPathProbe\n  nameWithType: IAppDomainSetup.PrivateBinPathProbe\n  fullName: IAppDomainSetup.PrivateBinPathProbe\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.ShadowCopyDirectories*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ShadowCopyDirectories\n  nameWithType: IAppDomainSetup.ShadowCopyDirectories\n  fullName: IAppDomainSetup.ShadowCopyDirectories\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n- uid: System.IAppDomainSetup.ShadowCopyFiles*\n  parent: System.IAppDomainSetup\n  isExternal: false\n  name: ShadowCopyFiles\n  nameWithType: IAppDomainSetup.ShadowCopyFiles\n  fullName: IAppDomainSetup.ShadowCopyFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IAppDomainSetup.xml\n"}