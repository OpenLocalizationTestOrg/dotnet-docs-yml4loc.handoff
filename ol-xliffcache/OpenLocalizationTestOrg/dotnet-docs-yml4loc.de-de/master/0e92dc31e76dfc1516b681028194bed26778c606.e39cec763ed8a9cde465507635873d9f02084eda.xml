{"nodes":[{"content":"Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.","nodes":[{"pos":[0,147],"content":"Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.","nodes":[{"content":"Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.","pos":[0,147]}]}],"pos":[878,1026],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query. The target can be an active event log or a log file.","nodes":[{"pos":[0,201],"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query. The target can be an active event log or a log file.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;&lt;/xref&gt;</ph> class by specifying the target of the query.","pos":[0,148],"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query."},{"content":"The target can be an active event log or a log file.","pos":[149,201]}]}],"pos":[2905,3107],"yaml":true},{"content":"The name of the event log to query, or the path to the event log file to query.","nodes":[{"pos":[0,79],"content":"The name of the event log to query, or the path to the event log file to query.","nodes":[{"content":"The name of the event log to query, or the path to the event log file to query.","pos":[0,79]}]}],"pos":[3296,3376],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[3470,3596],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file.","nodes":[{"pos":[0,221],"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;&lt;/xref&gt;</ph> class by specifying the target of the query and the event query.","pos":[0,168],"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query."},{"content":"The target can be an active event log or a log file.","pos":[169,221]}]}],"pos":[4947,5169],"yaml":true},{"content":"The name of the event log to query, or the path to the event log file to query.","nodes":[{"pos":[0,79],"content":"The name of the event log to query, or the path to the event log file to query.","nodes":[{"content":"The name of the event log to query, or the path to the event log file to query.","pos":[0,79]}]}],"pos":[5372,5452],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[5546,5672],"yaml":true},{"content":"The event query used to retrieve events that match the query conditions.","nodes":[{"pos":[0,72],"content":"The event query used to retrieve events that match the query conditions.","nodes":[{"content":"The event query used to retrieve events that match the query conditions.","pos":[0,72]}]}],"pos":[5733,5806],"yaml":true},{"content":"Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.","nodes":[{"pos":[0,139],"content":"Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.","nodes":[{"content":"Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.","pos":[0,139]}]}],"pos":[6897,7037],"yaml":true},{"content":"The default value is `false`.","nodes":[{"pos":[0,29],"content":"The default value is <ph id=\"ph1\">`false`</ph>.","source":"The default value is `false`."}],"pos":[7048,7078],"yaml":true,"extradata":"MT"},{"content":"Returns `true` if events are read from the newest event in the log to the oldest event, and returns `false` if events are read from the oldest event in the log to the newest event.","nodes":[{"pos":[0,180],"content":"Returns <ph id=\"ph1\">`true`</ph> if events are read from the newest event in the log to the oldest event, and returns <ph id=\"ph2\">`false`</ph> if events are read from the oldest event in the log to the newest event.","source":"Returns `true` if events are read from the newest event in the log to the oldest event, and returns `false` if events are read from the oldest event in the log to the newest event."}],"pos":[7202,7383],"yaml":true},{"content":"Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object.","nodes":[{"pos":[0,419],"content":"Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object.","nodes":[{"content":"Gets or sets the session that access the Event Log service on the local computer or a remote computer.","pos":[0,102]},{"content":"This object can be set to access a remote event log by creating a <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"&gt;&lt;/xref&gt;</ph> object or an <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"&gt;&lt;/xref&gt;</ph> object with this <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"&gt;&lt;/xref&gt;</ph> object.","pos":[103,419],"source":" This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object."}]}],"pos":[8431,8851],"yaml":true},{"content":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object.","nodes":[{"pos":[0,90],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object."}],"pos":[9048,9139],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.","nodes":[{"pos":[0,125],"content":"Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.","nodes":[{"content":"Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.","pos":[0,125]}]}],"pos":[10250,10376],"yaml":true},{"content":"`true` indicates that the query will continue to retrieve events even if the query fails for some logs, and `false` indicates that this query will not continue to retrieve events when the query fails.","nodes":[{"pos":[0,200],"content":"<ph id=\"ph1\">`true`</ph> indicates that the query will continue to retrieve events even if the query fails for some logs, and <ph id=\"ph2\">`false`</ph> indicates that this query will not continue to retrieve events when the query fails.","source":"`true` indicates that the query will continue to retrieve events even if the query fails for some logs, and `false` indicates that this query will not continue to retrieve events when the query fails."}],"pos":[10503,10706],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  commentId: T:System.Diagnostics.Eventing.Reader.EventLogQuery\n  id: EventLogQuery\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  langs:\n  - csharp\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'\n  syntax:\n    content: public class EventLogQuery\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String, PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String, PathType)\n  fullName: EventLogQuery.EventLogQuery(String, PathType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query. The target can be an active event log or a log file.\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to query, or the path to the event log file to query.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String, PathType, String)\n  nameWithType: EventLogQuery.EventLogQuery(String, PathType, String)\n  fullName: EventLogQuery.EventLogQuery(String, PathType, String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file.\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to query, or the path to the event log file to query.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The event query used to retrieve events that match the query conditions.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  id: ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: EventLogQuery.ReverseDirection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.\n  remarks: The default value is `false`.\n  syntax:\n    content: public bool ReverseDirection { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if events are read from the newest event in the log to the oldest event, and returns `false` if events are read from the oldest event in the log to the newest event.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  id: Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: EventLogQuery.Session\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=\"System.Diagnostics.Eventing.Reader.EventLogReader\"></xref> object or an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher\"></xref> object with this <xref href=\"System.Diagnostics.Eventing.Reader.EventLogQuery\"></xref> object.\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object.\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  id: TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: EventLogQuery.TolerateQueryErrors\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.\n  syntax:\n    content: public bool TolerateQueryErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` indicates that the query will continue to retrieve events even if the query fails for some logs, and `false` indicates that this query will not continue to retrieve events when the query fails.'\n  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String, PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String, PathType)\n  fullName: EventLogQuery.EventLogQuery(String, PathType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String, PathType, String)\n  nameWithType: EventLogQuery.EventLogQuery(String, PathType, String)\n  fullName: EventLogQuery.EventLogQuery(String, PathType, String)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: EventLogQuery.ReverseDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: EventLogQuery.Session\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: EventLogQuery.TolerateQueryErrors\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery.EventLogQuery\n  fullName: EventLogQuery.EventLogQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: EventLogQuery.ReverseDirection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: EventLogQuery.Session\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: EventLogQuery.TolerateQueryErrors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogQuery.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}