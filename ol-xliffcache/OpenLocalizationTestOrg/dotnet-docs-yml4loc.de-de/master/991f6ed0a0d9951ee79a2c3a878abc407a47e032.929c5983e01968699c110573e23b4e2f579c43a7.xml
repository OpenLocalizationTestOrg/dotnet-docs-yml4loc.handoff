{"nodes":[{"content":"Defines the interface for extending properties to other components in a container.","nodes":[{"pos":[0,82],"content":"Defines the interface for extending properties to other components in a container.","nodes":[{"content":"Defines the interface for extending properties to other components in a container.","pos":[0,82]}]}],"pos":[520,603],"yaml":true},{"content":"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.  \n  \n Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.  \n  \n For more information about extender providers, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).","nodes":[{"pos":[0,383],"content":"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.","nodes":[{"content":"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.","pos":[0,383],"nodes":[{"content":"An extender provider is a component that provides properties to other components.","pos":[0,81]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> control is an extender provider.","pos":[82,167],"source":" For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider."},{"content":"When you add a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> control to a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, all other controls on the form have a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> property added to their list of properties.","pos":[168,383],"source":" When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties."}]}]},{"pos":[390,674],"content":"Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.","nodes":[{"content":"Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.","pos":[0,284],"nodes":[{"content":"Any component that provides extender properties must implement <ph id=\"ph1\">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>.","pos":[0,110],"source":"Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>."},{"content":"A visual designer can then call <ph id=\"ph1\">&lt;xref:System.ComponentModel.IExtenderProvider.CanExtend%2A&gt;</ph> to determine which objects in a container should receive the extender properties.","pos":[111,284],"source":" A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties."}]}]},{"pos":[681,845],"content":"For more information about extender providers, see <bpt id=\"p1\">[</bpt>How to: Implement an Extender Provider<ept id=\"p1\">](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)</ept>.","source":"For more information about extender providers, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)."}],"pos":[614,1466],"yaml":true,"extradata":"MT"},{"content":"Specifies whether this object can provide its extender properties to the specified object.","nodes":[{"pos":[0,90],"content":"Specifies whether this object can provide its extender properties to the specified object.","nodes":[{"content":"Specifies whether this object can provide its extender properties to the specified object.","pos":[0,90]}]}],"pos":[6043,6134],"yaml":true},{"content":"For more information on extender properties, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).","nodes":[{"pos":[0,162],"content":"For more information on extender properties, see <bpt id=\"p1\">[</bpt>How to: Implement an Extender Provider<ept id=\"p1\">](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)</ept>.","source":"For more information on extender properties, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe)."}],"pos":[6145,6310],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to receive the extender properties.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to receive the extender properties.","source":"The <xref href=\"System.Object\"></xref> to receive the extender properties."}],"pos":[7082,7157],"yaml":true},{"content":"`true` if this object can provide extender properties to the specified object; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if this object can provide extender properties to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this object can provide extender properties to the specified object; otherwise, `false`."}],"pos":[7215,7316],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IExtenderProvider\n  commentId: T:System.ComponentModel.IExtenderProvider\n  id: IExtenderProvider\n  children:\n  - System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  langs:\n  - csharp\n  name: IExtenderProvider\n  nameWithType: IExtenderProvider\n  fullName: System.ComponentModel.IExtenderProvider\n  type: Interface\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Defines the interface for extending properties to other components in a container.\n  remarks: \"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.  \\n  \\n Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.  \\n  \\n For more information about extender providers, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IExtenderProvider> interface. This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).  \\n  \\n [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]\\n [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]\"\n  syntax:\n    content: public interface IExtenderProvider\n  derivedClasses:\n  - Microsoft.VisualBasic.Compatibility.VB6.ADODCArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ButtonArray\n  - Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray\n  - Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray\n  - Microsoft.VisualBasic.Compatibility.VB6.LabelArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ListViewArray\n  - Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray\n  - Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray\n  - Microsoft.VisualBasic.Compatibility.VB6.PanelArray\n  - Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray\n  - Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray\n  - Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray\n  - Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray\n  - Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray\n  - Microsoft.VisualBasic.Compatibility.VB6.TabControlArray\n  - Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray\n  - Microsoft.VisualBasic.Compatibility.VB6.TimerArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray\n  - Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray\n  - Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray\n  - Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray\n  - Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray\n  - System.ComponentModel.Design.LocalizationExtenderProvider\n  - System.Windows.Forms.ErrorProvider\n  - System.Windows.Forms.FlowLayoutPanel\n  - System.Windows.Forms.HelpProvider\n  - System.Windows.Forms.TableLayoutPanel\n  - System.Windows.Forms.ToolTip\n  - System.Windows.Forms.Design.ComponentTray\n  - System.Windows.Forms.Design.PropertyTab\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IExtenderProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  commentId: M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  id: CanExtend(System.Object)\n  parent: System.ComponentModel.IExtenderProvider\n  langs:\n  - csharp\n  name: CanExtend(Object)\n  nameWithType: IExtenderProvider.CanExtend(Object)\n  fullName: IExtenderProvider.CanExtend(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies whether this object can provide its extender properties to the specified object.\n  remarks: 'For more information on extender properties, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).'\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> property. This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).  \\n  \\n [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]\\n [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]\"\n  syntax:\n    content: public bool CanExtend (object extendee);\n    parameters:\n    - id: extendee\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to receive the extender properties.\n    return:\n      type: System.Boolean\n      description: '`true` if this object can provide extender properties to the specified object; otherwise, `false`.'\n  overload: System.ComponentModel.IExtenderProvider.CanExtend*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IExtenderProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  parent: System.ComponentModel.IExtenderProvider\n  isExternal: false\n  name: CanExtend(Object)\n  nameWithType: IExtenderProvider.CanExtend(Object)\n  fullName: IExtenderProvider.CanExtend(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.IExtenderProvider.CanExtend*\n  parent: System.ComponentModel.IExtenderProvider\n  isExternal: false\n  name: CanExtend\n  nameWithType: IExtenderProvider.CanExtend\n  fullName: IExtenderProvider.CanExtend\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IExtenderProvider.xml\n"}