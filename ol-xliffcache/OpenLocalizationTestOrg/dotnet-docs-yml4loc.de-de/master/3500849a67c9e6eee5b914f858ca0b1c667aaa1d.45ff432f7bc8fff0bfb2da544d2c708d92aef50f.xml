{"nodes":[{"content":"Represents a vector that is used to encode three-dimensional physical rotations.","nodes":[{"pos":[0,80],"content":"Represents a vector that is used to encode three-dimensional physical rotations.","nodes":[{"content":"Represents a vector that is used to encode three-dimensional physical rotations.","pos":[0,80]}]}],"pos":[3197,3278],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion> structure is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where:  \n  \n```  \nw = cos(theta/2)  \n```","nodes":[{"pos":[0,139],"content":"The <xref:System.Numerics.Quaternion> structure is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion&gt;</ph> structure is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where:","pos":[0,139],"source":"The <xref:System.Numerics.Quaternion> structure is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where:"}]}],"pos":[3289,3469],"yaml":true,"extradata":"MT"},{"content":"Creates a quaternion from the specified vector and rotation parts.","nodes":[{"pos":[0,66],"content":"Creates a quaternion from the specified vector and rotation parts.","nodes":[{"content":"Creates a quaternion from the specified vector and rotation parts.","pos":[0,66]}]}],"pos":[4847,4914],"yaml":true},{"content":"The vector part of the quaternion.","nodes":[{"pos":[0,34],"content":"The vector part of the quaternion.","nodes":[{"content":"The vector part of the quaternion.","pos":[0,34]}]}],"pos":[5103,5138],"yaml":true},{"content":"The rotation part of the quaternion.","nodes":[{"pos":[0,36],"content":"The rotation part of the quaternion.","nodes":[{"content":"The rotation part of the quaternion.","pos":[0,36]}]}],"pos":[5204,5241],"yaml":true},{"content":"Constructs a quaternion from the specified components.","nodes":[{"pos":[0,54],"content":"Constructs a quaternion from the specified components.","nodes":[{"content":"Constructs a quaternion from the specified components.","pos":[0,54]}]}],"pos":[6572,6627],"yaml":true},{"content":"The value to assign to the X component of the quaternion.","nodes":[{"pos":[0,57],"content":"The value to assign to the X component of the quaternion.","nodes":[{"content":"The value to assign to the X component of the quaternion.","pos":[0,57]}]}],"pos":[6779,6837],"yaml":true},{"content":"The value to assign to the Y component of the quaternion.","nodes":[{"pos":[0,57],"content":"The value to assign to the Y component of the quaternion.","nodes":[{"content":"The value to assign to the Y component of the quaternion.","pos":[0,57]}]}],"pos":[6894,6952],"yaml":true},{"content":"The value to assign to the Z component of the quaternion.","nodes":[{"pos":[0,57],"content":"The value to assign to the Z component of the quaternion.","nodes":[{"content":"The value to assign to the Z component of the quaternion.","pos":[0,57]}]}],"pos":[7009,7067],"yaml":true},{"content":"The value to assign to the W component of the quaternion.","nodes":[{"pos":[0,57],"content":"The value to assign to the W component of the quaternion.","nodes":[{"content":"The value to assign to the W component of the quaternion.","pos":[0,57]}]}],"pos":[7124,7182],"yaml":true},{"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","nodes":[{"pos":[0,90],"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","nodes":[{"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","pos":[0,90]}]}],"pos":[8449,8540],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[8771,8793],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[8868,8891],"yaml":true},{"content":"The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>.","nodes":[{"pos":[0,94],"content":"The quaternion that contains the summed values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>."}],"pos":[8961,9056],"yaml":true},{"content":"Concatenates two quaternions.","nodes":[{"pos":[0,29],"content":"Concatenates two quaternions.","nodes":[{"content":"Concatenates two quaternions.","pos":[0,29]}]}],"pos":[10369,10399],"yaml":true},{"content":"The first quaternion rotation in the series.","nodes":[{"pos":[0,44],"content":"The first quaternion rotation in the series.","nodes":[{"content":"The first quaternion rotation in the series.","pos":[0,44]}]}],"pos":[10638,10683],"yaml":true},{"content":"The second quaternion rotation in the series.","nodes":[{"pos":[0,45],"content":"The second quaternion rotation in the series.","nodes":[{"content":"The second quaternion rotation in the series.","pos":[0,45]}]}],"pos":[10758,10804],"yaml":true},{"content":"A new quaternion representing the concatenation of the <code>value1</code> rotation followed by the <code>value2</code> rotation.","nodes":[{"pos":[0,129],"content":"A new quaternion representing the concatenation of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> rotation followed by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept> rotation.","source":"A new quaternion representing the concatenation of the <code>value1</code> rotation followed by the <code>value2</code> rotation."}],"pos":[10874,11004],"yaml":true},{"content":"Returns the conjugate of a specified quaternion.","nodes":[{"pos":[0,48],"content":"Returns the conjugate of a specified quaternion.","nodes":[{"content":"Returns the conjugate of a specified quaternion.","pos":[0,48]}]}],"pos":[12196,12245],"yaml":true},{"content":"The quaternion.","nodes":[{"pos":[0,15],"content":"The quaternion.","nodes":[{"content":"The quaternion.","pos":[0,15]}]}],"pos":[12445,12461],"yaml":true},{"content":"A new quaternion that is the conjugate of `value`.","nodes":[{"pos":[0,50],"content":"A new quaternion that is the conjugate of <ph id=\"ph1\">`value`</ph>.","source":"A new quaternion that is the conjugate of `value`."}],"pos":[12531,12582],"yaml":true},{"content":"Creates a quaternion from a vector and an angle to rotate about the vector.","nodes":[{"pos":[0,75],"content":"Creates a quaternion from a vector and an angle to rotate about the vector.","nodes":[{"content":"Creates a quaternion from a vector and an angle to rotate about the vector.","pos":[0,75]}]}],"pos":[13880,13956],"yaml":true},{"content":"The vector to rotate around.","nodes":[{"pos":[0,28],"content":"The vector to rotate around.","nodes":[{"content":"The vector to rotate around.","pos":[0,28]}]}],"pos":[14171,14200],"yaml":true},{"content":"The angle, in radians, to rotate around the vector.","nodes":[{"pos":[0,51],"content":"The angle, in radians, to rotate around the vector.","nodes":[{"content":"The angle, in radians, to rotate around the vector.","pos":[0,51]}]}],"pos":[14261,14313],"yaml":true},{"content":"The newly created quaternion.","nodes":[{"pos":[0,29],"content":"The newly created quaternion.","nodes":[{"content":"The newly created quaternion.","pos":[0,29]}]}],"pos":[14383,14413],"yaml":true},{"content":"Creates a quaternion from the specified rotation matrix.","nodes":[{"pos":[0,56],"content":"Creates a quaternion from the specified rotation matrix.","nodes":[{"content":"Creates a quaternion from the specified rotation matrix.","pos":[0,56]}]}],"pos":[15697,15754],"yaml":true},{"content":"The rotation matrix.","nodes":[{"pos":[0,20],"content":"The rotation matrix.","nodes":[{"content":"The rotation matrix.","pos":[0,20]}]}],"pos":[15969,15990],"yaml":true},{"content":"The newly created quaternion.","nodes":[{"pos":[0,29],"content":"The newly created quaternion.","nodes":[{"content":"The newly created quaternion.","pos":[0,29]}]}],"pos":[16060,16090],"yaml":true},{"content":"Creates a new quaternion from the given yaw, pitch, and roll.","nodes":[{"pos":[0,61],"content":"Creates a new quaternion from the given yaw, pitch, and roll.","nodes":[{"content":"Creates a new quaternion from the given yaw, pitch, and roll.","pos":[0,61]}]}],"pos":[17454,17516],"yaml":true},{"content":"The yaw angle, in radians, around the Y axis.","nodes":[{"pos":[0,45],"content":"The yaw angle, in radians, around the Y axis.","nodes":[{"content":"The yaw angle, in radians, around the Y axis.","pos":[0,45]}]}],"pos":[17716,17762],"yaml":true},{"content":"The pitch angle, in radians, around the X axis.","nodes":[{"pos":[0,47],"content":"The pitch angle, in radians, around the X axis.","nodes":[{"content":"The pitch angle, in radians, around the X axis.","pos":[0,47]}]}],"pos":[17823,17871],"yaml":true},{"content":"The roll angle, in radians, around the Z axis.","nodes":[{"pos":[0,46],"content":"The roll angle, in radians, around the Z axis.","nodes":[{"content":"The roll angle, in radians, around the Z axis.","pos":[0,46]}]}],"pos":[17931,17978],"yaml":true},{"content":"The resulting quaternion.","nodes":[{"pos":[0,25],"content":"The resulting quaternion.","nodes":[{"content":"The resulting quaternion.","pos":[0,25]}]}],"pos":[18048,18074],"yaml":true},{"content":"Divides one quaternion by a second quaternion.","nodes":[{"pos":[0,46],"content":"Divides one quaternion by a second quaternion.","nodes":[{"content":"Divides one quaternion by a second quaternion.","pos":[0,46]}]}],"pos":[19376,19423],"yaml":true},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[19657,19671],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[19746,19759],"yaml":true},{"content":"The quaternion that results from dividing <code>value1</code> by <code>value2</code>.","nodes":[{"pos":[0,85],"content":"The quaternion that results from dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion that results from dividing <code>value1</code> by <code>value2</code>."}],"pos":[19829,19915],"yaml":true},{"content":"Calculates the dot product of two quaternions.","nodes":[{"pos":[0,46],"content":"Calculates the dot product of two quaternions.","nodes":[{"content":"Calculates the dot product of two quaternions.","pos":[0,46]}]}],"pos":[21183,21230],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[21455,21477],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[21557,21580],"yaml":true},{"content":"The dot product.","nodes":[{"pos":[0,16],"content":"The dot product.","nodes":[{"content":"The dot product.","pos":[0,16]}]}],"pos":[21637,21654],"yaml":true},{"content":"Returns a value that indicates whether this instance and another quaternion are equal.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether this instance and another quaternion are equal.","nodes":[{"content":"Returns a value that indicates whether this instance and another quaternion are equal.","pos":[0,86]}]}],"pos":[22820,22907],"yaml":true},{"content":"Two quaternions are equal if each of their corresponding components is equal.","nodes":[{"pos":[0,77],"content":"Two quaternions are equal if each of their corresponding components is equal.","nodes":[{"content":"Two quaternions are equal if each of their corresponding components is equal.","pos":[0,77]}]}],"pos":[22918,22996],"yaml":true,"extradata":"MT"},{"content":"The other quaternion.","nodes":[{"pos":[0,21],"content":"The other quaternion.","nodes":[{"content":"The other quaternion.","pos":[0,21]}]}],"pos":[23164,23186],"yaml":true},{"content":"`true` if the two quaternions are equal; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the two quaternions are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two quaternions are equal; otherwise, `false`."}],"pos":[23244,23307],"yaml":true},{"content":"Returns a value that indicates whether this instance and a specified object are equal.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether this instance and a specified object are equal.","nodes":[{"content":"Returns a value that indicates whether this instance and a specified object are equal.","pos":[0,86]}]}],"pos":[24425,24512],"yaml":true},{"content":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Quaternion> object and the corresponding components of each matrix are equal.","nodes":[{"pos":[0,154],"content":"The current instance and <ph id=\"ph1\">`obj`</ph> are equal if <ph id=\"ph2\">`obj`</ph> is a <ph id=\"ph3\">&lt;xref:System.Numerics.Quaternion&gt;</ph> object and the corresponding components of each matrix are equal.","source":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Quaternion> object and the corresponding components of each matrix are equal."}],"pos":[24523,24678],"yaml":true,"extradata":"MT"},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[24818,24867],"yaml":true},{"content":"`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the current instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph3\">`false```. If &lt;code&gt;obj&lt;/code&gt; is `</ph>null<ph id=\"ph4\">`, the method returns `</ph>false`.","source":"`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`."}],"pos":[24925,25071],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[26156,26197],"yaml":true},{"content":"The hash code.","nodes":[{"pos":[0,14],"content":"The hash code.","nodes":[{"content":"The hash code.","pos":[0,14]}]}],"pos":[26331,26346],"yaml":true},{"content":"Gets a quaternion that represents no rotation.","nodes":[{"pos":[0,46],"content":"Gets a quaternion that represents no rotation.","nodes":[{"content":"Gets a quaternion that represents no rotation.","pos":[0,46]}]}],"pos":[27414,27461],"yaml":true},{"content":"A quaternion whose values are <code>(0, 0, 0, 1)</code>.","nodes":[{"pos":[0,56],"content":"A quaternion whose values are <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(0, 0, 0, 1)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A quaternion whose values are <code>(0, 0, 0, 1)</code>."}],"pos":[27613,27670],"yaml":true},{"content":"Returns the inverse of a quaternion.","nodes":[{"pos":[0,36],"content":"Returns the inverse of a quaternion.","nodes":[{"content":"Returns the inverse of a quaternion.","pos":[0,36]}]}],"pos":[28847,28884],"yaml":true},{"content":"The quaternion.","nodes":[{"pos":[0,15],"content":"The quaternion.","nodes":[{"content":"The quaternion.","pos":[0,15]}]}],"pos":[29082,29098],"yaml":true},{"content":"The inverted quaternion.","nodes":[{"pos":[0,24],"content":"The inverted quaternion.","nodes":[{"content":"The inverted quaternion.","pos":[0,24]}]}],"pos":[29168,29193],"yaml":true},{"content":"Gets a value that indicates whether the current instance is the identity quaternion.","nodes":[{"pos":[0,84],"content":"Gets a value that indicates whether the current instance is the identity quaternion.","nodes":[{"content":"Gets a value that indicates whether the current instance is the identity quaternion.","pos":[0,84]}]}],"pos":[30269,30354],"yaml":true},{"content":"`true` if the current instance is the identity quaternion; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is the identity quaternion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is the identity quaternion; otherwise, `false`."}],"pos":[30467,30548],"yaml":true},{"content":"Calculates the length of the quaternion.","nodes":[{"pos":[0,40],"content":"Calculates the length of the quaternion.","nodes":[{"content":"Calculates the length of the quaternion.","pos":[0,40]}]}],"pos":[31607,31648],"yaml":true},{"content":"The computed length of the quaternion.","nodes":[{"pos":[0,38],"content":"The computed length of the quaternion.","nodes":[{"content":"The computed length of the quaternion.","pos":[0,38]}]}],"pos":[31771,31810],"yaml":true},{"content":"Calculates the squared length of the quaternion.","nodes":[{"pos":[0,48],"content":"Calculates the squared length of the quaternion.","nodes":[{"content":"Calculates the squared length of the quaternion.","pos":[0,48]}]}],"pos":[32907,32956],"yaml":true},{"content":"The length squared of the quaternion.","nodes":[{"pos":[0,37],"content":"The length squared of the quaternion.","nodes":[{"content":"The length squared of the quaternion.","pos":[0,37]}]}],"pos":[33086,33124],"yaml":true},{"content":"Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.","nodes":[{"pos":[0,127],"content":"Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.","nodes":[{"content":"Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.","pos":[0,127]}]}],"pos":[34471,34599],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[34860,34882],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[34962,34985],"yaml":true},{"content":"The relative weight of <code>quaternion2</code> in the interpolation.","nodes":[{"pos":[0,69],"content":"The relative weight of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">quaternion2</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the interpolation.","source":"The relative weight of <code>quaternion2</code> in the interpolation."}],"pos":[35047,35117],"yaml":true},{"content":"The interpolated quaternion.","nodes":[{"pos":[0,28],"content":"The interpolated quaternion.","nodes":[{"content":"The interpolated quaternion.","pos":[0,28]}]}],"pos":[35187,35216],"yaml":true},{"content":"Returns the quaternion that results from multiplying two quaternions together.","nodes":[{"pos":[0,78],"content":"Returns the quaternion that results from multiplying two quaternions together.","nodes":[{"content":"Returns the quaternion that results from multiplying two quaternions together.","pos":[0,78]}]}],"pos":[36512,36591],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[36827,36849],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[36924,36947],"yaml":true},{"content":"The product quaternion.","nodes":[{"pos":[0,23],"content":"The product quaternion.","nodes":[{"content":"The product quaternion.","pos":[0,23]}]}],"pos":[37017,37041],"yaml":true},{"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","nodes":[{"pos":[0,113],"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","nodes":[{"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","pos":[0,113]}]}],"pos":[38290,38404],"yaml":true},{"content":"The source quaternion.","nodes":[{"pos":[0,22],"content":"The source quaternion.","nodes":[{"content":"The source quaternion.","pos":[0,22]}]}],"pos":[38619,38642],"yaml":true},{"content":"The scalar value.","nodes":[{"pos":[0,17],"content":"The scalar value.","nodes":[{"content":"The scalar value.","pos":[0,17]}]}],"pos":[38704,38722],"yaml":true},{"content":"The scaled quaternion.","nodes":[{"pos":[0,22],"content":"The scaled quaternion.","nodes":[{"content":"The scaled quaternion.","pos":[0,22]}]}],"pos":[38792,38815],"yaml":true},{"content":"Reverses the sign of each component of the quaternion.","nodes":[{"pos":[0,54],"content":"Reverses the sign of each component of the quaternion.","nodes":[{"content":"Reverses the sign of each component of the quaternion.","pos":[0,54]}]}],"pos":[39986,40041],"yaml":true},{"content":"The quaternion to negate.","nodes":[{"pos":[0,25],"content":"The quaternion to negate.","nodes":[{"content":"The quaternion to negate.","pos":[0,25]}]}],"pos":[40238,40264],"yaml":true},{"content":"The negated quaternion.","nodes":[{"pos":[0,23],"content":"The negated quaternion.","nodes":[{"content":"The negated quaternion.","pos":[0,23]}]}],"pos":[40334,40358],"yaml":true},{"content":"Divides each component of a specified <xref href=\"System.Numerics.Quaternion\"></xref> by its length.","nodes":[{"pos":[0,100],"content":"Divides each component of a specified <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Quaternion\"&gt;&lt;/xref&gt;</ph> by its length.","source":"Divides each component of a specified <xref href=\"System.Numerics.Quaternion\"></xref> by its length."}],"pos":[41545,41646],"yaml":true},{"content":"The quaternion to normalize.","nodes":[{"pos":[0,28],"content":"The quaternion to normalize.","nodes":[{"content":"The quaternion to normalize.","pos":[0,28]}]}],"pos":[41846,41875],"yaml":true},{"content":"The normalized quaternion.","nodes":[{"pos":[0,26],"content":"The normalized quaternion.","nodes":[{"content":"The normalized quaternion.","pos":[0,26]}]}],"pos":[41945,41972],"yaml":true},{"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","nodes":[{"pos":[0,90],"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","nodes":[{"content":"Adds each element in one quaternion with its corresponding element in a second quaternion.","pos":[0,90]}]}],"pos":[43293,43384],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_Addition%2A> method defines the operaton of the addition operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,152],"content":"The <xref:System.Numerics.Quaternion.op_Addition%2A> method defines the operaton of the addition operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Addition%2A&gt;</ph> method defines the operaton of the addition operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,152],"source":"The <xref:System.Numerics.Quaternion.op_Addition%2A> method defines the operaton of the addition operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[43395,43548],"yaml":true,"extradata":"MT"},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[43787,43809],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[43884,43907],"yaml":true},{"content":"The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>.","nodes":[{"pos":[0,94],"content":"The quaternion that contains the summed values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>."}],"pos":[43977,44072],"yaml":true},{"content":"Divides one quaternion by a second quaternion.","nodes":[{"pos":[0,46],"content":"Divides one quaternion by a second quaternion.","nodes":[{"content":"Divides one quaternion by a second quaternion.","pos":[0,46]}]}],"pos":[45395,45442],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_Division%2A> method defines the division operation for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,137],"content":"The <xref:System.Numerics.Quaternion.op_Division%2A> method defines the division operation for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Division%2A&gt;</ph> method defines the division operation for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,137],"source":"The <xref:System.Numerics.Quaternion.op_Division%2A> method defines the division operation for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[45453,45591],"yaml":true,"extradata":"MT"},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[45830,45844],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[45919,45932],"yaml":true},{"content":"The quaternion that results from dividing <code>value1</code> by <code>value2</code>.","nodes":[{"pos":[0,85],"content":"The quaternion that results from dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion that results from dividing <code>value1</code> by <code>value2</code>."}],"pos":[46002,46088],"yaml":true},{"content":"Returns a value that indicates whether two quaternions are equal.","nodes":[{"pos":[0,65],"content":"Returns a value that indicates whether two quaternions are equal.","nodes":[{"content":"Returns a value that indicates whether two quaternions are equal.","pos":[0,65]}]}],"pos":[47411,47477],"yaml":true},{"content":"Two quaternions are equal if each of their corresponding components is equal.  \n  \n The <xref:System.Numerics.Quaternion.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,77],"content":"Two quaternions are equal if each of their corresponding components is equal.","nodes":[{"content":"Two quaternions are equal if each of their corresponding components is equal.","pos":[0,77]}]},{"pos":[84,237],"content":"The <xref:System.Numerics.Quaternion.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,153],"source":"The <xref:System.Numerics.Quaternion.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[47488,47730],"yaml":true,"extradata":"MT"},{"content":"The first quaternion to compare.","nodes":[{"pos":[0,32],"content":"The first quaternion to compare.","nodes":[{"content":"The first quaternion to compare.","pos":[0,32]}]}],"pos":[47947,47980],"yaml":true},{"content":"The second quaternion to compare.","nodes":[{"pos":[0,33],"content":"The second quaternion to compare.","nodes":[{"content":"The second quaternion to compare.","pos":[0,33]}]}],"pos":[48055,48089],"yaml":true},{"content":"`true` if the two quaternions are equal; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the two quaternions are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two quaternions are equal; otherwise, `false`."}],"pos":[48147,48210],"yaml":true},{"content":"Returns a value that indicates whether two quaternions are not equal.","nodes":[{"pos":[0,69],"content":"Returns a value that indicates whether two quaternions are not equal.","nodes":[{"content":"Returns a value that indicates whether two quaternions are not equal.","pos":[0,69]}]}],"pos":[49545,49615],"yaml":true},{"content":"The first quaternion to compare.","nodes":[{"pos":[0,32],"content":"The first quaternion to compare.","nodes":[{"content":"The first quaternion to compare.","pos":[0,32]}]}],"pos":[49834,49867],"yaml":true},{"content":"The second quaternion to compare.","nodes":[{"pos":[0,33],"content":"The second quaternion to compare.","nodes":[{"content":"The second quaternion to compare.","pos":[0,33]}]}],"pos":[49942,49976],"yaml":true},{"content":"`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`."}],"pos":[50034,50125],"yaml":true},{"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","nodes":[{"pos":[0,113],"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","nodes":[{"content":"Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.","pos":[0,113]}]}],"pos":[51399,51513],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,159],"content":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,159],"source":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[51524,51684],"yaml":true,"extradata":"MT"},{"content":"The source quaternion.","nodes":[{"pos":[0,22],"content":"The source quaternion.","nodes":[{"content":"The source quaternion.","pos":[0,22]}]}],"pos":[51902,51925],"yaml":true},{"content":"The scalar value.","nodes":[{"pos":[0,17],"content":"The scalar value.","nodes":[{"content":"The scalar value.","pos":[0,17]}]}],"pos":[51987,52005],"yaml":true},{"content":"The scaled quaternion.","nodes":[{"pos":[0,22],"content":"The scaled quaternion.","nodes":[{"content":"The scaled quaternion.","pos":[0,22]}]}],"pos":[52075,52098],"yaml":true},{"content":"Returns the quaternion that results from multiplying two quaternions together.","nodes":[{"pos":[0,78],"content":"Returns the quaternion that results from multiplying two quaternions together.","nodes":[{"content":"Returns the quaternion that results from multiplying two quaternions together.","pos":[0,78]}]}],"pos":[53421,53500],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,159],"content":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,159],"source":"The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[53511,53671],"yaml":true,"extradata":"MT"},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[53910,53932],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[54007,54030],"yaml":true},{"content":"The product quaternion.","nodes":[{"pos":[0,23],"content":"The product quaternion.","nodes":[{"content":"The product quaternion.","pos":[0,23]}]}],"pos":[54100,54124],"yaml":true},{"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","nodes":[{"pos":[0,99],"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","nodes":[{"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","pos":[0,99]}]}],"pos":[55465,55565],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,159],"content":"The <xref:System.Numerics.Quaternion.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,159],"source":"The <xref:System.Numerics.Quaternion.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[55576,55736],"yaml":true,"extradata":"MT"},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[55978,56000],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[56075,56098],"yaml":true},{"content":"The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.","nodes":[{"pos":[0,156],"content":"The quaternion containing the values that result from subtracting each element in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from its corresponding element in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>."}],"pos":[56168,56325],"yaml":true},{"content":"Reverses the sign of each component of the quaternion.","nodes":[{"pos":[0,54],"content":"Reverses the sign of each component of the quaternion.","nodes":[{"content":"Reverses the sign of each component of the quaternion.","pos":[0,54]}]}],"pos":[57564,57619],"yaml":true},{"content":"The <xref:System.Numerics.Quaternion.op_UnaryNegation%2A> method defines the operation of the unary negation operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"pos":[0,164],"content":"The <xref:System.Numerics.Quaternion.op_UnaryNegation%2A> method defines the operation of the unary negation operator for <xref:System.Numerics.Quaternion> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Quaternion.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Quaternion&gt;</ph> objects.","pos":[0,164],"source":"The <xref:System.Numerics.Quaternion.op_UnaryNegation%2A> method defines the operation of the unary negation operator for <xref:System.Numerics.Quaternion> objects."}]}],"pos":[57630,57795],"yaml":true,"extradata":"MT"},{"content":"The quaternion to negate.","nodes":[{"pos":[0,25],"content":"The quaternion to negate.","nodes":[{"content":"The quaternion to negate.","pos":[0,25]}]}],"pos":[58002,58028],"yaml":true},{"content":"The negated quaternion.","nodes":[{"pos":[0,23],"content":"The negated quaternion.","nodes":[{"content":"The negated quaternion.","pos":[0,23]}]}],"pos":[58098,58122],"yaml":true},{"content":"Interpolates between two quaternions, using spherical linear interpolation.","nodes":[{"pos":[0,75],"content":"Interpolates between two quaternions, using spherical linear interpolation.","nodes":[{"content":"Interpolates between two quaternions, using spherical linear interpolation.","pos":[0,75]}]}],"pos":[59478,59554],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[59816,59838],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[59918,59941],"yaml":true},{"content":"The relative weight of the second quaternion in the interpolation.","nodes":[{"pos":[0,66],"content":"The relative weight of the second quaternion in the interpolation.","nodes":[{"content":"The relative weight of the second quaternion in the interpolation.","pos":[0,66]}]}],"pos":[60003,60070],"yaml":true},{"content":"The interpolated quaternion.","nodes":[{"pos":[0,28],"content":"The interpolated quaternion.","nodes":[{"content":"The interpolated quaternion.","pos":[0,28]}]}],"pos":[60140,60169],"yaml":true},{"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","nodes":[{"pos":[0,99],"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","nodes":[{"content":"Subtracts each element in a second quaternion from its corresponding element in a first quaternion.","pos":[0,99]}]}],"pos":[61466,61566],"yaml":true},{"content":"The first quaternion.","nodes":[{"pos":[0,21],"content":"The first quaternion.","nodes":[{"content":"The first quaternion.","pos":[0,21]}]}],"pos":[61802,61824],"yaml":true},{"content":"The second quaternion.","nodes":[{"pos":[0,22],"content":"The second quaternion.","nodes":[{"content":"The second quaternion.","pos":[0,22]}]}],"pos":[61899,61922],"yaml":true},{"content":"The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.","nodes":[{"pos":[0,156],"content":"The quaternion containing the values that result from subtracting each element in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from its corresponding element in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>."}],"pos":[61992,62149],"yaml":true},{"content":"Returns a string that represents this quaternion.","nodes":[{"pos":[0,49],"content":"Returns a string that represents this quaternion.","nodes":[{"content":"Returns a string that represents this quaternion.","pos":[0,49]}]}],"pos":[63218,63268],"yaml":true},{"content":"The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as `{X:1.1 Y:2.2 Z:3.3 W:4.4}`.","nodes":[{"pos":[0,205],"content":"The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as `{X:1.1 Y:2.2 Z:3.3 W:4.4}`.","nodes":[{"content":"The numeric values in the returned string are formatted by using the conventions of the current culture.","pos":[0,104]},{"content":"For example, for the en-US culture, the returned string might appear as <ph id=\"ph1\">`{X:1.1 Y:2.2 Z:3.3 W:4.4}`</ph>.","pos":[105,205],"source":" For example, for the en-US culture, the returned string might appear as `{X:1.1 Y:2.2 Z:3.3 W:4.4}`."}]}],"pos":[63279,63485],"yaml":true,"extradata":"MT"},{"content":"The string representation of this quaternion.","nodes":[{"pos":[0,45],"content":"The string representation of this quaternion.","nodes":[{"content":"The string representation of this quaternion.","pos":[0,45]}]}],"pos":[63620,63666],"yaml":true},{"content":"The rotation component of the quaternion.","nodes":[{"pos":[0,41],"content":"The rotation component of the quaternion.","nodes":[{"content":"The rotation component of the quaternion.","pos":[0,41]}]}],"pos":[64686,64728],"yaml":true},{"content":"The X value of the vector component of the quaternion.","nodes":[{"pos":[0,54],"content":"The X value of the vector component of the quaternion.","nodes":[{"content":"The X value of the vector component of the quaternion.","pos":[0,54]}]}],"pos":[65798,65853],"yaml":true},{"content":"The Y value of the vector component of the quaternion.","nodes":[{"pos":[0,54],"content":"The Y value of the vector component of the quaternion.","nodes":[{"content":"The Y value of the vector component of the quaternion.","pos":[0,54]}]}],"pos":[66923,66978],"yaml":true},{"content":"The Z value of the vector component of the quaternion.","nodes":[{"pos":[0,54],"content":"The Z value of the vector component of the quaternion.","nodes":[{"content":"The Z value of the vector component of the quaternion.","pos":[0,54]}]}],"pos":[68048,68103],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Numerics.Quaternion\n  commentId: T:System.Numerics.Quaternion\n  id: Quaternion\n  children:\n  - System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)\n  - System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)\n  - System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)\n  - System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)\n  - System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Equals(System.Object)\n  - System.Numerics.Quaternion.GetHashCode\n  - System.Numerics.Quaternion.Identity\n  - System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.IsIdentity\n  - System.Numerics.Quaternion.Length\n  - System.Numerics.Quaternion.LengthSquared\n  - System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)\n  - System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)\n  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  - System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  - System.Numerics.Quaternion.ToString\n  - System.Numerics.Quaternion.W\n  - System.Numerics.Quaternion.X\n  - System.Numerics.Quaternion.Y\n  - System.Numerics.Quaternion.Z\n  langs:\n  - csharp\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Numerics.Quaternion\n  type: Struct\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Represents a vector that is used to encode three-dimensional physical rotations.\n  remarks: \"The <xref:System.Numerics.Quaternion> structure is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where:  \\n  \\n```  \\nw = cos(theta/2)  \\n```\"\n  syntax:\n    content: 'public struct Quaternion : IEquatable<System.Numerics.Quaternion>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Numerics.Quaternion}\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)\n  commentId: M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)\n  id: '#ctor(System.Numerics.Vector3,System.Single)'\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Quaternion(Vector3, Single)\n  nameWithType: Quaternion.Quaternion(Vector3, Single)\n  fullName: Quaternion.Quaternion(Vector3, Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a quaternion from the specified vector and rotation parts.\n  syntax:\n    content: public Quaternion (System.Numerics.Vector3 vectorPart, float scalarPart);\n    parameters:\n    - id: vectorPart\n      type: System.Numerics.Vector3\n      description: The vector part of the quaternion.\n    - id: scalarPart\n      type: System.Single\n      description: The rotation part of the quaternion.\n  overload: System.Numerics.Quaternion.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Quaternion(Single, Single, Single, Single)\n  nameWithType: Quaternion.Quaternion(Single, Single, Single, Single)\n  fullName: Quaternion.Quaternion(Single, Single, Single, Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Constructs a quaternion from the specified components.\n  syntax:\n    content: public Quaternion (float x, float y, float z, float w);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The value to assign to the X component of the quaternion.\n    - id: y\n      type: System.Single\n      description: The value to assign to the Y component of the quaternion.\n    - id: z\n      type: System.Single\n      description: The value to assign to the Z component of the quaternion.\n    - id: w\n      type: System.Single\n      description: The value to assign to the W component of the quaternion.\n  overload: System.Numerics.Quaternion.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Add(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Add(Quaternion, Quaternion)\n  nameWithType: Quaternion.Add(Quaternion, Quaternion)\n  fullName: Quaternion.Add(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Adds each element in one quaternion with its corresponding element in a second quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Add (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>.\n  overload: System.Numerics.Quaternion.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Concatenate(Quaternion, Quaternion)\n  nameWithType: Quaternion.Concatenate(Quaternion, Quaternion)\n  fullName: Quaternion.Concatenate(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Concatenates two quaternions.\n  syntax:\n    content: public static System.Numerics.Quaternion Concatenate (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion rotation in the series.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion rotation in the series.\n    return:\n      type: System.Numerics.Quaternion\n      description: A new quaternion representing the concatenation of the <code>value1</code> rotation followed by the <code>value2</code> rotation.\n  overload: System.Numerics.Quaternion.Concatenate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)\n  id: Conjugate(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Conjugate(Quaternion)\n  nameWithType: Quaternion.Conjugate(Quaternion)\n  fullName: Quaternion.Conjugate(Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the conjugate of a specified quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Conjugate (System.Numerics.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Numerics.Quaternion\n      description: The quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: A new quaternion that is the conjugate of `value`.\n  overload: System.Numerics.Quaternion.Conjugate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)\n  commentId: M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)\n  id: CreateFromAxisAngle(System.Numerics.Vector3,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: CreateFromAxisAngle(Vector3, Single)\n  nameWithType: Quaternion.CreateFromAxisAngle(Vector3, Single)\n  fullName: Quaternion.CreateFromAxisAngle(Vector3, Single)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a quaternion from a vector and an angle to rotate about the vector.\n  syntax:\n    content: public static System.Numerics.Quaternion CreateFromAxisAngle (System.Numerics.Vector3 axis, float angle);\n    parameters:\n    - id: axis\n      type: System.Numerics.Vector3\n      description: The vector to rotate around.\n    - id: angle\n      type: System.Single\n      description: The angle, in radians, to rotate around the vector.\n    return:\n      type: System.Numerics.Quaternion\n      description: The newly created quaternion.\n  overload: System.Numerics.Quaternion.CreateFromAxisAngle*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)\n  commentId: M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)\n  id: CreateFromRotationMatrix(System.Numerics.Matrix4x4)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: CreateFromRotationMatrix(Matrix4x4)\n  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)\n  fullName: Quaternion.CreateFromRotationMatrix(Matrix4x4)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a quaternion from the specified rotation matrix.\n  syntax:\n    content: public static System.Numerics.Quaternion CreateFromRotationMatrix (System.Numerics.Matrix4x4 matrix);\n    parameters:\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: The rotation matrix.\n    return:\n      type: System.Numerics.Quaternion\n      description: The newly created quaternion.\n  overload: System.Numerics.Quaternion.CreateFromRotationMatrix*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)\n  commentId: M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)\n  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: CreateFromYawPitchRoll(Single, Single, Single)\n  nameWithType: Quaternion.CreateFromYawPitchRoll(Single, Single, Single)\n  fullName: Quaternion.CreateFromYawPitchRoll(Single, Single, Single)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a new quaternion from the given yaw, pitch, and roll.\n  syntax:\n    content: public static System.Numerics.Quaternion CreateFromYawPitchRoll (float yaw, float pitch, float roll);\n    parameters:\n    - id: yaw\n      type: System.Single\n      description: The yaw angle, in radians, around the Y axis.\n    - id: pitch\n      type: System.Single\n      description: The pitch angle, in radians, around the X axis.\n    - id: roll\n      type: System.Single\n      description: The roll angle, in radians, around the Z axis.\n    return:\n      type: System.Numerics.Quaternion\n      description: The resulting quaternion.\n  overload: System.Numerics.Quaternion.CreateFromYawPitchRoll*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Divide(Quaternion, Quaternion)\n  nameWithType: Quaternion.Divide(Quaternion, Quaternion)\n  fullName: Quaternion.Divide(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Divides one quaternion by a second quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Divide (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The dividend.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The divisor.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion that results from dividing <code>value1</code> by <code>value2</code>.\n  overload: System.Numerics.Quaternion.Divide*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Dot(Quaternion, Quaternion)\n  nameWithType: Quaternion.Dot(Quaternion, Quaternion)\n  fullName: Quaternion.Dot(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Calculates the dot product of two quaternions.\n  syntax:\n    content: public static float Dot (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2);\n    parameters:\n    - id: quaternion1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: quaternion2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Single\n      description: The dot product.\n  overload: System.Numerics.Quaternion.Dot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)\n  id: Equals(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Equals(Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion)\n  fullName: Quaternion.Equals(Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and another quaternion are equal.\n  remarks: Two quaternions are equal if each of their corresponding components is equal.\n  syntax:\n    content: public bool Equals (System.Numerics.Quaternion other);\n    parameters:\n    - id: other\n      type: System.Numerics.Quaternion\n      description: The other quaternion.\n    return:\n      type: System.Boolean\n      description: '`true` if the two quaternions are equal; otherwise, `false`.'\n  overload: System.Numerics.Quaternion.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Equals(System.Object)\n  commentId: M:System.Numerics.Quaternion.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Quaternion.Equals(Object)\n  fullName: Quaternion.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and a specified object are equal.\n  remarks: The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Quaternion> object and the corresponding components of each matrix are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`.'\n  overload: System.Numerics.Quaternion.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.GetHashCode\n  commentId: M:System.Numerics.Quaternion.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Quaternion.GetHashCode()\n  fullName: Quaternion.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code.\n  overload: System.Numerics.Quaternion.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Identity\n  commentId: P:System.Numerics.Quaternion.Identity\n  id: Identity\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: Quaternion.Identity\n  fullName: Quaternion.Identity\n  type: Property\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets a quaternion that represents no rotation.\n  syntax:\n    content: public static System.Numerics.Quaternion Identity { get; }\n    return:\n      type: System.Numerics.Quaternion\n      description: A quaternion whose values are <code>(0, 0, 0, 1)</code>.\n  overload: System.Numerics.Quaternion.Identity*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)\n  id: Inverse(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Inverse(Quaternion)\n  nameWithType: Quaternion.Inverse(Quaternion)\n  fullName: Quaternion.Inverse(Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the inverse of a quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Inverse (System.Numerics.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Numerics.Quaternion\n      description: The quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The inverted quaternion.\n  overload: System.Numerics.Quaternion.Inverse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.IsIdentity\n  commentId: P:System.Numerics.Quaternion.IsIdentity\n  id: IsIdentity\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n  fullName: Quaternion.IsIdentity\n  type: Property\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets a value that indicates whether the current instance is the identity quaternion.\n  syntax:\n    content: public bool IsIdentity { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is the identity quaternion; otherwise, `false`.'\n  overload: System.Numerics.Quaternion.IsIdentity*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Length\n  commentId: M:System.Numerics.Quaternion.Length\n  id: Length\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Length()\n  nameWithType: Quaternion.Length()\n  fullName: Quaternion.Length()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Calculates the length of the quaternion.\n  syntax:\n    content: public float Length ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The computed length of the quaternion.\n  overload: System.Numerics.Quaternion.Length*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.LengthSquared\n  commentId: M:System.Numerics.Quaternion.LengthSquared\n  id: LengthSquared\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: LengthSquared()\n  nameWithType: Quaternion.LengthSquared()\n  fullName: Quaternion.LengthSquared()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Calculates the squared length of the quaternion.\n  syntax:\n    content: public float LengthSquared ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The length squared of the quaternion.\n  overload: System.Numerics.Quaternion.LengthSquared*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  commentId: M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  id: Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Lerp(Quaternion, Quaternion, Single)\n  nameWithType: Quaternion.Lerp(Quaternion, Quaternion, Single)\n  fullName: Quaternion.Lerp(Quaternion, Quaternion, Single)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Lerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);\n    parameters:\n    - id: quaternion1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: quaternion2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    - id: amount\n      type: System.Single\n      description: The relative weight of <code>quaternion2</code> in the interpolation.\n    return:\n      type: System.Numerics.Quaternion\n      description: The interpolated quaternion.\n  overload: System.Numerics.Quaternion.Lerp*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Multiply(Quaternion, Quaternion)\n  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)\n  fullName: Quaternion.Multiply(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the quaternion that results from multiplying two quaternions together.\n  syntax:\n    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The product quaternion.\n  overload: System.Numerics.Quaternion.Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)\n  commentId: M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)\n  id: Multiply(System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Multiply(Quaternion, Single)\n  nameWithType: Quaternion.Multiply(Quaternion, Single)\n  fullName: Quaternion.Multiply(Quaternion, Single)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.\n  syntax:\n    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, float value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The source quaternion.\n    - id: value2\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Quaternion\n      description: The scaled quaternion.\n  overload: System.Numerics.Quaternion.Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)\n  id: Negate(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Negate(Quaternion)\n  nameWithType: Quaternion.Negate(Quaternion)\n  fullName: Quaternion.Negate(Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Reverses the sign of each component of the quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Negate (System.Numerics.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Numerics.Quaternion\n      description: The quaternion to negate.\n    return:\n      type: System.Numerics.Quaternion\n      description: The negated quaternion.\n  overload: System.Numerics.Quaternion.Negate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)\n  id: Normalize(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Normalize(Quaternion)\n  nameWithType: Quaternion.Normalize(Quaternion)\n  fullName: Quaternion.Normalize(Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Divides each component of a specified <xref href=\"System.Numerics.Quaternion\"></xref> by its length.\n  syntax:\n    content: public static System.Numerics.Quaternion Normalize (System.Numerics.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Numerics.Quaternion\n      description: The quaternion to normalize.\n    return:\n      type: System.Numerics.Quaternion\n      description: The normalized quaternion.\n  overload: System.Numerics.Quaternion.Normalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Addition(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Addition(Quaternion, Quaternion)\n  fullName: Quaternion.op_Addition(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Adds each element in one quaternion with its corresponding element in a second quaternion.\n  remarks: The <xref:System.Numerics.Quaternion.op_Addition%2A> method defines the operaton of the addition operator for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_Addition (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion that contains the summed values of <code>value1</code> and <code>value2</code>.\n  overload: System.Numerics.Quaternion.op_Addition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Division(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Division(Quaternion, Quaternion)\n  fullName: Quaternion.op_Division(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Divides one quaternion by a second quaternion.\n  remarks: The <xref:System.Numerics.Quaternion.op_Division%2A> method defines the division operation for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_Division (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The dividend.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The divisor.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion that results from dividing <code>value1</code> by <code>value2</code>.\n  overload: System.Numerics.Quaternion.op_Division*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Equality(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Equality(Quaternion, Quaternion)\n  fullName: Quaternion.op_Equality(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two quaternions are equal.\n  remarks: \"Two quaternions are equal if each of their corresponding components is equal.  \\n  \\n The <xref:System.Numerics.Quaternion.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Quaternion> objects.\"\n  syntax:\n    content: public static bool op_Equality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion to compare.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two quaternions are equal; otherwise, `false`.'\n  overload: System.Numerics.Quaternion.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Inequality(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Inequality(Quaternion, Quaternion)\n  fullName: Quaternion.op_Inequality(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two quaternions are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion to compare.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`.'\n  overload: System.Numerics.Quaternion.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)\n  commentId: M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)\n  id: op_Multiply(System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Multiply(Quaternion, Single)\n  nameWithType: Quaternion.op_Multiply(Quaternion, Single)\n  fullName: Quaternion.op_Multiply(Quaternion, Single)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.\n  remarks: The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, float value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The source quaternion.\n    - id: value2\n      type: System.Single\n      description: The scalar value.\n    return:\n      type: System.Numerics.Quaternion\n      description: The scaled quaternion.\n  overload: System.Numerics.Quaternion.op_Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Multiply(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Multiply(Quaternion, Quaternion)\n  fullName: Quaternion.op_Multiply(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the quaternion that results from multiplying two quaternions together.\n  remarks: The <xref:System.Numerics.Quaternion.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The product quaternion.\n  overload: System.Numerics.Quaternion.op_Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_Subtraction(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Subtraction(Quaternion, Quaternion)\n  fullName: Quaternion.op_Subtraction(Quaternion, Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Subtracts each element in a second quaternion from its corresponding element in a first quaternion.\n  remarks: The <xref:System.Numerics.Quaternion.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_Subtraction (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.\n  overload: System.Numerics.Quaternion.op_Subtraction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)\n  id: op_UnaryNegation(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: op_UnaryNegation(Quaternion)\n  nameWithType: Quaternion.op_UnaryNegation(Quaternion)\n  fullName: Quaternion.op_UnaryNegation(Quaternion)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Reverses the sign of each component of the quaternion.\n  remarks: The <xref:System.Numerics.Quaternion.op_UnaryNegation%2A> method defines the operation of the unary negation operator for <xref:System.Numerics.Quaternion> objects.\n  syntax:\n    content: public static System.Numerics.Quaternion op_UnaryNegation (System.Numerics.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Numerics.Quaternion\n      description: The quaternion to negate.\n    return:\n      type: System.Numerics.Quaternion\n      description: The negated quaternion.\n  overload: System.Numerics.Quaternion.op_UnaryNegation*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  commentId: M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  id: Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Slerp(Quaternion, Quaternion, Single)\n  nameWithType: Quaternion.Slerp(Quaternion, Quaternion, Single)\n  fullName: Quaternion.Slerp(Quaternion, Quaternion, Single)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Interpolates between two quaternions, using spherical linear interpolation.\n  syntax:\n    content: public static System.Numerics.Quaternion Slerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);\n    parameters:\n    - id: quaternion1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: quaternion2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    - id: amount\n      type: System.Single\n      description: The relative weight of the second quaternion in the interpolation.\n    return:\n      type: System.Numerics.Quaternion\n      description: The interpolated quaternion.\n  overload: System.Numerics.Quaternion.Slerp*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  id: Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Subtract(Quaternion, Quaternion)\n  nameWithType: Quaternion.Subtract(Quaternion, Quaternion)\n  fullName: Quaternion.Subtract(Quaternion, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Subtracts each element in a second quaternion from its corresponding element in a first quaternion.\n  syntax:\n    content: public static System.Numerics.Quaternion Subtract (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Quaternion\n      description: The first quaternion.\n    - id: value2\n      type: System.Numerics.Quaternion\n      description: The second quaternion.\n    return:\n      type: System.Numerics.Quaternion\n      description: The quaternion containing the values that result from subtracting each element in <code>value2</code> from its corresponding element in <code>value1</code>.\n  overload: System.Numerics.Quaternion.Subtract*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.ToString\n  commentId: M:System.Numerics.Quaternion.ToString\n  id: ToString\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Quaternion.ToString()\n  fullName: Quaternion.ToString()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a string that represents this quaternion.\n  remarks: The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as `{X:1.1 Y:2.2 Z:3.3 W:4.4}`.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this quaternion.\n  overload: System.Numerics.Quaternion.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.W\n  commentId: F:System.Numerics.Quaternion.W\n  id: W\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: W\n  nameWithType: Quaternion.W\n  fullName: Quaternion.W\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The rotation component of the quaternion.\n  syntax:\n    content: public float W;\n    return:\n      type: System.Single\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.X\n  commentId: F:System.Numerics.Quaternion.X\n  id: X\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: X\n  nameWithType: Quaternion.X\n  fullName: Quaternion.X\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The X value of the vector component of the quaternion.\n  syntax:\n    content: public float X;\n    return:\n      type: System.Single\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Y\n  commentId: F:System.Numerics.Quaternion.Y\n  id: Y\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Quaternion.Y\n  fullName: Quaternion.Y\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The Y value of the vector component of the quaternion.\n  syntax:\n    content: public float Y;\n    return:\n      type: System.Single\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Quaternion.Z\n  commentId: F:System.Numerics.Quaternion.Z\n  id: Z\n  parent: System.Numerics.Quaternion\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Quaternion.Z\n  fullName: Quaternion.Z\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The Z value of the vector component of the quaternion.\n  syntax:\n    content: public float Z;\n    return:\n      type: System.Single\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Quaternion(Vector3, Single)\n  nameWithType: Quaternion.Quaternion(Vector3, Single)\n  fullName: Quaternion.Quaternion(Vector3, Single)\n- uid: System.Numerics.Vector3\n  parent: System.Numerics\n  isExternal: false\n  name: Vector3\n  nameWithType: Vector3\n  fullName: System.Numerics.Vector3\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Quaternion(Single, Single, Single, Single)\n  nameWithType: Quaternion.Quaternion(Single, Single, Single, Single)\n  fullName: Quaternion.Quaternion(Single, Single, Single, Single)\n- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Add(Quaternion, Quaternion)\n  nameWithType: Quaternion.Add(Quaternion, Quaternion)\n  fullName: Quaternion.Add(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion\n  parent: System.Numerics\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Numerics.Quaternion\n- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Concatenate(Quaternion, Quaternion)\n  nameWithType: Quaternion.Concatenate(Quaternion, Quaternion)\n  fullName: Quaternion.Concatenate(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Conjugate(Quaternion)\n  nameWithType: Quaternion.Conjugate(Quaternion)\n  fullName: Quaternion.Conjugate(Quaternion)\n- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromAxisAngle(Vector3, Single)\n  nameWithType: Quaternion.CreateFromAxisAngle(Vector3, Single)\n  fullName: Quaternion.CreateFromAxisAngle(Vector3, Single)\n- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromRotationMatrix(Matrix4x4)\n  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)\n  fullName: Quaternion.CreateFromRotationMatrix(Matrix4x4)\n- uid: System.Numerics.Matrix4x4\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix4x4\n  nameWithType: Matrix4x4\n  fullName: System.Numerics.Matrix4x4\n- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromYawPitchRoll(Single, Single, Single)\n  nameWithType: Quaternion.CreateFromYawPitchRoll(Single, Single, Single)\n  fullName: Quaternion.CreateFromYawPitchRoll(Single, Single, Single)\n- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Divide(Quaternion, Quaternion)\n  nameWithType: Quaternion.Divide(Quaternion, Quaternion)\n  fullName: Quaternion.Divide(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Dot(Quaternion, Quaternion)\n  nameWithType: Quaternion.Dot(Quaternion, Quaternion)\n  fullName: Quaternion.Dot(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Equals(Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion)\n  fullName: Quaternion.Equals(Quaternion)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Numerics.Quaternion.Equals(System.Object)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Quaternion.Equals(Object)\n  fullName: Quaternion.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Numerics.Quaternion.GetHashCode\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Quaternion.GetHashCode()\n  fullName: Quaternion.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Numerics.Quaternion.Identity\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Identity\n  nameWithType: Quaternion.Identity\n  fullName: Quaternion.Identity\n- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Inverse(Quaternion)\n  nameWithType: Quaternion.Inverse(Quaternion)\n  fullName: Quaternion.Inverse(Quaternion)\n- uid: System.Numerics.Quaternion.IsIdentity\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n  fullName: Quaternion.IsIdentity\n- uid: System.Numerics.Quaternion.Length\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Length()\n  nameWithType: Quaternion.Length()\n  fullName: Quaternion.Length()\n- uid: System.Numerics.Quaternion.LengthSquared\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: LengthSquared()\n  nameWithType: Quaternion.LengthSquared()\n  fullName: Quaternion.LengthSquared()\n- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Lerp(Quaternion, Quaternion, Single)\n  nameWithType: Quaternion.Lerp(Quaternion, Quaternion, Single)\n  fullName: Quaternion.Lerp(Quaternion, Quaternion, Single)\n- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Multiply(Quaternion, Quaternion)\n  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)\n  fullName: Quaternion.Multiply(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Multiply(Quaternion, Single)\n  nameWithType: Quaternion.Multiply(Quaternion, Single)\n  fullName: Quaternion.Multiply(Quaternion, Single)\n- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Negate(Quaternion)\n  nameWithType: Quaternion.Negate(Quaternion)\n  fullName: Quaternion.Negate(Quaternion)\n- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Normalize(Quaternion)\n  nameWithType: Quaternion.Normalize(Quaternion)\n  fullName: Quaternion.Normalize(Quaternion)\n- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Addition(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Addition(Quaternion, Quaternion)\n  fullName: Quaternion.op_Addition(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Division(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Division(Quaternion, Quaternion)\n  fullName: Quaternion.op_Division(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Equality(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Equality(Quaternion, Quaternion)\n  fullName: Quaternion.op_Equality(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Inequality(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Inequality(Quaternion, Quaternion)\n  fullName: Quaternion.op_Inequality(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Multiply(Quaternion, Single)\n  nameWithType: Quaternion.op_Multiply(Quaternion, Single)\n  fullName: Quaternion.op_Multiply(Quaternion, Single)\n- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Multiply(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Multiply(Quaternion, Quaternion)\n  fullName: Quaternion.op_Multiply(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Subtraction(Quaternion, Quaternion)\n  nameWithType: Quaternion.op_Subtraction(Quaternion, Quaternion)\n  fullName: Quaternion.op_Subtraction(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_UnaryNegation(Quaternion)\n  nameWithType: Quaternion.op_UnaryNegation(Quaternion)\n  fullName: Quaternion.op_UnaryNegation(Quaternion)\n- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Slerp(Quaternion, Quaternion, Single)\n  nameWithType: Quaternion.Slerp(Quaternion, Quaternion, Single)\n  fullName: Quaternion.Slerp(Quaternion, Quaternion, Single)\n- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Subtract(Quaternion, Quaternion)\n  nameWithType: Quaternion.Subtract(Quaternion, Quaternion)\n  fullName: Quaternion.Subtract(Quaternion, Quaternion)\n- uid: System.Numerics.Quaternion.ToString\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: ToString()\n  nameWithType: Quaternion.ToString()\n  fullName: Quaternion.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Numerics.Quaternion.W\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: W\n  nameWithType: Quaternion.W\n  fullName: Quaternion.W\n- uid: System.Numerics.Quaternion.X\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: X\n  nameWithType: Quaternion.X\n  fullName: Quaternion.X\n- uid: System.Numerics.Quaternion.Y\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Y\n  nameWithType: Quaternion.Y\n  fullName: Quaternion.Y\n- uid: System.Numerics.Quaternion.Z\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Z\n  nameWithType: Quaternion.Z\n  fullName: Quaternion.Z\n- uid: System.Numerics.Quaternion.#ctor*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion.Quaternion\n  fullName: Quaternion.Quaternion\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Add*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Add\n  nameWithType: Quaternion.Add\n  fullName: Quaternion.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Concatenate*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Concatenate\n  nameWithType: Quaternion.Concatenate\n  fullName: Quaternion.Concatenate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Conjugate*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Conjugate\n  nameWithType: Quaternion.Conjugate\n  fullName: Quaternion.Conjugate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.CreateFromAxisAngle*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromAxisAngle\n  nameWithType: Quaternion.CreateFromAxisAngle\n  fullName: Quaternion.CreateFromAxisAngle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.CreateFromRotationMatrix*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromRotationMatrix\n  nameWithType: Quaternion.CreateFromRotationMatrix\n  fullName: Quaternion.CreateFromRotationMatrix\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: CreateFromYawPitchRoll\n  nameWithType: Quaternion.CreateFromYawPitchRoll\n  fullName: Quaternion.CreateFromYawPitchRoll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Divide*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Divide\n  nameWithType: Quaternion.Divide\n  fullName: Quaternion.Divide\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Dot*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Dot\n  nameWithType: Quaternion.Dot\n  fullName: Quaternion.Dot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Equals*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Equals\n  nameWithType: Quaternion.Equals\n  fullName: Quaternion.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.GetHashCode*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Quaternion.GetHashCode\n  fullName: Quaternion.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Identity*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Identity\n  nameWithType: Quaternion.Identity\n  fullName: Quaternion.Identity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Inverse*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Inverse\n  nameWithType: Quaternion.Inverse\n  fullName: Quaternion.Inverse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.IsIdentity*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n  fullName: Quaternion.IsIdentity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Length*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Length\n  nameWithType: Quaternion.Length\n  fullName: Quaternion.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.LengthSquared*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: LengthSquared\n  nameWithType: Quaternion.LengthSquared\n  fullName: Quaternion.LengthSquared\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Lerp*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Lerp\n  nameWithType: Quaternion.Lerp\n  fullName: Quaternion.Lerp\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Multiply*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Multiply\n  nameWithType: Quaternion.Multiply\n  fullName: Quaternion.Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Negate*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Negate\n  nameWithType: Quaternion.Negate\n  fullName: Quaternion.Negate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Normalize*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Normalize\n  nameWithType: Quaternion.Normalize\n  fullName: Quaternion.Normalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Addition*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Addition\n  nameWithType: Quaternion.op_Addition\n  fullName: Quaternion.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Division*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Division\n  nameWithType: Quaternion.op_Division\n  fullName: Quaternion.op_Division\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Equality*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Equality\n  nameWithType: Quaternion.op_Equality\n  fullName: Quaternion.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Inequality*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Quaternion.op_Inequality\n  fullName: Quaternion.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Multiply*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Quaternion.op_Multiply\n  fullName: Quaternion.op_Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_Subtraction*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Quaternion.op_Subtraction\n  fullName: Quaternion.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.op_UnaryNegation*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Quaternion.op_UnaryNegation\n  fullName: Quaternion.op_UnaryNegation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Slerp*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Slerp\n  nameWithType: Quaternion.Slerp\n  fullName: Quaternion.Slerp\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.Subtract*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: Subtract\n  nameWithType: Quaternion.Subtract\n  fullName: Quaternion.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.Numerics.Quaternion.ToString*\n  parent: System.Numerics.Quaternion\n  isExternal: false\n  name: ToString\n  nameWithType: Quaternion.ToString\n  fullName: Quaternion.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Quaternion.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Numerics.Quaternion}\n  parent: System\n  isExternal: false\n  name: IEquatable<Quaternion>\n  nameWithType: IEquatable<Quaternion>\n  fullName: System.IEquatable<System.Numerics.Quaternion>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Numerics.Quaternion\n    name: Quaternion\n    nameWithType: Quaternion\n    fullName: System.Numerics.Quaternion\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}