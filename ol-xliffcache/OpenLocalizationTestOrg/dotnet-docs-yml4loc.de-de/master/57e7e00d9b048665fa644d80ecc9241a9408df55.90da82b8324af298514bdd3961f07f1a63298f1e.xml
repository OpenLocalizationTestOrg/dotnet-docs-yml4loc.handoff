{"nodes":[{"content":"Defines methods to support the comparison of objects for equality.","nodes":[{"pos":[0,66],"content":"Defines methods to support the comparison of objects for equality.","nodes":[{"content":"Defines methods to support the comparison of objects for equality.","pos":[0,66]}]}],"pos":[565,632],"yaml":true},{"content":"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface. In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.  \n  \n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.  \n  \n For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>.","nodes":[{"pos":[0,523],"content":"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface. In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.","nodes":[{"content":"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface. In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.","pos":[0,523],"nodes":[{"content":"This interface allows the implementation of customized equality comparison for collections.","pos":[0,91]},{"content":"That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface.","pos":[92,284],"source":" That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface."},{"content":"In the .NET Framework, constructors of the <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> collection types accept this interface.","pos":[285,523],"source":" In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface."}]}]},{"pos":[530,700],"content":"This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.","nodes":[{"content":"This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.","pos":[0,170],"nodes":[{"content":"This interface supports only equality comparisons.","pos":[0,50]},{"content":"Customization of comparisons for sorting and ordering is provided by the <ph id=\"ph1\">&lt;xref:System.Collections.IComparer&gt;</ph> interface.","pos":[51,170],"source":" Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface."}]}]},{"pos":[707,835],"content":"For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>.","nodes":[{"content":"For the generic version of this interface, see <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName&gt;</ph>.","pos":[0,128],"source":"For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>."}]}],"pos":[643,1485],"yaml":true,"extradata":"MT"},{"content":"Determines whether the specified objects are equal.","nodes":[{"pos":[0,51],"content":"Determines whether the specified objects are equal.","nodes":[{"content":"Determines whether the specified objects are equal.","pos":[0,51]}]}],"pos":[3449,3501],"yaml":true},{"content":"Implement this method to provide a customized equality comparison for objects.","nodes":[{"pos":[0,78],"content":"Implement this method to provide a customized equality comparison for objects.","nodes":[{"content":"Implement this method to provide a customized equality comparison for objects.","pos":[0,78]}]}],"pos":[3512,3591],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[4586,4615],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[4672,4702],"yaml":true},{"content":"`true` if the specified objects are equal; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified objects are equal; otherwise, `false`."}],"pos":[4760,4825],"yaml":true},{"content":"<code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph> are of different types and neither one can handle comparisons with the other.","source":"<code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other."}],"pos":[4990,5102],"yaml":true},{"content":"Returns a hash code for the specified object.","nodes":[{"pos":[0,45],"content":"Returns a hash code for the specified object.","nodes":[{"content":"Returns a hash code for the specified object.","pos":[0,45]}]}],"pos":[6678,6724],"yaml":true},{"content":"Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method.","nodes":[{"pos":[0,196],"content":"Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method.","nodes":[{"content":"Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A&gt;</ph> method.","pos":[0,196],"source":"Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method."}]}],"pos":[6735,6932],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> for which a hash code is to be returned.","source":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned."}],"pos":[7848,7928],"yaml":true},{"content":"A hash code for the specified object.","nodes":[{"pos":[0,37],"content":"A hash code for the specified object.","nodes":[{"content":"A hash code for the specified object.","pos":[0,37]}]}],"pos":[7984,8022],"yaml":true},{"content":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.","nodes":[{"pos":[0,80],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a reference type and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`."}],"pos":[8200,8281],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n  id: IEqualityComparer\n  children:\n  - System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  - System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  langs:\n  - csharp\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Defines methods to support the comparison of objects for equality.\n  remarks: \"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface. In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.  \\n  \\n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.  \\n  \\n For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IEqualityComparer\n  derivedClasses:\n  - System.StringComparer\n  - System.Collections.Generic.EqualityComparer`1\n  - System.Xml.Linq.XNodeEqualityComparer\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  commentId: M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  id: Equals(System.Object,System.Object)\n  parent: System.Collections.IEqualityComparer\n  langs:\n  - csharp\n  name: Equals(Object, Object)\n  nameWithType: IEqualityComparer.Equals(Object, Object)\n  fullName: IEqualityComparer.Equals(Object, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Determines whether the specified objects are equal.\n  remarks: Implement this method to provide a customized equality comparison for objects.\n  example:\n  - \"The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>. In this example, the <xref:System.Collections.CaseInsensitiveComparer.Compare%2A?displayProperty=fullName> method is used to determine whether two objects are equal, based on the provided <xref:System.Globalization.CultureInfo>.  \\n  \\n [!code-cpp[System.Collections.Hashtable_ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#2)]\\n [!code-csharp[System.Collections.Hashtable_ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#2)]\\n [!code-vb[System.Collections.Hashtable_ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#2)]\"\n  syntax:\n    content: public bool Equals (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: The first object to compare.\n    - id: y\n      type: System.Object\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified objects are equal; otherwise, `false`.'\n  overload: System.Collections.IEqualityComparer.Equals*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  commentId: M:System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  id: GetHashCode(System.Object)\n  parent: System.Collections.IEqualityComparer\n  langs:\n  - csharp\n  name: GetHashCode(Object)\n  nameWithType: IEqualityComparer.GetHashCode(Object)\n  fullName: IEqualityComparer.GetHashCode(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections\n  summary: Returns a hash code for the specified object.\n  remarks: Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method.\n  example:\n  - \"The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>. In this example, the <xref:System.Collections.IEqualityComparer.GetHashCode%2A> method returns the hash code provided by the <xref:System.Object> type.  \\n  \\n [!code-cpp[System.Collections.Hashtable_ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#2)]\\n [!code-csharp[System.Collections.Hashtable_ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#2)]\\n [!code-vb[System.Collections.Hashtable_ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#2)]\"\n  syntax:\n    content: public int GetHashCode (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.\n    return:\n      type: System.Int32\n      description: A hash code for the specified object.\n  overload: System.Collections.IEqualityComparer.GetHashCode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IEqualityComparer.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  parent: System.Collections.IEqualityComparer\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: IEqualityComparer.Equals(Object, Object)\n  fullName: IEqualityComparer.Equals(Object, Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  parent: System.Collections.IEqualityComparer\n  isExternal: false\n  name: GetHashCode(Object)\n  nameWithType: IEqualityComparer.GetHashCode(Object)\n  fullName: IEqualityComparer.GetHashCode(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer.Equals*\n  parent: System.Collections.IEqualityComparer\n  isExternal: false\n  name: Equals\n  nameWithType: IEqualityComparer.Equals\n  fullName: IEqualityComparer.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IEqualityComparer.xml\n- uid: System.Collections.IEqualityComparer.GetHashCode*\n  parent: System.Collections.IEqualityComparer\n  isExternal: false\n  name: GetHashCode\n  nameWithType: IEqualityComparer.GetHashCode\n  fullName: IEqualityComparer.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/IEqualityComparer.xml\n"}