{"nodes":[{"content":"Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer.","nodes":[{"pos":[0,286],"content":"Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer.","nodes":[{"content":"Defines the mapping between arguments and expressions and provides the functionality to convert between these objects.","pos":[0,118]},{"content":"Typically, this converter is used declaratively when using an <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"&gt;&lt;/xref&gt;</ph> in a custom activity designer.","pos":[119,286],"source":" Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer."}]}],"pos":[969,1256],"yaml":true},{"content":"This converter can also be used imperatively; however, this usage is not recommended.","nodes":[{"pos":[0,85],"content":"This converter can also be used imperatively; however, this usage is not recommended.","nodes":[{"content":"This converter can also be used imperatively; however, this usage is not recommended.","pos":[0,85]}]}],"pos":[1267,1353],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"></xref> class.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"></xref> class."}],"pos":[3570,3704],"yaml":true},{"content":"Converts the specified argument into an expression.","nodes":[{"pos":[0,51],"content":"Converts the specified argument into an expression.","nodes":[{"content":"Converts the specified argument into an expression.","pos":[0,51]}]}],"pos":[5337,5389],"yaml":true},{"content":"The `parameter`,","nodes":[{"pos":[0,16],"content":"The <ph id=\"ph1\">`parameter`</ph>,","source":"The `parameter`,"}],"pos":[5400,5417],"yaml":true,"extradata":"MT"},{"content":"The value produced by the binding source.","nodes":[{"pos":[0,41],"content":"The value produced by the binding source.","nodes":[{"content":"The value produced by the binding source.","pos":[0,41]}]}],"pos":[5632,5674],"yaml":true},{"content":"The type of the binding target property.","nodes":[{"pos":[0,40],"content":"The type of the binding target property.","nodes":[{"content":"The type of the binding target property.","pos":[0,40]}]}],"pos":[5738,5779],"yaml":true},{"content":"The converter parameter to use.","nodes":[{"pos":[0,31],"content":"The converter parameter to use.","nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]}],"pos":[5844,5876],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use in the converter.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use in the converter.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use in the converter."}],"pos":[5958,6041],"yaml":true},{"content":"An instance of <xref href=\"System.Object\"></xref> that contains the converted Argument.Expression..  \n  \n Contains the converted Argument.Expression.","nodes":[{"pos":[0,99],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains the converted Argument.Expression..","source":"An instance of <xref href=\"System.Object\"></xref> that contains the converted Argument.Expression.."},{"pos":[106,149],"content":"Contains the converted Argument.Expression.","nodes":[{"content":"Contains the converted Argument.Expression.","pos":[0,43]}]}],"pos":[6098,6254],"yaml":true},{"content":"Converts the specified Argument.Expression into an argument.","nodes":[{"pos":[0,60],"content":"Converts the specified Argument.Expression into an argument.","nodes":[{"content":"Converts the specified Argument.Expression into an argument.","pos":[0,60]}]}],"pos":[7830,7891],"yaml":true},{"content":"The Argument.Expression to convert.","nodes":[{"pos":[0,35],"content":"The Argument.Expression to convert.","nodes":[{"content":"The Argument.Expression to convert.","pos":[0,35]}]}],"pos":[8110,8146],"yaml":true},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[8210,8227],"yaml":true},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[8292,8309],"yaml":true},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[8391,8408],"yaml":true},{"content":"Returns <xref href=\"System.Object\"></xref>.  \n  \n Contains the converted argument.","nodes":[{"pos":[0,43],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Object\"></xref>."},{"pos":[50,82],"content":"Contains the converted argument.","nodes":[{"content":"Contains the converted argument.","pos":[0,32]}]}],"pos":[8465,8554],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  commentId: T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  id: ArgumentToExpressionConverter\n  children:\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: ArgumentToExpressionConverter\n  nameWithType: ArgumentToExpressionConverter\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer.\n  remarks: This converter can also be used imperatively; however, this usage is not recommended.\n  example:\n  - \"The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.  \\n  \\n```  \\n<sapv:ExpressionTextBox   \\n    Expression=\\\"{Binding Path=ModelItem.SampleValue,   \\n                         Mode=TwoWay,   \\n                         Converter={StaticResource ArgumentToExpressionConverter},   \\n                         ConverterParameter=In }\\\"  \\n    ExpressionType=\\\"s:String\\\"  \\n    OwnerActivity=\\\"{Binding Path=ModelItem}\\\"  \\n   />  \\n  \\n```\"\n  syntax:\n    content: 'public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IValueConverter\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  commentId: M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: ArgumentToExpressionConverter()\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  fullName: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"></xref> class.\n  syntax:\n    content: public ArgumentToExpressionConverter ();\n    parameters: []\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  commentId: M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: Convert(Object, Type, Object, CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.Convert(Object, Type, Object, CultureInfo)\n  fullName: ArgumentToExpressionConverter.Convert(Object, Type, Object, CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified argument into an expression.\n  remarks: The `parameter`,\n  syntax:\n    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value produced by the binding source.\n    - id: targetType\n      type: System.Type\n      description: The type of the binding target property.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use in the converter.\n    return:\n      type: System.Object\n      description: \"An instance of <xref href=\\\"System.Object\\\"></xref> that contains the converted Argument.Expression..  \\n  \\n Contains the converted Argument.Expression.\"\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  commentId: M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object, Type, Object, CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  fullName: ArgumentToExpressionConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified Argument.Expression into an argument.\n  syntax:\n    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The Argument.Expression to convert.\n    - id: targetType\n      type: System.Type\n      description: Not implemented.\n    - id: parameter\n      type: System.Object\n      description: Not implemented.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Not implemented.\n    return:\n      type: System.Object\n      description: \"Returns <xref href=\\\"System.Object\\\"></xref>.  \\n  \\n Contains the converted argument.\"\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ArgumentToExpressionConverter()\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  fullName: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: Convert(Object, Type, Object, CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.Convert(Object, Type, Object, CultureInfo)\n  fullName: ArgumentToExpressionConverter.Convert(Object, Type, Object, CultureInfo)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ConvertBack(Object, Type, Object, CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object, Type, Object, CultureInfo)\n  fullName: ArgumentToExpressionConverter.ConvertBack(Object, Type, Object, CultureInfo)\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ArgumentToExpressionConverter\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter\n  fullName: ArgumentToExpressionConverter.ArgumentToExpressionConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: Convert\n  nameWithType: ArgumentToExpressionConverter.Convert\n  fullName: ArgumentToExpressionConverter.Convert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ConvertBack\n  nameWithType: ArgumentToExpressionConverter.ConvertBack\n  fullName: ArgumentToExpressionConverter.ConvertBack\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Converters/ArgumentToExpressionConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Data.IValueConverter\n  parent: System.Windows.Data\n  isExternal: false\n  name: IValueConverter\n  nameWithType: IValueConverter\n  fullName: System.Windows.Data.IValueConverter\n"}