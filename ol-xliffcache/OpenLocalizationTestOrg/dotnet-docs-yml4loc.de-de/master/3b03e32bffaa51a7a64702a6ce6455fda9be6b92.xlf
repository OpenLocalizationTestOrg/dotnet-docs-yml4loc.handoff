<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b03e32bffaa51a7a64702a6ce6455fda9be6b92</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Messaging.MessageQueue.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58876d9da334b047f426b2b3a11b0321cb77689f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c52d784f62d8b439ee04a3fccb90e1385fac2421</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to a queue on a Message Queuing server.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications send, receive, or peek (read without removing) messages from queues.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing is an optional component of <ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph> and Windows NT, and must be installed separately.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class is a wrapper around Message Queuing.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are multiple versions of Message Queuing, and using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can result in slightly different behavior, depending on the operating system you are using.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provides a reference to a Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a path in the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor to connect to an existing resource, or you can create a new queue on the server.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, you must associate the new instance of the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class with an existing queue.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that point, you can manipulate the queue properties such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> supports two types of message retrieval: synchronous and asynchronous.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods work by using callback objects and state objects to communicate information between threads.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, you are not creating a new Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph> methods to manage queues on the server.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph> are <ph id="ph4">`static`</ph> members, so you can call them without creating a new instance of the <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property with one of three names: the friendly name, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph>, or the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The friendly name, which is defined by the queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties, is <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph><ph id="ph4">\\</ph><ph id="ph5">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> for a public queue, and <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph><ph id="ph7">\\</ph><ph id="ph8">`Private$`</ph><ph id="ph9">\\</ph><ph id="ph10">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> for a private queue.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> property allows offline access to message queues.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lastly, you can use the queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property to set the queue's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After the default constructor initializes the new instance, you must set the instance's <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property before you can use the instance.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class that is not immediately tied to a queue on the Message Queuing server.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before using this instance, you must connect it to an existing Message Queuing queue by setting the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> reference to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> method's return value, thereby creating a new Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor instantiates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the filter values are set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class that references the Message Queuing queue at the specified path.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload when you want to tie the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to grant exclusive access to the first application that references the queue, you must set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> property to <ph id="ph2">`true`</ph> or use the constructor that passes a read-access restriction parameter.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor instantiates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new queue in Message Queuing, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax of the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Journal queue</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine journal queue</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine dead-letter queue</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine transactional dead-letter queue</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format name</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work offline, you must use the format name syntax, not the path name syntax for the constructor.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values are based on the properties of the Message Queuing queue with the path specified by the <ph id="ph1">`path`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing queue's privacy level setting is "Body"; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the Message Queuing queue's computer name property.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing object's journal setting is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property is not valid, possibly because it has not been set.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload when you want to tie the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> to a particular Message Queuing queue, for which you know the path, format name, or label.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to grant exclusive access to the first application that references the queue, set the <ph id="ph1">`sharedModeDenyReceive`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, set <ph id="ph1">`sharedModeDenyReceive`</ph> to <ph id="ph2">`false`</ph> or use the constructor that has only a <ph id="ph3">`path`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">`sharedModeDenyReceive`</ph> to <ph id="ph2">`true`</ph> affects all objects that access the Message Queuing queue, including other applications.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effects of the parameter are not restricted to this application.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor creates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new queue in Message Queuing, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax of the <ph id="ph1">`path`</ph> parameter depends on the type of queue.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Journal queue</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine journal queue</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine dead-letter queue</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine transactional dead-letter queue</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format name</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work offline, you must use the format name syntax, rather than the friendly name syntax.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> opens a queue with the <ph id="ph2">`sharedModeDenyReceive`</ph> parameter set to <ph id="ph3">`true`</ph>, any <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> that subsequently tries to read from the queue generates a <ph id="ph5">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> because of a sharing violation.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> is also thrown if a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> tries to access the queue in exclusive mode while another <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> already has non-exclusive access to the queue.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values are based on the properties of the Message Queuing queue, with the path specified by the <ph id="ph1">`path`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>0.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Guid.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing queue's privacy level setting is "Body"; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the Message Queuing queue's computer name property.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`sharedModeDenyReceive`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing object's journal setting is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>, which can be "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property is not valid, possibly because it has not been set.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>, which can be "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.QueueAccessMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>, which can be "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to create and use a connection cache; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>, which can be "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to create and use a connection cache; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.QueueAccessMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the access mode for the queue.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default access mode for a queue is <ph id="ph1">`QueueAccessMode.SendAndReceive`</ph>, unless you specify otherwise when calling the constructor.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.QueueAccessMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the queue accepts only authenticated messages.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message authentication provides a way to ensure message integrity and to verify who sent the message.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>To request authentication, the sending application sets the message's authentication level.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Authenticate%2A&gt;</ph> to <ph id="ph2">`true`</ph>, you are restricting access to the queue on the server, not only to this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>All clients working against the same Message Queuing queue will be affected.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queue that accepts only authenticated messages will reject a non-authenticated message.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>To request notification of message rejection, a sending application can set the <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property of the message.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the queue accepts only authenticated messages; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> is not related to the <ph id="ph2">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property of a message, which specifies the order in which an incoming message is placed in the queue.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> applies only to public queues whose paths are specified using the format name.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base priority of a private queue is always zero (0).</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The single base priority for all messages sent to the (public) queue.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The default is zero (0).</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The base priority was set to an invalid value.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is not raised.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> that will receive the notification of the asynchronous operation completion.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler can access this information by looking at the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is associated with the operation.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload specifies a time-out and a state object.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an illustration of this scenario, see the Example section.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the state object to pass information across process threads.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The state object provides associated information throughout the lifetime of the operation.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is not raised.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation started by the method.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.PeekAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Indicates whether to peek at the current message in the queue, or the next message.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> that receives the notification of the asynchronous operation completion.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>A value other than <ph id="ph1">`PeekAction.Current`</ph> or <ph id="ph2">`PeekAction.Next`</ph> was specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">action</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cursor</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous peek operation that has no time-out.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The operation is not complete until a message becomes available in the queue.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous peek operation that has a specified time-out.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload specifies a time-out.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous receive operation that has no time-out.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The operation is not complete until a message becomes available in the queue.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message has been removed from the queue.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous receive operation that has a specified time-out.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload specifies a time-out.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly because it represents a negative number.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler can detect this information by looking at the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is associated with the operation.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload specifies a time-out and a state object.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the state object to pass information across process threads.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is not raised.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the state object to pass information across process threads.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> that will receive the notification of the asynchronous operation completion.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The state object provides associated information throughout the lifetime of the operation.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is not raised.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object associates state information with the operation.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the state object to pass information across process threads.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> that receives the notification of the asynchronous operation completion.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the posted asynchronous request.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cursor</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> can be read.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> indicates whether the application is able to peek or receive messages from the queue.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can receive or peek messages from the queue.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it cannot.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph> if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> requests exclusive access), or if the application does not have sufficient rights to access it.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application tries to read from a queue when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, access is denied.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> exists and the application can read from it; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> can be written to.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> indicates whether the application is able to send messages to the queue.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can send messages to the queue.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it cannot.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`false`</ph> if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> requests exclusive access), or if the application does not have sufficient rights to access it.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application tries to write to a queue when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`false`</ph>, access is denied.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> exists and the application can write to it; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Gets or sets the queue category.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>The queue category allows an application to categorize its queues.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can place all Billing queues in one category and all Order queues in another.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the <bpt id="p1">**</bpt>Queue Properties<ept id="p1">**</ept> dialog box in the Computer Management Console.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define a new category.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can use <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> to create a category value that is unique across all <ph id="ph2">&lt;xref:System.Guid&gt;</ph> values, such an action is unnecessary.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>The category value needs to be distinct only from other categories, not from all other <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can assign {00000000-0000-0000-0000-000000000001} as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for another set.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Guid.empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The queue category was set to an invalid value.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Clears the connection cache.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Frees all resources allocated by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> frees all resources associated with a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, including shared resources if appropriate.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system re-acquires these resources automatically if they are still available, for example when you call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> method, as in the following C# code.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> properties that directly access the Message Queuing queue are cleared out.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> all remain as they were.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> does not always free the read and write handles to a queue, because they might be shared.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can take any of the following steps to ensure that <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> frees the read and write handles to a queue:</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with exclusive access.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor, and set the <ph id="ph3">`sharedModeDenyReceive`</ph> parameter to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with connection caching disabled.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and set the <ph id="ph2">`enableConnectionCache`</ph> parameter to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disable connection caching.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> for a queue before you delete the queue on the Message Queuing server.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Creates a non-transactional Message Queuing queue at the specified path.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a non-transactional Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in your application and bind it to an existing queue, use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new queue in Message Queuing, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The path of the queue to create.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> that represents the new queue.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph> or is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>A queue already exists at the specified path.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Creates a transactional or non-transactional Message Queuing queue at the specified path.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this overload to create a transactional queue in Message Queuing.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a non-transactional queue, by setting the <ph id="ph1">`transactional`</ph> parameter to <ph id="ph2">`false`</ph> or by calling the other overload of <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in your application and bind it to an existing queue, use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph>constructor.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new queue in Message Queuing, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>The path of the queue to create.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to create a transactional queue; <ph id="ph2">`false`</ph> to create a non-transactional queue.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> that represents the new queue.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph> or is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>A queue already exists at the specified path.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> for the current message queue.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> for the current message queue.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>This cursor is used to maintain a specific location in the queue when reading the queue's messages.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>Gets the time and date that the queue was created in Message Queuing.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CreateTime%2A&gt;</ph> refers to the queue on the Message Queuing server, not the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that represents the date and time at which the queue was created.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Gets or sets the message property values to be used by default when the application sends messages to the queue.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you send any object that is not of type <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> inserts the object into a Message Queuing message.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that time, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> applies to the message the property values you specify in the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if you send a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, these properties are already specified for the instance itself, so <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> is ignored for the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you set the properties through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> refers to the properties of the messages that are sent to the queue, not the queue itself.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default values for the properties are shown in the following table.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>Zero (0)</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>Empty string ("")</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.DefaultPropertiesToSend"&gt;&lt;/xref&gt;</ph> that contains the default Message Queuing message property values used when the application sends objects other than <ph id="ph2">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> instances to the queue.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>The default properties could not be set for the queue, possibly because one of the properties is not valid.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Deletes a queue on a Message Queuing server.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format name</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>FormatName:[ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label:[ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>The location of the queue to be deleted.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph> or is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>The syntax for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> has exclusive access to receive messages from the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> specifies the shared mode of the queue referenced by this <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> to <ph id="ph2">`true`</ph> to indicate that only this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> should have access to peek or receive messages from the queue with the specified <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>If another <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the queue is available to multiple applications for sending, peeking, or receiving messages.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> has exclusive rights to receive messages from the queue; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object's destructor.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>A connection cache is a list of references to structures that contain read or write handles to queues.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> borrows handles from the cache each time you call <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, rather than open new handles.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can improve performance.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a connection cache also insulates the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> from changes in the network topology.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create a new connection to a queue when the connection cache is full, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> overwrites the least recently accessed structure with the new connection.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can clear the cache entirely by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to create and use a connection cache; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other members (for example, the <ph id="ph1">&lt;xref:System.Messaging.Message.Label%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> properties) cannot be encrypted.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>Encrypting a message makes the message private.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the queue's encryption requirement to be <ph id="ph1">`None`</ph>, <ph id="ph2">`Body`</ph>, or <ph id="ph3">`Optional`</ph> by setting the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EncryptionRequired%2A&gt;</ph> property appropriately.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseEncryption%2A&gt;</ph> setting of the message must correspond to the encryption requirement of the queue.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message is not encrypted but the queue specifies <ph id="ph1">`Body`</ph>, or if the message is encrypted but the queue specifies <ph id="ph2">`None`</ph>, the message is rejected by the queue.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, a message that fails encryption is sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the message is lost.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.EncryptionRequired"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous peek operation.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> completes the operation that was initiated by the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> peeks the message.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> can specify a time-out, which causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event to be raised if the time-out occurs before a message appears in the queue.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a time-out occurs without a message arriving in the queue, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is used to read the message that caused the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event to be raised.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to continue to asynchronously peek messages, you can again call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> associated with the completed asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>The syntax of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous receive operation.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> completes the operation that was initiated by the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> receives the message.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> can specify a time-out, which causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event to be raised if the time-out occurs before a message appears in the queue.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a time-out occurs without a message arriving in the queue, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is used to read (removing from the queue) the message that caused the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event to be raised.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to continue to asynchronously receive messages, you can again call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> associated with the completed asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>The syntax of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>Determines whether a Message Queuing queue exists at the specified path.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> method determines whether a Message Queuing queue exists at a specified path.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>No method exists to determine whether a queue with a specified format name exists.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the format name syntax and other path syntax forms, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.)</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> is an expensive operation.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it only when it is necessary within the application.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> method does not support the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> prefix.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> cannot be called to verify the existence of a remote private queue.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label:[ <ph id="ph1">`label`</ph> ]</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>The location of the queue to find.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a queue with the specified path exists; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> syntax is not valid.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Exists(System.String)"&gt;&lt;/xref&gt;</ph> method is being called on a remote private queue</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>The application used format name syntax when verifying queue existence.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> property contains the format name of the queue.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing uses the format name to identify which queue to open and how to access it.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a path using the path name syntax (such as <ph id="ph1">`myComputer\myQueue`</ph>) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> into the associated <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> before accessing the queue.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>The name for the queue, which is unique on the network.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> is not set.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>When reading from a queue, the formatter deserializes the message data into the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> provide faster throughput than the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> allows interoperability with Visual Basic 6.0 Message Queuing applications.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>When your application sends messages to the queue, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> applies only to those messages that use the default message properties, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, Message Queuing uses the formatter defined in the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property to serialize the body instead.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class will always use a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> to receive or peek a message from the queue.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is deserialized using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.IMessageFormatter"&gt;&lt;/xref&gt;</ph> that produces a stream to be written to or read from the message body.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>Returns all the messages that are in the queue.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot use the array to modify the messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> method, which returns a dynamic list of the messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> retrieves only those properties not filtered out by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>Enumerates the messages in a queue.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.GetEnumerator"&gt;&lt;/xref&gt;</ph> is deprecated.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.GetMessageEnumerator2"&gt;&lt;/xref&gt;</ph> should be used instead.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> that provides a dynamic connection to the messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Gets the identifier of the computer on which the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> is located.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you cannot call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29&gt;</ph> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The computer identifier (or machine identifier) is a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> that Message Queuing creates when a computer is added to the enterprise.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing combines the computer identifier with the <ph id="ph1">`Machine`</ph> and <ph id="ph2">`Journal`</ph> keywords to create the machine journal's format name, which has the syntax <ph id="ph3">`Machine=&lt;computeridentifier&gt;;Journal`</ph>.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This syntax for the journal is only valid when constructing the format name for the queue.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The path name syntax is <ph id="ph1">`MachineName`</ph><ph id="ph2">\\</ph><ph id="ph3">`Journal$`</ph>.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>The name of the computer that contains the queue, without the two preceding backslashes (<ph id="ph1">\\</ph><ph id="ph2">\\</ph>).</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> that represents a unique identifier for the computer on which the queue is located.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>Creates an enumerator object for all the messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.GetMessageEnumerator"&gt;&lt;/xref&gt;</ph> is deprecated.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.GetMessageEnumerator2"&gt;&lt;/xref&gt;</ph> should be used instead.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> creates a dynamic list of all the messages in a queue.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove from the queue the message at the enumerator's current position by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> that <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> returns.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an array of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> objects, which represent the messages at the time the method was called.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;&lt;/xref&gt;</ph> holding the messages that are contained in the queue.</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Creates an enumerator object for all the messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> creates a dynamic list of all the messages in a queue.</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove from the queue the message at the enumerator's current position by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> that <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> returns.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an array of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> objects, which represent the messages at the time the method was called.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;&lt;/xref&gt;</ph> holding the messages that are contained in the queue.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>Provides forward-only cursor semantics to enumerate through all public queues on the network.</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> returns an enumeration of all the public queues that are on the network.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additions or deletion of queues located before the cursor's current position are not reflected.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no defined ordering of queues in a network.</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these two methods returns an array of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects, which represent the queues at the time the method was called.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;&lt;/xref&gt;</ph> that provides a dynamic listing of all the public message queues on the network.</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to queues located before the cursor's current position are not reflected.</source>
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</source>
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no defined ordering of queues in a network.</source>
        </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</source>
        </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> or call <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these two methods returns an array of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects, which represent the queues at the time the method was called.</source>
        </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> provides the same results as calling <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> with the filtering criteria of <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueCriteria"&gt;&lt;/xref&gt;</ph> that contains the criteria used to filter the available message queues.</source>
        </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;&lt;/xref&gt;</ph> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">criteria</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>Retrieves all the private queues on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> retrieves a static snapshot of the queues on a specified computer.</source>
        </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve">
          <source>The computer from which to retrieve the private queues.</source>
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the retrieved private queues.</source>
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph> or an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>Retrieves all the public queues on the network.</source>
        </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload if you want a complete list of all the public queues on the network.</source>
        </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to restrict the list by certain criteria, such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, or last modified time use another overload of this method.</source>
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Alternatively, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>.)</source>
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> retrieves a static snapshot of the queues.</source>
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the retrieved public queues.</source>
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve">
          <source>Retrieves all the public queues on the network that meet the specified criteria.</source>
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to filter all the public queues on the network by label, category, or computer name, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class contains specific methods that provide that functionality (<ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>, respectively).</source>
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</source>
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also filter by message criteria other than <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you use this overload to filter by a queue's last-modified time.</source>
        </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Simply create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> class, set the appropriate properties in the instance, and pass the instance as the <ph id="ph2">`criteria`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> retrieves a static snapshot of the queues.</source>
        </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueCriteria"&gt;&lt;/xref&gt;</ph> that contains the criteria used to filter the queues.</source>
        </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the retrieved public queues.</source>
        </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve">
          <source>Retrieves all the public queues on the network that belong to the specified category.</source>
        </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to filter the public queues by category.</source>
        </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</source>
        </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can use <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> to create a category value that is unique across all <ph id="ph2">&lt;xref:System.Guid&gt;</ph> values, it is not necessary.</source>
        </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The category value needs to be distinct only from other categories, not from all other <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can assign {00000000-0000-0000-0000-000000000001} as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for another set.</source>
        </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph> retrieves a static snapshot of the queues.</source>
        </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the category as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
        </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> that groups the set of queues to be retrieved.</source>
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the retrieved public queues.</source>
        </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve">
          <source>Retrieves all the public queues on the network that carry the specified label.</source>
        </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to filter the public queues by label.</source>
        </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph> retrieves a static snapshot of the queues.</source>
        </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the label as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
        </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve">
          <source>A label that groups the set of queues to be retrieved.</source>
        </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the retrieved public queues.</source>
        </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">label</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>Retrieves all the public queues that reside on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to filter the public queues by computer.</source>
        </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> retrieves a static snapshot of the queues.</source>
        </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the computer name as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
        </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>The name of the computer that contains the set of public queues to be retrieved.</source>
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> objects that reference the public queues on the computer.</source>
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter has incorrect syntax.</source>
        </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</source>
        </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.SecurityContext"&gt;&lt;/xref&gt;</ph> object that contains the security context.</source>
        </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>Gets the unique Message Queuing identifier of the queue.</source>
        </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing sets the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Id%2A&gt;</ph> property when it creates the queue.</source>
        </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only available for public queues.</source>
        </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Id"&gt;&lt;/xref&gt;</ph> that represents the message identifier generated by the Message Queuing application.</source>
        </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve">
          <source>Specifies that no size restriction exists for a queue.</source>
        </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is frequently used when setting <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve">
          <source>Specifies that no time-out exists for methods that peek or receive messages.</source>
        </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> supports two types of message retrieval: synchronous and asynchronous.</source>
        </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified time interval is <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>, the process thread remains blocked until a new message is available.</source>
        </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the other hand, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve">
          <source>Gets or sets the queue description.</source>
        </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of a message queue label is 124 characters.</source>
        </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property does not need to be unique across all queues.</source>
        </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if multiple queues share the same <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, you cannot use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> method to broadcast a message to all of them.</source>
        </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the label syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property when you send the message, an exception will be thrown if the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> is not unique.</source>
        </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>The label for the message queue.</source>
        </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve">
          <source>The label was set to an invalid value.</source>
        </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve">
          <source>Gets the last time the properties of a queue were modified.</source>
        </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last modification time includes when the queue was created and any <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> property that modifies the Message Queuing queue, such as <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property represents the system time of the local computer.</source>
        </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> before getting the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property; otherwise, the modification time associated with this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> might not be current.</source>
        </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that indicates when the queue properties were last modified.</source>
        </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the computer where the Message Queuing queue is located.</source>
        </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> is an integral component of the friendly name syntax of the queue <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</source>
        </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Journal queue</source>
        </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine journal queue</source>
        </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine dead-letter queue</source>
        </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine transactional dead-letter queue</source>
        </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use "." for the local computer when specifying the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the computer name is recognized for this property, for example, <ph id="ph1">`Server0`</ph>.</source>
        </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property does not support the IP address format.</source>
        </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you define the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> in terms of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, the application throws an exception when working offline because the domain controller is required for path translation.</source>
        </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> syntax when working offline.</source>
        </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties are related.</source>
        </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property to change.</source>
        </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is built from the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (for example, to use the format name syntax) resets the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties to refer to the new queue.</source>
        </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> property is empty, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> is set to the Journal queue of the computer you specify.</source>
        </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>The name of the computer where the queue is located.</source>
        </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>The Message Queuing default is ".", the local computer.</source>
        </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>The name of the computer is not valid, possibly because the syntax is incorrect.</source>
        </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum size of the journal queue.</source>
        </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> provides access to the Message Queuing journal storage limit.</source>
        </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is relevant only when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change</source>
        </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</source>
        </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages in such a queue count toward the message quota for the computer where the queue resides.</source>
        </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The administrator sets the computer quota.)</source>
        </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve">
          <source>The maximum size, in kilobytes, of the journal queue.</source>
        </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve">
          <source>The Message Queuing default specifies that no limit exists.</source>
        </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>The maximum journal queue size was set to an invalid value.</source>
        </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum size of the queue.</source>
        </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</source>
        </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the message quota, see <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change</source>
        </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</source>
        </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</source>
        </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</source>
        </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve">
          <source>The maximum size, in kilobytes, of the queue.</source>
        </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve">
          <source>The Message Queuing default specifies that no limit exists.</source>
        </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve">
          <source>The maximum queue size contains a negative value.</source>
        </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source>Gets or sets the property filter for receiving or peeking messages.</source>
        </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT">
          <source>This filter is a set of Boolean values restricting the message properties that the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> receives or peeks.</source>
        </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> receives or peeks a message from the server queue, it retrieves only those properties for which the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> value is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following shows initial property values for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings are identical to calling <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT">
          <source>1024 bytes</source>
        </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT">
          <source>255 bytes</source>
        </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT">
          <source>255 bytes</source>
        </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessagePropertyFilter"&gt;&lt;/xref&gt;</ph> used by the queue to filter the set of properties it receives or peeks for each message.</source>
        </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve">
          <source>The filter is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve">
          <source>Gets or sets the multicast address associated with the queue.</source>
        </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</source>
        </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot associate a transactional queue with a multicast address.</source>
        </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</source>
        </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT">
          <source>IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</source>
        </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</source>
        </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the latest list of reserved multicast addresses, see the <bpt id="p1">[</bpt>Internet Assigned Number Authority (IANA) Internet Multicast Addresses<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=3859)</ept> Web page.</source>
        </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are no restrictions on the port number.</source>
        </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT">
          <source>If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</source>
        </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dissociate a queue from a multicast address, set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> property to a zero-length string.</source>
        </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set it to <ph id="ph1">`null`</ph>, as this will result in a <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains a valid multicast address (in the form shown below) or <ph id="ph2">`null`</ph>, which indicates that the queue is not associated with a multicast address.</source>
        </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve">
          <source>Gets or sets the queue's path.</source>
        </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> causes the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> to point to a new queue.</source>
        </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property depends on the type of queue it points to, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT">
          <source>Journal queue</source>
        </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine journal queue</source>
        </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine dead-letter queue</source>
        </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine transactional dead-letter queue</source>
        </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use "." to represent the local computer.</source>
        </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties are related.</source>
        </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property to change.</source>
        </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is built from the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (for example, to use the format name syntax) resets the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties to refer to the new queue.</source>
        </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format name</source>
        </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
        </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
        </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
        </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the label syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property when you send the message, an exception will be thrown if the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> is not unique.</source>
        </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</source>
        </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</source>
        </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a new path closes the message queue and releases all handles.</source>
        </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT">
          <source>In workgroup mode you can only use private queues.</source>
        </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the path using the private queue syntax <ph id="ph1">`MachineName`</ph><ph id="ph2">\\</ph><ph id="ph3">`Private$`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph>.</source>
        </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve">
          <source>The queue that is referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve">
          <source>The default depends on which <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.#ctor"&gt;&lt;/xref&gt;</ph> constructor you use; it is either <ph id="ph2">`null`</ph> or is specified by the constructor's <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve">
          <source>The path is not valid, possibly because the syntax is not valid.</source>
        </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>Returns without removing (peeks) the first message in the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Peek"&gt;&lt;/xref&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available.</source>
        </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to peek a queue, or to wait until a message exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, the first message from the queue.</source>
        </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> return the same message, unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes the first message from the queue.</source>
        </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT">
          <source>Repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, therefore, return different messages.</source>
        </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing orders messages in the queue according to priority and arrival time.</source>
        </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT">
          <source>A newer message is placed before an older one only if it is of a higher priority.</source>
        </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload does not specify a time-out, the application might wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> that specifies a time-out.</source>
        </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that represents the first message in the queue.</source>
        </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve">
          <source>Returns without removing (peeks) the first message in the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Peek"&gt;&lt;/xref&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</source>
        </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns immediately if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, the first message from the queue.</source>
        </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> return the same message, unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes the first message from the queue.</source>
        </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT">
          <source>Repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, therefore, return different messages.</source>
        </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing orders messages in the queue according to priority and arrival time.</source>
        </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT">
          <source>A newer message is placed before an older one only if it is of a higher priority.</source>
        </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked up to the specified period of time, or indefinitely if you indicated <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the maximum time to wait for the queue to contain a message.</source>
        </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that represents the first message in the queue.</source>
        </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve">
          <source>Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</source>
        </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Peek"&gt;&lt;/xref&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</source>
        </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns immediately if a message already exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, a message from the queue.</source>
        </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes a message from the queue.</source>
        </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked up to the specified period of time, or indefinitely if you indicated <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the maximum time to wait for the queue to contain a message.</source>
        </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.PeekAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve">
          <source>Indicates whether to peek at the current message in the queue, or the next message.</source>
        </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that represents a message in the queue.</source>
        </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve">
          <source>A value other than <ph id="ph1">`PeekAction.Current`</ph> or <ph id="ph2">`PeekAction.Next`</ph> was specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">action</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cursor</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve">
          <source>Possibly <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> is less than <ph id="ph2">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve">
          <source>Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to peek messages in a queue.</source>
        </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to peek.</source>
        </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve">
          <source>Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, and no new message arrives in the queue within the period specified by the <ph id="ph2">`timeout`</ph> parameter, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to peek messages in a queue.</source>
        </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to peek.</source>
        </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the queue and did not arrive before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>A message did not arrive before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>Peeks the message whose message identifier matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> to read, without removing from the queue, a message that has a known message identifier.</source>
        </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph1">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload throws an exception if the queue does not currently contain the message.</source>
        </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two additional methods allow you to peek messages in a queue: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue; <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to peek.</source>
        </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>No message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> exists.</source>
        </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve">
          <source>Peeks the message whose message identifier matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve">
          <source>Waits until the message appears in the queue or a time-out occurs.</source>
        </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> to read, without removing from the queue, a message that has a known message identifier.</source>
        </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph1">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</source>
        </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two additional methods allow you to peek messages in a queue: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue; <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to peek.</source>
        </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the queue and did not arrive before the period specified by the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> parameter expired.</source>
        </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>Peeks at the message that matches the given lookup identifier from a non-transactional queue.</source>
        </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known lookup identifier without removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified lookup identifier and remove it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> of the message to peek at.</source>
        </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>Peeks at a specific message from the queue.</source>
        </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
        </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known lookup identifier without removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier and remove it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> values, specifying how the message is read in the queue.</source>
        </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve">
          <source>Specify one of the following:</source>
        </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Current`</ph>: Peeks at the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Next`</ph>: Peeks at the message following the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Previous`</ph>: Peeks at the message preceding the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.First`</ph>: Peeks at the first message in the queue.</source>
        </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Last`</ph>: Peeks at the last message in the queue.</source>
        </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> of the message to peek at, or 0.</source>
        </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve">
          <source>0 is used when accessing the first or last message in the queue.</source>
        </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">action</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">lookupId</ph><ept id="p2">&lt;/code&gt;</ept> parameters passed in.</source>
        </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">action</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve">
          <source>Occurs when a message is read without being removed from the queue.</source>
        </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve">
          <source>This is a result of the asynchronous operation, <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.BeginPeek"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is used in asynchronous processing to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message is available in the queue.</source>
        </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is used to complete the operation initiated by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and peek the message when the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Messaging.PeekCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
        </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
        </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
        </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
        </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve">
          <source>Deletes all the messages contained in the queue.</source>
        </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT">
          <source>Purging the queue causes Message Queuing to set the queue modification flag, which affects the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</source>
        </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve">
          <source>Gets or sets the friendly name that identifies the queue.</source>
        </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can combine the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> to create a friendly <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> name for the queue.</source>
        </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the friendly name variation of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property depends on the type of queue, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queue type</source>
        </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public queue</source>
        </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private queue</source>
        </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT">
          <source>Journal queue</source>
        </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use "." to represent the local computer.</source>
        </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> property affects the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> without setting the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property becomes .<ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph>.</source>
        </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> becomes <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph>.</source>
        </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve">
          <source>The name that identifies the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve">
          <source>The value cannot be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve">
          <source>The queue name is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve">
          <source>Gets the native handle used to read messages from the message queue.</source>
        </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReadHandle%2A&gt;</ph> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</source>
        </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the path of the queue, the handle is closed and reopened with a new value.</source>
        </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve">
          <source>A handle to the native queue object that you use for peeking and receiving messages from the queue.</source>
        </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
        </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a queue, or wait until there are messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue, or new, higher priority messages.</source>
        </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the transactional queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
        </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, or wait until there are messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
        </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, or wait until there are messages in the queue.</source>
        </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> and waits until either a message is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue, or new, higher priority messages.</source>
        </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method</source>
        </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve">
          <source>Receives the current message in the queue, using a specified cursor.</source>
        </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method</source>
        </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve">
          <source>Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the transactional queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> and waits until either a message is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, and return within a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve">
          <source>This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, and return in a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references the first message available in the queue.</source>
        </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve">
          <source>Receives the current message in the queue, using a specified cursor.</source>
        </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, and return within a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there is nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references a message in the queue.</source>
        </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cursor</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve">
          <source>Possibly <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> is less than <ph id="ph2">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve">
          <source>Receives the current message in the queue, using a specified cursor.</source>
        </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, and return in a specified period of time if there are no messages in the queue.</source>
        </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
        </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> return the messages that follow in the queue.</source>
        </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there is nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Cursor"&gt;&lt;/xref&gt;</ph> that maintains a specific position in the message queue.</source>
        </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values that describes the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> that references a message in the queue.</source>
        </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cursor</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve">
          <source>Possibly <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> is less than <ph id="ph2">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve">
          <source>A message did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the queue and did not arrive before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue, using the internal transaction context defined by the <ph id="ph2">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the queue and did not arrive before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the non-transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue.</source>
        </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the queue and did not arrive before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method looks in the non-transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the message is removed from the queue and returned to the application.</source>
        </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method retrieves a message by specifying its unique identifier.</source>
        </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">correlationId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
        </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue</source>
        </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
        </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
        </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message with the specified identifier is in a queue other than the one associated with this <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the message will not be found.</source>
        </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
        </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue.</source>
        </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve">
          <source>A message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue.</source>
        </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the timeout period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve">
          <source>A message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
        </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
        </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
        </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
        </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
        </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message with the specified identifier is in a queue other than the one associated with this <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the message will not be found.</source>
        </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other methods allow you to receive messages from a queue.</source>
        </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
        </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
        </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid, possibly <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p2">&lt;/code&gt;</ept> is less than <ph id="ph3">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.Messaging.MessageQueue.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve">
          <source>A message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> did not arrive in the queue before the time-out expired.</source>
        </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve">
          <source>Receives the message that matches the given lookup identifier from a non-transactional queue.</source>
        </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue.</source>
        </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified lookup identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> of the message to receive.</source>
        </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> whose <ph id="ph2">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> property matches the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed in.</source>
        </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve">
          <source>Receives a specific message from a transactional queue.</source>
        </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
        </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> values, specifying how the message is read in the queue.</source>
        </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve">
          <source>Specify one of the following:</source>
        </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Current`</ph>: Receives the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Next`</ph>: Receives the message following the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Previous`</ph>: Receives the message preceding the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.First`</ph>: Receives the first message in the queue and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Last`</ph>: Receives the last message in the queue and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> of the message to receive, or 0.</source>
        </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve">
          <source>0 is used when accessing the first or last message in the queue.</source>
        </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">action</ph><ept id="p2">&lt;/code&gt;</ept> parameters passed in.</source>
        </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve">
          <source>The queue is non-transactional.</source>
        </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">action</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve">
          <source>Receives a specific message from the queue, using the specified transaction context.</source>
        </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
        </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
        </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</source>
        </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
        </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
        </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
        </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
        </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> values, specifying how the message is read in the queue.</source>
        </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve">
          <source>Specify one of the following:</source>
        </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Current`</ph>: Receives the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Next`</ph>: Receives the message following the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Previous`</ph>: Receives the message preceding the message specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.First`</ph>: Receives the first message in the queue and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MessageLookupAction.Last`</ph>: Receives the last message in the queue and removes it from the queue.</source>
        </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> parameter must be set to 0.</source>
        </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> of the message to receive, or 0.</source>
        </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve">
          <source>0 is used when accessing the first or last message in the queue.</source>
        </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">action</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">lookupId</ph><ept id="p2">&lt;/code&gt;</ept> parameters passed in.</source>
        </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve">
          <source>The message with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">lookupId</ph><ept id="p1">&lt;/code&gt;</ept> could not be found.</source>
        </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">action</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageLookupAction"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve">
          <source>Occurs when a message has been removed from the queue.</source>
        </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve">
          <source>This event is raised by the asynchronous operation, <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.BeginReceive"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is used in asynchronous processing to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message is available in the queue.</source>
        </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is used to complete the operation initiated by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> and peek the message when the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
        </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
        </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
        </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
        </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve">
          <source>Refreshes the properties presented by the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> to reflect the current state of the resource.</source>
        </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> synchronizes the properties of a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with its associated Message Queuing server resource.</source>
        </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any property, such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, has changed on the server since the time the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> was created, <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> updates the <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with the new information.</source>
        </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve">
          <source>Resets the permission list to the operating system's default values.</source>
        </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve">
          <source>Removes any queue permissions you have appended to the default list.</source>
        </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ResetPermissions%2A&gt;</ph>, you return the permission list to its default values.</source>
        </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</source>
        </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get the properties of the queue.</source>
        </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get queue permissions.</source>
        </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write to the queue.</source>
        </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve">
          <source>Sends an object to non-transactional queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
        </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the message to be part of a transaction that contains other messages, use an overload that takes a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve">
          <source>Sends an object to the transactional queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the transactional queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using an internal transaction context defined by the <ph id="ph3">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
        </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</source>
        </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
        </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
        </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
        </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve">
          <source>The Message Queuing application indicated an incorrect transaction use.</source>
        </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve">
          <source>Sends an object to the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using a transaction context defined by the <ph id="ph3">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</source>
        </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to send the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to send a transactional message to a non-transactional thread.</source>
        </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
        </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve">
          <source>Sends an object to the non-transactional queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> and specifies a label for the message.</source>
        </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this overload, you can specify the string label that identifies the message.</source>
        </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, a structure, a data object, or any managed object.</source>
        </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
        </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the message to be part of a transaction that contains other messages, use an overload that takes a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> as a parameter.</source>
        </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property for this <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance must be specified before you send the message.</source>
        </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve">
          <source>The label of the message.</source>
        </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">label</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve">
          <source>Sends an object to the transactional queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> and specifies a label for the message.</source>
        </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the transactional queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using an internal transaction context defined by the <ph id="ph3">`transaction`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this overload, you can specify the string label that identifies the message.</source>
        </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, a structure, a data object, or any managed object.</source>
        </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
        </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</source>
        </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
        </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
        </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
        </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve">
          <source>The label of the message.</source>
        </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">label</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve">
          <source>The Message Queuing application indicated an incorrect transaction usage.</source>
        </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve">
          <source>Sends an object to the queue referenced by this <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> and specifies a label for the message.</source>
        </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using a transaction context defined by the <ph id="ph3">`transactionType`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</source>
        </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to send the message as a single internal transaction.</source>
        </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to send a transactional message to a non-transactional thread.</source>
        </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
        </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
        </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this overload, you can specify the string label that identifies the message.</source>
        </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
        </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
        </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=fullName&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve">
          <source>The object to send to the queue.</source>
        </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve">
          <source>The label of the message.</source>
        </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
        </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">label</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve">
          <source>The Message Queuing application indicated an incorrect transaction usage.</source>
        </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <ph id="ph2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.Path"&gt;&lt;/xref&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve">
          <source>Assigns access rights to the queue based on the contents of an access control list.</source>
        </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</source>
        </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is used, for example, to grant permissions to multiple users at the same time.</source>
        </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trustee you specify when you construct the <ph id="ph1">`ace`</ph> parameter can be an individual user, a group of users, or a computer.</source>
        </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the trustee is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph>.</source>
        </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify "." for the trustee to indicate the local computer.</source>
        </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
        </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
        </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
        </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
        </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
        </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
        </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
        </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you construct the <ph id="ph1">`dacl`</ph> parameter, you add <ph id="ph2">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instances to your <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you construct each access control entry, you can specify generic or standard access rights.</source>
        </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights to a queue can be any combination of the following:</source>
        </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delete</source>
        </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read Security</source>
        </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Security</source>
        </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" extradata="MT">
          <source>Synchronize</source>
        </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify Owner</source>
        </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read</source>
        </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write</source>
        </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT">
          <source>Execute</source>
        </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT">
          <source>Required</source>
        </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT">
          <source>All</source>
        </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT">
          <source>These rights are a set of bit flags that you can combine using the OR bitwise operator.</source>
        </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT">
          <source>Full Control</source>
        </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delete Message</source>
        </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Message</source>
        </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Peek Message</source>
        </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Journal Message</source>
        </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Queue Properties</source>
        </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Queue Properties</source>
        </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Permissions</source>
        </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Permissions</source>
        </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" extradata="MT">
          <source>Take Queue Ownership</source>
        </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Message</source>
        </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.AccessControlList"&gt;&lt;/xref&gt;</ph> that contains one or more access control entries that specify the trustees and the permissions to grant.</source>
        </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve">
          <source>Assigns access rights to the queue based on the contents of an access control entry.</source>
        </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</source>
        </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT">
          <source>The trustee you specify when you construct the <ph id="ph1">`ace`</ph> parameter can be an individual user, a group of users, or a computer.</source>
        </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the trustee is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph>.</source>
        </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify "." for the trustee to indicate the local computer.</source>
        </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
        </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
        </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
        </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
        </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
        </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
        </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
        </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights to a queue, which you specify in the <ph id="ph1">`rights`</ph> parameter when you construct your <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph>, can be any combination of the following:</source>
        </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT">
          <source>Full Control</source>
        </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delete Message</source>
        </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Message</source>
        </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Peek Message</source>
        </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Journal Message</source>
        </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Queue Properties</source>
        </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Queue Properties</source>
        </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Permissions</source>
        </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Permissions</source>
        </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT">
          <source>Take Queue Ownership</source>
        </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Message</source>
        </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`rights`</ph> parameter you specify in the constructor for the <ph id="ph2">`ace`</ph> parameter is a flag of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT">
          <source>It represents a set of bit flags that you can combine using the bitwise operator OR when you build the <ph id="ph1">`rights`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessControlEntry"&gt;&lt;/xref&gt;</ph> that specifies a user, an access type, and a permission type.</source>
        </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve">
          <source>Gives a computer, group, or user the specified access rights.</source>
        </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to grant specified rights to an individual user.</source>
        </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can be any valid trustee, which includes individual users, groups of users, or a computer.</source>
        </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph> for the <ph id="ph4">`user`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify "." for the <ph id="ph1">`user`</ph> parameter to indicate the local computer.</source>
        </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
        </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
        </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
        </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
        </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
        </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
        </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
        </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights to a queue, specified in the <ph id="ph1">`rights`</ph> parameter, can be any combination of the following:</source>
        </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" extradata="MT">
          <source>Full Control</source>
        </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delete Message</source>
        </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Message</source>
        </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Peek Message</source>
        </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Journal Message</source>
        </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Queue Properties</source>
        </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Queue Properties</source>
        </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Permissions</source>
        </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Permissions</source>
        </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Take Queue Ownership</source>
        </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Message</source>
        </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the <ph id="ph2">`rights`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this overload, you can only grant permissions; you cannot revoke or deny them.</source>
        </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use a different overload to explicitly grant any <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> other than <ph id="ph2">`Allow`</ph>.</source>
        </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve">
          <source>The individual, group, or computer that gets additional rights to the queue.</source>
        </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessRights"&gt;&lt;/xref&gt;</ph> that indicates the set of rights to the queue that Message Queuing assigns to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">user</ph><ept id="p1">&lt;/code&gt;</ept> passed in.</source>
        </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">user</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve">
          <source>Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</source>
        </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to grant, deny, or revoke specified rights for an individual user.</source>
        </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can be any valid trustee, which includes individual users, groups of users, or a computer.</source>
        </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph> for the <ph id="ph4">`user`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify "." for the <ph id="ph1">`user`</ph> parameter to indicate the local computer.</source>
        </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
        </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
        </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
        </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
        </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
        </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
        </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
        </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights to a queue, specified in the <ph id="ph1">`rights`</ph> parameter, can be any combination of the following:</source>
        </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" extradata="MT">
          <source>Full Control</source>
        </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delete Message</source>
        </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Message</source>
        </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Peek Message</source>
        </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receive Journal Message</source>
        </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Queue Properties</source>
        </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Queue Properties</source>
        </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get Permissions</source>
        </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set Permissions</source>
        </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Take Queue Ownership</source>
        </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Message</source>
        </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the <ph id="ph2">`rights`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve">
          <source>The individual, group, or computer that gets additional rights to the queue.</source>
        </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessRights"&gt;&lt;/xref&gt;</ph> that indicates the set of rights to the queue that Message Queuing assigns to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">user</ph><ept id="p1">&lt;/code&gt;</ept> passed in.</source>
        </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.AccessControlEntryType"&gt;&lt;/xref&gt;</ph> that specifies whether to grant, deny, or revoke the permissions specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rights</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that marshals the event-handler call resulting from a <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue.ReceiveCompleted"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue.PeekCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event results from a <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> request, respectively, to a specific thread.</source>
        </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SynchronizingObject%2A&gt;</ph> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</source>
        </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the synchronizing object marshals a method call into a single thread.</source>
        </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;&lt;/xref&gt;</ph>, which represents the object that marshals the event-handler call resulting from a <ph id="ph2">&lt;xref href="System.Messaging.MessageQueue.ReceiveCompleted"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Messaging.MessageQueue.PeekCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the queue accepts only transactions.</source>
        </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transactional messaging refers to the coupling of several related messages into a single transaction.</source>
        </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</source>
        </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a queue is transactional, it accepts only messages that are sent as part of a transaction.</source>
        </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> syntax.</source>
        </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</source>
        </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</source>
        </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
        </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
        </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
        </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the queue accepts only messages sent as part of a transaction; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether received messages are copied to the journal queue.</source>
        </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</source>
        </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The journal queue is used to track the messages removed from a queue.</source>
        </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property modifies the Message Queuing queue.</source>
        </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
        </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</source>
        </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</source>
        </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, Message Queuing never removes messages from journal queues.</source>
        </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application using the queue must clear these messages either by receiving them or by purging the queue.</source>
        </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages received from the queue are copied to its journal queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a Message Queuing method.</source>
        </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve">
          <source>Gets the native handle used to send messages to the message queue.</source>
        </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.WriteHandle%2A&gt;</ph> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</source>
        </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the path of the queue, the handle is closed and reopened with a new value.</source>
        </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
        </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workgroup mode</source>
        </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Available</source>
        </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer</source>
        </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer</source>
        </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remote computer and direct format name</source>
        </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve">
          <source>A handle to the native queue object that you use for sending messages to the queue.</source>
        </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve">
          <source>The message queue is not available for writing.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>