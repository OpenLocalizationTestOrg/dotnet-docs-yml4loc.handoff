### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.WindowsImpersonationContext
  commentId: T:System.Security.Principal.WindowsImpersonationContext
  id: WindowsImpersonationContext
  children:
  - System.Security.Principal.WindowsImpersonationContext.Dispose
  - System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)
  - System.Security.Principal.WindowsImpersonationContext.Undo
  langs:
  - csharp
  name: WindowsImpersonationContext
  nameWithType: WindowsImpersonationContext
  fullName: System.Security.Principal.WindowsImpersonationContext
  type: Class
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Represents the Windows user prior to an impersonation operation.
  remarks: "This class reverts a user's identity after the user impersonates another user.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."
  example:
  - "The following example demonstrates how to impersonate a user and then revert to the original identity.  \n  \n [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]\n [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]\n [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class WindowsImpersonationContext : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.WindowsImpersonationContext.Dispose
  commentId: M:System.Security.Principal.WindowsImpersonationContext.Dispose
  id: Dispose
  parent: System.Security.Principal.WindowsImpersonationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: WindowsImpersonationContext.Dispose()
  fullName: WindowsImpersonationContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Releases all resources used by the <xref href="System.Security.Principal.WindowsImpersonationContext"></xref>.
  remarks: "Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>. The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state. After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n **Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public void Dispose ();
    parameters: []
  overload: System.Security.Principal.WindowsImpersonationContext.Dispose*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)
  commentId: M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Principal.WindowsImpersonationContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: WindowsImpersonationContext.Dispose(Boolean)
  fullName: WindowsImpersonationContext.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Releases the unmanaged resources used by the <xref href="System.Security.Principal.WindowsImpersonationContext"></xref> and optionally releases the managed resources.
  remarks: "This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Security.Principal.WindowsImpersonationContext.Dispose*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.WindowsImpersonationContext.Undo
  commentId: M:System.Security.Principal.WindowsImpersonationContext.Undo
  id: Undo
  parent: System.Security.Principal.WindowsImpersonationContext
  langs:
  - csharp
  name: Undo()
  nameWithType: WindowsImpersonationContext.Undo()
  fullName: WindowsImpersonationContext.Undo()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Reverts the user context to the Windows user represented by this object.
  remarks: ''
  example:
  - "The following example shows how to impersonate a Windows identity using a specified user token.  \n  \n [!code-cpp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CS/source.cs#1)]\n [!code-vb[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/VB/source.vb#1)]"
  syntax:
    content: public void Undo ();
    parameters: []
  overload: System.Security.Principal.WindowsImpersonationContext.Undo*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: An attempt is made to use this method for any purpose other than to revert identity to self.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.Security.Principal.WindowsImpersonationContext.Dispose
  parent: System.Security.Principal.WindowsImpersonationContext
  isExternal: false
  name: Dispose()
  nameWithType: WindowsImpersonationContext.Dispose()
  fullName: WindowsImpersonationContext.Dispose()
- uid: System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)
  parent: System.Security.Principal.WindowsImpersonationContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: WindowsImpersonationContext.Dispose(Boolean)
  fullName: WindowsImpersonationContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.WindowsImpersonationContext.Undo
  parent: System.Security.Principal.WindowsImpersonationContext
  isExternal: false
  name: Undo()
  nameWithType: WindowsImpersonationContext.Undo()
  fullName: WindowsImpersonationContext.Undo()
- uid: System.Security.Principal.WindowsImpersonationContext.Dispose*
  parent: System.Security.Principal.WindowsImpersonationContext
  isExternal: false
  name: Dispose
  nameWithType: WindowsImpersonationContext.Dispose
  fullName: WindowsImpersonationContext.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
- uid: System.Security.Principal.WindowsImpersonationContext.Undo*
  parent: System.Security.Principal.WindowsImpersonationContext
  isExternal: false
  name: Undo
  nameWithType: WindowsImpersonationContext.Undo
  fullName: WindowsImpersonationContext.Undo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
