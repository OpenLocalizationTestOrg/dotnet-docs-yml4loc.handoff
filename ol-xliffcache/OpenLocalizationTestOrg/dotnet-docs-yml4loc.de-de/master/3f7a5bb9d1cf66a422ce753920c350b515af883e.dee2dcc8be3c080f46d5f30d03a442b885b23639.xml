{"nodes":[{"content":"Represents an abstract data source that data-bound controls bind to.","nodes":[{"pos":[0,68],"content":"Represents an abstract data source that data-bound controls bind to.","nodes":[{"content":"Represents an abstract data source that data-bound controls bind to.","pos":[0,68]}]}],"pos":[475,544],"yaml":true},{"content":"ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.  \n  \n You implement the <xref:System.Web.UI.IDataSource> interface when you want to implement your own custom ASP.NET data source control.  \n  \n Any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control. The <xref:System.Web.UI.IDataSource> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <xref:System.Web.UI.IDataSource.GetView%2A> method and the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method. This concept is that all data source controls support one or more named views on their data. The data source view object is similar to the <xref:System.Data.DataView> abstraction in the <xref:System.Data> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines. At its core, a data source control does nothing more than retrieve views on data.  \n  \n A data source control can have one or more associated data source view objects. Some data source controls, including those that represent relational databases such as <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource>, support only one view. Other data source controls, including hierarchical data source controls such as <xref:System.Web.UI.WebControls.SiteMapDataSource>, support many views. The data source view defines the capabilities of a data source and the operations that it supports.  \n  \n In summary, data source controls implement the <xref:System.Web.UI.IDataSource> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent. Data source controls always retrieve data on demand, such as when `DataBind` is called on a data bound control.","nodes":[{"pos":[0,542],"content":"ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","nodes":[{"content":"ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","pos":[0,542],"nodes":[{"content":"ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion.","pos":[0,126]},{"content":"Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls.","pos":[127,282]},{"content":"Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on.","pos":[283,405]},{"content":"Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","pos":[406,542]}]}]},{"pos":[549,681],"content":"You implement the <xref:System.Web.UI.IDataSource> interface when you want to implement your own custom ASP.NET data source control.","nodes":[{"content":"You implement the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface when you want to implement your own custom ASP.NET data source control.","pos":[0,132],"source":"You implement the <xref:System.Web.UI.IDataSource> interface when you want to implement your own custom ASP.NET data source control."}]},{"pos":[688,1519],"content":"Any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control. The <xref:System.Web.UI.IDataSource> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <xref:System.Web.UI.IDataSource.GetView%2A> method and the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method. This concept is that all data source controls support one or more named views on their data. The data source view object is similar to the <xref:System.Data.DataView> abstraction in the <xref:System.Data> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines. At its core, a data source control does nothing more than retrieve views on data.","nodes":[{"content":"Any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control. The <xref:System.Web.UI.IDataSource> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <xref:System.Web.UI.IDataSource.GetView%2A> method and the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method. This concept is that all data source controls support one or more named views on their data. The data source view object is similar to the <xref:System.Data.DataView> abstraction in the <xref:System.Data> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines. At its core, a data source control does nothing more than retrieve views on data.","pos":[0,831],"nodes":[{"content":"Any class that implements the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface is a data source control.","pos":[0,98],"source":"Any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <ph id=\"ph2\">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method.","pos":[99,419],"source":" The <xref:System.Web.UI.IDataSource> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <xref:System.Web.UI.IDataSource.GetView%2A> method and the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method."},{"content":"This concept is that all data source controls support one or more named views on their data.","pos":[420,512]},{"content":"The data source view object is similar to the <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> abstraction in the <ph id=\"ph2\">&lt;xref:System.Data&gt;</ph> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines.","pos":[513,749],"source":" The data source view object is similar to the <xref:System.Data.DataView> abstraction in the <xref:System.Data> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines."},{"content":"At its core, a data source control does nothing more than retrieve views on data.","pos":[750,831]}]}]},{"pos":[1526,2069],"content":"A data source control can have one or more associated data source view objects. Some data source controls, including those that represent relational databases such as <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource>, support only one view. Other data source controls, including hierarchical data source controls such as <xref:System.Web.UI.WebControls.SiteMapDataSource>, support many views. The data source view defines the capabilities of a data source and the operations that it supports.","nodes":[{"content":"A data source control can have one or more associated data source view objects. Some data source controls, including those that represent relational databases such as <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource>, support only one view. Other data source controls, including hierarchical data source controls such as <xref:System.Web.UI.WebControls.SiteMapDataSource>, support many views. The data source view defines the capabilities of a data source and the operations that it supports.","pos":[0,543],"nodes":[{"content":"A data source control can have one or more associated data source view objects.","pos":[0,79]},{"content":"Some data source controls, including those that represent relational databases such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>, support only one view.","pos":[80,291],"source":" Some data source controls, including those that represent relational databases such as <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource>, support only one view."},{"content":"Other data source controls, including hierarchical data source controls such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.SiteMapDataSource&gt;</ph>, support many views.","pos":[292,443],"source":" Other data source controls, including hierarchical data source controls such as <xref:System.Web.UI.WebControls.SiteMapDataSource>, support many views."},{"content":"The data source view defines the capabilities of a data source and the operations that it supports.","pos":[444,543]}]}]},{"pos":[2076,2409],"content":"In summary, data source controls implement the <xref:System.Web.UI.IDataSource> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent. Data source controls always retrieve data on demand, such as when `DataBind` is called on a data bound control.","nodes":[{"content":"In summary, data source controls implement the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent.","pos":[0,221],"source":"In summary, data source controls implement the <xref:System.Web.UI.IDataSource> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent."},{"content":"Data source controls always retrieve data on demand, such as when <ph id=\"ph1\">`DataBind`</ph> is called on a data bound control.","pos":[222,333],"source":" Data source controls always retrieve data on demand, such as when `DataBind` is called on a data bound control."}]}],"pos":[555,2975],"yaml":true,"extradata":"MT"},{"content":"Occurs when a data source control has changed in some way that affects data-bound controls.","nodes":[{"pos":[0,91],"content":"Occurs when a data source control has changed in some way that affects data-bound controls.","nodes":[{"content":"Occurs when a data source control has changed in some way that affects data-bound controls.","pos":[0,91]}]}],"pos":[5360,5452],"yaml":true},{"content":"The <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data. For example, the event is raised if a file name property, such as the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> property, is changed on a file-based data source control.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,425],"content":"The <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data. For example, the event is raised if a file name property, such as the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> property, is changed on a file-based data source control.","nodes":[{"content":"The <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data. For example, the event is raised if a file name property, such as the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> property, is changed on a file-based data source control.","pos":[0,425],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data.","pos":[0,235],"source":"The <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data."},{"content":"For example, the event is raised if a file name property, such as the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt;</ph> property, is changed on a file-based data source control.","pos":[236,425],"source":" For example, the event is raised if a file name property, such as the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> property, is changed on a file-based data source control."}]}]},{"pos":[432,574],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[5463,6042],"yaml":true,"extradata":"MT"},{"content":"Gets the named data source view associated with the data source control.","nodes":[{"pos":[0,72],"content":"Gets the named data source view associated with the data source control.","nodes":[{"content":"Gets the named data source view associated with the data source control.","pos":[0,72]}]}],"pos":[7094,7167],"yaml":true},{"content":"Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class. The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.  \n  \n Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetView%2A> method to return strongly typed view objects associated with the class.","nodes":[{"pos":[0,405],"content":"Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class. The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.","nodes":[{"content":"Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class. The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.","pos":[0,405],"nodes":[{"content":"Data source control classes can support one or more views on their underlying data.","pos":[0,83]},{"content":"These views are represented by instances of the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> class.","pos":[84,174],"source":" These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class."},{"content":"The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.","pos":[175,405]}]}]},{"pos":[412,631],"content":"Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetView%2A> method to return strongly typed view objects associated with the class.","nodes":[{"content":"Data source control classes that implement the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implement the <ph id=\"ph2\">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method to return strongly typed view objects associated with the class.","pos":[0,219],"source":"Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetView%2A> method to return strongly typed view objects associated with the class."}]}],"pos":[7178,7814],"yaml":true,"extradata":"MT"},{"content":"The name of the view to retrieve.","nodes":[{"pos":[0,33],"content":"The name of the view to retrieve.","nodes":[{"content":"The name of the view to retrieve.","pos":[0,33]}]}],"pos":[8854,8888],"yaml":true},{"content":"Returns the named <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>.","nodes":[{"pos":[0,135],"content":"Returns the named <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IDataSource\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the named <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>."}],"pos":[8960,9096],"yaml":true},{"content":"Gets a collection of names representing the list of view objects associated with the <xref href=\"System.Web.UI.IDataSource\"></xref> interface.","nodes":[{"pos":[0,142],"content":"Gets a collection of names representing the list of view objects associated with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IDataSource\"&gt;&lt;/xref&gt;</ph> interface.","source":"Gets a collection of names representing the list of view objects associated with the <xref href=\"System.Web.UI.IDataSource\"></xref> interface."}],"pos":[10028,10171],"yaml":true},{"content":"Data source control classes can support one or more named views on their underlying data. The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method returns a collection of view names currently associated with the data source control instance. Callers can iterate through the collection of view names and retrieve individual <xref:System.Web.UI.DataSourceView> objects with the <xref:System.Web.UI.IDataSource.GetView%2A> method.  \n  \n Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method to return a collection of names that represents all the data source view objects currently associated with the data source control class.","nodes":[{"pos":[0,430],"content":"Data source control classes can support one or more named views on their underlying data. The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method returns a collection of view names currently associated with the data source control instance. Callers can iterate through the collection of view names and retrieve individual <xref:System.Web.UI.DataSourceView> objects with the <xref:System.Web.UI.IDataSource.GetView%2A> method.","nodes":[{"content":"Data source control classes can support one or more named views on their underlying data. The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method returns a collection of view names currently associated with the data source control instance. Callers can iterate through the collection of view names and retrieve individual <xref:System.Web.UI.DataSourceView> objects with the <xref:System.Web.UI.IDataSource.GetView%2A> method.","pos":[0,430],"nodes":[{"content":"Data source control classes can support one or more named views on their underlying data.","pos":[0,89]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method returns a collection of view names currently associated with the data source control instance.","pos":[90,244],"source":" The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method returns a collection of view names currently associated with the data source control instance."},{"content":"Callers can iterate through the collection of view names and retrieve individual <ph id=\"ph1\">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> objects with the <ph id=\"ph2\">&lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;</ph> method.","pos":[245,430],"source":" Callers can iterate through the collection of view names and retrieve individual <xref:System.Web.UI.DataSourceView> objects with the <xref:System.Web.UI.IDataSource.GetView%2A> method."}]}]},{"pos":[437,734],"content":"Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method to return a collection of names that represents all the data source view objects currently associated with the data source control class.","nodes":[{"content":"Data source control classes that implement the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface implement the <ph id=\"ph2\">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method to return a collection of names that represents all the data source view objects currently associated with the data source control class.","pos":[0,297],"source":"Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method to return a collection of names that represents all the data source view objects currently associated with the data source control class."}]}],"pos":[10182,10921],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the views associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>.","nodes":[{"pos":[0,159],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> that contains the names of the views associated with the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IDataSource\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the views associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>."}],"pos":[11954,12114],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.IDataSource\n  commentId: T:System.Web.UI.IDataSource\n  id: IDataSource\n  children:\n  - System.Web.UI.IDataSource.DataSourceChanged\n  - System.Web.UI.IDataSource.GetView(System.String)\n  - System.Web.UI.IDataSource.GetViewNames\n  langs:\n  - csharp\n  name: IDataSource\n  nameWithType: IDataSource\n  fullName: System.Web.UI.IDataSource\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Represents an abstract data source that data-bound controls bind to.\n  remarks: \"ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.  \\n  \\n You implement the <xref:System.Web.UI.IDataSource> interface when you want to implement your own custom ASP.NET data source control.  \\n  \\n Any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control. The <xref:System.Web.UI.IDataSource> interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the <xref:System.Web.UI.IDataSource.GetView%2A> method and the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method. This concept is that all data source controls support one or more named views on their data. The data source view object is similar to the <xref:System.Data.DataView> abstraction in the <xref:System.Data> namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines. At its core, a data source control does nothing more than retrieve views on data.  \\n  \\n A data source control can have one or more associated data source view objects. Some data source controls, including those that represent relational databases such as <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource>, support only one view. Other data source controls, including hierarchical data source controls such as <xref:System.Web.UI.WebControls.SiteMapDataSource>, support many views. The data source view defines the capabilities of a data source and the operations that it supports.  \\n  \\n In summary, data source controls implement the <xref:System.Web.UI.IDataSource> interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent. Data source controls always retrieve data on demand, such as when `DataBind` is called on a data bound control.\"\n  example:\n  - \"The following code example demonstrates how a class can implement the methods defined by the <xref:System.Web.UI.IDataSource> interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \\n  \\n [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]\"\n  syntax:\n    content: public interface IDataSource\n  derivedClasses:\n  - System.Web.DynamicData.IDynamicDataSource\n  - System.Web.UI.DataSourceControl\n  - System.Web.UI.WebControls.IQueryableDataSource\n  - System.Web.UI.WebControls.ModelDataSource\n  - System.Web.UI.WebControls.SiteMapDataSource\n  - System.Web.UI.WebControls.XmlDataSource\n  implements: []\n  extensionMethods:\n  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.IDataSource.DataSourceChanged\n  commentId: E:System.Web.UI.IDataSource.DataSourceChanged\n  id: DataSourceChanged\n  parent: System.Web.UI.IDataSource\n  langs:\n  - csharp\n  name: DataSourceChanged\n  nameWithType: IDataSource.DataSourceChanged\n  fullName: IDataSource.DataSourceChanged\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs when a data source control has changed in some way that affects data-bound controls.\n  remarks: \"The <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data. For example, the event is raised if a file name property, such as the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> property, is changed on a file-based data source control.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler DataSourceChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.IDataSource.GetView(System.String)\n  commentId: M:System.Web.UI.IDataSource.GetView(System.String)\n  id: GetView(System.String)\n  parent: System.Web.UI.IDataSource\n  langs:\n  - csharp\n  name: GetView(String)\n  nameWithType: IDataSource.GetView(String)\n  fullName: IDataSource.GetView(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the named data source view associated with the data source control.\n  remarks: \"Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class. The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.  \\n  \\n Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetView%2A> method to return strongly typed view objects associated with the class.\"\n  example:\n  - \"The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the <xref:System.Web.UI.IDataSource.GetView%2A> method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \\n  \\n [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]\"\n  syntax:\n    content: public System.Web.UI.DataSourceView GetView (string viewName);\n    parameters:\n    - id: viewName\n      type: System.String\n      description: The name of the view to retrieve.\n    return:\n      type: System.Web.UI.DataSourceView\n      description: Returns the named <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>.\n  overload: System.Web.UI.IDataSource.GetView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.IDataSource.GetViewNames\n  commentId: M:System.Web.UI.IDataSource.GetViewNames\n  id: GetViewNames\n  parent: System.Web.UI.IDataSource\n  langs:\n  - csharp\n  name: GetViewNames()\n  nameWithType: IDataSource.GetViewNames()\n  fullName: IDataSource.GetViewNames()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a collection of names representing the list of view objects associated with the <xref href=\"System.Web.UI.IDataSource\"></xref> interface.\n  remarks: \"Data source control classes can support one or more named views on their underlying data. The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method returns a collection of view names currently associated with the data source control instance. Callers can iterate through the collection of view names and retrieve individual <xref:System.Web.UI.DataSourceView> objects with the <xref:System.Web.UI.IDataSource.GetView%2A> method.  \\n  \\n Data source control classes that implement the <xref:System.Web.UI.IDataSource> interface implement the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method to return a collection of names that represents all the data source view objects currently associated with the data source control class.\"\n  example:\n  - \"The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the <xref:System.Web.UI.IDataSource.GetViewNames%2A> method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \\n  \\n [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]\"\n  syntax:\n    content: public System.Collections.ICollection GetViewNames ();\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the views associated with the <xref href=\"System.Web.UI.IDataSource\"></xref>.\n  overload: System.Web.UI.IDataSource.GetViewNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.IDataSource.DataSourceChanged\n  parent: System.Web.UI.IDataSource\n  isExternal: false\n  name: DataSourceChanged\n  nameWithType: IDataSource.DataSourceChanged\n  fullName: IDataSource.DataSourceChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.UI.IDataSource.GetView(System.String)\n  parent: System.Web.UI.IDataSource\n  isExternal: false\n  name: GetView(String)\n  nameWithType: IDataSource.GetView(String)\n  fullName: IDataSource.GetView(String)\n- uid: System.Web.UI.DataSourceView\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceView\n  nameWithType: DataSourceView\n  fullName: System.Web.UI.DataSourceView\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.IDataSource.GetViewNames\n  parent: System.Web.UI.IDataSource\n  isExternal: false\n  name: GetViewNames()\n  nameWithType: IDataSource.GetViewNames()\n  fullName: IDataSource.GetViewNames()\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Web.UI.IDataSource.GetView*\n  parent: System.Web.UI.IDataSource\n  isExternal: false\n  name: GetView\n  nameWithType: IDataSource.GetView\n  fullName: IDataSource.GetView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n- uid: System.Web.UI.IDataSource.GetViewNames*\n  parent: System.Web.UI.IDataSource\n  isExternal: false\n  name: GetViewNames\n  nameWithType: IDataSource.GetViewNames\n  fullName: IDataSource.GetViewNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/IDataSource.xml\n- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: GetDefaultValues(IDataSource)\n  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)\n  fullName: DynamicDataExtensions.GetDefaultValues(IDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: GetMetaTable(IDataSource)\n  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)\n  fullName: DynamicDataExtensions.GetMetaTable(IDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: TryGetMetaTable(IDataSource, MetaTable)\n  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource, MetaTable)\n  fullName: DynamicDataExtensions.TryGetMetaTable(IDataSource, MetaTable)\n"}