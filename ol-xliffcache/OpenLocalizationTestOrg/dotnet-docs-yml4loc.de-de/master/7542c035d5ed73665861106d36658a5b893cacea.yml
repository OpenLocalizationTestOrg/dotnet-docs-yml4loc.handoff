### YamlMime:ManagedReference
items:
- uid: System.Data.TypedTableBaseExtensions
  commentId: T:System.Data.TypedTableBaseExtensions
  id: TypedTableBaseExtensions
  children:
  - System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})
  - System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)
  - System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  - System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  - System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  - System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})
  langs:
  - csharp
  name: TypedTableBaseExtensions
  nameWithType: TypedTableBaseExtensions
  fullName: System.Data.TypedTableBaseExtensions
  type: Class
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Contains the extension methods for the <xref href="System.Data.TypedTableBase`1"></xref> class.
  remarks: "The class contains static extension methods that define the <xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A> method and standard query operations for typed data sets.  \n  \n This class cannot be instantiated."
  syntax:
    content: public static class TypedTableBaseExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})
  commentId: M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})
  id: AsEnumerable``1(System.Data.TypedTableBase{``0})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: AsEnumerable<TRow>(TypedTableBase<TRow>)
  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)
  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Enumerates the data row elements of the <xref href="System.Data.TypedTableBase`1"></xref> and returns an <xref href="System.Data.EnumerableRowCollection`1"></xref> object, where the generic parameter <code>T</code> is <xref href="System.Data.DataRow"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.
  syntax:
    content: 'public static System.Data.EnumerableRowCollection<TRow> AsEnumerable<TRow> (this System.Data.TypedTableBase<TRow> source) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: The source <xref href="System.Data.TypedTableBase`1"></xref> to make enumerable.
    typeParameters:
    - id: TRow
      description: The type to convert the elements of the source to.
    return:
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection`1"></xref> object, where the generic parameter <code>T</code> is <xref href="System.Data.DataRow"></xref>.
  overload: System.Data.TypedTableBaseExtensions.AsEnumerable``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)
  commentId: M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)
  id: ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Returns the element at a specified row in a sequence or a default value if the row is out of range.
  syntax:
    content: 'public static TRow ElementAtOrDefault<TRow> (this System.Data.TypedTableBase<TRow> source, int index) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: An enumerable object to return an element from.
    - id: index
      type: System.Int32
      description: The zero-based index of the element to retrieve.
    typeParameters:
    - id: TRow
      description: The type of the elements or the row.
    return:
      type: TRow
      description: The element at a specified row in a sequence.
  overload: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  commentId: M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  id: OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.TypedTableBase`1"></xref> in ascending order according to the specified key.
  syntax:
    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.TypedTableBaseExtensions.OrderBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.TypedTableBase`1"></xref> in ascending order according to the specified key and comparer.
  syntax:
    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.TypedTableBaseExtensions.OrderBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  commentId: M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  id: OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.TypedTableBase`1"></xref> in descending order according to the specified key.
  syntax:
    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.TypedTableBaseExtensions.OrderByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.TypedTableBase`1"></xref> in descending order according to the specified key and comparer.
  syntax:
    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.TypedTableBaseExtensions.OrderByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  commentId: M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  id: Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
  nameWithType: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
  fullName: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Projects each element of a <xref href="System.Data.TypedTableBase`1"></xref> into a new form.
  remarks: This projection method requires the transformation function, `selector`, to produce one value for each value in the source sequence, `source`. If `selector` returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.
  syntax:
    content: 'public static System.Data.EnumerableRowCollection<S> Select<TRow,S> (this System.Data.TypedTableBase<TRow> source, Func<TRow,S> selector) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to invoke a transformation function upon.
    - id: selector
      type: System.Func{TRow,S}
      description: A transformation function to apply to each element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, <xref href="System.Data.DataRow"></xref>.
    - id: S
      description: ''
    return:
      type: System.Data.EnumerableRowCollection{S}
      description: An <xref href="System.Data.EnumerableRowCollection`1"></xref> whose elements are the result of invoking the transformation function on each element of <code>source</code>.
  overload: System.Data.TypedTableBaseExtensions.Select``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})
  id: Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})
  parent: System.Data.TypedTableBaseExtensions
  langs:
  - csharp
  name: Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
  nameWithType: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
  fullName: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Filters a sequence of rows based on the specified predicate.
  syntax:
    content: 'public static System.Data.EnumerableRowCollection<TRow> Where<TRow> (this System.Data.TypedTableBase<TRow> source, Func<TRow,bool> predicate) where TRow : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.TypedTableBase{TRow}
      description: A <xref href="System.Data.TypedTableBase`1"></xref> that contains the <xref href="System.Data.DataRow"></xref> elements to filter.
    - id: predicate
      type: System.Func{TRow,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, <xref href="System.Data.DataRow"></xref>.
    return:
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> that contains rows from the input sequence that satisfy the condition.
  overload: System.Data.TypedTableBaseExtensions.Where``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: AsEnumerable<TRow>(TypedTableBase<TRow>)
  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)
  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)
- uid: System.Data.EnumerableRowCollection`1
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<TRow>
  nameWithType: EnumerableRowCollection<TRow>
  fullName: System.Data.EnumerableRowCollection<TRow>
- uid: System.Data.TypedTableBase`1
  name: TypedTableBase<T>
  nameWithType: TypedTableBase<T>
  fullName: System.Data.TypedTableBase<T>
- uid: TRow
  name: TRow
  nameWithType: TRow
  fullName: TRow
- uid: System.Data.TypedTableBase{TRow}
  parent: System.Data
  isExternal: false
  name: TypedTableBase<TRow>
  nameWithType: TypedTableBase<TRow>
  fullName: System.Data.TypedTableBase<TRow>
  spec.csharp:
  - uid: System.Data.TypedTableBase`1
    name: TypedTableBase
    nameWithType: TypedTableBase
    fullName: System.Data.TypedTableBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
- uid: System.Data.OrderedEnumerableRowCollection`1
  parent: System.Data
  isExternal: false
  name: OrderedEnumerableRowCollection<TRow>
  nameWithType: OrderedEnumerableRowCollection<TRow>
  fullName: System.Data.OrderedEnumerableRowCollection<TRow>
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Func{TRow,TKey}
  parent: System
  isExternal: false
  name: Func<TRow,TKey>
  nameWithType: Func<TRow,TKey>
  fullName: System.Func<TRow,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)
- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
  nameWithType: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
  fullName: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)
- uid: S
  name: S
  nameWithType: S
  fullName: S
- uid: System.Data.EnumerableRowCollection{S}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<S>
  nameWithType: EnumerableRowCollection<S>
  fullName: System.Data.EnumerableRowCollection<S>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: System.Data.EnumerableRowCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TRow,S}
  parent: System
  isExternal: false
  name: Func<TRow,S>
  nameWithType: Func<TRow,S>
  fullName: System.Func<TRow,S>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
  nameWithType: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
  fullName: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{TRow,System.Boolean}
  parent: System
  isExternal: false
  name: Func<TRow,Boolean>
  nameWithType: Func<TRow,Boolean>
  fullName: System.Func<TRow,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: AsEnumerable<TRow>
  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>
  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: ElementAtOrDefault<TRow>
  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>
  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Data.TypedTableBaseExtensions.OrderBy``2*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>
  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>
  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>
  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>
  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Data.TypedTableBaseExtensions.Select``2*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: Select<TRow,S>
  nameWithType: TypedTableBaseExtensions.Select<TRow,S>
  fullName: TypedTableBaseExtensions.Select<TRow,S>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Data.TypedTableBaseExtensions.Where``1*
  parent: System.Data.TypedTableBaseExtensions
  isExternal: false
  name: Where<TRow>
  nameWithType: TypedTableBaseExtensions.Where<TRow>
  fullName: TypedTableBaseExtensions.Where<TRow>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
