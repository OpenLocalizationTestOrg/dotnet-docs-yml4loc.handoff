{"nodes":[{"content":"A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).","nodes":[{"pos":[0,135],"content":"A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).","nodes":[{"content":"A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).","pos":[0,135]}]}],"pos":[1895,2031],"yaml":true},{"content":"Creates a new <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from any source.","nodes":[{"pos":[0,169],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from any source.","source":"Creates a new <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from any source."}],"pos":[3806,3976],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.  \n  \n The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.  \n  \n The `localPort` parameter must not specify a port less than 1,024.","nodes":[{"pos":[0,192],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.","pos":[0,192],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket."}]},{"pos":[199,276],"content":"The <ph id=\"ph1\">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.","source":"The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address."},{"pos":[283,349],"content":"The <ph id=\"ph1\">`localPort`</ph> parameter must not specify a port less than 1,024.","source":"The `localPort` parameter must not specify a port less than 1,024."}],"pos":[3987,4343],"yaml":true,"extradata":"MT"},{"content":"The multicast group address for this receiver to subscribe to.","nodes":[{"pos":[0,62],"content":"The multicast group address for this receiver to subscribe to.","nodes":[{"content":"The multicast group address for this receiver to subscribe to.","pos":[0,62]}]}],"pos":[4695,4758],"yaml":true},{"content":"The local port for this receiver to bind to.","nodes":[{"pos":[0,44],"content":"The local port for this receiver to bind to.","nodes":[{"content":"The local port for this receiver to bind to.","pos":[0,44]}]}],"pos":[4822,4867],"yaml":true},{"content":"<code>groupAddress</code> is `null`. reference","nodes":[{"pos":[0,46],"content":"<code>groupAddress</code> is `null`. reference","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;groupAddress&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,36],"source":"<code>groupAddress</code> is `null`."},{"content":"reference","pos":[37,46]}]}],"pos":[5049,5096],"yaml":true},{"content":"<code>localPort</code> is less than 0 -or- <code>localPort</code> is greater than 65,535.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;localPort&lt;/code&gt;</ph> is less than 0 -or- <ph id=\"ph2\">&lt;code&gt;localPort&lt;/code&gt;</ph> is greater than 65,535.","source":"<code>localPort</code> is less than 0 -or- <code>localPort</code> is greater than 65,535."}],"pos":[5210,5300],"yaml":true},{"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.","nodes":[{"pos":[0,129],"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.","nodes":[{"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.","pos":[0,129]}]}],"pos":[6481,6611],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.  \n  \n The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"pos":[0,369],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.","pos":[0,369],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant.","pos":[0,227],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant."},{"content":"The local port and multicast group address are specified in the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.","pos":[228,369],"source":" The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor."}]}]},{"pos":[376,497],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.","source":"The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed."},{"pos":[504,860],"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","pos":[0,356],"nodes":[{"content":"If required by the runtime, the  <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.","pos":[0,208],"source":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group."},{"content":"If the client is not allowed access, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","pos":[209,356],"source":" If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."}]}]}],"pos":[6622,7489],"yaml":true,"extradata":"MT"},{"content":"A callback method to invoke when the operation completes.","nodes":[{"pos":[0,57],"content":"A callback method to invoke when the operation completes.","nodes":[{"content":"A callback method to invoke when the operation completes.","pos":[0,57]}]}],"pos":[7825,7883],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[7944,8035],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[8098,8238],"yaml":true},{"content":"The multicast group has already been joined or a join operation is currently in progress.","nodes":[{"pos":[0,89],"content":"The multicast group has already been joined or a join operation is currently in progress.","nodes":[{"content":"The multicast group has already been joined or a join operation is currently in progress.","pos":[0,89]}]}],"pos":[8437,8527],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[8633,8724],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[8838,8894],"yaml":true},{"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.","nodes":[{"pos":[0,165],"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.","nodes":[{"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.","pos":[0,165]}]}],"pos":[10303,10469],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,403],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.","pos":[0,403],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from any sender.","pos":[0,184],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender."},{"content":"The local port and multicast group address are specified in the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.","pos":[185,326],"source":" The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor."},{"content":"The multicast client must also have completed a join to the multicast group.","pos":[327,403]}]}]},{"pos":[410,497],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has received.","source":"The method specified in the `callback` parameter is invoked when a packet has received."},{"pos":[504,808],"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,304],"nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.","pos":[0,119]},{"content":"If a socket failure occurs, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[120,202],"source":" If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[203,304],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[10480,11295],"yaml":true,"extradata":"MT"},{"content":"The buffer to store the received data.","nodes":[{"pos":[0,38],"content":"The buffer to store the received data.","nodes":[{"content":"The buffer to store the received data.","pos":[0,38]}]}],"pos":[11667,11706],"yaml":true},{"content":"The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored.","nodes":[{"pos":[0,100],"content":"The offset, in bytes, from the beginning of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the data should be stored.","source":"The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored."}],"pos":[11767,11868],"yaml":true},{"content":"The maximum number of bytes to receive and store in the <code>buffer</code>.","nodes":[{"pos":[0,76],"content":"The maximum number of bytes to receive and store in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The maximum number of bytes to receive and store in the <code>buffer</code>."}],"pos":[11928,12005],"yaml":true},{"content":"The callback method to invoke when the operation completes.","nodes":[{"pos":[0,59],"content":"The callback method to invoke when the operation completes.","nodes":[{"content":"The callback method to invoke when the operation completes.","pos":[0,59]}]}],"pos":[12076,12136],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[12197,12288],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[12351,12491],"yaml":true},{"content":"<code>buffer</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>buffer</code> is a null reference (Nothing in Visual Basic)."}],"pos":[12689,12756],"yaml":true},{"content":"<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0","source":"<code>offset</code> is less than 0"},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,126],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> is greater than the length of the <code>buffer</code>."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,177],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0","source":"<code>count</code> is less than 0"},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,284],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus the count is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus the count is greater than the length of the <code>buffer</code>."}],"pos":[12870,13169],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[13279,13324],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[13430,13521],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[13635,13691],"yaml":true},{"content":"Begins the operation of sending a unicast packet to the specified destination.","nodes":[{"pos":[0,78],"content":"Begins the operation of sending a unicast packet to the specified destination.","nodes":[{"content":"Begins the operation of sending a unicast packet to the specified destination.","pos":[0,78]}]}],"pos":[15142,15221],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \n  \n The client must have completed a join to the multicast group. The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver. Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException>is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,154],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> method begins an operation of sending a UDP packet to the joined multicast group.","pos":[0,154],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group."}]},{"pos":[161,467],"content":"The client must have completed a join to the multicast group. The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver. Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.","nodes":[{"content":"The client must have completed a join to the multicast group.","pos":[0,61]},{"content":"The destination address specified in the <ph id=\"ph1\">`remoteEndPoint`</ph> parameter must have already sent a multicast packet to this receiver.","pos":[62,189],"source":" The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver."},{"content":"Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.","pos":[190,306]}]},{"pos":[474,561],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has received.","source":"The method specified in the `callback` parameter is invoked when a packet has received."},{"pos":[568,861],"content":"The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"content":"The transmission is only allowed if the address specified in the <ph id=\"ph1\">`remoteEndPoint`</ph> parameter has already sent a multicast packet to this receiver.","pos":[0,145],"source":"The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver."},{"content":"If the client is not allowed access, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","pos":[146,293],"source":" If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."}]},{"pos":[868,1065],"content":"If the destination port specified in the <ph id=\"ph1\">`remoteEndPoint`</ph> parameter is less than 1,024, a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>is thrown with <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","source":"If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException>is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."},{"pos":[1072,1376],"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,304],"nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.","pos":[0,119]},{"content":"If a socket failure occurs, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[120,202],"source":" If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[203,304],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[15232,16621],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains the data to send.","nodes":[{"pos":[0,42],"content":"The buffer that contains the data to send.","nodes":[{"content":"The buffer that contains the data to send.","pos":[0,42]}]}],"pos":[17021,17064],"yaml":true},{"content":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.","nodes":[{"pos":[0,96],"content":"The offset, in bytes, from the beginning of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read the data to be sent.","source":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent."}],"pos":[17125,17222],"yaml":true},{"content":"The number of bytes to send from the <code>buffer</code>.","nodes":[{"pos":[0,57],"content":"The number of bytes to send from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number of bytes to send from the <code>buffer</code>."}],"pos":[17282,17340],"yaml":true},{"content":"The remote endpoint to which the packet is to be sent.","nodes":[{"pos":[0,54],"content":"The remote endpoint to which the packet is to be sent.","nodes":[{"content":"The remote endpoint to which the packet is to be sent.","pos":[0,54]}]}],"pos":[17418,17473],"yaml":true},{"content":"The callback method to invoke when the operation completes.","nodes":[{"pos":[0,59],"content":"The callback method to invoke when the operation completes.","nodes":[{"content":"The callback method to invoke when the operation completes.","pos":[0,59]}]}],"pos":[17544,17604],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[17665,17756],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[17819,17959],"yaml":true},{"content":"<code>buffer</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>buffer</code> is a null reference (Nothing in Visual Basic)."}],"pos":[18147,18214],"yaml":true},{"content":"<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0","source":"<code>offset</code> is less than 0"},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,126],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> is greater than the length of the <code>buffer</code>."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,177],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0","source":"<code>count</code> is less than 0"},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,284],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus the count is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus the count is greater than the length of the <code>buffer</code>."}],"pos":[18328,18627],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[18737,18782],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[18888,18979],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[19093,19149],"yaml":true},{"content":"Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.","nodes":[{"pos":[0,145],"content":"Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.","nodes":[{"content":"Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.","pos":[0,145]}]}],"pos":[20528,20674],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \n  \n The client must have completed a join to the multicast group.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,159],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> method begins an operation of sending a UDP packet to the joined multicast group.","pos":[0,159],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group."}]},{"pos":[166,227],"content":"The client must have completed a join to the multicast group.","nodes":[{"content":"The client must have completed a join to the multicast group.","pos":[0,61]}]},{"pos":[234,321],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has received.","source":"The method specified in the `callback` parameter is invoked when a packet has received."},{"pos":[328,632],"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,304],"nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.","pos":[0,119]},{"content":"If a socket failure occurs, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[120,202],"source":" If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[203,304],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[20685,21326],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains the data to send.","nodes":[{"pos":[0,42],"content":"The buffer that contains the data to send.","nodes":[{"content":"The buffer that contains the data to send.","pos":[0,42]}]}],"pos":[21693,21736],"yaml":true},{"content":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.","nodes":[{"pos":[0,96],"content":"The offset, in bytes, from the beginning of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read the data to be sent.","source":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent."}],"pos":[21797,21894],"yaml":true},{"content":"The number of bytes to send from the <code>buffer</code>.","nodes":[{"pos":[0,57],"content":"The number of bytes to send from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number of bytes to send from the <code>buffer</code>."}],"pos":[21954,22012],"yaml":true},{"content":"The callback method to invoke when the operation completes.","nodes":[{"pos":[0,59],"content":"The callback method to invoke when the operation completes.","nodes":[{"content":"The callback method to invoke when the operation completes.","pos":[0,59]}]}],"pos":[22083,22143],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[22204,22295],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[22358,22498],"yaml":true},{"content":"<code>buffer</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>buffer</code> is a null reference (Nothing in Visual Basic)."}],"pos":[22691,22758],"yaml":true},{"content":"<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0","source":"<code>offset</code> is less than 0"},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,126],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> is greater than the length of the <code>buffer</code>."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,177],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0","source":"<code>count</code> is less than 0"},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,284],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus the count is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus the count is greater than the length of the <code>buffer</code>."}],"pos":[22872,23171],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[23281,23326],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[23432,23523],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[23637,23693],"yaml":true},{"content":"Blocks a source so that multicast packets originating from it are no longer received.","nodes":[{"pos":[0,85],"content":"Blocks a source so that multicast packets originating from it are no longer received.","nodes":[{"content":"Blocks a source so that multicast packets originating from it are no longer received.","pos":[0,85]}]}],"pos":[24778,24864],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received. The client must have completed a join to the multicast group.  \n  \n The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,231],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received. The client must have completed a join to the multicast group.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received. The client must have completed a join to the multicast group.","pos":[0,231],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method blocks multicast packets originating from a specified source address from being received.","pos":[0,169],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received."},{"content":"The client must have completed a join to the multicast group.","pos":[170,231]}]}]},{"pos":[238,417],"content":"The <ph id=\"ph1\">`sourceAddress`</ph> parameter may be either an IPv6 or IPv4 address, but the <ph id=\"ph2\">`sourceAddress`</ph> parameter must match the address family of the multicast group that the client joined.","source":"The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined."},{"pos":[424,511],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has received.","source":"The method specified in the `callback` parameter is invoked when a packet has received."},{"pos":[518,748],"content":"If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,230],"nodes":[{"content":"If there is a socket failure while performing the block source operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,128],"source":"If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[129,230],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[24875,25632],"yaml":true,"extradata":"MT"},{"content":"The address of the source to block.","nodes":[{"pos":[0,35],"content":"The address of the source to block.","nodes":[{"content":"The address of the source to block.","pos":[0,35]}]}],"pos":[25960,25996],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[26192,26237],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[26343,26434],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[26548,26604],"yaml":true},{"content":"Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,234],"content":"Leaves the multicast group and releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> class and the underlying the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[27572,27807],"yaml":true},{"content":"Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying.  \n  \n Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","nodes":[{"pos":[0,559],"content":"Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying.","nodes":[{"content":"Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying.","pos":[0,559],"nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.","pos":[0,156],"source":"Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>."},{"content":"The Dispose method leaves the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> in an unusable state.","pos":[157,262],"source":" The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>was occupying.","pos":[263,559],"source":" After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying."}]}]},{"pos":[566,939],"content":"Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","nodes":[{"content":"Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","pos":[0,373],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph>before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.","pos":[0,176],"source":"Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> object's <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[177,373],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method."}]}]}],"pos":[27818,28762],"yaml":true,"extradata":"MT"},{"content":"Completes the asynchronous join group operation to a multicast group.","nodes":[{"pos":[0,69],"content":"Completes the asynchronous join group operation to a multicast group.","nodes":[{"content":"Completes the asynchronous join group operation to a multicast group.","pos":[0,69]}]}],"pos":[30161,30231],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,164],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.","pos":[0,164],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group."}]},{"pos":[171,525],"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","pos":[0,354],"nodes":[{"content":"If required by the runtime, the  <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.","pos":[0,206],"source":"If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group."},{"content":"If the client is not allowed access, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","pos":[207,354],"source":" If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."}]}]},{"pos":[532,760],"content":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,228],"nodes":[{"content":"If there is a socket failure while performing the join group operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,126],"source":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[127,228],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[30242,31009],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous join operation.","nodes":[{"pos":[0,46],"content":"The result of the asynchronous join operation.","nodes":[{"content":"The result of the asynchronous join operation.","pos":[0,46]}]}],"pos":[31315,31362],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[31551,31618],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[31724,31815],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[31929,31985],"yaml":true},{"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","nodes":[{"pos":[0,129],"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","nodes":[{"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","pos":[0,129]}]}],"pos":[33229,33359],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,167],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a multicast group.","pos":[0,167],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group."}]},{"pos":[174,399],"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,225],"nodes":[{"content":"If there is a socket failure while performing the receive operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,123],"source":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[124,225],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[33370,33774],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous receive operation.","nodes":[{"pos":[0,49],"content":"The result of the asynchronous receive operation.","nodes":[{"content":"The result of the asynchronous receive operation.","pos":[0,49]}]}],"pos":[34120,34170],"yaml":true},{"content":"The source endpoint where the packet was received from.","nodes":[{"pos":[0,55],"content":"The source endpoint where the packet was received from.","nodes":[{"content":"The source endpoint where the packet was received from.","pos":[0,55]}]}],"pos":[34240,34296],"yaml":true},{"content":"The length, in bytes, of the message stored in the buffer parameter passed to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,255],"content":"The length, in bytes, of the message stored in the buffer parameter passed to the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The length, in bytes, of the message stored in the buffer parameter passed to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[34352,34608],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[34804,34871],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[34981,35026],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[35132,35223],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[35337,35393],"yaml":true},{"content":"Completes the operation of sending a unicast packet to the specified destination.","nodes":[{"pos":[0,81],"content":"Completes the operation of sending a unicast packet to the specified destination.","nodes":[{"content":"Completes the operation of sending a unicast packet to the specified destination.","pos":[0,81]}]}],"pos":[36472,36554],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,164],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A&gt;</ph> method completes an asynchronous operation to send a packet to specified destination address.","pos":[0,164],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address."}]},{"pos":[171,396],"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,225],"nodes":[{"content":"If there is a socket failure while performing the receive operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,123],"source":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[124,225],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[36565,36966],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous send operation.","nodes":[{"pos":[0,46],"content":"The result of the asynchronous send operation.","nodes":[{"content":"The result of the asynchronous send operation.","pos":[0,46]}]}],"pos":[37269,37316],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[37502,37569],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[37679,37724],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[37830,37921],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[38035,38091],"yaml":true},{"content":"Completes the operation of sending a packet to a multicast group.","nodes":[{"pos":[0,65],"content":"Completes the operation of sending a packet to a multicast group.","nodes":[{"content":"Completes the operation of sending a packet to a multicast group.","pos":[0,65]}]}],"pos":[39200,39266],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,157],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A&gt;</ph> method completes an asynchronous operation to send a packet to a multicast group.","pos":[0,157],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group."}]},{"pos":[164,389],"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,225],"nodes":[{"content":"If there is a socket failure while performing the receive operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,123],"source":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[124,225],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[39277,39671],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous send operation.","nodes":[{"pos":[0,46],"content":"The result of the asynchronous send operation.","nodes":[{"content":"The result of the asynchronous send operation.","pos":[0,46]}]}],"pos":[39979,40026],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[40217,40284],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[40394,40439],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[40545,40636],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[40750,40806],"yaml":true},{"content":"Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.","nodes":[{"pos":[0,112],"content":"Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.","nodes":[{"content":"Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.","pos":[0,112]}]}],"pos":[41830,41943],"yaml":true},{"content":"Multicast traffic is a scalable method for many-to-many communication on the Internet. A process subscribes to a multicast group address. Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.","nodes":[{"pos":[0,490],"content":"Multicast traffic is a scalable method for many-to-many communication on the Internet. A process subscribes to a multicast group address. Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.","nodes":[{"content":"Multicast traffic is a scalable method for many-to-many communication on the Internet. A process subscribes to a multicast group address. Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.","pos":[0,490],"nodes":[{"content":"Multicast traffic is a scalable method for many-to-many communication on the Internet.","pos":[0,86]},{"content":"A process subscribes to a multicast group address.","pos":[87,137]},{"content":"Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address.","pos":[138,280]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A&gt;</ph> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.","pos":[281,490],"source":" The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group."}]}]}],"pos":[41954,42445],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Boolean\"></xref>.  \n  \n A value that indicates if outgoing packets to a multicast group are delivered to the sending application.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>."},{"pos":[51,156],"content":"A value that indicates if outgoing packets to a multicast group are delivered to the sending application.","nodes":[{"content":"A value that indicates if outgoing packets to a multicast group are delivered to the sending application.","pos":[0,105]}]}],"pos":[42721,42884],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[43086,43131],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[43237,43328],"yaml":true},{"content":"Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance.","nodes":[{"pos":[0,232],"content":"Gets or sets the size, in bytes, of the receive buffer of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> used for multicast receive operations on this <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance."}],"pos":[44352,44585],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance. Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.  \n  \n The default size of the receive buffer on Windows is 8,192 bytes.","nodes":[{"pos":[0,1101],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance. Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance. Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.","pos":[0,1101],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id=\"ph3\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instance.","pos":[0,303],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance."},{"content":"Specifically, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method.","pos":[304,608],"source":" Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method."},{"content":"If this buffer gets filled up and packets keep coming before the application calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> methods, old packets will get dropped.","pos":[609,894],"source":" If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped."},{"content":"The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method.","pos":[895,1101],"source":" The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method."}]}]},{"pos":[1108,1173],"content":"The default size of the receive buffer on Windows is 8,192 bytes.","nodes":[{"content":"The default size of the receive buffer on Windows is 8,192 bytes.","pos":[0,65]}]}],"pos":[44596,45774],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the receive buffer.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,91],"content":"The size, in bytes, of the receive buffer.","nodes":[{"content":"The size, in bytes, of the receive buffer.","pos":[0,42]}]}],"pos":[46047,46145],"yaml":true},{"content":"The buffer size specified is less than 0.","nodes":[{"pos":[0,41],"content":"The buffer size specified is less than 0.","nodes":[{"content":"The buffer size specified is less than 0.","pos":[0,41]}]}],"pos":[46351,46393],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[46503,46548],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[46654,46745],"yaml":true},{"content":"Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance.","nodes":[{"pos":[0,226],"content":"Gets or sets the size, in bytes, of the send buffer of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> used for multicast send operations on this <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance."}],"pos":[47751,47978],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.  \n  \n calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.  \n  \n The default size of the send buffer on Windows is 8,192 bytes.","nodes":[{"pos":[0,268],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instance.","pos":[0,268],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance."}]},{"pos":[275,801],"content":"calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.","nodes":[{"content":"calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.","pos":[0,526],"nodes":[{"content":"calls to the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> methods will take longer to call the callback depending on the value of the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.","pos":[0,343],"source":"calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.","pos":[344,526],"source":" The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes."}]}]},{"pos":[808,870],"content":"The default size of the send buffer on Windows is 8,192 bytes.","nodes":[{"content":"The default size of the send buffer on Windows is 8,192 bytes.","pos":[0,62]}]}],"pos":[47989,48866],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the send buffer.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,88],"content":"The size, in bytes, of the send buffer.","nodes":[{"content":"The size, in bytes, of the send buffer.","pos":[0,39]}]}],"pos":[49136,49231],"yaml":true},{"content":"The buffer size specified is less than 0.","nodes":[{"pos":[0,41],"content":"The buffer size specified is less than 0.","nodes":[{"content":"The buffer size specified is less than 0.","pos":[0,41]}]}],"pos":[49434,49476],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[49586,49631],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[49737,49828],"yaml":true},{"content":"Unblocks a source that was previously blocked by a call to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\"></xref> method so that multicast packets originating from it can be received.","nodes":[{"pos":[0,234],"content":"Unblocks a source that was previously blocked by a call to the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\"&gt;&lt;/xref&gt;</ph> method so that multicast packets originating from it can be received.","source":"Unblocks a source that was previously blocked by a call to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\"></xref> method so that multicast packets originating from it can be received."}],"pos":[50925,51160],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received. The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.  \n  \n The client must have completed a join to the multicast group.  \n  \n The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address.  \n  \n If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  \n  \n If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,334],"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received. The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received. The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.","pos":[0,334],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A&gt;</ph> method unblocks multicast packets originating from a specified source address so they can be received.","pos":[0,177],"source":"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received."},{"content":"The specified source address must have previously been blocked by a call to the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method.","pos":[178,334],"source":" The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method."}]}]},{"pos":[341,402],"content":"The client must have completed a join to the multicast group.","nodes":[{"content":"The client must have completed a join to the multicast group.","pos":[0,61]}]},{"pos":[409,487],"content":"The <ph id=\"ph1\">`sourceAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.","source":"The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address."},{"pos":[494,797],"content":"If the specified source address in the <ph id=\"ph1\">`sourceAddress`</ph> parameter was not previously blocked by a call to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method, a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph4\">&lt;xref:System.Net.Sockets.SocketError.AddressNotAvailable&gt;</ph>.","source":"If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>."},{"pos":[804,1036],"content":"If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,232],"nodes":[{"content":"If there is a socket failure while performing the unblock source operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,130],"source":"If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[131,232],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[51171,52218],"yaml":true,"extradata":"MT"},{"content":"The address of the source to unblock.","nodes":[{"pos":[0,37],"content":"The address of the source to unblock.","nodes":[{"content":"The address of the source to unblock.","pos":[0,37]}]}],"pos":[52548,52586],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[52784,52829],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed."}],"pos":[52935,53026],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[53140,53196],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient\n  commentId: T:System.Net.Sockets.UdpAnySourceMulticastClient\n  id: UdpAnySourceMulticastClient\n  children:\n  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose\n  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)\n  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback\n  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize\n  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize\n  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)\n  langs:\n  - csharp\n  name: UdpAnySourceMulticastClient\n  nameWithType: UdpAnySourceMulticastClient\n  fullName: System.Net.Sockets.UdpAnySourceMulticastClient\n  type: Class\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public class UdpAnySourceMulticastClient : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)\n  id: '#ctor(System.Net.IPAddress,System.Int32)'\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: UdpAnySourceMulticastClient(IPAddress, Int32)\n  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)\n  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Creates a new <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from any source.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.  \\n  \\n The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.  \\n  \\n The `localPort` parameter must not specify a port less than 1,024.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);\n    parameters:\n    - id: groupAddress\n      type: System.Net.IPAddress\n      description: The multicast group address for this receiver to subscribe to.\n    - id: localPort\n      type: System.Int32\n      description: The local port for this receiver to bind to.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>groupAddress</code> is `null`. reference\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>localPort</code> is less than 0 -or- <code>localPort</code> is greater than 65,535.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  id: BeginJoinGroup(System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: BeginJoinGroup(AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.  \\n  \\n The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.  \\n  \\n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: A callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has already been joined or a join operation is currently in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has received.  \\n  \\n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to store the received data.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to receive and store in the <code>buffer</code>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)\n  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begins the operation of sending a unicast packet to the specified destination.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \\n  \\n The client must have completed a join to the multicast group. The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver. Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has received.  \\n  \\n The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \\n  \\n If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException>is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \\n  \\n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer that contains the data to send.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to send from the <code>buffer</code>.\n    - id: remoteEndPoint\n      type: System.Net.IPEndPoint\n      description: The remote endpoint to which the packet is to be sent.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \\n  \\n The client must have completed a join to the multicast group.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has received.  \\n  \\n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer that contains the data to send.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to send from the <code>buffer</code>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\n  id: BlockSource(System.Net.IPAddress)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: BlockSource(IPAddress)\n  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)\n  fullName: UdpAnySourceMulticastClient.BlockSource(IPAddress)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Blocks a source so that multicast packets originating from it are no longer received.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received. The client must have completed a join to the multicast group.  \\n  \\n The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has received.  \\n  \\n If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void BlockSource (System.Net.IPAddress sourceAddress);\n    parameters:\n    - id: sourceAddress\n      type: System.Net.IPAddress\n      description: The address of the source to block.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose\n  id: Dispose\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UdpAnySourceMulticastClient.Dispose()\n  fullName: UdpAnySourceMulticastClient.Dispose()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>.\n  remarks: \"Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying.  \\n  \\n Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void Dispose ();\n    parameters: []\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  id: EndJoinGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: EndJoinGroup(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the asynchronous join group operation to a multicast group.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  \\n  \\n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \\n  \\n If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void EndJoinGroup (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous join operation.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)\n  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.  \\n  \\n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous receive operation.\n    - id: source\n      type: System.Net.IPEndPoint\n      description: The source endpoint where the packet was received from.\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the message stored in the buffer parameter passed to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)\n  id: EndSendTo(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: EndSendTo(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the operation of sending a unicast packet to the specified destination.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.  \\n  \\n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void EndSendTo (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous send operation.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)\n  id: EndSendToGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: EndSendToGroup(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the operation of sending a packet to a multicast group.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.  \\n  \\n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void EndSendToGroup (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous send operation.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback\n  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback\n  id: MulticastLoopback\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: MulticastLoopback\n  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback\n  fullName: UdpAnySourceMulticastClient.MulticastLoopback\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.\n  remarks: Multicast traffic is a scalable method for many-to-many communication on the Internet. A process subscribes to a multicast group address. Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public bool MulticastLoopback { get; set; }\n    return:\n      type: System.Boolean\n      description: \"Returns <xref href=\\\"System.Boolean\\\"></xref>.  \\n  \\n A value that indicates if outgoing packets to a multicast group are delivered to the sending application.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize\n  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize\n  id: ReceiveBufferSize\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: ReceiveBufferSize\n  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize\n  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance. Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.  \\n  \\n The default size of the receive buffer on Windows is 8,192 bytes.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int ReceiveBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The size, in bytes, of the receive buffer.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The buffer size specified is less than 0.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize\n  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize\n  id: SendBufferSize\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: SendBufferSize\n  nameWithType: UdpAnySourceMulticastClient.SendBufferSize\n  fullName: UdpAnySourceMulticastClient.SendBufferSize\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> instance.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.  \\n  \\n calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.  \\n  \\n The default size of the send buffer on Windows is 8,192 bytes.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int SendBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The size, in bytes, of the send buffer.\"\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The buffer size specified is less than 0.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)\n  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)\n  id: UnblockSource(System.Net.IPAddress)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  langs:\n  - csharp\n  name: UnblockSource(IPAddress)\n  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)\n  fullName: UdpAnySourceMulticastClient.UnblockSource(IPAddress)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Unblocks a source that was previously blocked by a call to the <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\"></xref> method so that multicast packets originating from it can be received.\n  remarks: \"The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received. The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.  \\n  \\n The client must have completed a join to the multicast group.  \\n  \\n The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address.  \\n  \\n If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  \\n  \\n If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void UnblockSource (System.Net.IPAddress sourceAddress);\n    parameters:\n    - id: sourceAddress\n      type: System.Net.IPAddress\n      description: The address of the source to unblock.\n  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpAnySourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.Net.Sockets.SocketException\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketException\n  nameWithType: SocketException\n  fullName: System.Net.Sockets.SocketException\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: UdpAnySourceMulticastClient(IPAddress, Int32)\n  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)\n  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginJoinGroup(AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)\n- uid: System.Net.IPEndPoint\n  parent: System.Net\n  isExternal: false\n  name: IPEndPoint\n  nameWithType: IPEndPoint\n  fullName: System.Net.IPEndPoint\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BlockSource(IPAddress)\n  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)\n  fullName: UdpAnySourceMulticastClient.BlockSource(IPAddress)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: Dispose()\n  nameWithType: UdpAnySourceMulticastClient.Dispose()\n  fullName: UdpAnySourceMulticastClient.Dispose()\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndJoinGroup(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndSendTo(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndSendToGroup(IAsyncResult)\n  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)\n  fullName: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: MulticastLoopback\n  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback\n  fullName: UdpAnySourceMulticastClient.MulticastLoopback\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize\n  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: SendBufferSize\n  nameWithType: UdpAnySourceMulticastClient.SendBufferSize\n  fullName: UdpAnySourceMulticastClient.SendBufferSize\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: UnblockSource(IPAddress)\n  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)\n  fullName: UdpAnySourceMulticastClient.UnblockSource(IPAddress)\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: UdpAnySourceMulticastClient\n  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient\n  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginJoinGroup\n  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup\n  fullName: UdpAnySourceMulticastClient.BeginJoinGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginReceiveFromGroup\n  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup\n  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginSendTo\n  nameWithType: UdpAnySourceMulticastClient.BeginSendTo\n  fullName: UdpAnySourceMulticastClient.BeginSendTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BeginSendToGroup\n  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup\n  fullName: UdpAnySourceMulticastClient.BeginSendToGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: BlockSource\n  nameWithType: UdpAnySourceMulticastClient.BlockSource\n  fullName: UdpAnySourceMulticastClient.BlockSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: Dispose\n  nameWithType: UdpAnySourceMulticastClient.Dispose\n  fullName: UdpAnySourceMulticastClient.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndJoinGroup\n  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup\n  fullName: UdpAnySourceMulticastClient.EndJoinGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndReceiveFromGroup\n  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup\n  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndSendTo\n  nameWithType: UdpAnySourceMulticastClient.EndSendTo\n  fullName: UdpAnySourceMulticastClient.EndSendTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: EndSendToGroup\n  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup\n  fullName: UdpAnySourceMulticastClient.EndSendToGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: MulticastLoopback\n  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback\n  fullName: UdpAnySourceMulticastClient.MulticastLoopback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize\n  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: SendBufferSize\n  nameWithType: UdpAnySourceMulticastClient.SendBufferSize\n  fullName: UdpAnySourceMulticastClient.SendBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*\n  parent: System.Net.Sockets.UdpAnySourceMulticastClient\n  isExternal: false\n  name: UnblockSource\n  nameWithType: UdpAnySourceMulticastClient.UnblockSource\n  fullName: UdpAnySourceMulticastClient.UnblockSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}