### YamlMime:ManagedReference
items:
- uid: System.Management.EventWatcherOptions
  commentId: T:System.Management.EventWatcherOptions
  id: EventWatcherOptions
  children:
  - System.Management.EventWatcherOptions.#ctor
  - System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)
  - System.Management.EventWatcherOptions.BlockSize
  - System.Management.EventWatcherOptions.Clone
  langs:
  - csharp
  name: EventWatcherOptions
  nameWithType: EventWatcherOptions
  fullName: System.Management.EventWatcherOptions
  type: Class
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Specifies options for management event watching.
  remarks: ''
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library). The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]\n [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]"
  syntax:
    content: 'public class EventWatcherOptions : System.Management.ManagementOptions'
  inheritance:
  - System.Object
  - System.Management.ManagementOptions
  implements: []
  inheritedMembers:
  - System.Management.ManagementOptions.Context
  - System.Management.ManagementOptions.InfiniteTimeout
  - System.Management.ManagementOptions.Timeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.EventWatcherOptions.#ctor
  commentId: M:System.Management.EventWatcherOptions.#ctor
  id: '#ctor'
  parent: System.Management.EventWatcherOptions
  langs:
  - csharp
  name: EventWatcherOptions()
  nameWithType: EventWatcherOptions.EventWatcherOptions()
  fullName: EventWatcherOptions.EventWatcherOptions()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.EventWatcherOptions"></xref> class for event watching, using default values. This is the default constructor.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library). The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_EventWatcherOptions()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions()/cs/EventWatcherOptions().cs#1)]\n [!code-vb[wminet_EventWatcherOptions()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions()/vb/EventWatcherOptions().vb#1)]"
  syntax:
    content: public EventWatcherOptions ();
    parameters: []
  overload: System.Management.EventWatcherOptions.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)
  commentId: M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)
  id: '#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)'
  parent: System.Management.EventWatcherOptions
  langs:
  - csharp
  name: EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
  nameWithType: EventWatcherOptions.EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
  fullName: EventWatcherOptions.EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.EventWatcherOptions"></xref> class with the given values.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library). The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_EventWatcherOptions(3)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions(3)/cs/EventWatcherOptions(3).cs#1)]\n [!code-vb[wminet_EventWatcherOptions(3)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions(3)/vb/EventWatcherOptions(3).vb#1)]"
  syntax:
    content: public EventWatcherOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize);
    parameters:
    - id: context
      type: System.Management.ManagementNamedValueCollection
      description: The options context object containing provider-specific information to be passed through to the provider.
    - id: timeout
      type: System.TimeSpan
      description: The time-out to wait for the next events.
    - id: blockSize
      type: System.Int32
      description: The number of events to wait for in each block.
  overload: System.Management.EventWatcherOptions.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.EventWatcherOptions.BlockSize
  commentId: P:System.Management.EventWatcherOptions.BlockSize
  id: BlockSize
  parent: System.Management.EventWatcherOptions
  langs:
  - csharp
  name: BlockSize
  nameWithType: EventWatcherOptions.BlockSize
  fullName: EventWatcherOptions.BlockSize
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets the block size for block operations. When waiting for events, this value specifies how many events to wait for before returning.
  remarks: "## Property Value  \n The default value is 1.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library). The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/cs/EventWatcherOptions_BlockSize.cs#1)]\n [!code-vb[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/vb/EventWatcherOptions_BlockSize.vb#1)]"
  syntax:
    content: public int BlockSize { get; set; }
    return:
      type: System.Int32
      description: Returns an <xref href="System.Int32"></xref> value indicating the block size for a block of operations.
  overload: System.Management.EventWatcherOptions.BlockSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.EventWatcherOptions.Clone
  commentId: M:System.Management.EventWatcherOptions.Clone
  id: Clone
  parent: System.Management.EventWatcherOptions
  langs:
  - csharp
  name: Clone()
  nameWithType: EventWatcherOptions.Clone()
  fullName: EventWatcherOptions.Clone()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns a copy of the object.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: The cloned object.
  overload: System.Management.EventWatcherOptions.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
references:
- uid: System.Management.ManagementOptions
  parent: System.Management
  isExternal: false
  name: ManagementOptions
  nameWithType: ManagementOptions
  fullName: System.Management.ManagementOptions
- uid: System.Management.EventWatcherOptions.#ctor
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: EventWatcherOptions()
  nameWithType: EventWatcherOptions.EventWatcherOptions()
  fullName: EventWatcherOptions.EventWatcherOptions()
- uid: System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
  nameWithType: EventWatcherOptions.EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
  fullName: EventWatcherOptions.EventWatcherOptions(ManagementNamedValueCollection, TimeSpan, Int32)
- uid: System.Management.ManagementNamedValueCollection
  parent: System.Management
  isExternal: false
  name: ManagementNamedValueCollection
  nameWithType: ManagementNamedValueCollection
  fullName: System.Management.ManagementNamedValueCollection
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.EventWatcherOptions.BlockSize
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: BlockSize
  nameWithType: EventWatcherOptions.BlockSize
  fullName: EventWatcherOptions.BlockSize
- uid: System.Management.EventWatcherOptions.Clone
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: Clone()
  nameWithType: EventWatcherOptions.Clone()
  fullName: EventWatcherOptions.Clone()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Management.EventWatcherOptions.#ctor*
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: EventWatcherOptions
  nameWithType: EventWatcherOptions.EventWatcherOptions
  fullName: EventWatcherOptions.EventWatcherOptions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
- uid: System.Management.EventWatcherOptions.BlockSize*
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: BlockSize
  nameWithType: EventWatcherOptions.BlockSize
  fullName: EventWatcherOptions.BlockSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
- uid: System.Management.EventWatcherOptions.Clone*
  parent: System.Management.EventWatcherOptions
  isExternal: false
  name: Clone
  nameWithType: EventWatcherOptions.Clone
  fullName: EventWatcherOptions.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/EventWatcherOptions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Management.ManagementOptions.Context
  parent: System.Management.ManagementOptions
  isExternal: false
  name: Context
  nameWithType: ManagementOptions.Context
  fullName: ManagementOptions.Context
- uid: System.Management.ManagementOptions.InfiniteTimeout
  parent: System.Management.ManagementOptions
  isExternal: false
  name: InfiniteTimeout
  nameWithType: ManagementOptions.InfiniteTimeout
  fullName: ManagementOptions.InfiniteTimeout
- uid: System.Management.ManagementOptions.Timeout
  parent: System.Management.ManagementOptions
  isExternal: false
  name: Timeout
  nameWithType: ManagementOptions.Timeout
  fullName: ManagementOptions.Timeout
