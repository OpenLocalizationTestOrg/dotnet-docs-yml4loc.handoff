### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.IList`1
  commentId: T:Microsoft.VisualC.StlClr.IList`1
  id: IList`1
  children:
  - Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.back
  - Microsoft.VisualC.StlClr.IList`1.back_item
  - Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.IList`1.clear
  - Microsoft.VisualC.StlClr.IList`1.empty
  - Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.front
  - Microsoft.VisualC.StlClr.IList`1.front_item
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  - Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  - Microsoft.VisualC.StlClr.IList`1.pop_back
  - Microsoft.VisualC.StlClr.IList`1.pop_front
  - Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  - Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  - Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.IList`1.remove(`0)
  - Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  - Microsoft.VisualC.StlClr.IList`1.reverse
  - Microsoft.VisualC.StlClr.IList`1.size
  - Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})
  - Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  langs:
  - csharp
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
  type: Interface
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Defines the interface for an STL/CLR [list](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac) object.
  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public interface IList<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection'
    typeParameters:
    - id: TValue
      description: The type of a list element.
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer{TValue}
  - System.Collections.ICollection
  - System.ICloneable
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  id: assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: assign(IEnumerable)
  nameWithType: IList<TValue>.assign(IEnumerable)
  fullName: IList<TValue>.assign(IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces the controlled sequence with the sequence that is designated by the given enumerator.
  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).
  syntax:
    content: public void assign (System.Collections.IEnumerable _Right);
    parameters:
    - id: _Right
      type: System.Collections.IEnumerable
      description: The enumeration whose elements are to be inserted into the container.
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces the controlled sequence with the sequence <code>[</code><code>_First</code><code>,</code><code>_Last</code><code>)</code>.
  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).
  syntax:
    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The beginning position of the range of elements to insert into the container.
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The first position beyond the range of elements to insert into the container.
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  id: assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: assign(Int32, TValue)
  nameWithType: IList<TValue>.assign(Int32, TValue)
  fullName: IList<TValue>.assign(Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Replaces the controlled sequence with the specified number of the given element.
  remarks: For more information, see [list::assign (STL/CLR)](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032).
  syntax:
    content: public void assign (int _Count, TValue _Val);
    parameters:
    - id: _Count
      type: System.Int32
      description: The number of elements to insert into the container.
    - id: _Val
      type: TValue
      description: The value of the elements to insert into the container.
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.back
  commentId: M:Microsoft.VisualC.StlClr.IList`1.back
  id: back
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: back()
  nameWithType: IList<TValue>.back()
  fullName: IList<TValue>.back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the last element of the container.
  remarks: For more information, see [list::back (STL/CLR)](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07).
  syntax:
    content: public TValue back ();
    parameters: []
    return:
      type: TValue@
      description: The last element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IList`1.back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.back_item
  commentId: P:Microsoft.VisualC.StlClr.IList`1.back_item
  id: back_item
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: back_item
  nameWithType: IList<TValue>.back_item
  fullName: IList<TValue>.back_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the last element of the container.
  remarks: For more information, see [list::back_item (STL/CLR)](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a).
  syntax:
    content: public TValue back_item { get; set; }
    return:
      type: TValue
      description: The last element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IList`1.back_item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the controlled sequence.
  remarks: For more information, see [list::begin (STL/CLR)](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IList`1.begin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.clear
  commentId: M:Microsoft.VisualC.StlClr.IList`1.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: clear()
  nameWithType: IList<TValue>.clear()
  fullName: IList<TValue>.clear()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes all elements from the container.
  remarks: For more information, see [list::clear (STL/CLR)](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20).
  syntax:
    content: public void clear ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IList`1.clear*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.empty
  commentId: M:Microsoft.VisualC.StlClr.IList`1.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: empty()
  nameWithType: IList<TValue>.empty()
  fullName: IList<TValue>.empty()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Tests whether the container has no elements.
  remarks: For more information, see [list::empty (STL/CLR)](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8).
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the container has no elements; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.IList`1.empty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the controlled sequence.
  remarks: For more information, see [list::end (STL/CLR)](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IList`1.end*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.erase*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.front
  commentId: M:Microsoft.VisualC.StlClr.IList`1.front
  id: front
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: front()
  nameWithType: IList<TValue>.front()
  fullName: IList<TValue>.front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the first element of the container.
  remarks: For more information, see [list::front (STL/CLR)](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad).
  syntax:
    content: public TValue front ();
    parameters: []
    return:
      type: TValue@
      description: The first element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IList`1.front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.front_item
  commentId: P:Microsoft.VisualC.StlClr.IList`1.front_item
  id: front_item
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: front_item
  nameWithType: IList<TValue>.front_item
  fullName: IList<TValue>.front_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Accesses the first element of the container.
  remarks: For more information, see [list::front_item (STL/CLR)](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610).
  syntax:
    content: public TValue front_item { get; set; }
    return:
      type: TValue
      description: The first element of the controlled sequence, which must be non-empty.
  overload: Microsoft.VisualC.StlClr.IList`1.front_item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator, IEnumerable)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where_iter, System.Collections.IEnumerable _Right);
    parameters:
    - id: _Where_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Right
      type: System.Collections.IEnumerable
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: ''
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator, Int32, TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, int _Count, TValue _Val);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Count
      type: System.Int32
      description: ''
    - id: _Val
      type: TValue
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: ''
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Val
      type: TValue
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Merges two ordered controlled sequences.
  remarks: For more information, see [list::merge (STL/CLR)](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6).
  syntax:
    content: public void merge (Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList`1
      description: The container to merge into this container.
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: The Boolean functor for comparing pairs of elements.
  overload: Microsoft.VisualC.StlClr.IList`1.merge*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.pop_back
  commentId: M:Microsoft.VisualC.StlClr.IList`1.pop_back
  id: pop_back
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: pop_back()
  nameWithType: IList<TValue>.pop_back()
  fullName: IList<TValue>.pop_back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes the last element from the container.
  remarks: For more information, see [list::pop_back (STL/CLR)](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb).
  syntax:
    content: public void pop_back ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IList`1.pop_back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.pop_front
  commentId: M:Microsoft.VisualC.StlClr.IList`1.pop_front
  id: pop_front
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: pop_front()
  nameWithType: IList<TValue>.pop_front()
  fullName: IList<TValue>.pop_front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes the first element from the container.
  remarks: For more information, see [list::pop_front (STL/CLR)](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574).
  syntax:
    content: public void pop_front ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IList`1.pop_front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  id: push_back(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: push_back(TValue)
  nameWithType: IList<TValue>.push_back(TValue)
  fullName: IList<TValue>.push_back(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds a new element to the end of the container.
  remarks: For more information, see [list::push_back (STL/CLR)](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e).
  syntax:
    content: public void push_back (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: The value of the element to append to the container.
  overload: Microsoft.VisualC.StlClr.IList`1.push_back*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  id: push_front(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: push_front(TValue)
  nameWithType: IList<TValue>.push_front(TValue)
  fullName: IList<TValue>.push_front(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Adds a new element to the beginning of the container.
  remarks: For more information, see [list::push_front (STL/CLR)](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0).
  syntax:
    content: public void push_front (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: The value of the element to insert at the beginning of the container.
  overload: Microsoft.VisualC.StlClr.IList`1.push_front*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the beginning of the reversed controlled sequence.
  remarks: For more information, see [list::rbegin (STL/CLR)](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IList`1.rbegin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.remove(`0)
  id: remove(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: remove(TValue)
  nameWithType: IList<TValue>.remove(TValue)
  fullName: IList<TValue>.remove(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes an element that has a specified value from the container.
  remarks: For more information, see [list::remove (STL/CLR)](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51).
  syntax:
    content: public void remove (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: The value of the element to remove from the container.
  overload: Microsoft.VisualC.StlClr.IList`1.remove*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Designates the end of the reversed controlled sequence.
  remarks: For more information, see [list::rend (STL/CLR)](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921).
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.IList`1.rend*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  id: resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: resize(Int32, TValue)
  nameWithType: IList<TValue>.resize(Int32, TValue)
  fullName: IList<TValue>.resize(Int32, TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.
  remarks: For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).
  syntax:
    content: public void resize (int _Newsize, TValue _Val);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: The new size of the container.
    - id: _Val
      type: TValue
      description: The value of the padding elements.
  overload: Microsoft.VisualC.StlClr.IList`1.resize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  id: resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: resize(Int32)
  nameWithType: IList<TValue>.resize(Int32)
  fullName: IList<TValue>.resize(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Changes the number of elements in the container to the specified size.
  remarks: For more information, see [list::resize (STL/CLR)](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016).
  syntax:
    content: public void resize (int _Newsize);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: The new size of the container.
  overload: Microsoft.VisualC.StlClr.IList`1.resize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.reverse
  commentId: M:Microsoft.VisualC.StlClr.IList`1.reverse
  id: reverse
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: reverse()
  nameWithType: IList<TValue>.reverse()
  fullName: IList<TValue>.reverse()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Reverses the elements of the controlled sequence.
  remarks: For more information, see [list::reverse (STL/CLR)](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f).
  syntax:
    content: public void reverse ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IList`1.reverse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.size
  commentId: M:Microsoft.VisualC.StlClr.IList`1.size
  id: size
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: size()
  nameWithType: IList<TValue>.size()
  fullName: IList<TValue>.size()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Counts the number of elements in the container.
  remarks: For more information, see [list::size (STL/CLR)](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293).
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: The length of the controlled sequence.
  overload: Microsoft.VisualC.StlClr.IList`1.size*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: sort(BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Orders the controlled sequence.
  remarks: For more information, see [list::sort (STL/CLR)](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0).
  syntax:
    content: public void sort (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: The operator that will be used to compare elements for ordering.
  overload: Microsoft.VisualC.StlClr.IList`1.sort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: splice(ContainerBidirectionalIterator, IList<TValue>)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList`1
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList`1
      description: ''
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  commentId: M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList`1
      description: ''
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})
  id: swap(Microsoft.VisualC.StlClr.IList{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: swap(IList<TValue>)
  nameWithType: IList<TValue>.swap(IList<TValue>)
  fullName: IList<TValue>.swap(IList<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Swaps the contents of two containers.
  remarks: For more information, see [list::swap (STL/CLR)](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd).
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.IList<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList`1
      description: The container to swap contents with.
  overload: Microsoft.VisualC.StlClr.IList`1.swap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  commentId: M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  name: unique(BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Removes adjacent elements that pass a specified test.
  remarks: For more information, see [list::unique (STL/CLR)](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132).
  syntax:
    content: public void unique (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.
  overload: Microsoft.VisualC.StlClr.IList`1.unique*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(IEnumerable)
  nameWithType: IList<TValue>.assign(IEnumerable)
  fullName: IList<TValue>.assign(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IList<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(Int32, TValue)
  nameWithType: IList<TValue>.assign(Int32, TValue)
  fullName: IList<TValue>.assign(Int32, TValue)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.IList`1.back
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back()
  nameWithType: IList<TValue>.back()
  fullName: IList<TValue>.back()
- uid: Microsoft.VisualC.StlClr.IList`1.back_item
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back_item
  nameWithType: IList<TValue>.back_item
  fullName: IList<TValue>.back_item
- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: IList<TValue>.begin(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.clear
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: clear()
  nameWithType: IList<TValue>.clear()
  fullName: IList<TValue>.clear()
- uid: Microsoft.VisualC.StlClr.IList`1.empty
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: empty()
  nameWithType: IList<TValue>.empty()
  fullName: IList<TValue>.empty()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: IList<TValue>.end(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ContainerBidirectionalIterator
  nameWithType: ContainerBidirectionalIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: IList<TValue>.erase(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.IList`1.front
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front()
  nameWithType: IList<TValue>.front()
  fullName: IList<TValue>.front()
- uid: Microsoft.VisualC.StlClr.IList`1.front_item
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front_item
  nameWithType: IList<TValue>.front_item
  fullName: IList<TValue>.front_item
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator, IEnumerable)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IEnumerable)
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, IInputIterator<TValue>, IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator, Int32, TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator, Int32, TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
  fullName: IList<TValue>.insert(ContainerBidirectionalIterator<TValue>, ContainerBidirectionalIterator, TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.merge(IList<TValue>, BinaryDelegate<TValue,TValue,Boolean>)
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
  name: BinaryDelegate<TArg1,TArg2,TResult>
  nameWithType: BinaryDelegate<TArg1,TArg2,TResult>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TArg1,TArg2,TResult>
- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: BinaryDelegate<TValue,TValue,Boolean>
  nameWithType: BinaryDelegate<TValue,TValue,Boolean>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
    name: BinaryDelegate
    nameWithType: BinaryDelegate
    fullName: Microsoft.VisualC.StlClr.BinaryDelegate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.IList`1.pop_back
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_back()
  nameWithType: IList<TValue>.pop_back()
  fullName: IList<TValue>.pop_back()
- uid: Microsoft.VisualC.StlClr.IList`1.pop_front
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_front()
  nameWithType: IList<TValue>.pop_front()
  fullName: IList<TValue>.pop_front()
- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_back(TValue)
  nameWithType: IList<TValue>.push_back(TValue)
  fullName: IList<TValue>.push_back(TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_front(TValue)
  nameWithType: IList<TValue>.push_front(TValue)
  fullName: IList<TValue>.push_front(TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: IList<TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: remove(TValue)
  nameWithType: IList<TValue>.remove(TValue)
  fullName: IList<TValue>.remove(TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: IList<TValue>.rend(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: resize(Int32, TValue)
  nameWithType: IList<TValue>.resize(Int32, TValue)
  fullName: IList<TValue>.resize(Int32, TValue)
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: resize(Int32)
  nameWithType: IList<TValue>.resize(Int32)
  fullName: IList<TValue>.resize(Int32)
- uid: Microsoft.VisualC.StlClr.IList`1.reverse
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: reverse()
  nameWithType: IList<TValue>.reverse()
  fullName: IList<TValue>.reverse()
- uid: Microsoft.VisualC.StlClr.IList`1.size
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: size()
  nameWithType: IList<TValue>.size()
  fullName: IList<TValue>.size()
- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: sort(BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.sort(BinaryDelegate<TValue,TValue,Boolean>)
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator, IList<TValue>)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>)
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
  fullName: IList<TValue>.splice(ContainerBidirectionalIterator, IList<TValue>, ContainerBidirectionalIterator, ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: swap(IList<TValue>)
  nameWithType: IList<TValue>.swap(IList<TValue>)
  fullName: IList<TValue>.swap(IList<TValue>)
- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: unique(BinaryDelegate<TValue,TValue,Boolean>)
  nameWithType: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)
  fullName: IList<TValue>.unique(BinaryDelegate<TValue,TValue,Boolean>)
- uid: Microsoft.VisualC.StlClr.IList`1.assign*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign
  nameWithType: IList<TValue>.assign
  fullName: IList<TValue>.assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.erase*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: erase
  nameWithType: IList<TValue>.erase
  fullName: IList<TValue>.erase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.insert*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert
  nameWithType: IList<TValue>.insert
  fullName: IList<TValue>.insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.resize*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: resize
  nameWithType: IList<TValue>.resize
  fullName: IList<TValue>.resize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.splice*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice
  nameWithType: IList<TValue>.splice
  fullName: IList<TValue>.splice
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.back*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back
  nameWithType: IList<TValue>.back
  fullName: IList<TValue>.back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.back_item*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back_item
  nameWithType: IList<TValue>.back_item
  fullName: IList<TValue>.back_item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.begin*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: begin
  nameWithType: IList<TValue>.begin
  fullName: IList<TValue>.begin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.clear*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: clear
  nameWithType: IList<TValue>.clear
  fullName: IList<TValue>.clear
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.empty*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: empty
  nameWithType: IList<TValue>.empty
  fullName: IList<TValue>.empty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.end*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: end
  nameWithType: IList<TValue>.end
  fullName: IList<TValue>.end
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.front*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front
  nameWithType: IList<TValue>.front
  fullName: IList<TValue>.front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.front_item*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front_item
  nameWithType: IList<TValue>.front_item
  fullName: IList<TValue>.front_item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.merge*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: merge
  nameWithType: IList<TValue>.merge
  fullName: IList<TValue>.merge
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.pop_back*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_back
  nameWithType: IList<TValue>.pop_back
  fullName: IList<TValue>.pop_back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.pop_front*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_front
  nameWithType: IList<TValue>.pop_front
  fullName: IList<TValue>.pop_front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.push_back*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_back
  nameWithType: IList<TValue>.push_back
  fullName: IList<TValue>.push_back
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.push_front*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_front
  nameWithType: IList<TValue>.push_front
  fullName: IList<TValue>.push_front
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.rbegin*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rbegin
  nameWithType: IList<TValue>.rbegin
  fullName: IList<TValue>.rbegin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.remove*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: remove
  nameWithType: IList<TValue>.remove
  fullName: IList<TValue>.remove
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.rend*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rend
  nameWithType: IList<TValue>.rend
  fullName: IList<TValue>.rend
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.reverse*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: reverse
  nameWithType: IList<TValue>.reverse
  fullName: IList<TValue>.reverse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.size*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: size
  nameWithType: IList<TValue>.size
  fullName: IList<TValue>.size
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.sort*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: sort
  nameWithType: IList<TValue>.sort
  fullName: IList<TValue>.sort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.swap*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: swap
  nameWithType: IList<TValue>.swap
  fullName: IList<TValue>.swap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: Microsoft.VisualC.StlClr.IList`1.unique*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: unique
  nameWithType: IList<TValue>.unique
  fullName: IList<TValue>.unique
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IList`1.xml
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IBidirectionalContainer<TValue>
  nameWithType: IBidirectionalContainer<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
