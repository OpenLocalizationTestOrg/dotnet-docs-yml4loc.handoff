{"nodes":[{"content":"Represents an association relationship between two entity types.","nodes":[{"pos":[0,64],"content":"Represents an association relationship between two entity types.","nodes":[{"content":"Represents an association relationship between two entity types.","pos":[0,64]}]}],"pos":[1192,1257],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> class."}],"pos":[2669,2772],"yaml":true},{"content":"Gets whether the object should be deleted when the association is set to null.","nodes":[{"pos":[0,78],"content":"Gets whether the object should be deleted when the association is set to null.","nodes":[{"content":"Gets whether the object should be deleted when the association is set to null.","pos":[0,78]}]}],"pos":[3929,4008],"yaml":true},{"content":"If `true`, the object is deleted when the association is set to null.","nodes":[{"pos":[0,69],"content":"If <ph id=\"ph1\">`true`</ph>, the object is deleted when the association is set to null.","source":"If `true`, the object is deleted when the association is set to null."}],"pos":[4132,4202],"yaml":true},{"content":"Gets the behavior when the child is deleted.","nodes":[{"pos":[0,44],"content":"Gets the behavior when the child is deleted.","nodes":[{"content":"Gets the behavior when the child is deleted.","pos":[0,44]}]}],"pos":[5282,5327],"yaml":true},{"content":"Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.","nodes":[{"pos":[0,58],"content":"Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.","nodes":[{"content":"Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.","pos":[0,58]}]}],"pos":[5338,5397],"yaml":true,"extradata":"MT"},{"content":"The string representing the rule, or `null` if no action is specified on delete.","nodes":[{"pos":[0,80],"content":"The string representing the rule, or <ph id=\"ph1\">`null`</ph> if no action is specified on delete.","source":"The string representing the rule, or `null` if no action is specified on delete."}],"pos":[5520,5601],"yaml":true},{"content":"Gets whether the other type is the parent of this type.","nodes":[{"pos":[0,55],"content":"Gets whether the other type is the parent of this type.","nodes":[{"content":"Gets whether the other type is the parent of this type.","pos":[0,55]}]}],"pos":[6691,6747],"yaml":true},{"content":"Returns `true` is the other type is the parent of this type.","nodes":[{"pos":[0,60],"content":"Returns <ph id=\"ph1\">`true`</ph> is the other type is the parent of this type.","source":"Returns `true` is the other type is the parent of this type."}],"pos":[6871,6932],"yaml":true},{"content":"Gets whether the association represents a one-to-many relationship.","nodes":[{"pos":[0,67],"content":"Gets whether the association represents a one-to-many relationship.","nodes":[{"content":"Gets whether the association represents a one-to-many relationship.","pos":[0,67]}]}],"pos":[7988,8056],"yaml":true},{"content":"Returns `true` if the association represents a one-to-many relationship.","nodes":[{"pos":[0,72],"content":"Returns <ph id=\"ph1\">`true`</ph> if the association represents a one-to-many relationship.","source":"Returns `true` if the association represents a one-to-many relationship."}],"pos":[8174,8247],"yaml":true},{"content":"Gets whether the association can be null.","nodes":[{"pos":[0,41],"content":"Gets whether the association can be null.","nodes":[{"content":"Gets whether the association can be null.","pos":[0,41]}]}],"pos":[9321,9363],"yaml":true},{"content":"Returns `true` if the association can be null.","nodes":[{"pos":[0,46],"content":"Returns <ph id=\"ph1\">`true`</ph> if the association can be null.","source":"Returns `true` if the association can be null."}],"pos":[9485,9532],"yaml":true},{"content":"Gets whether the association is unique.","nodes":[{"pos":[0,39],"content":"Gets whether the association is unique.","nodes":[{"content":"Gets whether the association is unique.","pos":[0,39]}]}],"pos":[10598,10638],"yaml":true},{"content":"This property indicates a uniqueness constraint in the database.","nodes":[{"pos":[0,64],"content":"This property indicates a uniqueness constraint in the database.","nodes":[{"content":"This property indicates a uniqueness constraint in the database.","pos":[0,64]}]}],"pos":[10649,10714],"yaml":true,"extradata":"MT"},{"content":"Returns `true` if the association is unique.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">`true`</ph> if the association is unique.","source":"Returns `true` if the association is unique."}],"pos":[10834,10879],"yaml":true},{"content":"Gets a list of members that represents the values on the other side of the association.","nodes":[{"pos":[0,87],"content":"Gets a list of members that represents the values on the other side of the association.","nodes":[{"content":"Gets a list of members that represents the values on the other side of the association.","pos":[0,87]}]}],"pos":[11943,12031],"yaml":true},{"content":"Returns a collection representing values on the other side of the association.","nodes":[{"pos":[0,78],"content":"Returns a collection representing values on the other side of the association.","nodes":[{"content":"Returns a collection representing values on the other side of the association.","pos":[0,78]}]}],"pos":[12313,12392],"yaml":true},{"content":"Gets whether the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity of the other type.","nodes":[{"pos":[0,125],"content":"Gets whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"&gt;&lt;/xref&gt;</ph> forms the identity of the other type.","source":"Gets whether the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity of the other type."}],"pos":[13528,13654],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity (primary key) of the other type.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"&gt;&lt;/xref&gt;</ph> forms the identity (primary key) of the other type.","source":"`true` if the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity (primary key) of the other type."}],"pos":[13786,13925],"yaml":true},{"content":"Gets the member on the other side of this association that represents the reverse association.","nodes":[{"pos":[0,94],"content":"Gets the member on the other side of this association that represents the reverse association.","nodes":[{"content":"Gets the member on the other side of this association that represents the reverse association.","pos":[0,94]}]}],"pos":[15019,15114],"yaml":true},{"content":"This value can be null.","nodes":[{"pos":[0,23],"content":"This value can be null.","nodes":[{"content":"This value can be null.","pos":[0,23]}]}],"pos":[15125,15149],"yaml":true,"extradata":"MT"},{"content":"The member on the other side.","nodes":[{"pos":[0,29],"content":"The member on the other side.","nodes":[{"content":"The member on the other side.","pos":[0,29]}]}],"pos":[15332,15362],"yaml":true},{"content":"Gets the type on the other side of the association.","nodes":[{"pos":[0,51],"content":"Gets the type on the other side of the association.","nodes":[{"content":"Gets the type on the other side of the association.","pos":[0,51]}]}],"pos":[16435,16487],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[16656,16666],"yaml":true},{"content":"Gets a list of members representing the values on this side of the association.","nodes":[{"pos":[0,79],"content":"Gets a list of members representing the values on this side of the association.","nodes":[{"content":"Gets a list of members representing the values on this side of the association.","pos":[0,79]}]}],"pos":[17725,17805],"yaml":true},{"content":"A collection.","nodes":[{"pos":[0,13],"content":"A collection.","nodes":[{"content":"A collection.","pos":[0,13]}]}],"pos":[18086,18100],"yaml":true},{"content":"Gets whether <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity of this type.","nodes":[{"pos":[0,115],"content":"Gets whether <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"&gt;&lt;/xref&gt;</ph> forms the identity of this type.","source":"Gets whether <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity of this type."}],"pos":[19229,19345],"yaml":true},{"content":"`true` if <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity (primary key) of the association.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"&gt;&lt;/xref&gt;</ph> forms the identity (primary key) of the association.","source":"`true` if <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity (primary key) of the association."}],"pos":[19476,19611],"yaml":true},{"content":"Gets the member on this side that represents the association.","nodes":[{"pos":[0,61],"content":"Gets the member on this side that represents the association.","nodes":[{"content":"Gets the member on this side that represents the association.","pos":[0,61]}]}],"pos":[20698,20760],"yaml":true},{"content":"The member.","nodes":[{"pos":[0,11],"content":"The member.","nodes":[{"content":"The member.","pos":[0,11]}]}],"pos":[20942,20954],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaAssociation\n  commentId: T:System.Data.Linq.Mapping.MetaAssociation\n  id: MetaAssociation\n  children:\n  - System.Data.Linq.Mapping.MetaAssociation.#ctor\n  - System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  - System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  - System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  - System.Data.Linq.Mapping.MetaAssociation.IsMany\n  - System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  - System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  - System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  - System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  - System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  - System.Data.Linq.Mapping.MetaAssociation.OtherType\n  - System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  - System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  - System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  langs:\n  - csharp\n  name: MetaAssociation\n  nameWithType: MetaAssociation\n  fullName: System.Data.Linq.Mapping.MetaAssociation\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Represents an association relationship between two entity types.\n  syntax:\n    content: public abstract class MetaAssociation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor\n  commentId: M:System.Data.Linq.Mapping.MetaAssociation.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: MetaAssociation()\n  nameWithType: MetaAssociation.MetaAssociation()\n  fullName: MetaAssociation.MetaAssociation()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> class.\n  syntax:\n    content: protected MetaAssociation ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaAssociation.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  id: DeleteOnNull\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n  fullName: MetaAssociation.DeleteOnNull\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the object should be deleted when the association is set to null.\n  syntax:\n    content: public abstract bool DeleteOnNull { get; }\n    return:\n      type: System.Boolean\n      description: If `true`, the object is deleted when the association is set to null.\n  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  id: DeleteRule\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n  fullName: MetaAssociation.DeleteRule\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the behavior when the child is deleted.\n  remarks: Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.\n  syntax:\n    content: public abstract string DeleteRule { get; }\n    return:\n      type: System.String\n      description: The string representing the rule, or `null` if no action is specified on delete.\n  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  id: IsForeignKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n  fullName: MetaAssociation.IsForeignKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the other type is the parent of this type.\n  syntax:\n    content: public abstract bool IsForeignKey { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` is the other type is the parent of this type.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.IsMany\n  id: IsMany\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n  fullName: MetaAssociation.IsMany\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association represents a one-to-many relationship.\n  syntax:\n    content: public abstract bool IsMany { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if the association represents a one-to-many relationship.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsMany*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  id: IsNullable\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n  fullName: MetaAssociation.IsNullable\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association can be null.\n  syntax:\n    content: public abstract bool IsNullable { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if the association can be null.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsNullable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  id: IsUnique\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n  fullName: MetaAssociation.IsUnique\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association is unique.\n  remarks: This property indicates a uniqueness constraint in the database.\n  syntax:\n    content: public abstract bool IsUnique { get; }\n    return:\n      type: System.Boolean\n      description: Returns `true` if the association is unique.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsUnique*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  id: OtherKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n  fullName: MetaAssociation.OtherKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a list of members that represents the values on the other side of the association.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> OtherKey { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: Returns a collection representing values on the other side of the association.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  id: OtherKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n  fullName: MetaAssociation.OtherKeyIsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity of the other type.\n  syntax:\n    content: public abstract bool OtherKeyIsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.Linq.Mapping.MetaAssociation.OtherKey\"></xref> forms the identity (primary key) of the other type.'\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  id: OtherMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n  fullName: MetaAssociation.OtherMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member on the other side of this association that represents the reverse association.\n  remarks: This value can be null.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember OtherMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member on the other side.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.OtherType\n  id: OtherType\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n  fullName: MetaAssociation.OtherType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type on the other side of the association.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType OtherType { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The type.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  id: ThisKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n  fullName: MetaAssociation.ThisKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a list of members representing the values on this side of the association.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> ThisKey { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: A collection.\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  id: ThisKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n  fullName: MetaAssociation.ThisKeyIsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity of this type.\n  syntax:\n    content: public abstract bool ThisKeyIsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.Data.Linq.Mapping.MetaAssociation.ThisKey\"></xref> forms the identity (primary key) of the association.'\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  commentId: P:System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  id: ThisMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n  fullName: MetaAssociation.ThisMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member on this side that represents the association.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember ThisMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member.\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: MetaAssociation()\n  nameWithType: MetaAssociation.MetaAssociation()\n  fullName: MetaAssociation.MetaAssociation()\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n  fullName: MetaAssociation.DeleteOnNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n  fullName: MetaAssociation.DeleteRule\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n  fullName: MetaAssociation.IsForeignKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n  fullName: MetaAssociation.IsMany\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n  fullName: MetaAssociation.IsNullable\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n  fullName: MetaAssociation.IsUnique\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n  fullName: MetaAssociation.OtherKey\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Data.Linq.Mapping.MetaDataMember\n  name: MetaDataMember\n  nameWithType: MetaDataMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MetaDataMember>\n  nameWithType: ReadOnlyCollection<MetaDataMember>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaDataMember\n    name: MetaDataMember\n    nameWithType: MetaDataMember\n    fullName: System.Data.Linq.Mapping.MetaDataMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n  fullName: MetaAssociation.OtherKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n  fullName: MetaAssociation.OtherMember\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n  fullName: MetaAssociation.OtherType\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n  fullName: MetaAssociation.ThisKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n  fullName: MetaAssociation.ThisKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n  fullName: MetaAssociation.ThisMember\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: MetaAssociation\n  nameWithType: MetaAssociation.MetaAssociation\n  fullName: MetaAssociation.MetaAssociation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n  fullName: MetaAssociation.DeleteOnNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n  fullName: MetaAssociation.DeleteRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n  fullName: MetaAssociation.IsForeignKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n  fullName: MetaAssociation.IsMany\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n  fullName: MetaAssociation.IsNullable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n  fullName: MetaAssociation.IsUnique\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n  fullName: MetaAssociation.OtherKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n  fullName: MetaAssociation.OtherKeyIsPrimaryKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n  fullName: MetaAssociation.OtherMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n  fullName: MetaAssociation.OtherType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n  fullName: MetaAssociation.ThisKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n  fullName: MetaAssociation.ThisKeyIsPrimaryKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n  fullName: MetaAssociation.ThisMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaAssociation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}