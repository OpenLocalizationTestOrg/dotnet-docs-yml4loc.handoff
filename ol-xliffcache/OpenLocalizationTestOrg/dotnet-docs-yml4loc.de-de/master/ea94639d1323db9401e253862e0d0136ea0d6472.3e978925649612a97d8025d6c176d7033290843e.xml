{"nodes":[{"content":"Controls access to printers. This class cannot be inherited.","nodes":[{"pos":[0,60],"content":"Controls access to printers. This class cannot be inherited.","nodes":[{"content":"Controls access to printers. This class cannot be inherited.","pos":[0,60],"nodes":[{"content":"Controls access to printers.","pos":[0,28]},{"content":"This class cannot be inherited.","pos":[29,60]}]}]}],"pos":[1208,1269],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with the level of printing access specified.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermission\"&gt;&lt;/xref&gt;</ph> class with the level of printing access specified.","source":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with the level of printing access specified."}],"pos":[3986,4135],"yaml":true},{"content":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.","nodes":[{"pos":[0,87],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values."}],"pos":[4368,4456],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with either fully restricted or unrestricted access, as specified.","nodes":[{"pos":[0,170],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermission\"&gt;&lt;/xref&gt;</ph> class with either fully restricted or unrestricted access, as specified.","source":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with either fully restricted or unrestricted access, as specified."}],"pos":[5766,5937],"yaml":true},{"content":"This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission.","nodes":[{"pos":[0,107],"content":"This constructor creates either the fully restricted (<ph id=\"ph1\">`None`</ph>) or the <ph id=\"ph2\">`Unrestricted`</ph> form of the permission.","source":"This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission."}],"pos":[5948,6056],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[6265,6349],"yaml":true},{"content":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[6519,6619],"yaml":true},{"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"pos":[0,71],"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]}],"pos":[7618,7690],"yaml":true},{"content":"A copy of the permission object represents the same access to resources as the original permission object.","nodes":[{"pos":[0,106],"content":"A copy of the permission object represents the same access to resources as the original permission object.","nodes":[{"content":"A copy of the permission object represents the same access to resources as the original permission object.","pos":[0,106]}]}],"pos":[7701,7808],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[7974,8015],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[9254,9330],"yaml":true},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[9514,9574],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission object and a target permission object.","nodes":[{"pos":[0,122],"content":"Creates and returns a permission that is the intersection of the current permission object and a target permission object.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission object and a target permission object.","pos":[0,122]}]}],"pos":[10804,10927],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","nodes":[{"pos":[0,214],"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[0,214],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common.","pos":[0,114]},{"content":"Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[115,214]}]}]}],"pos":[10938,11153],"yaml":true,"extradata":"MT"},{"content":"A permission object of the same type as the current permission object.","nodes":[{"pos":[0,70],"content":"A permission object of the same type as the current permission object.","nodes":[{"content":"A permission object of the same type as the current permission object.","pos":[0,70]}]}],"pos":[11360,11431],"yaml":true},{"content":"A new permission object that represents the intersection of the current object and the specified target. This object is `null` if the intersection is empty.","nodes":[{"pos":[0,156],"content":"A new permission object that represents the intersection of the current object and the specified target. This object is `null` if the intersection is empty.","nodes":[{"content":"A new permission object that represents the intersection of the current object and the specified target.","pos":[0,104]},{"content":"This object is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[105,156],"source":" This object is `null` if the intersection is empty."}]}],"pos":[11502,11659],"yaml":true},{"content":"<code>target</code> is an object that is not of the same type as the current permission object.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","source":"<code>target</code> is an object that is not of the same type as the current permission object."}],"pos":[11833,11929],"yaml":true},{"content":"Determines whether the current permission object is a subset of the specified permission.","nodes":[{"pos":[0,89],"content":"Determines whether the current permission object is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission object is a subset of the specified permission.","pos":[0,89]}]}],"pos":[13084,13174],"yaml":true},{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"pos":[0,140],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]}],"pos":[13359,13500],"yaml":true},{"content":"`true` if the current permission object is a subset of <code>target</code>; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the current permission object is a subset of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current permission object is a subset of <code>target</code>; otherwise, `false`."}],"pos":[13558,13656],"yaml":true},{"content":"<code>target</code> is an object that is not of the same type as the current permission object.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","source":"<code>target</code> is an object that is not of the same type as the current permission object."}],"pos":[13831,13927],"yaml":true},{"content":"Gets a value indicating whether the permission is unrestricted.","nodes":[{"pos":[0,63],"content":"Gets a value indicating whether the permission is unrestricted.","nodes":[{"content":"Gets a value indicating whether the permission is unrestricted.","pos":[0,63]}]}],"pos":[14986,15050],"yaml":true},{"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","nodes":[{"pos":[0,105],"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","nodes":[{"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","pos":[0,105]}]}],"pos":[15061,15167],"yaml":true,"extradata":"MT"},{"content":"`true` if permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if permission is unrestricted; otherwise, `false`."}],"pos":[15298,15358],"yaml":true},{"content":"Gets or sets the code's level of printing access.","nodes":[{"pos":[0,49],"content":"Gets or sets the code's level of printing access.","nodes":[{"content":"Gets or sets the code's level of printing access.","pos":[0,49]}]}],"pos":[16447,16497],"yaml":true},{"content":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.","nodes":[{"pos":[0,87],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values."}],"pos":[16686,16774],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[17858,17928],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[18103,18176],"yaml":true},{"content":"Creates a permission that combines the permission object and the target permission object.","nodes":[{"pos":[0,90],"content":"Creates a permission that combines the permission object and the target permission object.","nodes":[{"content":"Creates a permission that combines the permission object and the target permission object.","pos":[0,90]}]}],"pos":[19380,19471],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.","nodes":[{"pos":[0,248],"content":"The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.","nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.UIPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.","pos":[0,248],"source":"The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object."}]}],"pos":[19482,19731],"yaml":true,"extradata":"MT"},{"content":"A permission object of the same type as the current permission object.","nodes":[{"pos":[0,70],"content":"A permission object of the same type as the current permission object.","nodes":[{"content":"A permission object of the same type as the current permission object.","pos":[0,70]}]}],"pos":[19934,20005],"yaml":true},{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"pos":[0,119],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]}],"pos":[20076,20196],"yaml":true},{"content":"<code>target</code> is an object that is not of the same type as the current permission object.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","source":"<code>target</code> is an object that is not of the same type as the current permission object."}],"pos":[20366,20462],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Printing.PrintingPermission\n  commentId: T:System.Drawing.Printing.PrintingPermission\n  id: PrintingPermission\n  children:\n  - System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  - System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Drawing.Printing.PrintingPermission.Copy\n  - System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  - System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  - System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  - System.Drawing.Printing.PrintingPermission.Level\n  - System.Drawing.Printing.PrintingPermission.ToXml\n  - System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: PrintingPermission\n  nameWithType: PrintingPermission\n  fullName: System.Drawing.Printing.PrintingPermission\n  type: Class\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Controls access to printers. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class PrintingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  commentId: M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  id: '#ctor(System.Drawing.Printing.PrintingPermissionLevel)'\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: PrintingPermission(PrintingPermissionLevel)\n  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  fullName: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with the level of printing access specified.\n  syntax:\n    content: public PrintingPermission (System.Drawing.Printing.PrintingPermissionLevel printingLevel);\n    parameters:\n    - id: printingLevel\n      type: System.Drawing.Printing.PrintingPermissionLevel\n      description: One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: PrintingPermission(PermissionState)\n  nameWithType: PrintingPermission.PrintingPermission(PermissionState)\n  fullName: PrintingPermission.PrintingPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with either fully restricted or unrestricted access, as specified.\n  remarks: This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission.\n  syntax:\n    content: public PrintingPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.Copy\n  commentId: M:System.Drawing.Printing.PrintingPermission.Copy\n  id: Copy\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PrintingPermission.Copy()\n  fullName: PrintingPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Creates and returns an identical copy of the current permission object.\n  remarks: A copy of the permission object represents the same access to resources as the original permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Drawing.Printing.PrintingPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PrintingPermission.FromXml(SecurityElement)\n  fullName: PrintingPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Drawing.Printing.PrintingPermission.FromXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: PrintingPermission.Intersect(IPermission)\n  fullName: PrintingPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Creates and returns a permission that is the intersection of the current permission object and a target permission object.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current object and the specified target. This object is `null` if the intersection is empty.\n  overload: System.Drawing.Printing.PrintingPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: PrintingPermission.IsSubsetOf(IPermission)\n  fullName: PrintingPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Determines whether the current permission object is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission object is a subset of <code>target</code>; otherwise, `false`.'\n  overload: System.Drawing.Printing.PrintingPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  commentId: M:System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: PrintingPermission.IsUnrestricted()\n  fullName: PrintingPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Gets a value indicating whether the permission is unrestricted.\n  remarks: An unrestricted permission object represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if permission is unrestricted; otherwise, `false`.'\n  overload: System.Drawing.Printing.PrintingPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.Level\n  commentId: P:System.Drawing.Printing.PrintingPermission.Level\n  id: Level\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: PrintingPermission.Level\n  fullName: PrintingPermission.Level\n  type: Property\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Gets or sets the code's level of printing access.\n  syntax:\n    content: public System.Drawing.Printing.PrintingPermissionLevel Level { get; set; }\n    return:\n      type: System.Drawing.Printing.PrintingPermissionLevel\n      description: One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.Level*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.ToXml\n  commentId: M:System.Drawing.Printing.PrintingPermission.ToXml\n  id: ToXml\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PrintingPermission.ToXml()\n  fullName: PrintingPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Drawing.Printing.PrintingPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  commentId: M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: PrintingPermission.Union(IPermission)\n  fullName: PrintingPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.Security.Permissions\n  namespace: System.Drawing.Printing\n  summary: Creates a permission that combines the permission object and the target permission object.\n  remarks: The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Drawing.Printing.PrintingPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission(PrintingPermissionLevel)\n  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  fullName: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n- uid: System.Drawing.Printing.PrintingPermissionLevel\n  parent: System.Drawing.Printing\n  isExternal: false\n  name: PrintingPermissionLevel\n  nameWithType: PrintingPermissionLevel\n  fullName: System.Drawing.Printing.PrintingPermissionLevel\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission(PermissionState)\n  nameWithType: PrintingPermission.PrintingPermission(PermissionState)\n  fullName: PrintingPermission.PrintingPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Drawing.Printing.PrintingPermission.Copy\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: PrintingPermission.Copy()\n  fullName: PrintingPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PrintingPermission.FromXml(SecurityElement)\n  fullName: PrintingPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: PrintingPermission.Intersect(IPermission)\n  fullName: PrintingPermission.Intersect(IPermission)\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: PrintingPermission.IsSubsetOf(IPermission)\n  fullName: PrintingPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: PrintingPermission.IsUnrestricted()\n  fullName: PrintingPermission.IsUnrestricted()\n- uid: System.Drawing.Printing.PrintingPermission.Level\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Level\n  nameWithType: PrintingPermission.Level\n  fullName: PrintingPermission.Level\n- uid: System.Drawing.Printing.PrintingPermission.ToXml\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: PrintingPermission.ToXml()\n  fullName: PrintingPermission.ToXml()\n- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: PrintingPermission.Union(IPermission)\n  fullName: PrintingPermission.Union(IPermission)\n- uid: System.Drawing.Printing.PrintingPermission.#ctor*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission\n  nameWithType: PrintingPermission.PrintingPermission\n  fullName: PrintingPermission.PrintingPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.Copy*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Copy\n  nameWithType: PrintingPermission.Copy\n  fullName: PrintingPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.FromXml*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: PrintingPermission.FromXml\n  fullName: PrintingPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.Intersect*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: PrintingPermission.Intersect\n  fullName: PrintingPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: PrintingPermission.IsSubsetOf\n  fullName: PrintingPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: PrintingPermission.IsUnrestricted\n  fullName: PrintingPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.Level*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Level\n  nameWithType: PrintingPermission.Level\n  fullName: PrintingPermission.Level\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.ToXml*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: PrintingPermission.ToXml\n  fullName: PrintingPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Drawing.Printing.PrintingPermission.Union*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Union\n  nameWithType: PrintingPermission.Union\n  fullName: PrintingPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing.Printing/PrintingPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}