### YamlMime:ManagedReference
items:
- uid: System.Configuration.AppSettingsReader
  commentId: T:System.Configuration.AppSettingsReader
  id: AppSettingsReader
  children:
  - System.Configuration.AppSettingsReader.#ctor
  - System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)
  langs:
  - csharp
  name: AppSettingsReader
  nameWithType: AppSettingsReader
  fullName: System.Configuration.AppSettingsReader
  type: Class
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Provides a method for reading values of a particular type from the configuration.
  remarks: ''
  example:
  - "The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.  \n  \n```  \nusing System;  \nusing System.Configuration;  \n  \nclass Program  \n{  \n    static void Main(string[] args)  \n    {  \n        var reader = new AppSettingsReader();  \n  \n        var stringSetting = reader.GetValue(\"String setting\", typeof(string));  \n        Console.WriteLine(\"String setting: \" + stringSetting);  \n  \n        var dateTimeSetting = reader.GetValue(\"DateTime setting\", typeof(DateTime));  \n        Console.WriteLine(\"DateTime setting: \" + dateTimeSetting);  \n  \n        try  \n        {  \n            var missingSetting = reader.GetValue(\"Int setting\", typeof(Int32));  \n        }  \n        catch (InvalidOperationException e)  \n        {  \n            Console.WriteLine(\"Missing key error: \" + e.Message);  \n        }  \n  \n        Console.WriteLine(\"Press any key to continue\");  \n        Console.ReadKey();  \n    }  \n}  \n```  \n  \n The following example demonstrates a configuration file used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n    <appSettings>  \n        <add key=\"String setting\" value=\"String retrieved from App.Config\"/>  \n        <add key=\"Date setting\" value=\"Thursday, December 01, 2005 12:53:56 PM\"/>  \n    </appSettings>  \n</configuration>  \n```"
  syntax:
    content: public class AppSettingsReader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml
  ms.technology:
  - dotnet-standard
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.AppSettingsReader.#ctor
  commentId: M:System.Configuration.AppSettingsReader.#ctor
  id: '#ctor'
  parent: System.Configuration.AppSettingsReader
  langs:
  - csharp
  name: AppSettingsReader()
  nameWithType: AppSettingsReader.AppSettingsReader()
  fullName: AppSettingsReader.AppSettingsReader()
  type: Constructor
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.AppSettingsReader"></xref> class.
  remarks: ''
  example:
  - "The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.  \n  \n```  \nusing System;  \nusing System.Configuration;  \n  \nclass Program  \n{  \n    static void Main(string[] args)  \n    {  \n        var reader = new AppSettingsReader();  \n  \n        var stringSetting = reader.GetValue(\"String setting\", typeof(string));  \n        Console.WriteLine(\"String setting: \" + stringSetting);  \n  \n        var dateTimeSetting = reader.GetValue(\"DateTime setting\", typeof(DateTime));  \n        Console.WriteLine(\"DateTime setting: \" + dateTimeSetting);  \n  \n        try  \n        {  \n            var missingSetting = reader.GetValue(\"Int setting\", typeof(Int32));  \n        }  \n        catch (InvalidOperationException e)  \n        {  \n            Console.WriteLine(\"Missing key error: \" + e.Message);  \n        }  \n  \n        Console.WriteLine(\"Press any key to continue\");  \n        Console.ReadKey();  \n    }  \n}  \n```  \n  \n The following example demonstrates a configuration file used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n    <appSettings>  \n        <add key=\"String setting\" value=\"String retrieved from App.Config\"/>  \n        <add key=\"Date setting\" value=\"Thursday, December 01, 2005 12:53:56 PM\"/>  \n    </appSettings>  \n</configuration>  \n```"
  syntax:
    content: public AppSettingsReader ();
    parameters: []
  overload: System.Configuration.AppSettingsReader.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)
  commentId: M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Configuration.AppSettingsReader
  langs:
  - csharp
  name: GetValue(String, Type)
  nameWithType: AppSettingsReader.GetValue(String, Type)
  fullName: AppSettingsReader.GetValue(String, Type)
  type: Method
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets the value for a specified key from the <xref href="System.Configuration.ConfigurationSettings.AppSettings"></xref> property and returns an object of the specified type containing the value from the configuration.
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.AppSettingsReader.GetValue%2A> method to retrieve the value for each key in the `<appSettings>` section of the configuration file.  \n  \n [!code-csharp[System.Configuration.AppSettingsReader#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/CS/AppSettingsReader.cs#2)]\n [!code-vb[System.Configuration.AppSettingsReader#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/VB/AppSettingsReader.vb#2)]"
  syntax:
    content: public object GetValue (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: The key for which to get the value.
    - id: type
      type: System.Type
      description: The type of the object to return.
    return:
      type: System.Object
      description: The value of the specified key.
  overload: System.Configuration.AppSettingsReader.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>key</code> does not exist in the `<appSettings>` configuration section.  \n  \n \\- or -  \n  \n The value in the `<appSettings>` configuration section for <code>key</code> is not of type <code>type</code>."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Configuration.AppSettingsReader.#ctor
  parent: System.Configuration.AppSettingsReader
  isExternal: false
  name: AppSettingsReader()
  nameWithType: AppSettingsReader.AppSettingsReader()
  fullName: AppSettingsReader.AppSettingsReader()
- uid: System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)
  parent: System.Configuration.AppSettingsReader
  isExternal: false
  name: GetValue(String, Type)
  nameWithType: AppSettingsReader.GetValue(String, Type)
  fullName: AppSettingsReader.GetValue(String, Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.AppSettingsReader.#ctor*
  parent: System.Configuration.AppSettingsReader
  isExternal: false
  name: AppSettingsReader
  nameWithType: AppSettingsReader.AppSettingsReader
  fullName: AppSettingsReader.AppSettingsReader
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml
- uid: System.Configuration.AppSettingsReader.GetValue*
  parent: System.Configuration.AppSettingsReader
  isExternal: false
  name: GetValue
  nameWithType: AppSettingsReader.GetValue
  fullName: AppSettingsReader.GetValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/AppSettingsReader.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
