### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelListener`1
  commentId: T:System.ServiceModel.Channels.IChannelListener`1
  id: IChannelListener`1
  children:
  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel
  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)
  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)
  langs:
  - csharp
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
  type: Interface
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Defines the interface that must be implemented by channel listeners to accept type-specific channels.
  remarks: "Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.  \n  \n Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods. If users want to accept different channel types, they can create additional channel listeners for each type of channel required."
  syntax:
    content: 'public interface IChannelListener<TChannel> : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel'
    typeParameters:
    - id: TChannel
      description: The type of channel that the channel listener accepts.
  derivedClasses:
  - System.ServiceModel.Channels.ChannelListenerBase`1
  implements:
  - System.ServiceModel.Channels.IChannelListener
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel
  commentId: M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel
  id: AcceptChannel
  parent: System.ServiceModel.Channels.IChannelListener`1
  langs:
  - csharp
  name: AcceptChannel()
  nameWithType: IChannelListener<TChannel>.AcceptChannel()
  fullName: IChannelListener<TChannel>.AcceptChannel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Accepts a channel of a specified type for communication with a client.
  remarks: It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.
  syntax:
    content: public TChannel AcceptChannel ();
    parameters: []
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> accepted by the listener.
  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)
  id: AcceptChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener`1
  langs:
  - csharp
  name: AcceptChannel(TimeSpan)
  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)
  fullName: IChannelListener<TChannel>.AcceptChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Accepts a channel of a specified type for communication with a client within a specified interval of time.
  remarks: It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.
  syntax:
    content: public TChannel AcceptChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the wait for a channel operation has to complete before timing out.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> accepted by the listener.
  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)
  id: BeginAcceptChannel(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener`1
  langs:
  - csharp
  name: BeginAcceptChannel(AsyncCallback, Object)
  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)
  fullName: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to accept a channel.
  remarks: It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.
  syntax:
    content: public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous acceptance of a channel operation.
  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener`1
  langs:
  - csharp
  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
  fullName: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to accept a channel within a specified interval of time.
  remarks: It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.
  syntax:
    content: public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the wait for a channel operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous acceptance of a channel operation.
  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)
  id: EndAcceptChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener`1
  langs:
  - csharp
  name: EndAcceptChannel(IAsyncResult)
  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)
  fullName: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes an asynchronous operation to accept a channel.
  syntax:
    content: public TChannel EndAcceptChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*"></xref> method.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> accepted by the listener.
  overload: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: AcceptChannel()
  nameWithType: IChannelListener<TChannel>.AcceptChannel()
  fullName: IChannelListener<TChannel>.AcceptChannel()
- uid: TChannel
  isExternal: true
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: AcceptChannel(TimeSpan)
  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)
  fullName: IChannelListener<TChannel>.AcceptChannel(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: BeginAcceptChannel(AsyncCallback, Object)
  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)
  fullName: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
  fullName: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: EndAcceptChannel(IAsyncResult)
  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)
  fullName: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: AcceptChannel
  nameWithType: IChannelListener<TChannel>.AcceptChannel
  fullName: IChannelListener<TChannel>.AcceptChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: BeginAcceptChannel
  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel
  fullName: IChannelListener<TChannel>.BeginAcceptChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*
  parent: System.ServiceModel.Channels.IChannelListener`1
  isExternal: false
  name: EndAcceptChannel
  nameWithType: IChannelListener<TChannel>.EndAcceptChannel
  fullName: IChannelListener<TChannel>.EndAcceptChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
