{"nodes":[{"content":"Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.","nodes":[{"pos":[0,191],"content":"Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.","nodes":[{"content":"Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.","pos":[0,191],"nodes":[{"content":"Identifies the type of a message.","pos":[0,33]},{"content":"A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.","pos":[34,191]}]}]}],"pos":[472,664],"yaml":true},{"content":"Typical (`Normal` type) messages are those that you send to a queue using either the <xref:System.Messaging.Message> class or any overload of the <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> method.  \n  \n Message Queuing generates acknowledgment messages whenever the sending application requests one. If you send a message using the <xref:System.Messaging.Message> class, you can use its <xref:System.Messaging.Message.AcknowledgeType%2A> property to specify the types of acknowledgments to receive. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application. When you receive or peek an acknowledgment message using a <xref:System.Messaging.Message>, its <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the reason Message Queuing sent the acknowledgment.  \n  \n Message Queuing generates report messages whenever a report queue is defined at the source queue manager. When tracing is enabled (by setting the <xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","nodes":[{"pos":[0,223],"content":"Typical (<ph id=\"ph1\">`Normal`</ph> type) messages are those that you send to a queue using either the <ph id=\"ph2\">&lt;xref:System.Messaging.Message&gt;</ph> class or any overload of the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName&gt;</ph> method.","source":"Typical (`Normal` type) messages are those that you send to a queue using either the <xref:System.Messaging.Message> class or any overload of the <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> method."},{"pos":[230,1002],"content":"Message Queuing generates acknowledgment messages whenever the sending application requests one. If you send a message using the <xref:System.Messaging.Message> class, you can use its <xref:System.Messaging.Message.AcknowledgeType%2A> property to specify the types of acknowledgments to receive. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application. When you receive or peek an acknowledgment message using a <xref:System.Messaging.Message>, its <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the reason Message Queuing sent the acknowledgment.","nodes":[{"content":"Message Queuing generates acknowledgment messages whenever the sending application requests one. If you send a message using the <xref:System.Messaging.Message> class, you can use its <xref:System.Messaging.Message.AcknowledgeType%2A> property to specify the types of acknowledgments to receive. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application. When you receive or peek an acknowledgment message using a <xref:System.Messaging.Message>, its <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the reason Message Queuing sent the acknowledgment.","pos":[0,772],"nodes":[{"content":"Message Queuing generates acknowledgment messages whenever the sending application requests one.","pos":[0,96]},{"content":"If you send a message using the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class, you can use its <ph id=\"ph2\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property to specify the types of acknowledgments to receive.","pos":[97,295],"source":" If you send a message using the <xref:System.Messaging.Message> class, you can use its <xref:System.Messaging.Message.AcknowledgeType%2A> property to specify the types of acknowledgments to receive."},{"content":"For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.","pos":[296,426]},{"content":"Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.","pos":[427,555]},{"content":"When you receive or peek an acknowledgment message using a <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph>, its <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property indicates the reason Message Queuing sent the acknowledgment.","pos":[556,772],"source":" When you receive or peek an acknowledgment message using a <xref:System.Messaging.Message>, its <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the reason Message Queuing sent the acknowledgment."}]}]},{"pos":[1009,1409],"content":"Message Queuing generates report messages whenever a report queue is defined at the source queue manager. When tracing is enabled (by setting the <xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","nodes":[{"content":"Message Queuing generates report messages whenever a report queue is defined at the source queue manager. When tracing is enabled (by setting the <xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","pos":[0,400],"nodes":[{"content":"Message Queuing generates report messages whenever a report queue is defined at the source queue manager.","pos":[0,105]},{"content":"When tracing is enabled (by setting the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt;</ph> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.","pos":[106,400],"source":" When tracing is enabled (by setting the <xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server."}]}]}],"pos":[675,2091],"yaml":true,"extradata":"MT"},{"content":"An acknowledgment message.","nodes":[{"pos":[0,26],"content":"An acknowledgment message.","nodes":[{"content":"An acknowledgment message.","pos":[0,26]}]}],"pos":[3118,3145],"yaml":true},{"content":"A normal Message Queuing message.","nodes":[{"pos":[0,33],"content":"A normal Message Queuing message.","nodes":[{"content":"A normal Message Queuing message.","pos":[0,33]}]}],"pos":[4082,4116],"yaml":true},{"content":"A report message.","nodes":[{"pos":[0,17],"content":"A report message.","nodes":[{"content":"A report message.","pos":[0,17]}]}],"pos":[5045,5063],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageType\n  commentId: T:System.Messaging.MessageType\n  id: MessageType\n  children:\n  - System.Messaging.MessageType.Acknowledgment\n  - System.Messaging.MessageType.Normal\n  - System.Messaging.MessageType.Report\n  langs:\n  - csharp\n  name: MessageType\n  nameWithType: MessageType\n  fullName: System.Messaging.MessageType\n  type: Enum\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.\n  remarks: \"Typical (`Normal` type) messages are those that you send to a queue using either the <xref:System.Messaging.Message> class or any overload of the <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName> method.  \\n  \\n Message Queuing generates acknowledgment messages whenever the sending application requests one. If you send a message using the <xref:System.Messaging.Message> class, you can use its <xref:System.Messaging.Message.AcknowledgeType%2A> property to specify the types of acknowledgments to receive. For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read. Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application. When you receive or peek an acknowledgment message using a <xref:System.Messaging.Message>, its <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the reason Message Queuing sent the acknowledgment.  \\n  \\n Message Queuing generates report messages whenever a report queue is defined at the source queue manager. When tracing is enabled (by setting the <xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName> property on the original message), Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.\"\n  syntax:\n    content: public enum MessageType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageType.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageType.Acknowledgment\n  commentId: F:System.Messaging.MessageType.Acknowledgment\n  id: Acknowledgment\n  parent: System.Messaging.MessageType\n  langs:\n  - csharp\n  name: Acknowledgment\n  nameWithType: MessageType.Acknowledgment\n  fullName: MessageType.Acknowledgment\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: An acknowledgment message.\n  syntax:\n    content: Acknowledgment\n    return:\n      type: System.Messaging.MessageType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageType.xml\n- uid: System.Messaging.MessageType.Normal\n  commentId: F:System.Messaging.MessageType.Normal\n  id: Normal\n  parent: System.Messaging.MessageType\n  langs:\n  - csharp\n  name: Normal\n  nameWithType: MessageType.Normal\n  fullName: MessageType.Normal\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A normal Message Queuing message.\n  syntax:\n    content: Normal\n    return:\n      type: System.Messaging.MessageType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageType.xml\n- uid: System.Messaging.MessageType.Report\n  commentId: F:System.Messaging.MessageType.Report\n  id: Report\n  parent: System.Messaging.MessageType\n  langs:\n  - csharp\n  name: Report\n  nameWithType: MessageType.Report\n  fullName: MessageType.Report\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A report message.\n  syntax:\n    content: Report\n    return:\n      type: System.Messaging.MessageType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Messaging.MessageType.Acknowledgment\n  parent: System.Messaging.MessageType\n  isExternal: false\n  name: Acknowledgment\n  nameWithType: MessageType.Acknowledgment\n  fullName: MessageType.Acknowledgment\n- uid: System.Messaging.MessageType\n  parent: System.Messaging\n  isExternal: false\n  name: MessageType\n  nameWithType: MessageType\n  fullName: System.Messaging.MessageType\n- uid: System.Messaging.MessageType.Normal\n  parent: System.Messaging.MessageType\n  isExternal: false\n  name: Normal\n  nameWithType: MessageType.Normal\n  fullName: MessageType.Normal\n- uid: System.Messaging.MessageType.Report\n  parent: System.Messaging.MessageType\n  isExternal: false\n  name: Report\n  nameWithType: MessageType.Report\n  fullName: MessageType.Report\n"}